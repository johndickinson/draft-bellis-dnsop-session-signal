<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.7 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC7766 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7766.xml">
<!ENTITY RFC6891 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6891.xml">
<!ENTITY RFC7828 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7828.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC8174 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY RFC2136 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2136.xml">
<!ENTITY RFC7830 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7830.xml">
<!ENTITY RFC1034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC1918 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1918.xml">
<!ENTITY RFC5382 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5382.xml">
<!ENTITY RFC2132 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2132.xml">
<!ENTITY RFC5226 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5226.xml">
<!ENTITY RFC7858 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7858.xml">
<!ENTITY RFC2782 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2782.xml">
<!ENTITY RFC6335 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6335.xml">
<!ENTITY I-D.ietf-dnssd-push SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dnssd-push.xml">
<!ENTITY I-D.sctl-dnssd-mdns-relay SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.sctl-dnssd-mdns-relay.xml">
<!ENTITY RFC6763 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6763.xml">
<!ENTITY RFC0768 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.0768.xml">
<!ENTITY RFC7413 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7413.xml">
<!ENTITY I-D.ietf-tls-tls13 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-tls-tls13.xml">
<!ENTITY RFC1122 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1122.xml">
<!ENTITY I-D.ietf-dprive-padding-policy SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dprive-padding-policy.xml">
]>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-dnsop-session-signal-06" category="std" updates="RFC 7766, RFC 1035">

  <front>
    <title>DNS Stateful Operations</title>

    <author initials="R." surname="Bellis" fullname="Ray Bellis">
      <organization abbrev="ISC">Internet Systems Consortium, Inc.</organization>
      <address>
        <postal>
          <street>950 Charter Street</street>
          <city>Redwood City</city>
          <code>CA 94063</code>
          <country>USA</country>
        </postal>
        <phone>+1 650 423 1200</phone>
        <email>ray@isc.org</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>1 Infinite Loop</street>
          <city>Cupertino</city>
          <code>CA 95014</code>
          <country>USA</country>
        </postal>
        <phone>+1 408 974 3207</phone>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="J." surname="Dickinson" fullname="John Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>jad@sinodun.com</email>
      </address>
    </author>
    <author initials="S." surname="Dickinson" fullname="Sara Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>sara@sinodun.com</email>
      </address>
    </author>
    <author initials="T." surname="Lemon" fullname="Ted Lemon">
      <organization>Barefoot Consulting</organization>
      <address>
        <postal>
          <street>Brattleboro</street>
          <code>VT 05301</code>
          <country>USA</country>
        </postal>
        <email>mellon@fugue.com</email>
      </address>
    </author>
    <author initials="T." surname="Pusateri" fullname="Tom Pusateri">
      <organization>Unaffiliated</organization>
      <address>
        <postal>
          <street></street>
          <city>Raleigh</city>
          <code>NC 27608</code>
          <country>USA</country>
        </postal>
        <phone>+1 919 867 1330</phone>
        <email>pusateri@bangj.com</email>
      </address>
    </author>

    <date year="2018" month="January" day="26"/>

    <area>Internet</area>
    <workgroup>DNSOP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document defines a new DNS OPCODE for DNS Stateful Operations (DSO).
DSO messages communicate operations within persistent
stateful sessions, using type-length-value (TLV) syntax.
Three TLVs are defined that manage session timeouts,
termination, and encryption padding, and 
a framework is defined for extensions to enable new stateful operations.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The use of transports for DNS other than UDP is being increasingly specified,
for example, DNS over TCP <xref target="RFC1035"/> <xref target="RFC7766"/> and DNS over TLS <xref target="RFC7858"/>.
Such transports can offer persistent, long-lived sessions and therefore when
using them for transporting DNS messages it is of benefit to have a mechanism
that can establish parameters associated with those sessions, such as timeouts.
In such situations it is also advantageous to support server-initiated messages.</t>

<t>The existing EDNS(0) Extension Mechanism for DNS <xref target="RFC6891"/> is explicitly
defined to only have “per-message” semantics. While EDNS(0) has been used to
signal at least one session-related parameter (the EDNS(0) TCP Keepalive option
<xref target="RFC7828"/>) the result is less than optimal due to the restrictions
imposed by the EDNS(0) semantics and the lack of server-initiated signalling. 
For example, a server cannot arbitrarily 
instruct a client to close a connection because the server can only send EDNS(0) options 
in responses to queries that contained EDNS(0) options.</t>

<t>This document defines a new DNS OPCODE, DSO (tentatively 6), for DNS Stateful Operations.
DSO messages are used to communicate operations within persistent
stateful sessions, expressed using type-length-value (TLV) syntax.
This document defines an initial set of three TLVs,
used to manage session timeouts, termination, and encryption padding.</t>

<t>The three TLVs defined here are all mandatory for all implementations of DSO.
Further TLVs may be defined in additional specifications.</t>

<t>The format for DSO messages
(<xref target="format"/>) differs somewhat from the traditional DNS message
format used for standard queries and responses.
The standard twelve-byte header is used, but the four count fields
(QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) are set to zero and accordingly their
corresponding sections are not present.
The actual data pertaining to DNS Stateful Operations
(expressed in TLV syntax) is appended to the end of the DNS message header.
When displayed using packet analyzer tools that have not been
updated to recognize the DSO format, this
will result in the DSO data being displayed
as unknown additional data after the end of the DNS message.
It is likely that future updates to these tools will add the ability
to recognize, decode, and display the DSO data.</t>

<t>This new format has distinct advantages over an RR-based format because it
is more explicit and more compact. Each TLV definition is specific
to its use case, and as a result contains no redundant or overloaded fields.
Importantly, it completely avoids conflating DNS Stateful Operations in any way 
with normal DNS operations or with existing EDNS(0)-based functionality.
A goal of this approach is to avoid the operational issues that have
befallen EDNS(0), particularly relating to middlebox behaviour.</t>

<t>With EDNS(0), multiple options may be packed into a single OPT pseudo-RR,
and there is no generalized mechanism for a client to be able to tell
whether a server has processed or otherwise acted upon each individual
option within the combined OPT pseudo-RR.
The specifications for each individual option need to define how each
different option is to be acknowledged, if necessary.</t>

<t>In contrast to EDNS(0), with DSO there is no
compelling motivation to pack multiple operations into a single
message for efficiency reasons, because DSO
always operates using a connection-oriented transport protocol.
Each DSO operation is communicated in its own separate
DNS message, and the transport protocol can take care of packing
several DNS messages into a single IP packet if appropriate.
For example, TCP can pack multiple small DNS messages into a single TCP segment.
This simplification allows for clearer semantics.
Each DSO request message communicates just one primary operation,
and the RCODE in the corresponding response message indicates the
success or failure of that operation.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="terminology" title="Terminology">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and
“OPTIONAL” in this document are to be interpreted as described in
“Key words for use in RFCs to Indicate Requirement Levels” <xref target="RFC2119"/> <xref target="RFC8174"/>.</t>

<t>“DSO” is used to mean DNS Stateful Operation.</t>

<t>The term “connection” means a bidirectional byte (or message) stream,
where the bytes (or messages) are delivered reliably and in-order,
such as provided by using
DNS over TCP <xref target="RFC1035"/> <xref target="RFC7766"/> or DNS over TLS <xref target="RFC7858"/>.</t>

<t>At present, DSO is specified only for DNS over TCP, and for DNS over TLS over TCP.
Any use of DSO over some other connection technology needs to be
specified in an appropriate document.</t>

<t>Determining whether a given connection is using DNS over TCP, or DNS over TLS over TCP,
is outside the scope of this specification, and must be determined using some out-of-band
configuration information. There is no provision within the DSO specification to turn
TLS on or off during the lifetime of a connection.
For service types where the service instance is discovered using a DNS SRV record <xref target="RFC2782"/>,
the specification for that service type SRV name <xref target="RFC6335"/>
will state whether the connection uses plain TCP, or TLS over TCP.
For example, the specification for the
“_dns‑push‑tls._tcp” service <xref target="I-D.ietf-dnssd-push"/>,
states that it uses TLS.
It is a common convention that protocols specified to run over TLS
are given IANA service type names ending in “‑tls”.</t>

<t>The unqualified term “session” in the context of this document means the exchange of
DNS messages over a connection where:</t>

<t><list style="symbols">
  <t>The connection between client and server is persistent and relatively
long-lived (i.e., minutes or hours, rather than seconds).</t>
  <t>Either end of the connection may initiate messages to the other.</t>
</list></t>

<t>In this document the term “session” is used exclusively as described
above, and is in no way related to the anachronistic term “session”
as used in the obsolete “seven-layer model” that shaped the design
of the failed OSI protocols of the 1980s.</t>

<t>A “DSO Session” is established between two endpoints that acknowledge
persistent DNS state via the exchange of DSO messages over the connection.
This is distinct from a DNS-over-TCP session as described in
the previous specification for DNS over TCP <xref target="RFC7766"/>.</t>

<t>A “DSO Session” is terminated when the underlying connection is closed.
The underlying connection can be closed in two ways:</t>

<t>Where this specification says, “close gracefully,”
that means sending a TLS close_notify followed by a TCP FIN,
or the equivalents for other protocols.
Where this specification requires a connection to be closed gracefully,
the requirement to initiate that graceful close is placed on the client,
to place the burden of TCP’s TIME-WAIT state on the client rather than the server.</t>

<t>Where this specification says, “forcibly abort,”
that means sending a TCP RST,
or the equivalent for other protocols.
In the BSD Sockets API this is achieved by setting the
SO_LINGER option to zero before closing the socket.</t>

<t>In protocol implementation there are generally two kinds of errors
that software writers have to deal with.
The first is situations that arise due to factors in the environment,
such as temporary loss of connectivity. While undesirable, these
situations do not indicate a flaw in the software, and they are
situations that software should generally be able to recover from.
The second is situations that should never happen when communicating
with a correctly-implemented peer.
If they do happen, they indicate a serious flaw in the protocol implementation,
beyond what it is reasonable to expect software to recover from.
This document describes this latter form of error condition as a
“fatal error” and specifies that an implementation encountering
a fatal error condition “MUST forcibly abort the connection immediately”.
Given that these fatal error conditions signify defective software,
and given that defective software is likely to remain defective for
some time until it is fixed, after forcibly aborting a connection,
a client SHOULD refrain from automatically reconnecting to that same
server for at least one hour.</t>

<t>The term “server” means the software with a listening socket, awaiting
incoming connection requests.</t>

<t>The term “client” means the software which initiates a connection
to the server’s listening socket.</t>

<t>The terms “initiator” and “responder” correspond respectively to the
initial sender and subsequent receiver of a DSO request message,
regardless of which was the “client” and “server” in the usual DNS sense.</t>

<t>The term “sender” may apply to
either an initiator (when sending a DSO request message)
or a responder (when sending a DSO response message).</t>

<t>Likewise, the term “receiver” may apply to
either a responder (when receiving a DSO request message)
or an initiator (when receiving a DSO response message).</t>

<t>The term “long-lived operations” refers to operations
such as Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/>,
Discovery Relay interface subscriptions <xref target="I-D.sctl-dnssd-mdns-relay"/>,
and other future long-lived DNS operations that choose to use
DSO as their basis, that establish state that persists beyond
the lifetime of a traditional brief request/response transaction.
This document, the base specification for DNS Stateful Operations,
defines a framework for supporting long-lived operations,
but does not itself define any long-lived operations.
Nonetheless, to appreciate the design rationale behind
DNS Stateful Operations, it is helpful to understand
the kind of long-lived operations that it is intended to support.</t>

<t>DNS Stateful Operations uses three kinds of message:
“DSO request messages”, “DSO response messages”, and
“DSO unacknowledged messages”.
A DSO request message elicits a DSO response message.
DSO unacknowledged messages are unidirectional messages and do not generate any response.</t>

<t>Both DSO request messages and DSO unacknowledged messages are formatted as DNS
request messages (the header QR bit is set to zero, as described in <xref target="format"/>).
One difference is that in DSO request messages the MESSAGE ID field is nonzero;
in DSO unacknowledged messages it is zero.</t>

<t>The content of DSO messages is expressed using type-length-value (TLV) syntax.</t>

<t>In a DSO request message or DSO unacknowledged message
the first TLV is referred to as the “Primary TLV”
and determines the nature of the operation being performed,
including whether it is an acknowledged or unacknowledged operation;
any other TLVs in a DSO request message are referred to as “Additional TLVs”
and serve additional non-primary purposes, which may be related to
the primary purpose, or not, as in the case of the encryption padding TLV.</t>

<t>A DSO response message may contain no TLVs, or it may contain one
or more TLVs as appropriate to the information being communicated.
In the context of DSO response messages,
one or more TLVs with the same DSO-TYPE as the Primary TLV in the
corresponding DSO request message are referred to as “Response Primary TLVs”.
Any other TLVs with different DSO-TYPEs are referred to as “Response Additional TLVs”.
The Response Primary TLV(s), if present, MUST occur first in the response message,
before any Response Additional TLVs.</t>

<t>Two timers (elapsed time since an event) are defined in this document:</t>

<t><list style="symbols">
  <t>an inactivity timer (see <xref target="inactivetimer"/> and <xref target="keepalive"/>)</t>
  <t>a keepalive timer (see <xref target="keepalivetimer"/> and <xref target="keepalive"/>)</t>
</list></t>

<t>The timeouts associated with these timers are called
the inactivity timeout and 
the keepalive interval, respectively. 
The term “Session Timeouts” is used to refer to this pair of timeout values.</t>

<t>Resetting a timer means resetting the timer value to zero and starting the timer again.
Clearing a timer means resetting the timer value to zero but NOT starting the timer again.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="discussion" title="Discussion">

<t>There are several use cases for DNS Stateful operations that can 
be described here.</t>

<t>Firstly, establishing session parameters such as server-defined timeouts is of 
great use in the 
general management of persistent connections. For example, using DSO sessions 
for stub-to-recursive DNS-over-TLS <xref target="RFC7858"/> is more flexible for both the 
client and the server than attempting to manage sessions using just the EDNS(0)
TCP Keepalive option <xref target="RFC7828"/>.
The simple set of TLVs defined in this document is
sufficient to greatly enhance connection management for this use case.</t>

<t>Secondly, DNS-SD <xref target="RFC6763"/> has evolved into a naturally session-based mechanism where,
for example, long-lived subscriptions lend themselves to ‘push’ mechanisms as 
opposed to polling. Long-lived stateful connections and server-initiated 
messages align with this use case <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>A general use case is that DNS traffic is often bursty but session establishment 
can be expensive. One challenge with long-lived connections is to maintain 
sufficient traffic to maintain NAT and firewall state.
To mitigate this issue this document introduces a
new concept for the DNS, that is DSO “Keepalive traffic”.
This traffic carries no DNS data and is not considered ‘activity’
in the classic DNS sense, but serves to maintain state in middleboxes,
and to assure client and server that they still have connectivity to each other.</t>

<t>There are a myriad of other potential use cases for DSO given the versatility 
and extensibility of this specification.</t>

<t><xref target="details"/> of this document describes the protocol details of DNS Stateful Operations
including definitions of three TLVs for session management and encryption padding.
<xref target="lifecycle"/> presents a detailed discussion of the DSO Session lifecycle
including an in-depth discussion of keepalive traffic and session termination.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="details" title="Protocol Details">

<section anchor="establishment" title="DSO Session Establishment">

<t>DSO messages MUST be carried in only protocols and in
environments where a session may be established according to the definition
given above in the Terminology section (<xref target="terminology"/>).
Standard DNS over TCP <xref target="RFC1035"/> <xref target="RFC7766"/>, and DNS over TLS <xref target="RFC7858"/>
are suitable protocols.</t>

<t>DNS over plain UDP <xref target="RFC0768"/> is not appropriate since it fails on the requirement for
in-order message delivery, and, in the presence of NAT gateways and firewalls
with short UDP timeouts, it fails to provide a persistent bi-directional
communication channel unless an excessive amount of keepalive traffic is used.</t>

<t>In some environments it may be known in advance by external means
that both client and server support DSO, and in these cases either
client or server may initiate DSO messages at any time.</t>

<t>However, in the typical case a server will not know in advance whether a
client supports DSO, so in general, unless it is known in advance by other means
that a client does support DSO, a server MUST NOT initiate DSO request messages
until a DSO Session has been mutually established, as described below.
Similarly, unless it is known in advance by other means that a server
does support DSO, a client MUST NOT initiate non-response-requiring
DSO request messages until after a DSO Session has been mutually established.</t>

<t>Whether or not a given DSO request message elicits a response is
determined by whether or not the first DSO TLV (<xref target="tlvsyntax"/>)
in the message (the Primary TLV) is one that is specified to generate a response.
Whether a Primary TLV will be specified to elicit a response will depend
on the intended use pattern for that particular TLV.</t>

<t>A DSO Session is established over a connection by the client
sending a DSO request message of a kind that requires a response,
such as the DSO Keepalive TLV (<xref target="keepalive"/>),
and receiving a response, with matching MESSAGE ID, and RCODE
set to NOERROR (0), indicating that the DSO request was successful.</t>

<t>If the RCODE is set to DSONOTIMP (tentatively 11) this indicates
that the server does support DSO, but does not support the particular
operation the client requested.
A server MUST NOT return DSONOTIMP for the DSO Keepalive TLV,
but in the future if a client attempts to establish a DSO Session
using a newly-defined response-requiring DSO TLV that the server
does not understand, that would result in a DSONOTIMP response.
If the server returns DSONOTIMP then a DSO Session is not
considered established, but the client is permitted to continue
sending DNS messages on the connection,
including other response-requiring DSO messages such as the DSO Keepalive,
which may result in a successful NOERROR response,
yielding the establishment of a DSO Session.</t>

<t>If the RCODE is set to any value other than NOERROR (0) or DSONOTIMP
(tentatively 11), then the client should assume that the server does
not support DSO. In this case the client is permitted to continue
sending DNS messages on that connection, but the client SHOULD NOT
issue further DSO messages on that connection.</t>

<t>When the server receives a response-requiring DSO request message
from a client, and transmits a successful NOERROR response to that
request, the server considers the DSO Session established.</t>

<t>When the client receives the server’s NOERROR response to its
DSO request message, the client considers the DSO Session established.</t>

<t>Once a DSO Session has been established,
either end may unilaterally send DSO messages at any time,
and therefore either client or server may be the initiator of a message.</t>

<t>Once a DSO Session has been established,
clients and servers should behave as described in this specification with
regard to inactivity timeouts and session termination, not as previously
prescribed in the earlier specification for DNS over TCP <xref target="RFC7766"/>.</t>

<t>Note that for clients that implement only the TLVs defined in this base specification,
sending a DSO Keepalive TLV is the only response-requiring
DSO request message they have available to initiate a DSO Session.
Even for clients that do implement other DSO TLVs, for simplicity
they MAY elect to always send an initial DSO Keepalive
request message as their way of initiating a DSO Session.</t>

<t><vspace blankLines='999' /></t>

<section anchor="sharing" title="Connection Sharing">

<t>As previously specified for DNS over TCP <xref target="RFC7766"/>:</t>

<figure><artwork><![CDATA[
   To mitigate the risk of unintentional server overload, DNS
   clients MUST take care to minimize the number of concurrent
   TCP connections made to any individual server.  It is RECOMMENDED
   that for any given client/server interaction there SHOULD be
   no more than one connection for regular queries, one for zone
   transfers, and one for each protocol that is being used on top
   of TCP (for example, if the resolver was using TLS). However,
   it is noted that certain primary/secondary configurations
   with many busy zones might need to use more than one TCP
   connection for zone transfers for operational reasons (for
   example, to support concurrent transfers of multiple zones).
]]></artwork></figure>

<t>A single server may support multiple services, including DNS Updates 
<xref target="RFC2136"/>, DNS Push Notifications <xref target="I-D.ietf-dnssd-push"/>,
and other services, for one or more DNS zones.
When a client discovers that the target server for several different operations
is the same target hostname and port, the client SHOULD use a single
shared DSO Session for all those operations.
A client SHOULD NOT open multiple connections to the same target host and port
just because the names being operated on are different or
happen to fall within different zones.
This requirement is to reduce unnecessary connection load on the DNS server.</t>

<t>However, server implementers and operators should be aware that connection
sharing may not be possible in all cases.
A single host device may be home to multiple independent client software
instances that don’t coordinate with each other.
Similarly, multiple independent client devices behind the same NAT gateway
will also typically appear to the DNS server as different source ports on
the same client IP address.
Because of these constraints, a DNS server MUST be prepared to accept
multiple connections from different source ports on the same client IP address.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="zero-round-trip-operation" title="Zero Round-Trip Operation">

<t>There is increased awareness today of the performance benefits
of eliminating round trips in session establishment.
Technologies like TCP Fast Open <xref target="RFC7413"/>
and TLS 1.3 <xref target="I-D.ietf-tls-tls13"/>
provide mechanisms to reduce or eliminate
round trips in session establishment.</t>

<t>Similarly, DSO supports zero round-trip operation.</t>

<t>Having initiated a connection to a server, possibly using
zero round-trip TCP Fast Open and/or
zero round-trip TLS 1.3, a client MAY send multiple
response-requiring DSO request messages to the server in succession
without having to wait for a response to the first request message
to confirm successful establishment of a DSO session.</t>

<t>However, a client MUST NOT send non-response-requiring DSO request
messages until after a DSO Session has been mutually established.</t>

<t>Similarly, a server MUST NOT send DSO request messages until it
has received a response-requiring DSO request message from a
client and transmitted a successful NOERROR response for that request.</t>

</section>
<section anchor="middlebox-considerations" title="Middlebox Considerations">

<t>Where an application-layer middlebox (e.g., a DNS proxy, forwarder, or
session multiplexer) is in the path, the middlebox MUST NOT blindly
forward DSO messages in either direction, and MUST treat the inbound
and outbound connections as separate sessions.  This does not preclude
the use of DSO messages in the presence of an IP-layer middlebox, such
as a NAT that rewrites IP-layer and/or transport-layer headers but
otherwise preserves the effect of a single session between the client
and the server.</t>

<t>To illustrate the above, consider a network where a middlebox
terminates one or more TCP connections from clients and multiplexes the
queries therein over a single TCP connection to an upstream server.
The DSO messages and any associated state are specific to the individual
TCP connections.  A DSO-aware middlebox MAY in some circumstances be
able to retain associated state and pass it between the client and
server (or vice versa) but this would be highly TLV-specific.  For
example, the middlebox may be able to maintain a list of which clients
have made Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/> and
make its own subscription(s) on their behalf, relaying any subsequent
notifications to the client (or clients) that have subscribed to that
particular notification.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="format" title="Message Format">

<t>A DSO message begins with
the standard twelve-byte DNS message header <xref target="RFC1035"/>
with the OPCODE field set to the DSO OPCODE (tentatively 6).
However, unlike standard DNS messages, the question section, answer section,
authority records section and additional records sections are not present.
The corresponding count fields (QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) MUST be
set to zero on transmission.</t>

<t>If a DSO message is received where any of the count fields are
not zero, then a FORMERR MUST be returned,
unless a future IETF Standard specifies otherwise.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                          MESSAGE ID                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |QR |    OPCODE     |            Z              |     RCODE     |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     QDCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ANCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     NSCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ARCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                           DSO Data                            /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><vspace blankLines='999' /></t>

<section anchor="header" title="DNS Header Fields in DSO Messages">

<t>In an unacknowledged message the MESSAGE ID field MUST be set to zero.
In an acknowledged request message the MESSAGE ID field MUST
be set to a unique nonzero value, that the initiator is not
currently using for any other active operation on this connection.
For the purposes here, a MESSAGE ID is in use in this DSO Session if the
initiator has used it in a request for which it is still awaiting a response,
or if the client has used it to setup a long-lived operation that has not yet been cancelled.
For example, a long-lived operation could be
a Push Notification subscription <xref target="I-D.ietf-dnssd-push"/> or
a Discovery Relay interface subscription <xref target="I-D.sctl-dnssd-mdns-relay"/>.</t>

<t>Whether a message is acknowledged or unacknowledged is
determined only by the specification for the Primary TLV.
An acknowledgment cannot be requested by including a nonzero message ID
in a message the primary TLV of which is specified to be unacknowledged,
nor can an acknowledgment be prevented by sending a message ID of zero
in a message with a primary TLV that is specified to be acknowledged.
A responder that receives either such malformed message MUST treat it
as a fatal error and forcibly abort the connection immediately.</t>

<t>In a request or unacknowledged message the DNS Header QR bit MUST be zero (QR=0).
If the QR bit is not zero the message is not a request or unacknowledged message.</t>

<t>In a response message the DNS Header QR bit MUST be one (QR=1).<vspace />
If the QR bit is not one the message is not a response message.</t>

<t>In a response message (QR=1) the MESSAGE ID field MUST contain a copy of the value of
the MESSAGE ID field in the request message being responded to.
In a response message (QR=1) the MESSAGE ID field MUST NOT be zero.
If a response message (QR=1) is received where the MESSAGE ID is zero
this is a fatal error and the receiver MUST forcibly abort the connection immediately.</t>

<t>The DNS Header OPCODE field holds the DSO OPCODE value (tentatively 6).</t>

<t>The Z bits are currently unused in DSO messages,
and in both DSO requests and DSO responses the
Z bits MUST be set to zero (0) on transmission and MUST be silently ignored
on reception, unless a future IETF Standard specifies otherwise.</t>

<t><vspace blankLines='999' /></t>

<t>In a DNS request message (QR=0) the RCODE is set according to the definition of the request.
For example, in a Retry Delay request message (<xref target="retry"/>) the RCODE indicates the reason for termination.
However, in most cases, except where clearly specified otherwise,
in a DNS request message (QR=0) the RCODE is set to zero on transmission,
and silently ignored on reception.</t>

<t>The RCODE value in a response message (QR=1) may be one of the following values:</t>

<texttable>
      <ttcol align='right'>Code</ttcol>
      <ttcol align='left'>Mnemonic</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>0</c>
      <c>NOERROR</c>
      <c>Operation processed successfully</c>
      <c>1</c>
      <c>FORMERR</c>
      <c>Format error</c>
      <c>2</c>
      <c>SERVFAIL</c>
      <c>Server failed to process request due to a problem with the server</c>
      <c>3</c>
      <c>NXDOMAIN</c>
      <c>Name Error — Named entity does not exist (TLV-dependent)</c>
      <c>4</c>
      <c>NOTIMP</c>
      <c>DSO not supported</c>
      <c>5</c>
      <c>REFUSED</c>
      <c>Operation declined for policy reasons</c>
      <c>9</c>
      <c>NOTAUTH</c>
      <c>Not Authoritative (TLV-dependent)</c>
      <c>11</c>
      <c>DSONOTIMP</c>
      <c>DSO type code not supported</c>
</texttable>

<t>Use of the above RCODEs is likely to be common in DSO but 
does not preclude the definition and use of other codes in future documents that 
make use of DSO.</t>

<t>If a document defining a new DSO TLV makes use of NXDOMAIN (Name Error)
or NOTAUTH (Not Authoritative) then that document MUST specify the specific
interpretation of these RCODE values in the context of that new DSO TLV.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="dsodata" title="DSO Data">

<t>The standard twelve-byte DNS message header with its
zero-valued count fields is followed by the DSO Data,
expressed using TLV syntax, as described below <xref target="tlvsyntax"/>.</t>

<t>A DSO message may be a request message, a response message, or an unacknowledged message.</t>

<t>A DSO request message or DSO unacknowledged message MUST contain at least one TLV.
The first TLV in a DSO request message or DSO unacknowledged message is referred to as the “Primary TLV”
and determines the nature of the operation being performed,
including whether it is an acknowledged or unacknowledged operation.
In some cases it may be appropriate to include other TLVs in a request message,
such as the Encryption Padding TLV (<xref target="padding"/>),
and these extra TLVs are referred to as the “Additional TLVs”.</t>

<t>A DSO response message may contain no TLVs,
or it may be specified to contain one or more TLVs
appropriate to the information being communicated.</t>

<t>A DSO response message may contain one or more TLVs with
DSO-TYPE the same as the Primary TLV from the corresponding DSO request message,
in which case those TLV(s) are referred to as “Response Primary TLVs”.
A DSO response message is not required to carry Response Primary TLVs.
The MESSAGE ID field in the DNS message header is sufficient to identify
to which DSO request message this response message relates.</t>

<t>A DSO response message may contain one or more TLVs with
DSO-TYPEs different from the Primary TLV from the corresponding DSO request message,
in which case those TLV(s) are referred to as “Response Additional TLVs”.</t>

<t>Response Primary TLV(s), if present, MUST occur first in the response message,
before any Response Additional TLVs.</t>

<t>It is anticipated that most DSO operations will be specified
to use request messages, which generate corresponding responses.
In some specialized high-traffic use cases,
it may be appropriate to specify unacknowledged messages.
Unacknowledged messages can be more efficient on the network,
because they don’t generate a stream of corresponding reply messages.
Using unacknowledged messages can also simplify software
in some cases, by removing need for an initiator to maintain
state while it waits to receive replies it doesn’t care about.
When the specification for a particular TLV states that,
when used as a Primary TLV (i.e., first) in an outgoing DNS request message (i.e., QR=0),
that message is to be unacknowledged,
the MESSAGE ID field MUST be set to zero and
the receiver MUST NOT generate any response message
corresponding to this unacknowledged message.</t>

<t>The previous point, that the receiver MUST NOT generate responses to
unacknowledged messages, applies even in the case of errors.
When a DSO message is received where both the QR bit and the MESSAGE ID field
are zero, the receiver MUST NOT generate any response.
For example, if the DSO-TYPE in the Primary TLV is unrecognized,
then a DSONOTIMP error MUST NOT be returned; instead the receiver
MUST forcibly abort the connection immediately.</t>

<t>Unacknowledged messages MUST NOT be used “speculatively”
in cases where the sender doesn’t know if the receiver supports
the Primary TLV in the message, because there is no way to receive
any response to indicate success or failure of the request message
(the request message does not contain a unique MESSAGE ID with
which to associate a response with its corresponding request).
Unacknowledged messages are only appropriate in cases
where the sender already knows that the receiver supports,
and wishes to receive, these messages.</t>

<t>For example, after a client has subscribed for Push Notifications
<xref target="I-D.ietf-dnssd-push"/>, the subsequent event notifications are
then sent as unacknowledged messages, and this is appropriate
because the client initiated the message stream by virtue of its
Push Notification subscription, thereby indicating its support of
Push Notifications, and its desire to receive those notifications.</t>

<t>Similarly, after an mDNS Relay client has subscribed to receive inbound
mDNS traffic from an mDNS Relay, the subsequent stream of received
packets is then sent using unacknowledged messages, and this
is appropriate because the client initiated the message stream
by virtue of its mDNS Relay link subscription, thereby indicating
its support of mDNS Relay, and its desire to receive inbound mDNS
packets over that DSO session <xref target="I-D.sctl-dnssd-mdns-relay"/>.</t>

<t><vspace blankLines='999' /></t>

<section anchor="tlvsyntax" title="TLV Syntax">

<t>All TLVs, whether used as “Primary”, “Additional”, “Response Primary”,
or “Response Additional”, use the same encoding syntax.</t>

<t>The specification for a TLV states whether that DSO-TYPE may be used in
“Primary”, “Additional”, “Response Primary”, or “Response Additional” TLVs.
The specification for a TLV also states whether,
when used as the Primary (i.e., first) TLV in a DNS request message (i.e., QR=0),
that DSO message is to be acknowledged.
If the DSO message is to be acknowledged, the specification
also states which TLVs, if any, are to be included in the response.
The Primary TLV may or may not be contained in the response,
depending on what is stated in the specification for that TLV.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                            DSO-TYPE                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                        DSO DATA LENGTH                        |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                      TYPE-DEPENDENT DATA                      /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='DSO-TYPE:'>
  A 16-bit unsigned integer, in network (big endian) byte order,
giving the type of the current DSO TLV per the IANA DSO Type Code Registry.</t>
  <t hangText='DSO DATA LENGTH:'>
  A 16-bit unsigned integer, in network (big endian) byte order,
giving the size in bytes of the TYPE-DEPENDENT DATA.</t>
  <t hangText='TYPE-DEPENDENT DATA:'>
  Type-code specific format.</t>
</list></t>

<t>Where domain names appear within TYPE-DEPENDENT DATA, they MAY<vspace />
be compressed using standard DNS name compression <xref target="RFC1035"/>.<vspace />
However, the compression offsets MUST be relative to
the start of the TYPE-DEPENDENT DATA and MUST NOT
extend beyond the end of the TYPE-DEPENDENT DATA.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="request-tlvs" title="Request TLVs">

<t>The first TLV in a DSO request message is the “Primary TLV”
and indicates the operation to be performed.
A DSO request message MUST contain at at least one TLV, the Primary TLV.</t>

<t>Immediately following the Primary TLV, a DSO request message
MAY contain one or more “Additional TLVs”, which specify
additional parameters relating to the operation.</t>

</section>
<section anchor="response-tlvs" title="Response TLVs">

<t>Depending on the operation, a DSO response message MAY contain no TLVs,
because it is simply a response to a previous request message, and the
MESSAGE ID in the header is sufficient to identify the request in question.
Or it may contain a single response TLV, with the same DSO-TYPE as the
Primary TLV in the request message.
Alternatively it may contain one or more TLVs of other
types, or a combination of the above, as appropriate
for the information that needs to be communicated.
The specification for each DSO TLV determines
what TLVs are required in a response to a request using that TLV.</t>

<t>If a DSO response is received for an operation where the specification
requires that the response carry a particular TLV or TLVs,
and the required TLV(s) are not present, then this is a fatal
error and the recipient of the defective response message MUST
forcibly abort the connection immediately.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="unrecognized-tlvs" title="Unrecognized TLVs">

<t>If DSO request is received containing an unrecognized Primary TLV,
with a nonzero MESSAGE ID (indicating that a response is expected),
then the receiver MUST send a response with matching MESSAGE ID,
and RCODE DSONOTIMP (tentatively 11).
The response MUST NOT contain a copy of the unrecognized Primary TLV.</t>

<t>If DSO request is received containing an unrecognized Primary TLV,
with a zero MESSAGE ID (indicating that no response is expected),
then this is a fatal error and the receiver
MUST forcibly abort the connection immediately.</t>

<t>If a DSO request message is received where the Primary TLV is recognized,
containing one or more unrecognized Additional TLVs, the unrecognized
Additional TLVs MUST be silently ignored, and the remainder of the message
is interpreted and handled as if the unrecognized parts were not present.</t>

<t>Similarly, if a DSO response message is received containing one
or more unrecognized TLVs, the unrecognized TLVs MUST be silently
ignored, and the remainder of the message is interpreted and
handled as if the unrecognized parts were not present.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="edns0-and-tsig" title="EDNS(0) and TSIG">

<t>Since the ARCOUNT field MUST be zero, a DSO message
MUST NOT contain an EDNS(0) option in the additional records section.
If functionality provided by current or future EDNS(0) options
is desired for DSO messages, one or more new DSO TLVs
need to be defined to carry the necessary information.</t>

<t>For example, the EDNS(0) Padding Option <xref target="RFC7830"/> used for security purposes
is not permitted in a DSO message,
so if message padding is desired for DSO messages
then the Encryption Padding TLV described in <xref target="padding"/> MUST be used.</t>

<t>Similarly, a DSO message MUST NOT contain a TSIG record.
A TSIG record in a conventional DNS message is added as the last record in
the additional records section, and carries a signature computed over the
preceding message content. Since DSO data appears <spanx style="strong">after</spanx> the additional
records section, it would not be included in the signature calculation. 
If use of signatures with DSO messages becomes necessary in the 
future, a new DSO TLV needs to be defined to perform this function.</t>

<t>Note however that, while DSO <spanx style="strong">messages</spanx> cannot include
EDNS(0) or TSIG records, a DSO <spanx style="strong">session</spanx> is typically used to 
carry a whole series of DNS messages of different kinds, including DSO
messages, and other DNS message types like Query <xref target="RFC1034"/> 
<xref target="RFC1035"/> and Update <xref target="RFC2136"/>, and those messages can carry EDNS(0) and 
TSIG records.</t>

<t>This specification explicitly prohibits use of the
EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>
in <spanx style="strong">any</spanx> messages sent on a DSO Session (because it is obsoleted by
the functionality provided by the DSO Keepalive operation),
but messages may contain other EDNS(0) options as appropriate.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="message-handling" title="Message Handling">

<t>The initiator MUST set the value of the QR bit in the DNS header to
zero (0), and the responder MUST set it to one (1).
Every DSO request message (QR=0) with a nonzero MESSAGE ID field
MUST elicit a corresponding response (QR=1), which MUST have the same
MESSAGE ID in the DNS message header as in the corresponding request.
DSO request messages sent by the client with a nonzero MESSAGE ID field
elicit a response from the server, and
DSO request messages sent by the server with a nonzero MESSAGE ID field
elicit a response from the client.</t>

<t>A DSO request message (QR=0) with a zero MESSAGE ID field MUST NOT elicit a response.</t>

<t>The namespaces of 16-bit MESSAGE IDs are disjoint in each direction.
For example, it is <spanx style="strong">not</spanx> an error for both client and server to send a request
message with the same ID. In effect, the 16-bit MESSAGE ID combined with the 
identity of the initiator (client or server) serves as a 17-bit unique 
identifier for a particular operation on a DSO Session.</t>

<t>As described in <xref target="header"/>, an initiator MUST NOT reuse a
MESSAGE ID that is already in use for an outstanding request
(unless specified otherwise by the relevant specification for the DSO in question).
At the very least, this means that a MESSAGE ID MUST NOT
be reused in a particular direction on a particular DSO
Session while the initiator is waiting for a response to a
previous request using that MESSAGE ID on that DSO Session
(unless specified otherwise by the relevant specification for the DSO in question),
and for a long-lived operation the MESSAGE ID for the operation
MUST NOT be reused while that operation remains active.</t>

<t>If a client or server receives a response (QR=1) where the MESSAGE ID is zero, or is
any other value that does not match the MESSAGE ID of any of its outstanding operations,
this is a fatal error and the recipient MUST forcibly abort the connection immediately.</t>

<section anchor="error-responses" title="Error Responses">

<t>When a DSO unacknowledged message is unsuccessful for some reason,
the responder immediately aborts the connection.</t>

<t>When a DSO request message is unsuccessful for some reason,
the responder returns an error code to the initiator.</t>

<t>In the case of a server returning an error code to a client
in response to an unsuccessful DSO request message, the server MAY choose
to end the DSO Session, or MAY choose to allow the DSO Session to remain open.
For error conditions that only affect the single operation in question, the server SHOULD
return an error response to the client and leave the DSO Session open for further operations.</t>

<t>For error conditions that are likely to make all operations unsuccessful in the
immediate future, the server SHOULD return an error response to the client and then
end the DSO Session by sending a Retry Delay request message, as described in <xref target="retry"/>.</t>

<t>Upon receiving an error response from the server, a client SHOULD NOT
automatically close the DSO Session. An error relating to one particular operation
on a DSO Session does not necessarily imply that all other operations on that
DSO Session have also failed, or that future operations will fail. The client
should assume that the server will make its own decision about whether or not to
end the DSO Session, based on the server’s determination of whether the error
condition pertains to this particular operation, or would also apply to any
subsequent operations. If the server does not end the DSO Session by
sending the client a Retry Delay message (<xref target="retry"/>) then the client
SHOULD continue to use that DSO Session for subsequent operations.</t>

</section>
</section>
<section anchor="dso-response-generation" title="DSO Response Generation">

<t>With most TCP implementations, for DSO requests that generate a response,
the TCP data acknowledgement (generated because data has been received by TCP),
the TCP window update (generated because TCP has delivered that data to the receiving software),
and the DSO response (generated by the receiving application-layer software itself)
are all combined into a single IP packet.
Combining these three elements into a single IP packet
can give a significant improvement in network efficiency.</t>

<t>For DSO requests that do not generate a response,
the TCP implementation generally doesn’t have any way to know
that no response will be forthcoming, so it waits fruitlessly
for the application-layer software to generate a response,
until the Delayed ACK timer fires <xref target="RFC1122"/> (typically 200 milliseconds)
and only then does it send the TCP ACK and window update.
In conjunction with Nagle’s Algorithm at the sender,
this can delay the sender’s transmission of its next
(non-full-sized) TCP segment, while the sender is waiting for
its previous (non-full-sized) TCP segment to be acknowledged,
which won’t happen until the Delayed ACK timer fires.
Nagle’s Algorithm exists to combine multiple small
application writes into more-efficient large TCP segments,
to guard against wasteful use of the network by applications
that would otherwise transmit a stream of small TCP segments,
but in this case Nagle’s Algorithm (created to improve network efficiency)
can interact badly with TCP’s Delayed ACK feature
(also created to improve network efficiency) <xref target="NagleDA"/>
with the result of delaying some messages by up to 200 milliseconds.</t>

<t>Possible mitigations for this problem include:</t>

<t><list style="symbols">
  <t>Disable Nagle’s Algorithm at the sender. This is not great,<vspace />
because it results in less efficient use of the network.</t>
  <t>Disable Delayed ACK at the receiver. This is not great,<vspace />
because it results in less efficient use of the network.</t>
  <t>Use a networking API that lets the receiver signal to the TCP
implementation that the receiver has received and processed a client
request for which it will not be generating any immediate response.
This allows the TCP implementation to operate efficiently in both cases;
for requests that generate a response, the TCP ACK, window update, and
DSO response are transmitted together in a single TCP segment,
and for requests that do not generate a response,
the application-layer software informs the TCP implementation
that it should go ahead and send the TCP ACK and window update
immediately, without waiting for the Delayed ACK timer.
Unfortunately it is not known at this time which (if any) of the
widely-available networking APIs currently include this capability.</t>
</list></t>

</section>
<section anchor="cancellation" title="Responder-Initiated Operation Cancellation">

<t>This document, the base specification for DNS Stateful Operations,
does not itself define any long-lived operations,
but it defines a framework for supporting long-lived operations,
such as Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/> and
Discovery Relay interface subscriptions <xref target="I-D.sctl-dnssd-mdns-relay"/>.</t>

<t>Generally speaking, a long-lived operation is initiated by the initiator,
and, if successful, remains active until the initiator terminates the operation.</t>

<t>However, it is possible that a long-lived operation may be valid
at the time it was initiated, but then a later change of circumstances
may render that previously valid operation invalid.</t>

<t>For example, a long-lived client operation may pertain to a name
that the server is authoritative for, but then the server configuration
is changed such that it is no longer authoritative for that name.</t>

<t>In such cases, instead of terminating the entire session
it may be desirable for the responder to be able to cancel
selectively only those operations that have become invalid.</t>

<t>The responder performs this selective cancellation by sending
a new response message, with the MESSAGE ID field containing the
MESSAGE ID of the long-lived operation that is to be terminated
(that it had previously acknowledged with a NOERROR RCODE), and the
RCODE field of the new response message giving the reason for cancellation.</t>

<t>After a response message with nonzero RCODE has been sent,
that operation has been terminated from the responder’s point of view,
and the responder sends no more messages relating to that operation.</t>

<t>After a response message with nonzero RCODE has been received by the initiator,
that operation has been terminated from the initiator’s point of view,
and the cancelled operation’s MESSAGE ID is now free for reuse.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="lifecycle" title="DSO Session Lifecycle and Timers">

<section anchor="dso-session-initiation" title="DSO Session Initiation">

<t>A DSO Session begins as described in <xref target="establishment"/>.</t>

<t>The client may perform as many DNS operations as it wishes using the
newly created DSO Session. Operations SHOULD be pipelined (i.e., the
client doesn’t need wait for a response before sending the next message).
The server MUST act on messages in the order they are transmitted, but
responses to those messages SHOULD be sent out of order when appropriate.</t>

</section>
<section anchor="sessiontimeouts" title="DSO Session Timeouts">

<t>Two timeout values are associated with a DSO Session:
the inactivity timeout, and the keepalive interval. 
Both values are communicated in the same TLV, the DSO Keepalive TLV (<xref target="keepalive"/>).</t>

<t>The first timeout value, the inactivity timeout, is the maximum time for which
a client may speculatively keep a DSO Session open in the expectation that
it may have future requests to send to that server.</t>

<t>The second timeout value, the keepalive interval, is the maximum permitted
interval between messages if the client wishes to keep the DSO Session alive.</t>

<t>The two timeout values are independent. The inactivity timeout may be lower,
the same, or higher than the keepalive interval, though in most cases the
inactivity timeout is expected to be shorter than the keepalive interval.</t>

<t>A shorter inactivity timeout with a longer keepalive interval signals
to the client that it should not speculatively keep an inactive DSO
Session open for very long without reason, but when it does have an
active reason to keep a DSO Session open, it doesn’t need to be sending
an aggressive level of keepalive traffic to maintain that session.</t>

<t>A longer inactivity timeout with a shorter keepalive interval
signals to the client that it may speculatively keep an inactive
DSO Session open for a long time, but to maintain that inactive
DSO Session it should be sending a lot of keepalive traffic.
This configuration is expected to be less common.</t>

<t>In the usual case where the inactivity timeout is shorter than the keepalive
interval, it is only when a client has a very long-lived, low-traffic, operation
that the keepalive interval comes into play, to ensure that a sufficient
residual amount of traffic is generated to maintain NAT and firewall state
and to assure client and server that they still have connectivity to each other.</t>

<t>On a new DSO Session, if no explicit DSO Keepalive message exchange has taken 
place, the default value for both timeouts is 15 seconds.</t>

<t>For both timeouts, lower values of the timeout result in higher network traffic
and higher CPU load on the server.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="inactive-dso-sessions" title="Inactive DSO Sessions">

<t>At both servers and clients, the generation or reception of any complete
DNS message, including DNS requests, responses, updates, or DSO
messages, resets both timers for that DSO Session, with the exception
that a DSO Keepalive message resets only the keepalive timer,
not the inactivity timeout timer.</t>

<t>In addition, for as long as the client has an outstanding operation in progress,
the inactivity timer remains cleared, and an inactivity timeout cannot occur.</t>

<t>For short-lived DNS operations like traditional queries and updates,
an operation is considered in progress for the time between request and 
response, typically a period of a few hundred milliseconds at most.
At the client, the inactivity timer is cleared upon transmission of a 
request and remains cleared until reception of the corresponding response.
At the server, the inactivity timer is cleared upon reception of a request
and remains cleared until transmission of the corresponding response.</t>

<t>For long-lived DNS Stateful operations (such as
a Push Notification subscription <xref target="I-D.ietf-dnssd-push"/> or
a Discovery Relay interface subscription <xref target="I-D.sctl-dnssd-mdns-relay"/>),
an operation is considered in progress
for as long as the operation is active, until it is cancelled.
This means that a DSO Session can exist, with active operations,
with no messages flowing in either direction, for far longer than the 
inactivity timeout, and this is not an error.
This is why there are two separate timers:
the inactivity timeout, and the keepalive interval.
Just because a DSO Session has no traffic for an extended period of time
does not automatically make that DSO Session “inactive”,
if it has an active operation that is awaiting events.</t>

</section>
<section anchor="inactivetimer" title="The Inactivity Timeout">

<t>The purpose of the inactivity timeout is for the server to balance its trade off 
between the costs of setting up new DSO Sessions and the costs of maintaining inactive 
DSO Sessions. A server with abundant DSO Session capacity can offer a high inactivity timeout, 
to permit clients to keep a speculative DSO Session open for a long time, to save 
the cost of establishing a new DSO Session for future communications with that 
server. A server with scarce memory resources can offer a low inactivity timeout,
to cause clients to promptly close DSO Sessions whenever they have no outstanding
operations with that server, and then create a new DSO Session later when needed.</t>

<section anchor="closing-inactive-dso-sessions" title="Closing Inactive DSO Sessions">

<t>When a connection’s inactivity timeout is reached the client MUST
begin closing the idle connection, but a client is NOT REQUIRED to
keep an idle connection open until the inactivity timeout is reached.
A client MAY close a DSO Session at any time, at the client’s discretion.
If a client determines that it has no current or reasonably
anticipated future need for a currently inactive DSO Session,
then the client SHOULD gracefully close that connection.</t>

<t>If, at any time during the life of the DSO Session,
the inactivity timeout value (i.e., 15 seconds by default) elapses
without there being any operation active on the DSO Session,
the client MUST close the connection gracefully.</t>

<t>If, at any time during the life of the DSO Session,
twice the inactivity timeout value (i.e., 30 seconds by default),
or five seconds, if twice the inactivity timeout value is less than five seconds,
elapses without there being any operation active on the DSO Session,
the server SHOULD consider the client delinquent,
and SHOULD forcibly abort the DSO Session.</t>

<t>In this context, an operation being active on a DSO Session includes
a query waiting for a response, an update waiting for a response,
or an active long-lived operation, but not a DSO Keepalive message exchange itself.
A DSO Keepalive message exchange resets only the keepalive
interval timer, not the inactivity timeout timer.</t>

<t>If the client wishes to keep an inactive DSO Session open for longer
than the default duration then it uses the DSO Keepalive message
to request longer timeout values, as described in <xref target="keepalive"/>.</t>

</section>
<section anchor="values-for-the-inactivity-timeout" title="Values for the Inactivity Timeout">

<t>For the inactivity timeout value, lower values result in
more frequent DSO Session teardown and re-establishment.
Higher values result in lower traffic and lower CPU load on the server,
but higher memory burden to maintain state for inactive DSO Sessions.</t>

<t>A server may dictate any value it chooses for the inactivity timeout
(either in a response to a client-initiated request, or in a server-initiated message)
including values under one second, or even zero.</t>

<t>An inactivity timeout of zero informs the client that it
should not speculatively maintain idle connections at all, and
as soon as the client has completed the operation or operations relating
to this server, the client should immediately begin closing this session.</t>

<t>A server will abort an idle client session after twice the
inactivity timeout value, or five seconds, whichever is greater.
In the case of a zero inactivity timeout value, this means that
if a client fails to close an idle client session then the server
will forcibly abort the idle session after five seconds.</t>

<t>An inactivity timeout of 0xFFFFFFFF (2^32-1 milliseconds, approximately 49.7 days)
informs the client that it may keep an idle connection open as long as it wishes.
Note that after granting an unlimited inactivity timeout in this way,
at any point the server may revise that inactivity timeout by sending
a new Keepalive request message dictating new Session Timeout values to the client.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="keepalivetimer" title="The Keepalive Interval">

<t>The purpose of the keepalive interval is to manage the generation of
sufficient messages to maintain state in middleboxes (such at NAT gateways
or firewalls) and for the client and server to periodically verify that they
still have connectivity to each other. This allows them to clean up state
when connectivity is lost, and attempt re-connection if appropriate.</t>

<section anchor="keepalive-interval-expiry" title="Keepalive Interval Expiry">

<t>If, at any time during the life of the DSO Session,
the keepalive interval value (i.e., 15 seconds by default) elapses
without any DNS messages being sent or received on a DSO Session,
the client MUST take action to keep the DSO Session alive,
by sending a DSO Keepalive message (<xref target="keepalive"/>).
A DSO Keepalive message exchange resets only the keepalive timer, 
not the inactivity timer.</t>

<t>If a client disconnects from the network abruptly,
without cleanly closing its DSO Session,
perhaps leaving a long-lived operation uncancelled,
the server learns of this after failing to
receive the required keepalive traffic from that client.
If, at any time during the life of the DSO Session,
twice the keepalive interval value (i.e., 30 seconds by default) elapses
without any DNS messages being sent or received on a DSO Session,
the server SHOULD consider the client delinquent,
and SHOULD forcibly abort the DSO Session.</t>

</section>
<section anchor="values-for-the-keepalive-interval" title="Values for the Keepalive Interval">

<t>For the keepalive interval value, lower values result in a higher volume of keepalive 
traffic. Higher values of the keepalive interval reduce traffic and CPU load, 
but have minimal effect on the memory burden
at the server, because clients keep a DSO Session open for the same length of time
(determined by the inactivity timeout) regardless of the level of keepalive traffic 
required.</t>

<t>It may be appropriate for clients and servers to select different keepalive 
interval values depending on the nature of the network they are on.</t>

<t>A corporate DNS server that knows it is serving only clients on the internal 
network, with no intervening NAT gateways or firewalls, can impose a higher 
keepalive interval, because frequent keepalive traffic is not required.</t>

<t>A public DNS server that is serving primarily residential consumer clients, 
where it is likely there will be a NAT gateway on the path, may impose a lower 
keepalive interval, to generate more frequent keepalive traffic.</t>

<t>A smart client may be adaptive to its environment. A client using
a private IPv4 address <xref target="RFC1918"/> to communicate with a DNS server
at an address outside that IPv4 private address block,
may conclude that there is likely to be a NAT gateway on the path,
and accordingly request a lower keepalive interval.</t>

<t>By default it is RECOMMENDED that clients request,
and servers grant, a keepalive interval of 60 minutes.
This keepalive interval provides for reasonably timely detection if
a client abruptly disconnects without cleanly closing the session,
and is sufficient to maintain state in firewalls and NAT gateways
that follow the IETF recommended Best Current Practice that the
“established connection idle-timeout” used by middleboxes
be at least 2 hours 4 minutes <xref target="RFC5382"/>.</t>

<t>Note that the lower the keepalive interval value, the higher the load on client
and server. For example, a hypothetical keepalive interval value of 100ms would result
in a continuous stream of at least ten messages per second, in both directions,
to keep the DSO Session alive. And, in this extreme example, a single packet loss and
retransmission over a long path could introduce a momentary pause in the stream of messages,
long enough to cause the server to overzealously abort the connection.</t>

<t>Because of this concern, the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with a keepalive interval value less than ten seconds.
If a client receives a Keepalive message specifying a keepalive interval value
less than ten seconds this is a fatal error and the client MUST
forcibly abort the connection immediately.</t>

<t>A keepalive interval value of 0xFFFFFFFF (2^32-1 milliseconds, approximately 49.7 days)
informs the client that it should generate no keepalive traffic.
Note that after signaling that the client should generate no keepalive traffic in this way,
at any point the server may revise that keepalive traffic requirement by sending
a new Keepalive request message dictating new Session Timeout values to the client.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="server-initiated-session-termination" title="Server-Initiated Session Termination">

<t>In addition to cancelling individual long-lived operations selectively (<xref target="cancellation"/>)
there are also occasions where a server may need to terminate one or more entire sessions.
An entire session may need to be terminated if the client is defective in some way,
or departs from the network without closing its session.
Sessions may also need to be terminated if the server becomes overloaded,
or if the server is reconfigured and lacks the ability to be selective about
which operations need to be cancelled.</t>

<t>This section discusses various reasons a session may be terminated,
and the mechanisms for doing so.</t>

<t>Normally a server MUST NOT close a DSO Session with a client.
A server only causes a DSO Session to be ended in the exceptional circumstances outlined below.
In normal operation, closing a DSO Session is the client’s responsibility.
The client makes the determination of when to close a DSO
Session based on an evaluation of both its own needs,
and the inactivity timeout value dictated by the server.</t>

<t>Some of the exceptional situations in which a server may terminate a DSO Session include:</t>

<t><list style="symbols">
  <t>The server application software or underlying operating system
is shutting down or restarting.</t>
  <t>The server application software terminates unexpectedly
(perhaps due to a bug that makes it crash).</t>
  <t>The server is undergoing a reconfiguration or maintenance
procedure, that, due to the way the server software is
implemented, requires clients to be disconnected.
For example, some software is implemented such that it reads
a configuration file at startup, and changing the server’s
configuration entails modifying the configuration file
and then killing and restarting the server software,
which generally entails a loss of network connections.</t>
  <t>The client fails to meets its obligation to generate the required
keepalive traffic, or to close an inactive session by the prescribed time
(twice the time interval dictated by the server, or five seconds,
whichever is greater, as described in <xref target="sessiontimeouts"/>).</t>
  <t>The client sends a grossly invalid or malformed request that
is indicative of a seriously defective client implementation.</t>
  <t>The server is over capacity and needs to shed some load.</t>
</list></t>

<section anchor="retry" title="Server-Initiated Retry Delay Request Message">

<t>In the cases described above where a server elects to terminate a
DSO Session, it could do so simply by forcibly aborting the connection.
However, if it did this the likely behavior of the client might be simply to to treat
this as a network failure and reconnect immediately, putting more burden on the server.</t>

<t>Therefore, to avoid this reconnection implosion, a server SHOULD instead choose to
shed client load by sending a Retry Delay request message, with an appropriate RCODE
value informing the client of the reason the DSO Session needs to be terminated.
For example, an RCODE value of SERVFAIL indicates that the server is overloaded
due to resource exhaustion, or is restarting.
An RCODE value of NOTAUTH indicates that the server has been reconfigured and is
no longer able to perform one or more of the functions currently being performed
on this DSO Session because it no longer has authority over the names in question.
An RCODE value of REFUSED indicates a policy change regarding this session.
An RCODE value of FORMERR indicates that the client requests are
too badly malformed for the session to continue.
The format of the Retry Delay TLV is described in <xref target="delay"/>.
After sending a Retry Delay request message,
the server MUST NOT send any further messages on that DSO Session.</t>

<t>Upon receipt of a Retry Delay request message from the server,
the client MUST make note of the reconnect delay for this server,
and then immediately close the connection gracefully.</t>

<t>After sending a Retry Delay request message the server SHOULD allow the
client five seconds to close the connection, and if the client has not
closed the connection after five seconds then the server SHOULD
forcibly abort the connection.</t>

<t>A Retry Delay request message MUST NOT be initiated by a client.
If a server receives a Retry Delay request message this is a fatal error
and the server MUST forcibly abort the connection immediately.</t>

<section anchor="outstanding-operations" title="Outstanding Operations">

<t>At the instant a server chooses to initiate a Retry Delay request message
there may be DNS requests already in flight from client to server on this 
DSO Session, which will arrive at the server after its Retry Delay request message 
has been sent.
The server MUST silently ignore such incoming requests, and MUST NOT generate
any response messages for them. When the Retry Delay request message from the
server arrives at the client, the client will determine that any DNS requests
it previously sent on this DSO Session, that have not yet received a response, now 
will certainly not be receiving any response. Such requests should be considered
failed, and should be retried at a later time, as appropriate.</t>

<t>In the case where some, but not all, of the existing operations on a DSO Session 
have become invalid (perhaps because the server has been reconfigured and is no 
longer authoritative for some of the names),
but the server is terminating all affected DSO Sessions en masse
by sending them all a Retry Delay request message,
the RECONNECT DELAY MAY be zero, indicating that the clients SHOULD immediately
attempt to re-establish operations.</t>

<t>It is likely that some of the attempts will be successful and some will not,
depending on the nature of the reconfiguration.</t>

<t>In the case where a server is terminating a large number of DSO Sessions at once
(e.g., if the system is restarting) and the server doesn’t want to be inundated 
with a flood of simultaneous retries, it SHOULD send different RECONNECT delay 
values to each client.
These adjustments MAY be selected randomly, pseudorandomly, or deterministically
(e.g., incrementing the time value by one tenth of a second for each successive
client, yielding a post-restart reconnection rate of ten clients per second).</t>

</section>
<section anchor="client-reconnection" title="Client Reconnection">

<t>After a DSO Session is ended by the server
(either by sending the client a Retry Delay request message,
or by forcibly aborting the underlying transport connection)
the client SHOULD try to reconnect,
to that server, or to another suitable server, if more than one is available.
If reconnecting to the same server, the client MUST respect the indicated delay,
if available, before attempting to reconnect.</t>

<t>If a particular server does not want a client to reconnect (the server is being
de-commissioned), it SHOULD set the retry delay to the maximum value (which is
approximately 49.7 days). If the server will only be out of service for a maintenance
period, it should use a value closer to the expected maintenance window and
not default to a very large delay value or clients may not attempt to reconnect
after it resumes service.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
</section>
</section>
<section anchor="base-tlvs-for-dns-stateful-operations" title="Base TLVs for DNS Stateful Operations">

<t>This section describes the three base TLVs for DNS Stateful Operations:
Keepalive, Retry Delay, and Encryption Padding.</t>

<section anchor="keepalive" title="Keepalive TLV">

<t>The Keepalive TLV (DSO-TYPE=1) performs two functions:
to reset the keepalive timer for the DSO Session,
and to establish the values for the Session Timeouts.</t>

<t>The TYPE-DEPENDENT DATA for the the Keepalive TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 INACTIVITY TIMEOUT (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 KEEPALIVE INTERVAL (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='INACTIVITY TIMEOUT:'>
  The inactivity timeout for the current DSO Session, specified as
a 32-bit unsigned integer, in network (big endian) byte order, in units of milliseconds.
This is the timeout at which the client MUST begin closing an inactive DSO Session.
The inactivity timeout can be any value of the server’s choosing.
If the client does not gracefully close an inactive DSO
Session, then after twice this interval, or five seconds,
whichever is greater, the server will forcibly abort the connection.</t>
  <t hangText='KEEPALIVE INTERVAL:'>
  The keepalive interval for the current DSO Session, specified as
a 32-bit unsigned integer, in network (big endian) byte order, in units of milliseconds.
This is the interval at which a client MUST generate keepalive
traffic to maintain connection state.
The keepalive interval MUST NOT be less than ten seconds.
If the client does not generate the mandated keepalive traffic,
then after twice this interval the server will forcibly abort the connection.
Since the minimum allowed keepalive interval is ten seconds, the
minimum time at which a server will forcibly disconnect a client for
failing to generate the mandated keepalive traffic is twenty seconds.</t>
</list></t>

<t>The transmission or reception of DSO Keepalive messages
(i.e., messages where the Keepalive TLV is the first TLV)
reset only the keepalive timer, not the inactivity timer.
The reason for this is that periodic Keepalive messages are sent for the sole
purpose of keeping a DSO Session alive, when that DSO Session has current
or recent non-maintenance activity that warrants keeping that DSO Session alive.
Sending keepalive traffic itself is not considered a client activity;
it is considered a maintenance activity that is performed
in service of other client activities.
If keepalive traffic itself were to reset the inactivity timer,
then that would create a circular livelock where keepalive traffic
would be sent indefinitely to keep a DSO Session alive, where the only
activity on that DSO Session would be the keepalive traffic keeping
the DSO Session alive so that further keepalive traffic can be sent.
For a DSO Session to be considered active, it must be carrying
something more than just keepalive traffic.
This is why merely sending or receiving a Keepalive message
does not reset the inactivity timer.</t>

<t>When sent by a client, the Keepalive request message MUST
be sent as an acknowledged request, with a nonzero MESSAGE ID.
If a server receives a Keepalive DSO message with a zero MESSAGE ID then
this is a fatal error and the server MUST forcibly abort the connection immediately.
The Keepalive request message resets a DSO Session’s keepalive timer,
and at the same time communicates to the server the the client’s
requested Session Timeout values.
In a server response to a client-initiated Keepalive request message,
the Session Timeouts contain the server’s chosen values from
this point forward in the DSO Session, which the client MUST respect.
This is modeled after the DHCP protocol, where the client requests a certain
lease lifetime using DHCP option 51 <xref target="RFC2132"/>, but the server is the
ultimate authority for deciding what lease lifetime is actually granted.</t>

<t>When a client is sending its second and subsequent Keepalive DSO requests to
the server, the client SHOULD continue to request its preferred values each time.
This allows flexibility, so that if conditions change during the lifetime of a
DSO Session, the server can adapt its responses to better fit the client’s needs.</t>

<t>Once a DSO Session is in progress (<xref target="establishment"/>)
a Keepalive message MAY be initiated by a server.
When sent by a server, the Keepalive message MUST be
sent as an unacknowledged message, with the MESSAGE ID set to zero.
The client MUST NOT generate a response to a server-initiated DSO Keepalive message.
If a client receives a Keepalive request message with a nonzero MESSAGE ID then
this is a fatal error and the client MUST forcibly abort the connection immediately.
The Keepalive unacknowledged message from the server resets a DSO Session’s keepalive timer,
and at the same time unilaterally informs the client of the new
Session Timeout values to use from this point forward in this DSO Session.
No client DSO response message to this unilateral declaration is required or allowed.</t>

<t>The Keepalive TLV is not used as an Additional TLV.</t>

<t>In response messages the Keepalive TLV is used only as a Response Primary TLV,
replying to a Keepalive request message from the client.
A Keepalive TLV MUST NOT be added as to other responses a Response Additional TLV.
If the server wishes to update a client’s Session Timeout values
other than in response to a Keepalive request message from the client,
then it does so by sending an unacknowledged Keepalive message
of its own, as described above.</t>

<t>It is not required that the Keepalive TLV be used in every DSO Session.
While many DNS Stateful operations
will be used in conjunction with a long-lived session state,
not all DNS Stateful operations require long-lived session state,
and in some cases the default 15-second value for both the inactivity timeout
and keepalive interval may be perfectly appropriate.
However, note that for clients that implement only the TLVs defined in this document,
a Keepalive request message is the only way for a client to initiate a DSO Session.</t>

<section anchor="client-handling-of-received-session-timeout-values" title="Client handling of received Session Timeout values">

<t>When a client receives a response to its client-initiated DSO Keepalive message,
or receives a server-initiated DSO Keepalive message, the client has then 
received Session Timeout values dictated by the server. The two timeout values 
contained in the DSO Keepalive TLV from the server may each be higher, lower, or 
the same as the respective Session Timeout values the client previously had for 
this DSO Session.</t>

<t>In the case of the keepalive timer, the handling of the received value is 
straightforward. The act of receiving the message containing the DSO Keepalive 
TLV itself resets the keepalive timer and updates the keepalive interval for the 
DSO Session. The new keepalive interval indicates the 
maximum time that may elapse before another message must be sent
or received on this DSO Session, if the DSO Session is to remain alive.</t>

<t><vspace blankLines='999' /></t>

<t>In the case of the inactivity timeout, the handling of the received
value  is a little more subtle, though the meaning of the inactivity
timeout remains as specified — it still indicates the maximum
permissible time allowed  without useful activity on a DSO Session.
The act of receiving the message containing the DSO Keepalive TLV does not
itself reset the inactivity timer. The time elapsed since the last useful
activity on this DSO Session is unaffected by exchange of DSO Keepalive messages.
The new inactivity timeout value in the DSO Keepalive TLV in the received message
does update the timeout associated with the running inactivity timer;
that becomes the new maximum permissible time without activity on a DSO Session.</t>

<t><list style="symbols">
  <t>If the current inactivity timer value is less than the
new inactivity timeout, then the DSO Session may remain open for now.
When the inactivity timer value reaches the new inactivity timeout,
the client MUST then begin closing the DSO Session, as described above.</t>
  <t>If the current inactivity timer value is equal to the
new inactivity timeout, then this DSO Session has been
inactive for exactly as long as the server will permit,
and now the client MUST immediately begin closing this DSO Session.</t>
  <t>If the current inactivity timer value is already greater
than the new inactivity timeout, then this DSO Session has
already been inactive for longer than the server permits,
and the client MUST immediately begin closing this DSO Session.</t>
  <t>If the current inactivity timer value is already more than twice the
new inactivity timeout, then the client is immediately considered delinquent
(this DSO Session is immediately eligible to be forcibly terminated by the server)
and the client MUST immediately begin closing this DSO Session.
However if a server abruptly reduces the inactivity timeout in this
way, then, to give the client time to close the connection gracefully
before the server resorts to forcibly aborting it, the server
SHOULD give the client an additional grace period of one quarter
of the new inactivity timeout, or five seconds, whichever is greater.</t>
</list></t>

</section>
<section anchor="relation-to-edns0-tcp-keepalive-option" title="Relation to EDNS(0) TCP Keepalive Option">

<t>The inactivity timeout value in the Keepalive TLV (DSO-TYPE=1) has similar
intent to the EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>.
A client/server pair that supports DSO MUST NOT use the
EDNS(0) TCP KeepAlive option within any message after a DSO 
Session has been established.
Once a DSO Session has been established, if either
client or server receives a DNS message over the DSO Session that contains an
EDNS(0) TCP Keepalive option, this is a fatal error and the receiver of the
EDNS(0) TCP Keepalive option MUST forcibly abort the connection immediately.</t>

</section>
</section>
<section anchor="delay" title="Retry Delay TLV">

<t>The Retry Delay TLV (DSO-TYPE=2) can be used as
a Primary TLV (unacknowledged) in a server-to-client message,
or as a Response Additional TLV in either direction.</t>

<t>The TYPE-DEPENDENT DATA for the the Retry Delay TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     RETRY DELAY (32 bits)                     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='RETRY DELAY:'>
  A time value, specified as
a 32-bit unsigned integer, in network (big endian) byte order, in units of milliseconds,
within which the initiator MUST NOT retry this operation, or retry connecting to this server.</t>
</list></t>

<t>The RECOMMENDED value is 10 seconds.</t>

<section anchor="retry-delay-tlv-used-as-a-primary-tlv" title="Retry Delay TLV used as a Primary TLV">

<t>When sent from server to client, the
Retry Delay TLV is used as the Primary TLV in an unacknowledged message.
It is used by a server
to instruct a client to close the DSO Session and underlying connection,
and not to reconnect for the indicated time interval.</t>

<t>In this case it applies to the DSO Session as a whole, and the client MUST begin closing the 
DSO Session, as described in <xref target="retry"/>. The RCODE in the message header 
MUST indicate the reason for the termination:</t>

<t><list style="symbols">
  <t>NOERROR indicates a routine shutdown.</t>
  <t>FORMERR indicates that the client requests are too badly malformed for the session to continue.</t>
  <t>SERVFAIL indicates that the server is overloaded due to resource exhaustion, or is restarting.</t>
  <t>REFUSED indicates that the server has been reconfigured
and due to a policy change is no longer able to perform one or more
of the functions currently being performed on this DSO Session</t>
  <t>NOTAUTH indicates that the server has been reconfigured
and is no longer able to perform one or more
of the functions currently being performed on this DSO Session
because it no longer has authority over the names in question
(for example, a DNS Push Notification server could be reconfigured
such that is is no longer accepting DNS Push Notification
requests for one or more of the currently subscribed names).</t>
</list></t>

<t>This document specifies only these RCODE values for Retry Delay request.
Servers sending Retry Delay requests SHOULD use one of these values.
However, future circumstances may create situations where other RCODE values
are appropriate in Retry Delay requests, so clients MUST be prepared
to accept Retry Delay requests with any RCODE value.</t>

<t>A Retry Delay message from server to client is an unacknowledged message;
the MESSAGE ID MUST be set to zero in the outgoing message
and the client MUST NOT send a response.</t>

<t>A client MUST NOT send a Retry Delay DSO request message or DSO unacknowledged message to a server.
If a server receives a DNS request message (i.e., QR=0) where the Primary TLV is the Retry Delay TLV,
this is a fatal error and the server MUST forcibly abort the connection immediately.</t>

</section>
<section anchor="retry-delay-tlv-used-as-a-response-additional-tlv" title="Retry Delay TLV used as a Response Additional TLV">

<t>In the case of a request that returns a nonzero RCODE value,
the responder MAY append a Retry Delay TLV to the response,
indicating the time interval during which the initiator
SHOULD NOT attempt this operation again.</t>

<t>The indicated time interval during which the initiator SHOULD NOT retry
applies only to the failed operation, not to the DSO Session as a whole.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="padding" title="Encryption Padding TLV">

<t>The Encryption Padding TLV (DSO-TYPE=3) can only be used as
an Additional or Response Additional TLV.
It is only applicable when the DSO Transport layer uses encryption
such as TLS.</t>

<t>The TYPE-DEPENDENT DATA for the the Padding TLV is optional and is a
variable length field containing non-specified values. A DATA LENGTH
of 0 essentially provides for 4 bytes of padding (the minimum amount).</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   /                                                               /
   /                   VARIABLE NUMBER OF BYTES                    /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t>As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
the PADDING bytes SHOULD be set to 0x00.  Other values MAY be used,
for example, in cases where there is a concern that the padded
message could be subject to compression before encryption.
PADDING bytes of any value MUST be accepted in the messages received.</t>

<t>The Encryption Padding TLV may be included in either a DSO request, response, or both.
As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
if a request is received with an Encryption Padding TLV,
then the response MUST also include an Encryption Padding TLV.</t>

<t>The length of padding is intentionally not specified in this document and
is a function of current best practices with respect to the type and length
of data in the preceding TLVs <xref target="I-D.ietf-dprive-padding-policy"/>.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="summary-highlights" title="Summary Highlights">

<t>This section summarizes some noteworthy highlights about
various components of the DSO protocol.</t>

<section anchor="message-id" title="MESSAGE ID">

<t>In DSO Request Messages the MESSAGE ID may be either
nonzero (signaling that the responder MUST generate a response)
or zero (signaling that the responder MUST NOT generate a response).</t>

<t>In DSO Response Messages the MESSAGE ID MUST NOT be zero
(since this would be a response to a request that had
indicated that a response is not allowed).</t>

<t>The table below illustrates the legal combinations:</t>

<figure><artwork><![CDATA[
                          +--------------------+-------------------+
                          | Nonzero MESSAGE ID |  Zero MESSAGE ID  |
   +----------------------+--------------------+-------------------+
   | DSO Request Message  |         X          |         X         |
   +----------------------+--------------------+-------------------+
   | DSO Response Message |         X          |                   |
   +----------------------+--------------------+-------------------+
]]></artwork></figure>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="tlv-usage" title="TLV Usage">

<t>The table below indicates, for each of the three TLVs defined in this
document, whether they are valid in each of ten different contexts.</t>

<t>The first five contexts are requests from client to server,
and the corresponding responses from server back to client:</t>

<t><list style="symbols">
  <t>C-P - Primary TLV, sent in DSO Request message, from client to server,
with nonzero MESSAGE ID indicating that this request MUST generate response message.</t>
  <t>C-U - Primary TLV, sent in DSO Unacknowledged message, from client to server,
with zero MESSAGE ID indicating that this request MUST NOT generate response message.</t>
  <t>C-A - Additional TLV, optionally added to request message or unacknowledged message from client to server.</t>
  <t>CRP - Response Primary TLV, included in response message sent to back the client
(in response to a client “C-P” request with nonzero MESSAGE ID indicating that a response is required)
where the DSO-TYPE of the Response TLV matches the DSO-TYPE of the Primary TLV in the request.</t>
  <t>CRA - Response Additional TLV, included in response message sent to back the client
(in response to a client “C-P” request with nonzero MESSAGE ID indicating that a response is required)
where the DSO-TYPE of the Response TLV does not match the DSO-TYPE of the Primary TLV in the request.</t>
</list></t>

<t>The second five contexts are their counterparts in the opposite direction:
requests from server to client, and the corresponding responses from client back to server.</t>

<figure><artwork><![CDATA[
              +-------------------------+-------------------------+
              | C-P  C-U  C-A  CRP  CRA | S-P  S-U  S-A  SRP  SRA |
 +------------+-------------------------+-------------------------+
 | KeepAlive  |  X              X       |       X                 |
 +------------+-------------------------+-------------------------+
 | RetryDelay |                      X  |       X                 |
 +------------+-------------------------+-------------------------+
 | Padding    |            X         X  |            X         X  |
 +------------+-------------------------+-------------------------+
]]></artwork></figure>

<t>Note that some of the columns in this table are currently empty.
The table is provided as a template for future TLV definitions to follow.
It is recommended that definitions of future TLVs include a
similar table summarizing the contexts where the new TLV is valid.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="inactivity-timeout" title="Inactivity Timeout">

<t>The Inactivity Timeout may have any 32-bit unsigned integer value.</t>

<t>The value zero informs the client that it
should not speculatively maintain idle connections at all, and
as soon as the client has completed the operation or operations relating
to this server, the client should immediately begin closing this session.</t>

<t>The maximum possible value,
0xFFFFFFFF (2^32-1 milliseconds, approximately 49.7 days),
informs the client that it may keep an idle connection open as long as it wishes.</t>

<t>The Inactivity timer is reset by any message <spanx style="strong">except</spanx> the Keepalive TLV,
and remains cleared any time that an operation is outstanding.</t>

</section>
<section anchor="keepalive-interval" title="Keepalive Interval">

<t>The Keepalive Interval is a 32-bit unsigned integer value,
with a minimum value of 10,000 milliseconds (10 seconds).</t>

<t>The maximum possible value,
0xFFFFFFFF (2^32-1 milliseconds, approximately 49.7 days),
informs the client that it should generate no keepalive traffic.</t>

<t>Any message exchange (including the Keepalive TLV) resets the Keepalive timer.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="dso-opcode-registration" title="DSO OPCODE Registration">

<t>The IANA is requested to record the value (tentatively) 6 for the DSO OPCODE
in the DNS OPCODE Registry.</t>

</section>
<section anchor="dso-rcode-registration" title="DSO RCODE Registration">

<t>The IANA is requested to record the value (tentatively) 11 for the DSONOTIMP error code
in the DNS RCODE Registry.</t>

</section>
<section anchor="dso-type-code-registry" title="DSO Type Code Registry">

<t>The IANA is requested to create the 16-bit DSO Type Code Registry,
with initial (hexadecimal) values as shown below:</t>

<texttable>
      <ttcol align='left'>Type</ttcol>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Status</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>0000</c>
      <c>Reserved</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0001</c>
      <c>KeepAlive</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0002</c>
      <c>RetryDelay</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0003</c>
      <c>EncryptionPadding</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0004-003F</c>
      <c>Unassigned, reserved for    DSO session-management TLVs</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0040-F7FF</c>
      <c>Unassigned</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>F800-FBFF</c>
      <c>Reserved for experimental/local use</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>FC00-FFFF</c>
      <c>Reserved for future expansion</c>
      <c>&#160;</c>
      <c>&#160;</c>
</texttable>

<t>DSO Type Code zero is reserved and is not currently intended for allocation.</t>

<t>Registrations of new DSO Type Codes in
the “Reserved for DSO session-management” range 0004-003F
and the “Reserved for future expansion” range FC00-FFFF
require publication of an IETF Standards Action document <xref target="RFC5226"/>.</t>

<t>Requests to register additional new DSO Type Codes
in the “Unassigned” range 0040-F7FF
are to be recorded by IANA after consultation with the
registry’s Designated Expert <xref target="RFC5226"/> at that time.
At the time of publication of this document, the Designated Expert
for the newly created DSO Type Code registry is [<spanx style="strong">TBD</spanx>].</t>

<t>DSO Type Codes in the “experimental/local” range F800-FBFF
may be used as Experimental Use or Private Use values <xref target="RFC5226"/>
and may be used freely for development purposes,
or for other purposes within a single site.
No attempt is made to prevent multiple sites from using
the same value in different (and incompatible) ways.
There is no need for IANA to review such assignments
(since IANA does not record them) and assignments
are not generally useful for broad interoperability.
It is the responsibility of the sites making use of
“experimental/local” values to ensure that no
conflicts occur within the intended scope of use.</t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>If this mechanism is to be used with DNS over TLS, then these messages
are subject to the same constraints as any other DNS-over-TLS messages
and MUST NOT be sent in the clear before the TLS session is established.</t>

<t>The data field of the “Encryption Padding” TLV could be used as a covert channel.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to
Stephane Bortzmeyer,
Tim Chown,
Ralph Droms,
Paul Hoffman,
Jan Komissar,
Edward Lewis,
Allison Mankin,
Rui Paulo,
David Schinazi,
Manju Shankar Rao,
and Bernie Volz
for their helpful contributions to this document.</t>

<t><vspace blankLines='999' /></t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC1035;
&RFC7766;
&RFC6891;
&RFC7828;
&RFC2119;
&RFC8174;
&RFC2136;
&RFC7830;
&RFC1034;
&RFC1918;
&RFC5382;
&RFC2132;
&RFC5226;


    </references>

    <references title='Informative References'>

<reference anchor="NagleDA" target="http://www.stuartcheshire.org/papers/nagledelayedack/">
  <front>
    <title>TCP Performance problems caused by interaction between Nagle's Algorithm and Delayed ACK</title>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization></organization>
    </author>
    <date year="2005" month="May" day="20"/>
  </front>
</reference>
&RFC7858;
&RFC2782;
&RFC6335;
&I-D.ietf-dnssd-push;
&I-D.sctl-dnssd-mdns-relay;
&RFC6763;
&RFC0768;
&RFC7413;
&I-D.ietf-tls-tls13;
&RFC1122;
&I-D.ietf-dprive-padding-policy;


    </references>



  </back>

<!-- ##markdown-source:
H4sIAM+unFoAA+W963YbR7Ym+D+eIof6YVIHgElJlmXV6tVFi5TNU7oVSdlV
p3vmrCSQILIMZOJkJkTBktaaV5g36GfpR5knmX2N2JEXkJJd1TWnfVpdEpCI
jMuOff323uPx2DV5s8yeJievLpKLJm2y+WaZvF5nVdrkZVG7WTkt0hU8MKvS
eTPOs2Y+nhV1uR7XWV3DI+M6vy7S5fjwsZvBz58mDw6PnoyPxg8eu3xdPU2a
alM3Dw4Pvzt84NIqS58mZ0WTVUXWuJtreu/rN8nPZfVLXlwnP1TlZu1+uQkP
jU/wvW6aNk+Tupm5zRrfUj9Nzp8/S7799vHjEf3t6PDhN85NyxmM8jTZwCSf
uHX+1CXJOGnKKf1vvV1V2bzmv5dVQ/9w6aZZlBU9CX+SJC9w8EnyfbZc5jV9
xBtwnm7th2V1HWaZXGzrJlvVyTPYMxg636xG8OV0Qo+mV1dV9g6evnhG/67h
1Rms57tvDpNni7SCMWDv8TP6epo3W3hdNrspy1nyDP7FH5czmMWz4+S7R4eP
H8pHm6Kp4OG3F8f0wXpRFvDQvxwlj2HsRw8eJkew9fRVtkrz5dOkSrd/zOvp
BKYfL/liAnPJ6kVeZWbRF80G5hd/Qys/Xq+XWViiLukIPprnRd5kyYuyXJv1
PNsAUTV5UbYW883h0aPbFvPo8Eny3bePkocPDr+1i5nKtP6Y4mwm03IVr+lf
J8lJPgXKqsvCLOpfy0XR+oLWdAGzm22KcKqX2XRRlMvyOs/q6CTlSbt0+vs4
eZlep7N0mRXJswyWk8nHr9/Py2qWXEzzrJhmyZu0+sXsDX9rNub1Xx4lj344
bu0Lbuss+ROQ+IxW6vfhb+nsjzVPqbsJF/2bcJFW6X+qTahhQcO7cDlJXmSr
aAcuYZzwGS3+e+BQ87Js6B5vlkCu1xF5fw9sEdjlVVlZMv7pMjn85uHhUT8Z
y/RWwDrK4o/zzfWmh1Jhem82NXC2KrczLFfxxzTJt0U6n+fLHD6eRbPb27P8
A/Y/v16Yab56ljz49vHhk9tu23dH3yVPHn+bHD18GLGOtczkj1dpcf03WoPL
Czi0FciKdxke/qv0epmdHDMdNGl1jdNaNM366ddf39zcTGpiJ3ptkQl9vU6B
L9RfF/jLWbZMt9ksnf7yNY/Asuny2ZvkTVbRm5Bw1lV5tURuO003NRzi1RY2
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
DmQ4tIrY+fbInHPWspdtMfygzbT4KbySM6y9cXNxev7T8+OzF4ntGtapfhD0
Oid8X1GfMPYCNBhf2Y92NIi2484LQUk6fnv544732ezvWFsEgWLqJkjRAs1z
tjq2bJXWerclUTj+4buguVJsojjp2tcWCu8jWLTUatj6fgvS1S5qu9Vd9Pnp
87cXpydm0SkYXiDmt4mPrqFvvoud6I71/PX5y9Pz874N9Na3JMJSj+aylKpV
gREGaLVXN7XQIet83AtEt9GSsnTQaTHomRY14Sz/u90CG2FquTnALtXqqaE/
QrdYc1RRdN0wF9/xyk550U6QlTDyBVrd/rYpy+HKcL6Olo7gFQCLhrkdkPkZ
G2XvhjAjXyRXU+2tXA3CPJ6AtFGOeDFDchtHz8/aM+6CUpIWuEWr5u70tpCH
ZdcCbX3rqM5NMJrOosrF3ru0e9t6fEXexLCE95m1pO8lr00SWSiL4DQNCWVF
SmVHtSyMANcwqCHr2z158TeIdWoz9mwV+PmSRClRtfqXymBd8g7EEl/qBhIO
q6rIwI6YLx85KpO7ttZFlUa6ZRpaba9YVQeLimpPmuRD20LT66tUYLxdJsSH
iVeT5GelwbtcdacLo9XWMX49QrXRpvhIqrjdJHyuU8a6A6YqjLYgaUsQNpI0
XaFJtpn3idp+cSMqKcIAsSlXIVr6TtC2THLYj0lygXvpqSGkS4dMLaeVhikE
4B9AHRLr2XMFJ0p7EEh/u1eJxcyxUonqqwEMI9jQG9t53cSV3Lu4ZtdTKyjx
tqttNX8HHQBlshssnlQbRwDJZundEis0tngSJjpzwfC44gkGH+EG1nVmATVI
gvyT24UbxuZevTp9dpmcnL44/islWPgmY+1OeoESfU0Sw3mcoqFI9wpI3rji
8Fkc30XL12yHDFH7mK8pJ06kQu5DqUHY6jfeDcy3HAa9ZJMObbnUCy02q6uM
7IM4QQsv1RRDG5Pryci7EcmbEmuYB0mLn2uthZvUF04FtaaYkUTR0MZ8WXK6
HFggmyWw6oydg3g/arKK5ABIGwkohnCerAy44LQm6JsKq0uqLJzO/gaKMZcV
lpNntyaaojDtckXGS51tZmX4N3luea/wYhEIz29EMWW3u1oGZHezZni1JQ0Y
O30t1JylSie+0amcNqLxlfttsUYVH8i6rJuxbGxsFJEPgQqOFZ5AQ1TvQGXi
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

-->

</rfc>

