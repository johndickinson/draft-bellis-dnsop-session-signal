<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.7 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC7766 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7766.xml">
<!ENTITY RFC6891 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6891.xml">
<!ENTITY RFC7828 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7828.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC7830 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7830.xml">
<!ENTITY RFC1034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC2136 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2136.xml">
<!ENTITY RFC2132 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2132.xml">
<!ENTITY RFC1918 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1918.xml">
<!ENTITY RFC5226 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5226.xml">
<!ENTITY RFC7858 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7858.xml">
<!ENTITY RFC6763 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6763.xml">
<!ENTITY I-D.ietf-dnssd-push SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dnssd-push.xml">
<!ENTITY RFC0768 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.0768.xml">
<!ENTITY I-D.ietf-dprive-padding-policy SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dprive-padding-policy.xml">
]>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-dnsop-session-signal-05" category="std" updates="RFC 7766, RFC 1035">

  <front>
    <title>DNS Stateful Operations</title>

    <author initials="R." surname="Bellis" fullname="Ray Bellis">
      <organization abbrev="ISC">Internet Systems Consortium, Inc.</organization>
      <address>
        <postal>
          <street>950 Charter Street</street>
          <city>Redwood City</city>
          <code>CA 94063</code>
          <country>USA</country>
        </postal>
        <phone>+1 650 423 1200</phone>
        <email>ray@isc.org</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>1 Infinite Loop</street>
          <city>Cupertino</city>
          <code>CA 95014</code>
          <country>USA</country>
        </postal>
        <phone>+1 408 974 3207</phone>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="J." surname="Dickinson" fullname="John Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>jad@sinodun.com</email>
      </address>
    </author>
    <author initials="S." surname="Dickinson" fullname="Sara Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>sara@sinodun.com</email>
      </address>
    </author>
    <author initials="A." surname="Mankin" fullname="Allison Mankin">
      <organization>Salesforce</organization>
      <address>
        <email>allison.mankin@gmail.com</email>
      </address>
    </author>
    <author initials="T." surname="Pusateri" fullname="Tom Pusateri">
      <organization>Unaffiliated</organization>
      <address>
        <postal>
          <street></street>
          <city>Raleigh</city>
          <code>NC 27608</code>
          <country>USA</country>
        </postal>
        <phone>+1 919 867 1330</phone>
        <email>pusateri@bangj.com</email>
      </address>
    </author>

    <date year="2017" month="November" day="19"/>

    <area>Internet</area>
    <workgroup>DNSOP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document defines a new DNS Stateful Operation OPCODE used to communicate 
operations within persistent stateful sessions, expressed using type-length-value (TLV) 
syntax, and defines an initial set of TLVs used to manage session timeouts and 
termination. This mechanism is intended to reduce the overhead of existing 
“per-packet” signaling mechanisms with “per-message” semantics as well as 
defining new stateful operations not defined in EDNS(0).</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The use of transports for DNS other than UDP is being increasingly specified,
for example, DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> and DNS over TLS <xref target="RFC7858"/>.
Such transports can offer persistent, long-lived sessions and therefore when
using them for transporting DNS messages it is of benefit to have a mechanism
that can establish parameters associated with those sessions, such as timeouts.
In such situations it is also advantageous to support server initiated messages.</t>

<t>The existing EDNS(0) Extension Mechanism for DNS <xref target="RFC6891"/> is explicitly
defined to only have “per-message” semantics. Whilst EDNS(0) has been used to
signal at least one session-related parameter (the EDNS(0) TCP Keepalive option
<xref target="RFC7828"/>) the result is less than optimal due to the restrictions
imposed by the EDNS(0) semantics and the lack of server-initiated signalling. 
For example, a server cannot arbitrarily 
instruct a client to close a connection because the server can only send EDNS(0) options 
in responses to queries that contained EDNS(0) options.</t>

<t>This document defines a new DNS Stateful Operation OPCODE used to
carry operations within persistent stateful connections, expressed
using type-length-value (TLV) syntax, and defines an initial set of
TLVs including ones used to manage session timeouts and termination.</t>

<t>It should be noted that the message format for DNS Stateful Operations
(see <xref target="format"/>) differs from the traditional DNS packet
format used for standard queries and responses.
The standard twelve-octet header is used, but the four count fields
(QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) are set to zero and their
corresponding sections are not present.
The actual data pertaining to DNS Stateful Operations
(expressed in TLV format) is appended to the end of the DNS message header.
When displayed using packet analyzer tools that have not been
updated to recognize the DNS Stateful Operations format, this
will result in the Stateful Operations data being displayed
as unknown additional data after the end of the DNS message.
It is likely that future updates to these tools will add the ability
to recognize, decode, and display the Stateful Operations data.</t>

<t>This new format has distinct advantages over an RR-based format because it
is more explicit and more compact. Each TLV definition is specific
to the use case, and as a result contains no redundant or overloaded fields.
Importantly, it completely avoids conflating DNS Stateful Operations in anyway 
with normal DNS operations or with existing EDNS(0) based functionality.
A goal of this approach is to avoid the operational issues that have
befallen EDNS(0), particularly relating to middle-box behaviour.</t>

<t>With EDNS(0), multiple options may be packed into a single OPT pseudo-RR,
and there is no generalized mechanism for a client to be able to tell
whether a server has processed or otherwise acted upon each individual
option within the combined OPT RR.
The specifications for each individual option need to define how each
different option is to be acknowledged, if necessary.</t>

<t>In contrast to EDNS(0), with DNS Stateful Operations there is no
compelling motivation to pack multiple operations into a single
message for efficiency reasons, because DNS Stateful Operations
always operates using a connection-oriented transport protocol.
Each Stateful operation is communicated in its own separate
DNS message, and the transport protocol can take care of packing
separate DNS messages into a single IP packet if appropriate.
For example, TCP can pack multiple small DNS messages into a single TCP segment.
This simplification allows for clearer semantics.
Each DSO request message communicates just one primary operation,
and the RCODE in the corresponding response message indicates the
success or failure of that operation.</t>

</section>
<section anchor="terminology" title="Terminology">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and
“OPTIONAL” in this document are to be interpreted as described in
“Key words for use in RFCs to Indicate Requirement Levels” <xref target="RFC2119"/>.</t>

<t>“DSO” is used to mean DNS Stateful Operation.</t>

<t>The term “connection” means a bidirectional byte stream of reliable,
in-order messages, such as provided by using
DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> or DNS over TLS <xref target="RFC7858"/>.</t>

<t>The unqualified term “session” in the context of this document means the exchange of
DNS messages over a connection where:</t>

<t><list style="symbols">
  <t>The connection between client and server is persistent and relatively
long-lived (i.e., minutes or hours, rather than seconds).</t>
  <t>Either end of the connection may initiate messages to the other.</t>
</list></t>

<t>A “DSO session” is established between two endpoints that
acknowledge persistent DNS state via the exchange of DSO messages
over the connection. This is distinct from, for example a DNS-over-TCP session
as described in RC7766.</t>

<t>A “DSO session” is terminated when the underlying connection is closed.</t>

<t>The term “server” means the software with a listening socket, awaiting
incoming connection requests.</t>

<t>The term “client” means the software which initiates a connection
to the server’s listening socket.</t>

<t>The terms “initiator” and “responder” correspond respectively to the
initial sender and subsequent receiver of a DSO request message,
regardless of which was the “client” and “server” in the usual DNS sense.</t>

<t>The term “sender” may apply to either an initiator
(when sending a DNS Stateful Operation request message)
or a responder (when sending a DNS Stateful Operation response message).</t>

<t>Likewise, the term “receiver” may apply to either a responder
(when receiving a DNS Stateful Operation request message)
or an initiator (when receiving a DNS Stateful Operation response message).</t>

<t>DNS Stateful Operations are expressed using type-length-value (TLV) syntax.</t>

<t>Two timers (elapsed time since an event) are defined in this document:</t>

<t><list style="symbols">
  <t>an inactivity timer (see <xref target="keepalive"/> and <xref target="inactivetimer"/>)</t>
  <t>a keepalive timer (see <xref target="keepalive"/> and <xref target="keepalivetimer"/>)</t>
</list></t>

<t>The timeouts associated with these timers are called the inactivity timeout and 
the keepalive interval respectively. 
The term “Session Timeouts” is used to refer to this pair of timeout values.</t>

<t>Reseting a timer means resetting the timer value to zero and starting the timer 
again. Clearing a timer means resetting the timer value to zero but NOT starting 
the time again.</t>

</section>
<section anchor="discussion" title="Discussion">

<t>There are several use cases for DNS Stateful operations that can 
be described here.</t>

<t>Firstly, establishing session parameters such as server defined timeouts is of 
great use in the 
general management of persistent connections. For example, using DSO sessions 
for stub to recursive DNS-over-TLS <xref target="RFC7858"/> is more flexible for both the 
client and the server than attempting to manage sessions using just the EDNS(0)
TCP Keepalive option
<xref target="RFC7828"/>. The simple set of TLVs defined in this document is
sufficient to greatly enhance connection management for this use case.</t>

<t>Secondly, DNS-SD <xref target="RFC6763"/> has evolved into a naturally session based mechanism where,
for example, long-lived subscriptions lend themselves to ‘push’ mechanisms as 
opposed to polling. Long-lived stateful connections and server initiated 
messages align with this use case <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>A general use case is that DNS traffic is often bursty but session establishment 
can be expensive. One challenge with long-lived connections is to maintain 
sufficient traffic to maintain NAT and firewall state.
To mitigate this issue this document introduces a
new concept for the DNS, that is DSO “Keepalive traffic”.
This traffic carries no DNS data and is not considered ‘activity’
in the classic DNS sense, but serves to maintain state in middle boxes,
and to assure client and server that they still have connectivity to each other.</t>

<t>There are a myriad of other potential use cases for DSO given the versatility 
and extensibility of this specification.</t>

<t><xref target="details"/> of this document describes the protocol details of DNS Stateful
Operations including definitions of three TLVs for session management and 
encryption padding. <xref target="lifecycle"/> presents a
detailed discussion of the DSO Session lifecycle including an
in-depth discussion of keepalive traffic and session termination.</t>

</section>
<section anchor="details" title="Protocol Details">

<section anchor="establishment" title="DSO Session Establishment">

<t>DSO messages MUST only be carried in protocols and in
environments where a session may be established according to the definition above.
Standard DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/>, and DNS over TLS <xref target="RFC7858"/>
are suitable protocols.</t>

<t>DNS over plain UDP <xref target="RFC0768"/> is not appropriate since it fails on the requirement for
in-order message delivery, and, in the presence of NAT gateways and firewalls
with short UDP timeouts, it fails to provide a persistent bi-directional
communication channel unless an excessive amount of keepalive traffic is used.</t>

<t>DSO messages relate only to the specific “DSO session” in which
they are being carried. A “DSO session” is established over a connection when
either side of the connection sends the first DSO
TLV and it is acknowledged by the other side. The DSO message format <xref target="dsodata"/> 
includes an option to specify that a DSO request does not require a 
response acknowledgement. Session establishment can only be performed using a 
DSO message that requires a response acknowledgement.</t>

<t>While this 
specification defines an initial set of three TLVs, additional TLVs may be 
defined in additional specifications. All three of the TLVs defined here are 
mandatory to implement.</t>

<t>A client MAY attempt to initiate DSO messages at any time
on a connection; receiving a NOTIMP response in reply indicates that the
server does not implement DSO, and the client SHOULD NOT
issue further DSO messages on that connection.</t>

<t>A server SHOULD NOT initiate DSO messages until a
client-initiated DSO message is received first,
unless in an environment where it is known in advance by other
means that the client supports DSO.
This requirement is to ensure that the clients that do not support
DSO do not receive unsolicited inbound DSO
messages that they would not know how to handle.</t>

<t>On a session between a client and server that support DSO,
once the client has sent at least one DSO message (or it is
known in advance by other means that the client supports DSO)
either end may unilaterally send DSO messages at any time,
and therefore either client or server may be the initiator of a message.</t>

<t>From this point on it is considered that a “DSO session” is in progress.
Clients and servers should behave as described in this specification with
regard to inactivity timeouts and connection close, not as prescribed in
the previous specification for DNS over TCP <xref target="RFC7766"/>.</t>

<section anchor="middle-box-considerations" title="Middle-box Considerations">

<t>Where an application-layer middle box (e.g., a DNS proxy, forwarder, or
session multiplexer) is in the path the middle box MUST NOT blindly
forward DSO messages in either direction, and MUST treat the inbound
and outbound connections as separate sessions.  This does not preclude
the use of DSO messages in the presence of an IP-layer middle box such
as a NAT that rewrites IP-layer and/or transport-layer headers, but
otherwise preserves the effect of a single session between the client
and the server.</t>

<t>To illustrate the above, consider a network where a middle box
terminates one or more TCP connections from clients and multiplexes the
queries therein over a single TCP connection to an upstream server.  The
DSO messages and any associated state are specific to the individual
TCP connections.  A DSO-aware middle box MAY in some circumstances be
able to retain associated state and pass it between the client and
server (or vice versa) but this would be highly TLV-specific.  For
example, the middle box may be able to maintain a list of which clients
have made Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/> and
make its own subscription(s) on their behalf, relaying any subsequent
notifications to the client (or clients) that have subscribed to that
particular notification.</t>

</section>
</section>
<section anchor="format" title="Message Format">

<t>A DSO message begins with
the standard twelve-octet DNS message header <xref target="RFC1035"/>
with the OPCODE field set to the DSO OPCODE (tentatively 6).
However, unlike standard DNS messages, the question section, answer section,
authority records section and additional records sections are not present.
The corresponding count fields (QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) MUST be
set to zero on transmission.</t>

<t>If a DSO message is received where any of the count fields are
not zero, then a FORMERR MUST be returned,
unless a future document specifies otherwise.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                          MESSAGE ID                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |QR |    OPCODE     |            Z              |     RCODE     |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     QDCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ANCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     NSCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ARCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                           DSO Data                            /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<section anchor="header" title="Header">

<t>In a request the MESSAGE ID field MUST be set to a unique value, that the
initiator is not currently using for any other active operation on this 
connection.
For the purposes here, a MESSAGE ID is in use in this DSO session if the
initiator has used it in a request for which it has not yet received a
response, or if the client has used it to setup state that it has not yet
deleted. For example, state could be a subscription <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>In a response the MESSAGE ID field MUST contain a copy of the value of the
MESSAGE ID field in the request being responded to.</t>

<t>In a request the DNS Header QR bit MUST be zero (QR=0).
If the QR bit is not zero the message is not a request.</t>

<t>In a response the DNS Header QR bit MUST be one (QR=1).
If the QR bit is not one the message is not a response.</t>

<t>The DNS Header OPCODE field holds the DSO OPCODE value (tentatively 6).</t>

<t>The Z bits are currently unused in DSO messages,
and in both DSO requests and DSO responses the
Z bits MUST be set to zero (0) on transmission and MUST be silently ignored
on reception, unless a future document specifies otherwise.</t>

<t>In a request message (QR=0) the RCODE is generally set to zero on transmission,
and silently ignored on reception, except where specified otherwise
(for example, the Retry Delay operation (see <xref target="delay"/>), where the RCODE indicates the reason
for termination).</t>

<t>The RCODE value in a response may be one of the following values:</t>

<texttable>
      <ttcol align='right'>Code</ttcol>
      <ttcol align='left'>Mnemonic</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>0</c>
      <c>NOERROR</c>
      <c>Operation processed successfully</c>
      <c>1</c>
      <c>FORMERR</c>
      <c>Format error</c>
      <c>2</c>
      <c>SERVFAIL</c>
      <c>Server failed to process request due to a problem with the server</c>
      <c>3</c>
      <c>NXDOMAIN</c>
      <c>Name Error — Named entity does not exist (TLV-dependent)</c>
      <c>4</c>
      <c>NOTIMP</c>
      <c>DSO not supported</c>
      <c>5</c>
      <c>REFUSED</c>
      <c>Operation declined for policy reasons</c>
      <c>9</c>
      <c>NOTAUTH</c>
      <c>Not Authoritative (TLV dependent)</c>
      <c>11</c>
      <c>DSONOTIMP</c>
      <c>DSO type code not supported</c>
</texttable>

<t>Use of the above RCODEs is likely to be common in DSO but 
does not preclude the definition and use of other codes in future documents that 
make use of DSO.</t>

<t>If a document describing a DSO makes use of either NXDOMAIN (Name Error)
or NOTAUTH then that document MUST explain the meaning.</t>

</section>
<section anchor="dsodata" title="DSO Data">

<t>The standard twelve-octet DNS message header is followed by the DSO Data.</t>

<t>The first TLV in a DSO request message is called the Operation 
TLV. Any subsequent TLVs after this initial Operation TLV are called Modifier TLVs.</t>

<t>Depending on the operation a DSO response can contain:</t>

<t><list style="symbols">
  <t>No TLVs</t>
  <t>Only an Operation TLV</t>
  <t>An Operation TLV followed by one or more Modifier TLVs</t>
  <t>Only Modifier TLVs</t>
</list></t>

<section anchor="tlv-format" title="TLV Format">

<t>Operation and modifier TLVs both use the same encoding format.</t>

<t>Operation TLVs SHOULD normally require a response and, therefore, set the TLV
Acknowledgement bit in a request. However, for some Operation TLVs, this may be
undesirable and the TLV Acknowledgement bit MAY be cleared in the request. Each
Operation TLV definition should stipulate whether an acknowledgement is
REQUIRED. If the TLV Acknowledgement bit is cleared in a request, a response
MUST NOT be sent. Modifier TLVs MUST NEVER set the Acknowledgement bit. The
Acknowledgement bit is NEVER set in the response to an Operation TLV.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   | A |                        DSO-TYPE                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                        DSO DATA LENGTH                        |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                      TYPE-DEPENDENT DATA                      /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='A:'>
  A 1-bit TLV Response flag indicating whether or not an Operation TLV requires
a response Acknowledgement.</t>
  <t hangText='DSO-TYPE:'>
  A 15-bit field in network order giving the type of the current DSO TLV per
the IANA DSO Type Codes Registry.</t>
  <t hangText='DSO DATA LENGTH:'>
  A 16-bit field in network order giving the size in octets of
the TYPE-DEPENDENT DATA.</t>
  <t hangText='TYPE-DEPENDENT DATA:'>
  Type-code specific format.</t>
</list></t>

<t>Where domain names appear within TYPE-DEPENDENT DATA, they MAY be compressed 
using standard DNS name compression. However, the compression MUST NOT point
outside of the TYPE-DEPENDENT DATA section and offsets MUST be from the start
of the TYPE-DEPENDENT DATA.</t>

</section>
<section anchor="operation-tlvs" title="Operation TLVs">

<t>An “Operation TLV” specifies the operation to be performed.</t>

<t>A DSO message MUST contain at most one Operation TLV.</t>

<t>In all cases a DSO request message MUST contain exactly one 
Operation TLV, indicating the operation to be performed.</t>

<t>Depending on the operation, a DSO response message MAY contain no 
Operation TLV, because it is simply a response to a previous request message,
and the MESSAGE ID in the header is sufficient to identify the request in 
question. Or it may contain a single corresponding response Operation TLV, with 
the same DSO-TYPE as in the request message. The specification for each DSO
type determines whether a response for that operation type 
is required to carry the Operation TLV.</t>

<t>If a DSO response is received for an operation which requires
that the response carry an Operation TLV, and the required Operation TLV is not
the first DSO TLV in the response message, then this is a fatal 
error and the recipient of the defective response message MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
<section anchor="modifier-tlvs" title="Modifier TLVs">

<t>A “Modifier TLV” specifies additional parameters
relating to the operation. Immediately following the Operation TLV, if present,
a DSO message MAY contain one or more Modifier TLVs.</t>

</section>
<section anchor="unrecognized-tlvs" title="Unrecognized TLVs">

<t>If a DSO request is received containing an unrecognized
Operation TLV, the receiver MUST send a response with matching
MESSAGE ID, and RCODE DSONOTIMP (tentatively 11). The response MUST NOT contain 
an Operation TLV.</t>

<t>If a DSO message (request or response) is received
containing one or more unrecognized Modifier TLVs, the unrecognized
Modifier TLVs MUST be silently ignored, and the remainder of the message
is interpreted and handled as if the unrecognized parts were not present.</t>

</section>
</section>
<section anchor="edns0-and-tsig" title="EDNS(0) and TSIG">

<t>Since the ARCOUNT field MUST be zero, a DSO message
MUST NOT contain an EDNS(0) option in the additional records section.
If functionality provided by current or future EDNS(0) options is desired
for DSO messages, an Operation TLV or
Modifier TLV needs to be defined to carry the necessary information.</t>

<t>For example, the EDNS(0) Padding Option <xref target="RFC7830"/> used for security purposes
is not permitted in a DSO message,
so if message padding is desired for DSO messages
then the Encryption Padding TLV described in <xref target="padding"/> MUST be used.</t>

<t>Similarly, a DSO message MUST NOT contain a TSIG record.
A TSIG record in a conventional DNS message is added as the last record
in the additional records section, and carries a signature computed over
the preceding message content. Since DSO data appears
after the additional records section, it would not be included in the
signature calculation. 
If use of signatures with DSO messages becomes necessary in the 
future, an explicit Modifier TLV needs to be defined to 
perform this function.</t>

<t>Note however that, while DSO <spanx style="emph">messages</spanx> cannot include
EDNS(0) or TSIG records, a DSO <spanx style="emph">session</spanx> is typically used to 
carry a whole series of DNS messages of different kinds, including DSO
messages, and other DNS message types like Query <xref target="RFC1034"/> 
<xref target="RFC1035"/> and Update <xref target="RFC2136"/>, and those messages can carry EDNS(0) and 
TSIG records.</t>

<t>This specification explicitly prohibits use of the
EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>
in <spanx style="emph">any</spanx> messages sent on a DSO session (because it duplicates
the functionality provided by the DSO Keepalive operation),
but messages may contain other EDNS(0) options as appropriate.</t>

</section>
</section>
<section anchor="message-handling" title="Message Handling">

<t>The initiator MUST set the value of the QR bit in the DNS header to
zero (0), and the responder MUST set it to one (1).
Every DSO request message (QR=0) with the Acknowledgement bit set in the
operation TLV MUST elicit a response (QR=1), which MUST have the same
MESSAGE ID in the DNS message header as in the corresponding request.
DSO request messages sent by the client with the Acknowledgement
bit set in the operation TLV elicit a response from the server, and
DSO request messages sent by the server with the Acknowledgement
bit set in the operation TLV elicit a response from the client.</t>

<t>With most TCP implementations, the TCP data acknowledgement (generated because 
data has been received by TCP), the TCP window update (generated because TCP has 
delivered that data to the receiving software) and the DSO 
response (generated by the receiving software itself)
are all combined into a single packet, so in practice the requirement that every
DSO request message MUST elicit a 
DSO response incurs minimal extra cost on the network.
Requiring that every request elicit a corresponding response also avoids
performance problems caused by interaction between
Nagle’s Algorithm and Delayed Ack <xref target="NagleDA"/>.</t>

<t>The namespaces of 16-bit MESSAGE IDs are disjoint in each direction.
For example, it is <spanx style="emph">not</spanx> an error for both client and server to send a request
message with the same ID. In effect, the 16-bit MESSAGE ID combined with the 
identity of the initiator (client or server) serves as a 17-bit unique 
identifier for a particular operation on a DSO session.</t>

<t>As described in <xref target="header"/> An initiator MUST NOT reuse a MESSAGE ID that is 
already in use for an 
outstanding request, unless specified otherwise by the relevant specification 
for the DSO in question. At the very least, this means 
that a MESSAGE ID MUST NOT be reused in a particular direction
on a particular DSO session while the initiator is waiting for a response to a 
previous request using that MESSAGE ID on that DSO session,
unless specified otherwise by the relevant 
specification for the DSO in question.
(For a long-lived state the MESSAGE ID for the operation
MUST NOT be reused whilst that state remains active.)</t>

<t>If a client or server receives a response (QR=1) where the MESSAGE ID does not
match any of its outstanding operations, this is a fatal error and it MUST 
immediately terminate the connection with a TCP RST (or equivalent for other 
protocols).</t>

</section>
</section>
<section anchor="keepalive" title="Keepalive Operation TLV">

<t>The Keepalive Operation TLV (DSO-TYPE=1) performs two functions: to reset the
keepalive timer for the DSO session and to establish the values for the Session Timeouts.</t>

<t>The Keepalive Operation TLV resets only the keepalive timer, not the inactivity timer.
The reason for this is that periodic Keepalive Operation TLVs are sent for the
sole purpose of keeping a DSO session alive, because that DSO session has current
or recent non-maintenance activity that warrants keeping the DSO session alive.
If sending keepalive traffic itself were to reset the inactivity timer, then 
that would create a circular livelock where keepalive traffic would be sent 
indefinitely to keep a DSO session alive, where the only activity on that DSO 
session would be the keepalive traffic keeping the DSO session alive so that further 
keepalive traffic can be sent.</t>

<t>Sending keepalive traffic is considered a maintenance activity
that is performed in service of other client activities.
Sending keepalive traffic itself is not considered a client activity.
For a DSO session to be considered active, it must be carrying something more than just keepalive traffic.
This is why merely sending a Keepalive Operation TLV does not reset the inactivity timer.</t>

<t>When sent by a client, the Keepalive Operation TLV MUST have the Acknowledgement bit set.
It resets a DSO session’s keepalive timer, and at the same time requests what the
Session Timeout values should be from this point forward in the DSO session.
If a server receives a Keepalive Operation TLV without the Acknowledgement bit set
then this is a fatal error and the server MUST immediately terminate
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>Once a DSO session is in progress (see <xref target="details"/>) the Keepalive TLV also MAY be initiated by a server.
When sent by a server, the Keepalive Operation TLV MUST NOT have the Acknowledgement bit set.
It resets a DSO session’s keepalive timer, and unilaterally informs the client of
the new Session Timeout values to use from this point forward in this DSO session.
No client response to this unilateral declaration is required.
If a client receives a Keepalive Operation TLV with the Acknowledgement bit set
then this is a fatal error and the client MUST immediately terminate
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>It is not required that the Keepalive TLV be used in every DSO session.
While many DNS Stateful operations
will be used in conjunction with a long-lived session state,
not all DNS Stateful operations require long-lived session state,
and in some cases the default 15-second value for both the inactivity timeout
and keepalive interval may be perfectly appropriate. However, it can be noted 
that for clients that implement only the TLVs defined in this document it is
the only way for a client to initiate a DSO session.</t>

<t>The TYPE-DEPENDENT DATA for the the Keepalive TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 INACTIVITY TIMEOUT (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 KEEPALIVE INTERVAL (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='INACTIVITY TIMEOUT:'>
  the inactivity timeout for the current DSO session, specified as a
32-bit word in network (big endian) order in units of milliseconds.
This is the timeout at which the client MUST close an inactive DSO session.
If the client does not gracefully close an inactive DSO session,
then after twice this interval the server will forcibly terminate
the connection with a TCP RST (or equivalent for other protocols).</t>
  <t hangText='KEEPALIVE INTERVAL:'>
  the keepalive interval for the current DSO session, specified as a
32-bit word in network (big endian) order in units of milliseconds.
This is the interval at which a client MUST generate keepalive
traffic to maintain connection state.
If the client does not generate the necessary keepalive traffic,
then after twice this interval the server will forcibly terminate
the connection with a TCP RST (or equivalent for other protocols).</t>
</list></t>

<t>In a client-initiated DSO Keepalive message,
the Session Timeouts contain the client’s requested values.
In a server response to a client-initiated message, the Session Timeouts contain 
the server’s chosen values, which the client MUST respect.
This is modeled after the DHCP protocol, where the client
requests a certain lease lifetime using DHCP option 51 <xref target="RFC2132"/>,
but the server is the ultimate authority
for deciding what lease lifetime is actually granted.</t>

<t>In a server-initiated DSO Keepalive message, the Session Timeouts
unilaterally inform the client of the new values from this point
forward in this DSO session. The client MUST NOT generate a
response to the server-initiated DSO Keepalive message.</t>

<t>When a client is sending its second and subsequent Keepalive DSO 
requests to the server, the client SHOULD continue to request its preferred 
values each time. This allows flexibility, so that if conditions change during 
the lifetime of a DSO session, the server can adapt its responses to better fit 
the client’s needs.</t>

<section anchor="client-handling-of-received-session-timeout-values" title="Client handling of received Session Timeout values">

<t>When a client receives a response to its client-initiated DSO Keepalive message,
or receives a server-initiated DSO Keepalive message, the client has then 
received Session Timeout values dictated by the server. The two timeout values 
contained in the DSO Keepalive TLV from the server may each be higher, lower, or 
the same as the respective Session Timeout values the client previously had for 
this DSO session.</t>

<t>In the case of the keepalive timer, the handling of the received value is 
straightforward. The act of receiving the message containing the DSO Keepalive 
TLV itself resets the keepalive timer and updates the keepalive interval for the 
DSO session. The new keepalive interval indicates the 
maximum time that may elapse before another message must be sent
or received on this DSO session, if the DSO session is to remain alive.</t>

<t>In the case of the inactivity timeout, the handling of the received value 
is a little more subtle, though the meaning of the inactivity 
timeout is unchanged – it still indicates the maximum permissible time allowed 
without activity on a DSO session.
The act of receiving the message containing the DSO Keepalive TLV does not
itself reset the inactivity timer. The time elapsed since the last useful
activity on this DSO session is unaffected by exchange of DSO Keepalive messages.
The act of receiving the message containing the DSO Keepalive TLV does update 
the timeout associated with the running inactivity timer; that
becomes the new maximum permissible time without activity on a DSO session.</t>

<t><list style="symbols">
  <t>If the current inactivity timer value is not greater than the new inactivity timeout, 
then the DSO session may remain open for now. When the inactivity timer value 
exceeds the new inactivity timeout, the client MUST then close the DSO session,
as described above.</t>
  <t>If the current inactivity timer value is already greater than the new inactivity 
timeout, then this DSO session has already been inactive
for longer than the server permits, and the client MUST immediately close this DSO session.</t>
  <t>If the current inactivity timer value is more than twice the new inactivity timeout, 
then this DSO session is eligible to be
forcibly terminated by the server and and the client MUST immediately close this 
DSO session. However if a server abruptly reduces the
inactivity timeout in this way the server SHOULD give the client a grace period
of one quarter of the new inactivity timeout, to give the client time to close
the connection gracefully before the server resorts to terminating it forcibly.</t>
</list></t>

</section>
<section anchor="relation-to-edns0-tcp-keepalive-option" title="Relation to EDNS(0) TCP Keepalive Option">

<t>The inactivity timeout value in the Keepalive TLV (DSO-TYPE=1) has similar
intent to the EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>.
A client/server pair that supports DSO MUST NOT use the
EDNS(0) TCP KeepAlive option within any message after a DSO 
session has been established.
Once a DSO session has been established, if either
client or server receives a DNS message over the DSO session that contains an
EDNS(0) TCP Keepalive option, this is an error and the receiver of the
EDNS(0) TCP Keepalive option MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="delay" title="Retry Delay TLV">

<t>The Retry Delay TLV (DSO-TYPE=0) can be used as an Operation TLV or as
a Modifier TLV.</t>

<t>The TYPE-DEPENDENT DATA for the the Retry Delay TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     RETRY DELAY (32 bits)                     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='RETRY DELAY:'>
  a time value, specified as a 32-bit word in network order in units of 
milliseconds, within which the client MUST NOT retry this operation, or retry 
connecting to this server.</t>
</list></t>

<t>The RECOMMENDED value is 10 seconds.</t>

<section anchor="use-as-an-operation-tlv" title="Use as an Operation TLV">

<t>When sent in a DSO request message, from server to client, the 
Retry Delay TLV (0) is considered an Operation TLV. It is used by a server 
to request that a client close the DSO session and underlying connection, and 
not to reconnect for the indicated time interval.</t>

<t>In this case it applies to the DSO session as a whole, and the client MUST close the 
DSO session, as described in section <xref target="retry"/>. The RCODE in the message header 
MUST indicate the reason for the termination:</t>

<t><list style="symbols">
  <t>NOERROR indicates a routine shutdown.</t>
  <t>SERVFAIL indicates that the server is overloaded due to resource exhaustion.</t>
  <t>REFUSED indicates that the server has been reconfigured and is no longer able 
to perform one or more of the functions 
currently being performed on this DSO session (for example, a DNS Push Notification 
server could be reconfigured such that is is no longer accepting DNS Push 
Notification requests for one or more of the currently subscribed names).</t>
</list></t>

<t>This document specifies only these three RCODE values for Retry Delay request.
Servers sending Retry Delay requests SHOULD use one of these three values.
However, future circumstances may create situations where other RCODE values
are appropriate in Retry Delay requests, so clients MUST be prepared
to accept Retry Delay requests with any RCODE value.</t>

<t>An acknowledgement is not desired for a Retry Delay Operation TLV and the TLV
Acknowledgement bit MUST be cleared in the request.</t>

</section>
<section anchor="use-as-a-modifier-tlv" title="Use as a Modifier TLV">

<t>When appended to a DSO response message for some client request,
the Retry Delay TLV (0) is considered a Modifier TLV.
The indicated time interval during which the client SHOULD NOT retry
applies only to the failed operation, not to the DSO session as a whole.</t>

<t>In the case of a client request that returns a nonzero RCODE value, the server 
MAY append a Retry Delay TLV (0) to the response, indicating the time interval
during which the client SHOULD NOT attempt this operation again.</t>

</section>
</section>
<section anchor="padding" title="Encryption Padding TLV">

<t>The Encryption Padding TLV (DSO-TYPE=2) can only be used as a Modifier TLV.
It is only applicable when the DSO Transport layer uses encryption
such as TLS.</t>

<t>The TYPE-DEPENDENT DATA for the the Padding TLV is optional and is a
variable length field containing non-specified values. A DATA LENGTH
of 0 essentially provides for 4 octets of padding (the minimum amount).</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   /                                                               /
   /                   VARIABLE NUMBER OF OCTETS                   /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t>As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
the PADDING octets SHOULD be set to 0x00.  Other values MAY be used,
for example, in cases where there is a concern that the padded
message could be subject to compression before encryption.
PADDING octets of any value MUST be accepted in the messages received.</t>

<t>The Encryption Padding TLV may be included in either a DSO request, response, or both.
As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
if a request is received with a Encryption Padding TLV,
then the response MUST also include an Encryption Padding TLV.</t>

<t>The length of padding is intentionally not specified in this document and
is a function of current best practices with respect to the type and length
of data in the preceding TLVs <xref target="I-D.ietf-dprive-padding-policy"/>.</t>

</section>
<section anchor="lifecycle" title="DSO Session Lifecycle and Timers">

<section anchor="dso-session-initiation" title="DSO Session Initiation">

<t>A session begins when a client makes a new connection to a server.</t>

<t>A DSO session begin as described in <xref target="establishment"/>.</t>

<t>The client may perform as many DNS operations as it wishes using the
newly created DSO session. Operations SHOULD be pipelined (i.e., the
client doesn’t need wait for a response before sending the next message).
The server MUST act on messages in the order they are transmitted, but
responses to those messages MAY be sent out of order, if appropriate.</t>

</section>
<section anchor="sessiontimeouts" title="DSO Session Timeouts">

<t>Two timeout values are associated with a DSO session: the inactivity timeout, and 
the keepalive interval.</t>

<t>The first timeout value, the inactivity timeout, is the maximum time for which
a client may speculatively keep a DSO session open in the expectation that
it may have future requests to send to that server.</t>

<t>The second timeout value, the keepalive interval, is the maximum permitted
interval between client messages to the server if the client wishes to keep
the DSO session alive.</t>

<t>The two timeout values are independent. The inactivity timeout may be lower, the 
same, or higher than the keepalive interval, though in most cases the inactivity 
timeout is expected to be shorter than the keepalive interval.</t>

<t>Only when the client has a very long-lived low-traffic state does the 
keepalive interval come into play, to ensure that a sufficient residual
amount of traffic is generated to maintain NAT and firewall state
and to assure client and server that they still have connectivity to each other.</t>

<t>On a new DSO session, if no explicit DSO Keepalive message exchange has taken 
place, the default value for both timeouts is 15 seconds.
For both timeouts, lower values of the timeout result in higher network traffic
and higher CPU load on the server.</t>

</section>
<section anchor="inactivetimer" title="Inactive DSO Sessions">

<t>At both servers and clients, the generation or reception of any complete
DNS message, including DNS requests, responses, updates, or DSO
messages, resets both timers for that DSO session, with the exception
that a DSO Keepalive message resets only the keepalive timer, not the inactivity 
timeout timer.</t>

<t>In addition, for as long as the client has an outstanding operation in progress,
the inactivity timer remains cleared, and an inactivity 
timeout cannot occur.</t>

<t>For short-lived DNS operations like traditional queries and updates,
an operation is considered in progress for the time between request and 
response, typically a period of a few hundred milliseconds at most.
At the client, the inactivity timer is cleared upon transmission of a 
request and remains cleared until reception of the corresponding response.
At the server, the inactivity timer is cleared upon reception of a request
and remains cleared until transmission of the corresponding response.</t>

<t>For long-lived DNS Stateful operations, an operation is considered in progress
for as long as the state is active, until it is cancelled.
This means that a DSO session can exist, with a state 
active, with no messages flowing in either direction, for far longer than the 
inactivity timeout, and this is not an error. This is why there are two separate 
timers: the inactivity timeout, and the keepalive interval. Just because a DSO 
session has no traffic for an extended period of time
does not automatically make that DSO session “inactive”,
if it has an active state that is awaiting events.</t>

</section>
<section anchor="the-inactivity-timeout" title="The Inactivity Timeout">

<t>The purpose of the inactivity timeout is for the server to balance its trade off 
between the costs of setting up new DSO sessions and the costs of maintaining inactive 
DSO sessions. A server with abundant DSO session capacity can offer a high inactivity timeout, 
to permit clients to keep a speculative DSO session open for a long time, to save 
the cost of establishing a new DSO session for future communications with that 
server. A server with scarce memory resources can offer a low inactivity timeout,
to cause clients to promptly close DSO sessions whenever they have no outstanding
operations with that server, and then create a new DSO session later when needed.</t>

<section anchor="closing-inactive-dso-sessions" title="Closing Inactive DSO Sessions">

<t>A client is NOT required to wait until the inactivity timeout expires
before closing a DSO session.
A client MAY close a DSO session at any time, at the client’s discretion.
If a client determines that it has no current or reasonably anticipated
future need for an inactive DSO session, then the client SHOULD close that connection.</t>

<t>If, at any time during the life of the DSO session,
the inactivity timeout value (i.e., 15 seconds by default) elapses
without there being any operation active on the DSO session,
the client MUST gracefully close the connection with a
TLS close_notify followed by a TCP FIN (or equivalent for other protocols).</t>

<t>If, at any time during the life of the DSO session, twice the inactivity timeout value
(i.e., 30 seconds by default) elapses without there being any operation
active on the DSO session, the server SHOULD consider the client delinquent,
and forcibly abort the DSO session.
For DSO sessions over TCP (or over TLS over TCP),
to avoid the burden of having a connection in TIME-WAIT state, instead of
closing the connection gracefully the server SHOULD abort
the connection with a TCP RST (or equivalent for other protocols).
(In the BSD Sockets API this is achieved by setting the
SO_LINGER option to zero before closing the socket.)</t>

<t>In this context, an operation being active on a DSO session includes
a query waiting for a response, an update waiting for a response,
or active state,
but not a DSO Keepalive message exchange itself.
A DSO Keepalive message exchange resets only the keepalive
interval timer, not the inactivity timeout timer.</t>

<t>If the client wishes to keep an inactive DSO session open for longer than
the default duration without having to send traffic every 15 seconds,
then it uses the DSO Keepalive message to request
longer timeout values, as described in <xref target="keepalive"/>.</t>

</section>
<section anchor="values-for-the-inactivity-timeout" title="Values for the Inactivity Timeout">

<t>For the inactivity timeout value, lower values result in more frequent DSO session 
teardown and re-establishment. Higher values result in lower traffic and CPU
load on the server, but a larger memory burden to maintain state for inactive 
DSO sessions.</t>

<t>A shorter inactivity timeout with a longer keepalive interval signals to the client 
that it should not speculatively keep inactive DSO sessions open for very long without
reason, but when it does have an active reason to keep a DSO session open, it 
doesn’t need to be sending an aggressive level of keepalive traffic.</t>

<t>A longer inactivity timeout with a shorter keepalive interval signals to the client
that it may speculatively keep inactive DSO sessions open for a long time, but it
should be sending a lot of keepalive traffic on those inactive DSO sessions.
This configuration is expected to be less common.</t>

<t>To avoid repeated teardown and re-establishment of sessions,
the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with an inactivity timeout value less than ten seconds.
If a client receives a Keepalive message specifying an inactivity timeout value
less than ten seconds this is an error and the client MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

<t>This does not mean that a client is forced to keep an idle connection open for
ten seconds if it doesn’t need that — a client is free to close an idle connection whenever it chooses —
it means that servers cannot <spanx style="emph">require</spanx> a client to close an idle connection in under ten seconds.</t>

<t>[Do we really want this restriction? How soon does the client reconnect after tearing down the connection? –SC]</t>

</section>
</section>
<section anchor="keepalivetimer" title="The Keepalive Interval">

<t>The purpose of the keepalive interval is to manage the generation of
sufficient messages to maintain state in middle boxes (such at NAT gateways
or firewalls) and for the client and server to periodically verify that they
still have connectivity to each other. This allows them to clean up state
when connectivity is lost, and attempt re-connection if appropriate.</t>

<section anchor="keepalive-interval-expiry" title="Keepalive Interval Expiry">

<t>If, at any time during the life of the DSO session,
the keepalive interval value (i.e., 15 seconds by default) elapses
without any DNS messages being sent or received on a DSO session,
the client MUST take action to keep the DSO session alive,
by sending a DSO Keepalive message (see <xref target="keepalive"/>).
A DSO Keepalive message exchange resets only the keepalive timer, 
not the inactivity timer.</t>

<t>If a client disconnects from the network abruptly,
without cleanly closing its DSO session,
leaving long-lived state uncanceled,
the server learns of this after failing to
receive the required keepalive traffic from that client.
If, at any time during the life of the DSO session,
twice the keepalive interval value (i.e., 30 seconds by default) elapses
without any DNS messages being sent or received on a DSO session,
the server SHOULD consider the client delinquent,
and forcibly abort the connection with a TCP RST (or equivalent for other 
protocols).</t>

</section>
<section anchor="values-for-the-keepalive-interval" title="Values for the Keepalive Interval">

<t>For the keepalive interval value, lower values result in higher volume keepalive 
traffic. Higher values of the keepalive interval reduce traffic and CPU load, 
but have minimal effect on the memory burden
at the server, because clients keep a DSO session open for the same length of time
(determined by the inactivity timeout) regardless of the level of keepalive traffic 
required.</t>

<t>It may be appropriate for clients and servers to select different keepalive 
interval values depending on the nature of the network they are on.</t>

<t>A corporate DNS server that knows it is serving only clients on the internal 
network, with no intervening NAT gateways or firewalls, can impose a higher 
keepalive interval, because frequent keepalive traffic is not required.</t>

<t>A public DNS server that is serving primarily residential consumer clients, 
where it is likely there will be a NAT gateway on the path, may impose a lower 
keepalive interval, to generate more frequent keepalive traffic.</t>

<t>A smart client may be adaptive to its environment. A client using
a private IPv4 address <xref target="RFC1918"/> to communicate with a DNS server
at an address outside that IPv4 private address block,
may conclude that there is likely to be a NAT gateway on the path,
and accordingly request a lower keepalive interval.</t>

<t>For environments where there is a NAT gateway or firewalls on the path, it is
RECOMMENDED that clients request, and servers grant, a keepalive interval of 15
minutes. In other environments it is RECOMMENDED that clients request, and 
servers grant, a keepalive interval of 60 minutes.</t>

<t>Note that the lower the keepalive interval value, the higher the load on client
and server. For example, an keepalive interval value of 100ms would result in a
continuous stream of at least ten messages per second, in both directions,
to keep the DSO session alive. And, in this extreme example, a single packet loss and
retransmission over a long path could introduce a momentary pause in the stream of messages,
long enough to cause the server to overzealously abort the connection.</t>

<t>Because of this concern, the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with an keepalive interval value less than ten seconds.
If a client receives an Keepalive message specifying an keepalive interval value
less than ten seconds this is an error and the client MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="server-initiated-termination-on-error" title="Server-Initiated Termination on Error">

<t>After sending an error response to a client, the server MAY close the DSO session,
or may allow the DSO session to remain open. For error conditions
that only affect the single operation in question, the server SHOULD return an
error response to the client and leave the DSO session open for further operations.
For error conditions that are likely to make all operations unsuccessful in the
immediate future, the server SHOULD return an error response to the client and 
then close the DSO session by sending a Retry Delay request message, as described in 
<xref target="delay"/>.</t>

</section>
<section anchor="error" title="Client Behaviour in Receiving an Error">

<t>Upon receiving an error response from the server, a client SHOULD NOT
automatically close the DSO session. An error relating to one particular operation
on a DSO session does not necessarily imply that all other operations on that
DSO session have also failed, or that future operations will fail. The client
should assume that the server will make its own decision about whether or not to
close the DSO session, based on the server’s determination of whether the error
condition pertains to this particular operation, or would also apply to any
subsequent operations. If the server does not close the DSO session then the client
SHOULD continue to use that DSO session for subsequent operations.</t>

</section>
<section anchor="server-initiated-termination-on-overload" title="Server-Initiated Termination on Overload">

<t>Apart from the cases where:</t>

<t><list style="symbols">
  <t>Session Timeouts expire (see <xref target="sessiontimeouts"/>)</t>
  <t>On error (see <xref target="error"/>)</t>
  <t>When under load (see below)</t>
</list></t>

<t>a server MUST NOT close a DSO session with a client, except in extraordinary error 
conditions. Closing the DSO session is the
client’s responsibility, to be done at the client’s discretion, when it so 
chooses. A server only closes a DSO session under exceptional circumstances, such as
when the server application software or underlying operating system is
restarting, the server application terminated unexpectedly (perhaps due to a
bug that makes it crash), or the server is undergoing maintenance procedures.
When possible, a server SHOULD send a Retry Delay message informing the
client of the reason for the DSO session being closed, and allow the client
five seconds to receive it before the server resorts to forcibly aborting the 
connection.</t>

</section>
<section anchor="retry" title="Retry Delay Operation TLV">

<t>There may be rare cases where a server is overloaded and wishes to shed load.
If a server is low on resources it MAY simply terminate a client connection with 
a TCP RST (or equivalent for other protocols).
However, the likely behavior of the client may be simply to to treat this as a
network failure and connect
immediately, putting more burden on the server.</t>

<t>Therefore to avoid this reconnection implosion, a server SHOULD instead choose 
to shed client load by sending a Retry Delay request message, with an RCODE of 
SERVFAIL, to inform the client of the overload situation. After sending a Retry 
Delay request message, the server MUST NOT send any further messages on that 
DSO session.</t>

<t>After sending the Retry Delay request the server SHOULD allow the
client five seconds to close the connection, and if the client has not
closed the connection after five seconds then the server SHOULD abort
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>Upon receipt of a Retry Delay request from the server, the client MUST
make note of the reconnect delay for this server, and then immediately
close the connection. This is to place the burden of TCP’s TIME-WAIT state on 
the client.</t>

<t>A Retry Delay request message MUST NOT be initiated by a client.
If a server receives a Retry Delay request message this is an error
and the server MUST immediately terminate the connection with a TCP RST
(or equivalent for other protocols).</t>

<section anchor="outstanding-operations" title="Outstanding Operations">

<t>At the moment a server chooses to initiate a Retry Delay request message
there may be DNS requests already in flight from client to server on this 
DSO session, which will arrive at the server after its Retry Delay request message 
has been sent.
The server MUST silently ignore such incoming requests, and MUST NOT generate
any response messages for them. When the Retry Delay request message from the
server arrives at the client, the client will determine that any DNS requests
it previously sent on this DSO session, that have not yet received a response, now 
will certainly not be receiving any response. Such requests should be considered
failed, and should be retried at a later time, as appropriate.</t>

<t>In the case where some, but not all, of the existing operations on a DSO session 
have become invalid (perhaps because the server has been reconfigured and is no 
longer authoritative for some of the names),
but the server is terminating all DSO sessions en masse with a REFUSED (5) RCODE,
the RECONNECT DELAY MAY be zero, indicating that the clients SHOULD immediately
attempt to re-establish operations.
It is likely that some of the attempts will be successful and some will not.</t>

<t>In the case where a server is terminating a large number of DSO sessions at once
(e.g., if the system is restarting) and the server doesn’t want to be inundated 
with a flood of simultaneous retries, it SHOULD send different RECONNECT delay 
values to each client.
These adjustments MAY be selected randomly, pseudorandomly, or deterministically
(e.g., incrementing the time value by one tenth of a second for each successive
client, yielding a post-restart reconnection rate of ten clients per second).</t>

</section>
<section anchor="client-reconnection" title="Client Reconnection">

<t>After a DSO session is closed by the server, the client SHOULD try to reconnect,
to that server, or to another suitable server, if more than one is available.
If reconnecting to the same server, the client MUST respect the indicated delay
before attempting to reconnect.</t>

<t>If a particular server does not want a client to reconnect (it is being
de-commissioned), it SHOULD set the retry delay to the maximum value (which is
approximately 497 days). If the server will only be out of service for a maintenance
period, it should use a value closer to the expected maintenance window and
not default to a very large delay value or clients may not attempt to reconnect
after it resumes service.</t>

</section>
</section>
</section>
<section anchor="sharing" title="Connection Sharing">

<t>As previously specified for DNS over TCP <xref target="RFC7766"/>,
to mitigate the risk of unintentional server overload, DNS clients
MUST take care to minimize the number of concurrent TCP connections
made to any individual server.  It is RECOMMENDED that for any given
client/server interaction there SHOULD be no more than one connection
for regular queries, one for zone transfers, and one for each
protocol that is being used on top of TCP (for example, if the
resolver was using TLS).
However, it is noted that certain primary/secondary configurations
with many busy zones might need to use more than one TCP
connection for zone transfers for operational reasons
(for example, to support concurrent transfers of multiple zones).</t>

<t>A single server may support multiple services, including DNS Updates 
<xref target="RFC2136"/>, DNS Push Notifications <xref target="I-D.ietf-dnssd-push"/>,
and other services, for one or more DNS zones.
When a client discovers that the target server for several different operations
is the same target hostname and port, the client SHOULD use a single
shared DSO session for all those operations.
A client SHOULD NOT open multiple connections to the same target host and port
just because the names being operated on are different or
happen to fall within different zones.
This is to reduce unnecessary connection load on the DNS server.</t>

<t>However, server implementers and operators should be aware that connection
sharing may not be possible in all cases.
A single client device may be home to multiple independent client software
instances that don’t coordinate with each other.
Similarly, multiple independent client devices behind the same NAT gateway
will also typically appear to the DNS server as different source ports on
the same client IP address.
Because of these constraints, a DNS server MUST be prepared to accept
multiple connections from different source ports on the same client IP address.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="dso-opcode-registration" title="DSO OPCODE Registration">

<t>IANA are directed to assign a value (tentatively 6)
in the DNS OPCODEs Registry for the DSO OPCODE.</t>

</section>
<section anchor="dso-rcode-registration" title="DSO RCODE Registration">

<t>IANA are directed to assign a value (tentatively 11)
in the DNS RCODE Registry for the DSONOTIMP error code.</t>

</section>
<section anchor="dso-type-codes-registry" title="DSO Type Codes Registry">

<t>IANA are directed to create the 15-bit DSO Type Codes
Registry, with initial values as follows:</t>

<texttable>
      <ttcol align='right'>Type</ttcol>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Status</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>0x0000</c>
      <c>RetryDelay</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0001</c>
      <c>KeepAlive</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0002</c>
      <c>Encryption Padding</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0003 - 0x003F</c>
      <c>Unassigned, reserved for DSO session management TLVs</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x0040 - 0x77FF</c>
      <c>Unassigned</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x7800 - 0x7BFF</c>
      <c>Reserved for local / experimental use</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x7C00 - 0x7FFF</c>
      <c>Reserved for future expansion</c>
      <c>&#160;</c>
      <c>&#160;</c>
</texttable>

<t>Registration of additional DSO Type Codes requires publication
of an appropriate IETF “Standards Action” or “IESG Approval” document <xref target="RFC5226"/>.</t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>If this mechanism is to be used with DNS over TLS, then these messages
are subject to the same constraints as any other DNS over TLS messages
and MUST NOT be sent in the clear before the TLS session is established.</t>

<t>The data field of the “Encryption Padding” TLV could be used as a covert channel.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to
Tim Chown,
Ralph Droms,
Jan Komissar,
Manju Shankar Rao,
and Ted Lemon
for their helpful contributions to this document.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC1035;
&RFC7766;
&RFC6891;
&RFC7828;
&RFC2119;
&RFC7830;
&RFC1034;
&RFC2136;
&RFC2132;
&RFC1918;
&RFC5226;


    </references>

    <references title='Informative References'>

<reference anchor="NagleDA" target="http://www.stuartcheshire.org/papers/nagledelayedack/">
  <front>
    <title>TCP Performance problems caused by interaction between Nagle's Algorithm and Delayed ACK</title>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization></organization>
    </author>
    <date year="2005" month="May" day="20"/>
  </front>
</reference>
&RFC7858;
&RFC6763;
&I-D.ietf-dnssd-push;
&RFC0768;
&I-D.ietf-dprive-padding-policy;


    </references>



  </back>

<!-- ##markdown-source:
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

-->

</rfc>

