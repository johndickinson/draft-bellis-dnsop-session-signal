<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.9 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC7766 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7766.xml">
<!ENTITY RFC6891 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6891.xml">
<!ENTITY RFC7828 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7828.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC8174 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY RFC1034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC2136 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2136.xml">
<!ENTITY RFC7830 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7830.xml">
<!ENTITY RFC1918 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1918.xml">
<!ENTITY RFC5382 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5382.xml">
<!ENTITY RFC2132 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2132.xml">
<!ENTITY RFC8126 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8126.xml">
<!ENTITY RFC7858 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7858.xml">
<!ENTITY RFC2782 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2782.xml">
<!ENTITY I-D.ietf-dnssd-push SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dnssd-push.xml">
<!ENTITY I-D.ietf-dnssd-mdns-relay SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dnssd-mdns-relay.xml">
<!ENTITY RFC6763 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6763.xml">
<!ENTITY RFC0768 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.0768.xml">
<!ENTITY RFC6335 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6335.xml">
<!ENTITY RFC7413 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7413.xml">
<!ENTITY I-D.ietf-tls-tls13 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-tls-tls13.xml">
<!ENTITY RFC6762 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6762.xml">
<!ENTITY RFC1122 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1122.xml">
<!ENTITY I-D.ietf-dprive-padding-policy SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dprive-padding-policy.xml">
]>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-dnsop-session-signal-11" category="std" updates="1035, 7766">

  <front>
    <title>DNS Stateful Operations</title>

    <author initials="R." surname="Bellis" fullname="Ray Bellis">
      <organization abbrev="ISC">Internet Systems Consortium, Inc.</organization>
      <address>
        <postal>
          <street>950 Charter Street</street>
          <city>Redwood City</city>
          <code>CA 94063</code>
          <country>USA</country>
        </postal>
        <phone>+1 (650) 423-1200</phone>
        <email>ray@isc.org</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino</city>
          <code>CA 95014</code>
          <country>USA</country>
        </postal>
        <phone>+1 (408) 996-1010</phone>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="J." surname="Dickinson" fullname="John Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>jad@sinodun.com</email>
      </address>
    </author>
    <author initials="S." surname="Dickinson" fullname="Sara Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>sara@sinodun.com</email>
      </address>
    </author>
    <author initials="T." surname="Lemon" fullname="Ted Lemon">
      <organization>Barefoot Consulting</organization>
      <address>
        <postal>
          <street>Brattleboro</street>
          <code>VT 05301</code>
          <country>USA</country>
        </postal>
        <email>mellon@fugue.com</email>
      </address>
    </author>
    <author initials="T." surname="Pusateri" fullname="Tom Pusateri">
      <organization>Unaffiliated</organization>
      <address>
        <postal>
          <street></street>
          <city>Raleigh</city>
          <code>NC 27608</code>
          <country>USA</country>
        </postal>
        <phone>+1 (919) 867-1330</phone>
        <email>pusateri@bangj.com</email>
      </address>
    </author>

    <date year="2018" month="July" day="02"/>

    <area>Internet</area>
    <workgroup>DNSOP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document defines a new DNS OPCODE for DNS Stateful Operations (DSO).
DSO messages communicate operations within persistent
stateful sessions, using type-length-value (TLV) syntax.
Three TLVs are defined that manage session timeouts,
termination, and encryption padding, and 
a framework is defined for extensions to enable new stateful operations.
This document updates RFC 1035 by adding a new DNS header opcode and result code which has different message semantics.  This document updates RFC 7766 by redefining a session, providing new guidance on connection re-use, and providing a new mechanism for handling session idle timeouts.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The use of transports for DNS other than UDP is being increasingly specified,
for example, DNS over TCP <xref target="RFC1035"/> <xref target="RFC7766"/> and DNS over TLS <xref target="RFC7858"/>.
Such transports can offer persistent, long-lived sessions and therefore when
using them for transporting DNS messages it is of benefit to have a mechanism
that can establish parameters associated with those sessions, such as timeouts.
In such situations it is also advantageous to support server-initiated messages.</t>

<t>The existing EDNS(0) Extension Mechanism for DNS <xref target="RFC6891"/> is explicitly
defined to only have “per-message” semantics. While EDNS(0) has been used to
signal at least one session-related parameter (the EDNS(0) TCP Keepalive option
<xref target="RFC7828"/>) the result is less than optimal due to the restrictions
imposed by the EDNS(0) semantics and the lack of server-initiated signalling. 
For example, a server cannot arbitrarily 
instruct a client to close a connection because the server can only send EDNS(0) options 
in responses to queries that contained EDNS(0) options.</t>

<t>This document defines a new DNS OPCODE, DSO ([TBA1], tentatively 6), for DNS Stateful Operations.
DSO messages are used to communicate operations within persistent
stateful sessions, expressed using type-length-value (TLV) syntax.
This document defines an initial set of three TLVs,
used to manage session timeouts, termination, and encryption padding.</t>

<t>The three TLVs defined here are all mandatory for all implementations of DSO.
Further TLVs may be defined in additional specifications.</t>

<t>The format for DSO messages
(<xref target="format"/>) differs somewhat from the traditional DNS message
format used for standard queries and responses.
The standard twelve-byte header is used, but the four count fields
(QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) are set to zero and accordingly their
corresponding sections are not present.
The actual data pertaining to DNS Stateful Operations
(expressed in TLV syntax) is appended to the end of the DNS message header.
When displayed using packet analyzer tools that have not been
updated to recognize the DSO format, this
will result in the DSO data being displayed
as unknown additional data after the end of the DNS message.
It is likely that future updates to these tools will add the ability
to recognize, decode, and display the DSO data.</t>

<t>This new format has distinct advantages over an RR-based format because it
is more explicit and more compact. Each TLV definition is specific
to its use case, and as a result contains no redundant or overloaded fields.
Importantly, it completely avoids conflating DNS Stateful Operations in any way 
with normal DNS operations or with existing EDNS(0)-based functionality.
A goal of this approach is to avoid the operational issues that have
befallen EDNS(0), particularly relating to middlebox behaviour.</t>

<t>With EDNS(0), multiple options may be packed into a single OPT pseudo-RR,
and there is no generalized mechanism for a client to be able to tell
whether a server has processed or otherwise acted upon each individual
option within the combined OPT pseudo-RR.
The specifications for each individual option need to define how each
different option is to be acknowledged, if necessary.</t>

<t>In contrast to EDNS(0), with DSO there is no
compelling motivation to pack multiple operations into a single
message for efficiency reasons, because DSO
always operates using a connection-oriented transport protocol.
Each DSO operation is communicated in its own separate
DNS message, and the transport protocol can take care of packing
several DNS messages into a single IP packet if appropriate.
For example, TCP can pack multiple small DNS messages into a single TCP segment.
This simplification allows for clearer semantics.
Each DSO request message communicates just one primary operation,
and the RCODE in the corresponding response message indicates the
success or failure of that operation.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="requirements-language" title="Requirements Language">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”,
and “OPTIONAL” in this document are to be interpreted as
described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

</section>
<section anchor="terminology" title="Terminology">

<t>“DSO” is used to mean DNS Stateful Operation.</t>

<t>The term “connection” means a bidirectional byte (or message) stream,
where the bytes (or messages) are delivered reliably and in-order,
such as provided by using
DNS over TCP <xref target="RFC1035"/> <xref target="RFC7766"/> or DNS over TLS <xref target="RFC7858"/>.</t>

<t>The unqualified term “session” in the context of this document means the exchange of
DNS messages over a connection where:</t>

<t><list style="symbols">
  <t>The connection between client and server is persistent and relatively
long-lived (i.e., minutes or hours, rather than seconds).</t>
  <t>Either end of the connection may initiate messages to the other.</t>
</list></t>

<t>In this document the term “session” is used exclusively as described above.
The term has no relationship to the “session layer” of the
OSI “seven-layer model”.</t>

<t>A “DSO Session” is established between two endpoints that acknowledge
persistent DNS state via the exchange of DSO messages over the connection.
This is distinct from a DNS-over-TCP session as described in
the previous specification for DNS over TCP <xref target="RFC7766"/>.</t>

<t>A “DSO Session” is terminated when the underlying connection is closed.
The underlying connection can be closed in two ways:</t>

<t>Where this specification says, “close gracefully,”
that means sending a TLS close_notify (if TLS is in use) followed by a TCP FIN,
or the equivalents for other protocols.
Where this specification requires a connection to be closed gracefully,
the requirement to initiate that graceful close is placed on the client,
to place the burden of TCP’s TIME-WAIT state on the client rather than the server.</t>

<t>Where this specification says, “forcibly abort,”
that means sending a TCP RST,
or the equivalent for other protocols.
In the BSD Sockets API this is achieved by setting the
SO_LINGER option to zero before closing the socket.</t>

<t>The term “server” means the software with a listening socket, awaiting
incoming connection requests.</t>

<t>The term “client” means the software which initiates a connection
to the server’s listening socket.</t>

<t>The terms “initiator” and “responder” correspond respectively to the
initial sender and subsequent receiver of a DSO request message or unacknowledged message,
regardless of which was the “client” and “server” in the usual DNS sense.</t>

<t>The term “sender” may apply to
either an initiator (when sending a DSO request message or unacknowledged message)
or a responder (when sending a DSO response message).</t>

<t>Likewise, the term “receiver” may apply to
either a responder (when receiving a DSO request message or unacknowledged message)
or an initiator (when receiving a DSO response message).</t>

<t>In protocol implementation there are generally two kinds of errors
that software writers have to deal with.
The first is situations that arise due to factors in the environment,
such as temporary loss of connectivity. While undesirable, these
situations do not indicate a flaw in the software, and they are
situations that software should generally be able to recover from.
The second is situations that should never happen when communicating
with a correctly-implemented peer.
If they do happen, they indicate a serious flaw in the protocol implementation,
beyond what it is reasonable to expect software to recover from.
This document describes this latter form of error condition as a
“fatal error” and specifies that an implementation encountering
a fatal error condition “MUST forcibly abort the connection immediately”.
Given that these fatal error conditions signify defective software,
and given that defective software is likely to remain defective for
some time until it is fixed, after forcibly aborting a connection,
a client SHOULD refrain from automatically reconnecting to that
same service instance for at least one hour.</t>

<t>This document uses the term “same service instance” as follows:</t>

<t><list style="symbols">
  <t>In cases where a server is specified or configured using
an IP address and TCP port number,
two different configurations are referring to the same service instance if they
contain the same IP address and TCP port number.</t>
  <t>In cases where a server is specified or configured using
a hostname and TCP port number,
such as in the content of a DNS SRV record <xref target="RFC2782"/>,
two different configurations (or DNS SRV records) are considered
to be referring to the same service instance if they
contain the same hostname (subject to the usual case insensitive
DNS name matching rules <xref target="RFC1034"/> <xref target="RFC1035"/>) and TCP port number.
In these cases, configurations with different hostnames are considered
to be referring to different service instances, even if those different hostnames
happen to be aliases, or happen to resolve to the same IP address(es).
Implementations SHOULD NOT resolve hostnames and then
perform matching of IP address(es) in order to evaluate whether
two entities should be determined to be the “same service instance”.</t>
</list></t>

<t>When an anycast service is configured on a particular IP address and port, it
must be the case that although there is more than one physical server
responding on that IP address, each such server can be treated as equivalent.
If a change in network topology causes packets in a particular TCP connection
to be sent to an anycast server instance that does not know about the
connection, the normal keepalive and TCP connection timeout process will allow
for recovery. If after the connection is re-established, the client’s assumption that it is
connected to the same service is violated in some way, that would be considered
to be incorrect behavior in this context. It is however out of the possible
scope for this specification to make specific recommendations in this regard;
that would be up to follow-on documents that describe specific uses of DNS
stateful operations.</t>

<t>The term “long-lived operations” refers to operations
such as Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/>,
Discovery Relay interface subscriptions <xref target="I-D.ietf-dnssd-mdns-relay"/>,
and other future long-lived DNS operations that choose to use
DSO as their basis. These operations establish state that persists beyond
the lifetime of a traditional brief request/response transaction.
This document, the base specification for DNS Stateful Operations,
defines a framework for supporting long-lived operations,
but does not itself define any long-lived operations.
Nonetheless, to appreciate the design rationale behind
DNS Stateful Operations, it is helpful to understand
the kind of long-lived operations that it is intended to support.</t>

<t>DNS Stateful Operations uses three kinds of message:
“DSO request messages”, “DSO response messages”, and
“DSO unacknowledged messages”.
A DSO request message elicits a DSO response message.
DSO unacknowledged messages are unidirectional messages and do not generate any response.</t>

<t>Both DSO request messages and DSO unacknowledged messages are formatted as DNS
request messages (the header QR bit is set to zero, as described in <xref target="format"/>).
One difference is that in DSO request messages the MESSAGE ID field is nonzero;
in DSO unacknowledged messages it is zero.</t>

<t>The content of DSO messages is expressed using type-length-value (TLV) syntax.</t>

<t>In a DSO request message or DSO unacknowledged message
the first TLV is referred to as the “Primary TLV”
and determines the nature of the operation being performed,
including whether it is an acknowledged or unacknowledged operation;
any other TLVs in a DSO request message or unacknowledged message are referred to as “Additional TLVs”
and serve additional non-primary purposes, which may be related to
the primary purpose, or not, as in the case of the encryption padding TLV.</t>

<t>A DSO response message may contain no TLVs, or it may contain one
or more TLVs as appropriate to the information being communicated.
In the context of DSO response messages,
one or more TLVs with the same DSO-TYPE as the Primary TLV in the
corresponding DSO request message are referred to as “Response Primary TLVs”.
Any other TLVs with different DSO-TYPEs are referred to as “Response Additional TLVs”.
The Response Primary TLV(s), if present, MUST occur first in the response message,
before any Response Additional TLVs.</t>

<t>Two timers (elapsed time since an event) are defined in this document:</t>

<t><list style="symbols">
  <t>an inactivity timer (see <xref target="inactivetimer"/> and <xref target="keepalive"/>)</t>
  <t>a keepalive timer (see <xref target="keepalivetimer"/> and <xref target="keepalive"/>)</t>
</list></t>

<t>The timeouts associated with these timers are called
the inactivity timeout and 
the keepalive interval, respectively. 
The term “Session Timeouts” is used to refer to this pair of timeout values.</t>

<t>Resetting a timer means resetting the timer value to zero and starting the timer again.
Clearing a timer means resetting the timer value to zero but NOT starting the timer again.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="discussion" title="Discussion">

<t>There are several use cases for DNS Stateful operations that can 
be described here.</t>

<t>Firstly, establishing session parameters such as server-defined timeouts is of 
great use in the 
general management of persistent connections. For example, using DSO sessions 
for stub-to-recursive DNS-over-TLS <xref target="RFC7858"/> is more flexible for both the 
client and the server than attempting to manage sessions using just the EDNS(0)
TCP Keepalive option <xref target="RFC7828"/>.
The simple set of TLVs defined in this document is
sufficient to greatly enhance connection management for this use case.</t>

<t>Secondly, DNS-SD <xref target="RFC6763"/> has evolved into a naturally session-based mechanism where,
for example, long-lived subscriptions lend themselves to ‘push’ mechanisms as 
opposed to polling. Long-lived stateful connections and server-initiated 
messages align with this use case <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>A general use case is that DNS traffic is often bursty but session establishment 
can be expensive. One challenge with long-lived connections is to maintain 
sufficient traffic to maintain NAT and firewall state.
To mitigate this issue this document introduces a
new concept for the DNS, that is DSO “Keepalive traffic”.
This traffic carries no DNS data and is not considered ‘activity’
in the classic DNS sense, but serves to maintain state in middleboxes,
and to assure client and server that they still have connectivity to each other.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="details" title="Protocol Details">

<section anchor="establishment" title="DSO Session Establishment">

<t>DSO messages MUST be carried in only protocols and in
environments where a session may be established according to the definition
given above in the Terminology section (<xref target="terminology"/>).</t>

<t>DNS over plain UDP <xref target="RFC0768"/> is not appropriate since it fails on the requirement for
in-order message delivery, and, in the presence of NAT gateways and firewalls
with short UDP timeouts, it fails to provide a persistent bi-directional
communication channel unless an excessive amount of keepalive traffic is used.</t>

<t>At the time of publication, DSO is specified only
for DNS over TCP <xref target="RFC1035"/> <xref target="RFC7766"/>, and
for DNS over TLS over TCP <xref target="RFC7858"/>.
Any use of DSO over some other connection technology needs to be
specified in an appropriate future document.</t>

<t>Determining whether a given connection is using DNS over TCP, or DNS
over TLS over TCP, is outside the scope of this specification, and
must be determined using some out-of-band configuration information.
There is no provision within the DSO specification to
turn TLS on or off during the lifetime of a connection.
For service types where the service instance is discovered
using a DNS SRV record <xref target="RFC2782"/>,
the specification for that service type SRV name <xref target="RFC6335"/>
will state whether the connection uses plain TCP, or TLS over TCP.
For example, the specification for the
“_dns‑push‑tls._tcp” service <xref target="I-D.ietf-dnssd-push"/>,
states that it uses TLS.
It is a common convention that protocols specified to run over TLS
are given IANA service type names ending in “‑tls”.</t>

<t>In some environments it may be known in advance by external means
that both client and server support DSO, and in these cases either
client or server may initiate DSO messages at any time.</t>

<t>However, in the typical case a server will not know in advance whether a
client supports DSO, so in general, unless it is known in advance by other means
that a client does support DSO, a server MUST NOT initiate DSO request messages
or DSO unacknowledged messages
until a DSO Session has been mutually established
by at least one successful DSO request/response exchange
initiated by the client, as described below.
Similarly, unless it is known in advance by other means that a server
does support DSO, a client MUST NOT initiate
DSO unacknowledged messages until after a DSO Session has been mutually established.</t>

<t>A DSO Session is established over a connection by the client
sending a DSO request message, such as a DSO Keepalive request message (<xref target="keepalive"/>),
and receiving a response, with matching MESSAGE ID, and RCODE
set to NOERROR (0), indicating that the DSO request was successful.</t>

<t>If the RCODE in the response is set to DSOTYPENI
(“DSO-TYPE Not Implemented”, [TBA2] tentatively RCODE 11)
this indicates that the server does support DSO, but does not implement
the DSO-TYPE of the primary TLV in this DSO request message.
A server implementing DSO MUST NOT return DSOTYPENI
for a DSO Keepalive request message, because the Keepalive TLV is mandatory to implement.
But in the future, if a client attempts to establish a DSO Session
using a response-requiring DSO request message using some newly-defined DSO-TYPE that the server
does not understand, that would result in a DSOTYPENI response.
If the server returns DSOTYPENI then a DSO Session is not
considered established, but the client is permitted to continue
sending DNS messages on the connection,
including other DSO messages such as the DSO Keepalive,
which may result in a successful NOERROR response,
yielding the establishment of a DSO Session.</t>

<t>If the RCODE is set to any value other than NOERROR (0) or DSOTYPENI
([TBA2] tentatively 11), then the client MUST assume that the server does
not implement DSO at all. In this case the client is permitted to continue
sending DNS messages on that connection, but the client SHOULD NOT
issue further DSO messages on that connection.</t>

<t>When the server receives a DSO request message
from a client, and transmits a successful NOERROR response to that
request, the server considers the DSO Session established.</t>

<t>When the client receives the server’s NOERROR response to its
DSO request message, the client considers the DSO Session established.</t>

<t>Once a DSO Session has been established,
either end may unilaterally send appropriate DSO messages at any time,
and therefore either client or server may be the initiator of a message.</t>

<t>Once a DSO Session has been established,
clients and servers should behave as described in this specification with
regard to inactivity timeouts and session termination, not as previously
prescribed in the earlier specification for DNS over TCP <xref target="RFC7766"/>.</t>

<t>Note that for clients that implement only the DSO-TYPEs defined in
this base specification, sending a DSO Keepalive TLV is the only
DSO request message they have available to initiate a DSO Session.
Even for clients that do implement other future DSO-TYPEs, for simplicity
they MAY elect to always send an initial DSO Keepalive
request message as their way of initiating a DSO Session.
A future definition of a new response-requiring DSO-TYPE
gives implementers the option of using that new DSO-TYPE if they wish,
but does not change the fact that sending a DSO Keepalive TLV
remains a valid way of initiating a DSO Session.</t>

<section anchor="sharing" title="Connection Sharing">

<t>As previously specified for DNS over TCP <xref target="RFC7766"/>:</t>

<figure><artwork><![CDATA[
   To mitigate the risk of unintentional server overload, DNS
   clients MUST take care to minimize the number of concurrent
   TCP connections made to any individual server.  It is RECOMMENDED
   that for any given client/server interaction there SHOULD be
   no more than one connection for regular queries, one for zone
   transfers, and one for each protocol that is being used on top
   of TCP (for example, if the resolver was using TLS). However,
   it is noted that certain primary/secondary configurations
   with many busy zones might need to use more than one TCP
   connection for zone transfers for operational reasons (for
   example, to support concurrent transfers of multiple zones).
]]></artwork></figure>

<t>A single server may support multiple services, including DNS Updates 
<xref target="RFC2136"/>, DNS Push Notifications <xref target="I-D.ietf-dnssd-push"/>,
and other services, for one or more DNS zones.
When a client discovers that the target server for several different operations
is the same target hostname and port, the client SHOULD use a single
shared DSO Session for all those operations.
A client SHOULD NOT open multiple connections to the same target host and port
just because the names being operated on are different or
happen to fall within different zones.
This requirement is to reduce unnecessary connection load on the DNS server.</t>

<t>However, server implementers and operators should be aware that connection
sharing may not be possible in all cases.
A single host device may be home to multiple independent client software
instances that don’t coordinate with each other.
Similarly, multiple independent client devices behind the same NAT gateway
will also typically appear to the DNS server as different source ports on
the same client IP address.
Because of these constraints, a DNS server MUST be prepared to accept
multiple connections from different source ports on the same client IP address.</t>

</section>
<section anchor="zero-round-trip-operation" title="Zero Round-Trip Operation">

<t>There is increased awareness today of the performance benefits
of eliminating round trips in session establishment.
Technologies like TCP Fast Open <xref target="RFC7413"/>
and TLS 1.3 <xref target="I-D.ietf-tls-tls13"/>
provide mechanisms to reduce or eliminate
round trips in session establishment.</t>

<t>Similarly, DSO supports zero round-trip operation.</t>

<t>Having initiated a connection to a server, possibly using
zero round-trip TCP Fast Open and/or
zero round-trip TLS 1.3, a client MAY send multiple
response-requiring DSO request messages to the server in succession
without having to wait for a response to the first request message
to confirm successful establishment of a DSO session.</t>

<t>However, a client MUST NOT send non-response-requiring DSO request
messages until after a DSO Session has been mutually established.</t>

<t>Similarly, a server MUST NOT send DSO request messages until it
has received a response-requiring DSO request message from a
client and transmitted a successful NOERROR response for that request.</t>

<t>Caution must be taken to ensure that DSO messages sent before the first
round-trip is completed are idempotent, or are otherwise immune to any problems
that could be result from the inadvertent replay that can occur with zero round-trip operation.</t>

</section>
<section anchor="middlebox-considerations" title="Middlebox Considerations">

<t>Where an application-layer middlebox (e.g., a DNS proxy, forwarder, or
session multiplexer) is in the path, the middlebox MUST NOT blindly
forward DSO messages in either direction, and MUST treat the inbound
and outbound connections as separate sessions.  This does not preclude
the use of DSO messages in the presence of an IP-layer middlebox, such
as a NAT that rewrites IP-layer and/or transport-layer headers but
otherwise preserves the effect of a single session between the client
and the server.</t>

<t>To illustrate the above, consider a network where a middlebox
terminates one or more TCP connections from clients and multiplexes the
queries therein over a single TCP connection to an upstream server.
The DSO messages and any associated state are specific to the individual
TCP connections.  A DSO-aware middlebox MAY in some circumstances be
able to retain associated state and pass it between the client and
server (or vice versa) but this would be highly TLV-specific.  For
example, the middlebox may be able to maintain a list of which clients
have made Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/> and
make its own subscription(s) on their behalf, relaying any subsequent
notifications to the client (or clients) that have subscribed to that
particular notification.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="format" title="Message Format">

<t>A DSO message begins with
the standard twelve-byte DNS message header <xref target="RFC1035"/>
with the OPCODE field set to the DSO OPCODE ([TBA1] tentatively 6).
However, unlike standard DNS messages, the question section, answer section,
authority records section and additional records sections are not present.
The corresponding count fields (QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) MUST be
set to zero on transmission.</t>

<t>If a DSO message is received where any of the count fields are
not zero, then a FORMERR MUST be returned,
unless a future IETF Standard specifies otherwise.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                          MESSAGE ID                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |QR |    OPCODE     |            Z              |     RCODE     |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     QDCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ANCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     NSCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ARCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                           DSO Data                            /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><vspace blankLines='999' /></t>

<section anchor="header" title="DNS Header Fields in DSO Messages">

<t>In an unacknowledged message the MESSAGE ID field MUST be set to zero.
In an acknowledged request message the MESSAGE ID field MUST
be set to a unique nonzero value, that the initiator is not
currently using for any other active operation on this connection.
For the purposes here, a MESSAGE ID is in use in this DSO Session if the
initiator has used it in a request for which it is still awaiting a response,
or if the client has used it to set up a long-lived operation that has not yet been cancelled.
For example, a long-lived operation could be
a Push Notification subscription <xref target="I-D.ietf-dnssd-push"/> or
a Discovery Relay interface subscription <xref target="I-D.ietf-dnssd-mdns-relay"/>.</t>

<t>Whether a message is acknowledged or unacknowledged is
determined only by the specification for the Primary TLV.
An acknowledgment cannot be requested by including a nonzero message ID
in a message the primary TLV of which is specified to be unacknowledged,
nor can an acknowledgment be prevented by sending a message ID of zero
in a message with a primary TLV that is specified to be acknowledged.
A responder that receives either such malformed message MUST treat it
as a fatal error and forcibly abort the connection immediately.</t>

<t>In a request or unacknowledged message the DNS Header QR bit MUST be zero (QR=0).
If the QR bit is not zero the message is not a request or unacknowledged message.</t>

<t>In a response message the DNS Header QR bit MUST be one (QR=1).<vspace />
If the QR bit is not one the message is not a response message.</t>

<t>In a response message (QR=1) the MESSAGE ID field MUST contain a copy of the value of
the MESSAGE ID field in the request message being responded to.
In a response message (QR=1) the MESSAGE ID field MUST NOT be zero.
If a response message (QR=1) is received where the MESSAGE ID is zero
this is a fatal error and the recipient MUST forcibly abort the connection immediately.</t>

<t>The DNS Header OPCODE field holds the DSO OPCODE value ([TBA1] tentatively 6).</t>

<t>The Z bits are currently unused in DSO messages,
and in both DSO requests and DSO responses the
Z bits MUST be set to zero (0) on transmission and MUST be silently ignored
on reception, unless a future IETF Standard specifies otherwise.</t>

<t><vspace blankLines='999' /></t>

<t>In a DNS request message (QR=0) the RCODE is set according to the definition of the request.
For example, in a Retry Delay message (<xref target="retry"/>) the RCODE indicates the reason for termination.
However, in most cases, except where clearly specified otherwise,
in a DNS request message (QR=0) the RCODE is set to zero on transmission,
and silently ignored on reception.</t>

<t>The RCODE value in a response message (QR=1) may be one of the following values:</t>

<texttable>
      <ttcol align='right'>Code</ttcol>
      <ttcol align='left'>Mnemonic</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>0</c>
      <c>NOERROR</c>
      <c>Operation processed successfully</c>
      <c>1</c>
      <c>FORMERR</c>
      <c>Format error</c>
      <c>2</c>
      <c>SERVFAIL</c>
      <c>Server failed to process request due to a problem with the server</c>
      <c>3</c>
      <c>NXDOMAIN</c>
      <c>Name Error — Named entity does not exist (TLV-dependent)</c>
      <c>4</c>
      <c>NOTIMP</c>
      <c>DSO not supported</c>
      <c>5</c>
      <c>REFUSED</c>
      <c>Operation declined for policy reasons</c>
      <c>9</c>
      <c>NOTAUTH</c>
      <c>Not Authoritative (TLV-dependent)</c>
      <c>[TBA2] 11</c>
      <c>DSOTYPENI</c>
      <c>Primary TLV’s DSO-Type is not implemented</c>
</texttable>

<t>Use of the above RCODEs is likely to be common in DSO but 
does not preclude the definition and use of other codes in future documents that 
make use of DSO.</t>

<t>If a document defining a new DSO-TYPE makes use of NXDOMAIN (Name Error)
or NOTAUTH (Not Authoritative) then that document MUST specify the specific
interpretation of these RCODE values in the context of that new DSO TLV.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="dsodata" title="DSO Data">

<t>The standard twelve-byte DNS message header with its
zero-valued count fields is followed by the DSO Data,
expressed using TLV syntax, as described below <xref target="tlvsyntax"/>.</t>

<t>A DSO message may be a request message, a response message, or an unacknowledged message.</t>

<t>A DSO request message or DSO unacknowledged message MUST contain at least one TLV.
The first TLV in a DSO request message or DSO unacknowledged message is referred to as the “Primary TLV”
and determines the nature of the operation being performed,
including whether it is an acknowledged or unacknowledged operation.
In some cases it may be appropriate to include other TLVs in a request message or unacknowledged message,
such as the Encryption Padding TLV (<xref target="padding"/>),
and these extra TLVs are referred to as the “Additional TLVs” and are not limited to what is defined in this document. New “Additional TLVs” may be defined in the future and those definitions will describe when their use is appropriate.</t>

<t>A DSO response message may contain no TLVs,
or it may be specified to contain one or more TLVs
appropriate to the information being communicated. This includes “Primary TLVs” and “Additional TLVs” defined in this document as well as in future TLV definitions.</t>

<t>A DSO response message may contain one or more TLVs with
DSO-TYPE the same as the Primary TLV from the corresponding DSO request message,
in which case those TLV(s) are referred to as “Response Primary TLVs”.
A DSO response message is not required to carry Response Primary TLVs.
The MESSAGE ID field in the DNS message header is sufficient to identify
the DSO request message to which this response message relates.</t>

<t>A DSO response message may contain one or more TLVs with
DSO-TYPEs different from the Primary TLV from the corresponding DSO request message,
in which case those TLV(s) are referred to as “Response Additional TLVs”.</t>

<t>Response Primary TLV(s), if present, MUST occur first in the response message,
before any Response Additional TLVs.</t>

<t>It is anticipated that most DSO operations will be specified
to use request messages, which generate corresponding responses.
In some specialized high-traffic use cases,
it may be appropriate to specify unacknowledged messages.
Unacknowledged messages can be more efficient on the network,
because they don’t generate a stream of corresponding reply messages.
Using unacknowledged messages can also simplify software
in some cases, by removing need for an initiator to maintain
state while it waits to receive replies it doesn’t care about.
When the specification for a particular TLV states that,
when used as a Primary TLV (i.e., first) in an outgoing DNS request message (i.e., QR=0),
that message is to be unacknowledged,
the MESSAGE ID field MUST be set to zero and
the receiver MUST NOT generate any response message
corresponding to this unacknowledged message.</t>

<t>The previous point, that the receiver MUST NOT generate responses to
unacknowledged messages, applies even in the case of errors.
When a DSO message is received where both the QR bit and the MESSAGE ID field
are zero, the receiver MUST NOT generate any response.
For example, if the DSO-TYPE in the Primary TLV is unrecognized,
then a DSOTYPENI error MUST NOT be returned; instead the receiver
MUST forcibly abort the connection immediately.</t>

<t>Unacknowledged messages MUST NOT be used “speculatively”
in cases where the sender doesn’t know if the receiver supports
the Primary TLV in the message, because there is no way to receive
any response to indicate success or failure of the request message
(the request message does not contain a unique MESSAGE ID with
which to associate a response with its corresponding request).
Unacknowledged messages are only appropriate in cases
where the sender already knows that the receiver supports,
and wishes to receive, these messages.</t>

<t>For example, after a client has subscribed for Push Notifications
<xref target="I-D.ietf-dnssd-push"/>, the subsequent event notifications are
then sent as unacknowledged messages, and this is appropriate
because the client initiated the message stream by virtue of its
Push Notification subscription, thereby indicating its support of
Push Notifications, and its desire to receive those notifications.</t>

<t>Similarly, after an Discovery Relay client has subscribed to receive
inbound mDNS (multicast DNS, <xref target="RFC6762"/>) traffic from an Discovery
Relay, the subsequent stream of received
packets is then sent using unacknowledged messages, and this
is appropriate because the client initiated the message stream
by virtue of its Discovery Relay link subscription, thereby indicating
its support of Discovery Relay, and its desire to receive inbound mDNS
packets over that DSO session <xref target="I-D.ietf-dnssd-mdns-relay"/>.</t>

<t><vspace blankLines='999' /></t>

<section anchor="tlvsyntax" title="TLV Syntax">

<t>All TLVs, whether used as “Primary”, “Additional”, “Response Primary”,
or “Response Additional”, use the same encoding syntax.</t>

<t>The specification for a TLV states whether that DSO-TYPE may be used in
“Primary”, “Additional”, “Response Primary”, or “Response Additional” TLVs.
The specification for a TLV also states whether,
when used as the Primary (i.e., first) TLV in a DNS request message (i.e., QR=0),
that DSO message is to be acknowledged.
If the DSO message is to be acknowledged, the specification
also states which TLVs, if any, are to be included in the response.
The Primary TLV may or may not be contained in the response,
depending on what is stated in the specification for that TLV.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                           DSO-TYPE                            |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                          DSO-LENGTH                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                           DSO-DATA                            /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='DSO-TYPE:'>
  A 16-bit unsigned integer, in network (big endian) byte order,
giving the DSO-TYPE of the current DSO TLV per the IANA DSO Type Code Registry.</t>
  <t hangText='DSO-LENGTH:'>
  A 16-bit unsigned integer, in network (big endian) byte order,
giving the size in bytes of the DSO-DATA.</t>
  <t hangText='DSO-DATA:'>
  Type-code specific format. The generic DSO machinery treats the
DSO-DATA as an opaque “blob” without attempting to interpret it.
Interpretation of the meaning of the DSO-DATA for a particular
DSO-TYPE is the responsibility of the software that implements that DSO-TYPE.</t>
</list></t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="request-tlvs" title="Request TLVs">

<t>The first TLV in a DSO request message or unacknowledged message is the “Primary TLV”
and indicates the operation to be performed.
A DSO request message or unacknowledged message MUST contain at at least one TLV, the Primary TLV.</t>

<t>Immediately following the Primary TLV, a DSO request message or unacknowledged message
MAY contain one or more “Additional TLVs”, which specify
additional parameters relating to the operation.</t>

</section>
<section anchor="response-tlvs" title="Response TLVs">

<t>Depending on the operation, a DSO response message MAY contain no TLVs,
because it is simply a response to a previous request message, and the
MESSAGE ID in the header is sufficient to identify the request in question.
Or it may contain a single response TLV, with the same DSO-TYPE as the
Primary TLV in the request message.
Alternatively it may contain one or more TLVs of other
types, or a combination of the above, as appropriate
for the information that needs to be communicated.
The specification for each DSO TLV determines
what TLVs are required in a response to a request using that TLV.</t>

<t>If a DSO response is received for an operation where the specification
requires that the response carry a particular TLV or TLVs,
and the required TLV(s) are not present, then this is a fatal
error and the recipient of the defective response message MUST
forcibly abort the connection immediately.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="unrecognized-tlvs" title="Unrecognized TLVs">

<t>If DSO request message is received containing an unrecognized Primary TLV,
with a nonzero MESSAGE ID (indicating that a response is expected),
then the receiver MUST send an error response with matching MESSAGE ID,
and RCODE DSOTYPENI ([TBA2] tentatively 11).
The error response MUST NOT contain a copy of the unrecognized Primary TLV.</t>

<t>If DSO unacknowledged message is received containing an unrecognized Primary TLV,
with a zero MESSAGE ID (indicating that no response is expected),
then this is a fatal error and the recipient
MUST forcibly abort the connection immediately.</t>

<t>If a DSO request message or unacknowledged message is received where the Primary TLV is recognized,
containing one or more unrecognized Additional TLVs, the unrecognized
Additional TLVs MUST be silently ignored, and the remainder of the message
is interpreted and handled as if the unrecognized parts were not present.</t>

<t>Similarly, if a DSO response message is received containing one
or more unrecognized TLVs, the unrecognized TLVs MUST be silently
ignored, and the remainder of the message is interpreted and
handled as if the unrecognized parts were not present.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="edns0-and-tsig" title="EDNS(0) and TSIG">

<t>Since the ARCOUNT field MUST be zero, a DSO message
MUST NOT contain an EDNS(0) option in the additional records section.
If functionality provided by current or future EDNS(0) options
is desired for DSO messages, one or more new DSO TLVs
need to be defined to carry the necessary information.</t>

<t>For example, the EDNS(0) Padding Option <xref target="RFC7830"/> used for security purposes
is not permitted in a DSO message,
so if message padding is desired for DSO messages
then the Encryption Padding TLV described in <xref target="padding"/> MUST be used.</t>

<t>Similarly, a DSO message MUST NOT contain a TSIG record.
A TSIG record in a conventional DNS message is added as the last record in
the additional records section, and carries a signature computed over the
preceding message content. Since DSO data appears <spanx style="strong">after</spanx> the additional
records section, it would not be included in the signature calculation. 
If use of signatures with DSO messages becomes necessary in the 
future, a new DSO TLV needs to be defined to perform this function.</t>

<t>Note however that, while DSO <spanx style="strong">messages</spanx> cannot include
EDNS(0) or TSIG records, a DSO <spanx style="strong">session</spanx> is typically used to 
carry a whole series of DNS messages of different kinds, including DSO
messages, and other DNS message types like Query <xref target="RFC1034"/> <xref target="RFC1035"/>
and Update <xref target="RFC2136"/>, and those messages can carry EDNS(0) and TSIG records.</t>

<t>Although messages may contain other EDNS(0) options as appropriate,
this specification explicitly prohibits use of the
EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>
in <spanx style="strong">any</spanx> messages sent on a DSO Session (because it is obsoleted by
the functionality provided by the DSO Keepalive operation).
If any message sent on a DSO Session contains an EDNS(0) TCP Keepalive Option
this is a fatal error and the recipient of the defective message MUST
forcibly abort the connection immediately.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="message-handling" title="Message Handling">

<t>The initiator MUST set the value of the QR bit in the DNS header to zero (0),
and the responder MUST set it to one (1).</t>

<t>As described above in <xref target="header"/> whether an outgoing message with QR=0
is unacknowledged or acknowledged is determined by the specification
for the Primary TLV, which in turn determines whether the MESSAGE ID field
in that outgoing message will be zero or nonzero.</t>

<t>A DSO unacknowledged message has both the QR bit and the MESSAGE ID field set to zero,
and MUST NOT elicit a response.</t>

<t>Every DSO request message (QR=0) with a nonzero MESSAGE ID field
is an acknowledged DSO request, and MUST elicit a corresponding response (QR=1),
which MUST have the same MESSAGE ID in the DNS message header as in the corresponding request.</t>

<t>Valid DSO request messages sent by the client with a nonzero MESSAGE ID field
elicit a response from the server, and
Valid DSO request messages sent by the server with a nonzero MESSAGE ID field
elicit a response from the client.</t>

<t>The namespaces of 16-bit MESSAGE IDs are independent in each direction.
This means it is <spanx style="strong">not</spanx> an error for both client and server to send request
messages at the same time as each other, using the same MESSAGE ID, in different directions.
This simplification is necessary in order for the protocol to be implementable.
It would be infeasible to require the client and server
to coordinate with each other regarding allocation of new unique MESSAGE IDs.
It is also not necessary to require the client and server
to coordinate with each other regarding allocation of new unique MESSAGE IDs.
The value of the 16-bit MESSAGE ID combined with the
identity of the initiator (client or server) is sufficient
to unambiguously identify the operation in question.
This can be thought of as a 17-bit message identifier space, using
message identifiers 0x00001-0x0FFFF for client-to-server DSO request messages, and
message identifiers 0x10001-0x1FFFF for server-to-client DSO request messages.
The least-significant 16 bits are stored explicitly in the
MESSAGE ID field of the DSO message, and the most-significant
bit is implicit from the direction of the message.</t>

<t>As described above in <xref target="header"/>, an initiator MUST NOT reuse a
MESSAGE ID that it already has in use for an outstanding request
(unless specified otherwise by the relevant specification for the DSO-TYPE in question).
At the very least, this means that a MESSAGE ID MUST NOT
be reused in a particular direction on a particular DSO
Session while the initiator is waiting for a response to a
previous request using that MESSAGE ID on that DSO Session
(unless specified otherwise by the relevant specification for the DSO-TYPE in question),
and for a long-lived operation the MESSAGE ID for the operation
MUST NOT be reused while that operation remains active.</t>

<t>If a client or server receives a response (QR=1) where the MESSAGE ID is zero, or is
any other value that does not match the MESSAGE ID of any of its outstanding operations,
this is a fatal error and the recipient MUST forcibly abort the connection immediately.</t>

<section anchor="error-responses" title="Error Responses">

<t>When a DSO unacknowledged message is unsuccessful for some reason,
the responder immediately aborts the connection.</t>

<t>When a DSO request message is unsuccessful for some reason,
the responder returns an error code to the initiator.</t>

<t>In the case of a server returning an error code to a client
in response to an unsuccessful DSO request message, the server MAY choose
to end the DSO Session, or MAY choose to allow the DSO Session to remain open.
For error conditions that only affect the single operation in question, the server SHOULD
return an error response to the client and leave the DSO Session open for further operations.</t>

<t>For error conditions that are likely to make all operations unsuccessful in the
immediate future, the server SHOULD return an error response to the client and then
end the DSO Session by sending a Retry Delay message, as described in <xref target="retry"/>.</t>

<t>Upon receiving an error response from the server, a client SHOULD NOT
automatically close the DSO Session. An error relating to one particular operation
on a DSO Session does not necessarily imply that all other operations on that
DSO Session have also failed, or that future operations will fail. The client
should assume that the server will make its own decision about whether or not to
end the DSO Session, based on the server’s determination of whether the error
condition pertains to this particular operation, or would also apply to any
subsequent operations. If the server does not end the DSO Session by
sending the client a Retry Delay message (<xref target="retry"/>) then the client
SHOULD continue to use that DSO Session for subsequent operations.</t>

</section>
</section>
<section anchor="dso-response-generation" title="DSO Response Generation">

<t>With most TCP implementations, for DSO requests that generate a response,
the TCP data acknowledgement (generated because data has been received by TCP),
the TCP window update (generated because TCP has delivered that data to the receiving software),
and the DSO response (generated by the receiving application-layer software itself)
are all combined into a single IP packet.
Combining these three elements into a single IP packet
can give a significant improvement in network efficiency.</t>

<t>For DSO requests that do not generate a response,
the TCP implementation generally doesn’t have any way to know
that no response will be forthcoming, so it waits fruitlessly
for the application-layer software to generate a response,
until the Delayed ACK timer fires <xref target="RFC1122"/> (typically 200 milliseconds)
and only then does it send the TCP ACK and window update.
In conjunction with Nagle’s Algorithm at the sender,
this can delay the sender’s transmission of its next
(non-full-sized) TCP segment, while the sender is waiting for
its previous (non-full-sized) TCP segment to be acknowledged,
which won’t happen until the Delayed ACK timer fires.
Nagle’s Algorithm exists to combine multiple small
application writes into more-efficient large TCP segments,
to guard against wasteful use of the network by applications
that would otherwise transmit a stream of small TCP segments,
but in this case Nagle’s Algorithm (created to improve network efficiency)
can interact badly with TCP’s Delayed ACK feature
(also created to improve network efficiency) <xref target="NagleDA"/>
with the result of delaying some messages by up to 200 milliseconds.</t>

<t>Possible mitigations for this problem include:</t>

<t><list style="symbols">
  <t>Disable Nagle’s Algorithm at the sender. This is not great,<vspace />
because it results in less efficient use of the network.</t>
  <t>Disable Delayed ACK at the receiver. This is not great,<vspace />
because it results in less efficient use of the network.</t>
  <t>Adding padding data to fill the segment. This is not great,
because it uses additional bandwidth.</t>
  <t>Use a networking API that lets the receiver signal to the TCP
implementation that the receiver has received and processed a client
request for which it will not be generating any immediate response.
This allows the TCP implementation to operate efficiently in both cases;
for requests that generate a response, the TCP ACK, window update, and
DSO response are transmitted together in a single TCP segment,
and for requests that do not generate a response,
the application-layer software informs the TCP implementation
that it should go ahead and send the TCP ACK and window update
immediately, without waiting for the Delayed ACK timer.
Unfortunately it is not known at this time which (if any) of the
widely-available networking APIs currently include this capability.</t>
</list></t>

</section>
<section anchor="cancellation" title="Responder-Initiated Operation Cancellation">

<t>This document, the base specification for DNS Stateful Operations,
does not itself define any long-lived operations,
but it defines a framework for supporting long-lived operations,
such as Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/> and
Discovery Relay interface subscriptions <xref target="I-D.ietf-dnssd-mdns-relay"/>.</t>

<t>Generally speaking, a long-lived operation is initiated by the initiator,
and, if successful, remains active until the initiator terminates the operation.</t>

<t>However, it is possible that a long-lived operation may be valid
at the time it was initiated, but then a later change of circumstances
may render that previously valid operation invalid.</t>

<t>For example, a long-lived client operation may pertain to a name
that the server is authoritative for, but then the server configuration
is changed such that it is no longer authoritative for that name.</t>

<t>In such cases, instead of terminating the entire session
it may be desirable for the responder to be able to cancel
selectively only those operations that have become invalid.</t>

<t>The responder performs this selective cancellation by sending
a new response message, with the MESSAGE ID field containing the
MESSAGE ID of the long-lived operation that is to be terminated
(that it had previously acknowledged with a NOERROR RCODE), and the
RCODE field of the new response message giving the reason for cancellation.</t>

<t>After a response message with nonzero RCODE has been sent,
that operation has been terminated from the responder’s point of view,
and the responder sends no more messages relating to that operation.</t>

<t>After a response message with nonzero RCODE has been received by the initiator,
that operation has been terminated from the initiator’s point of view,
and the cancelled operation’s MESSAGE ID is now free for reuse.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="lifecycle" title="DSO Session Lifecycle and Timers">

<section anchor="dso-session-initiation" title="DSO Session Initiation">

<t>A DSO Session begins as described in <xref target="establishment"/>.</t>

<t>The client may perform as many DNS operations as it wishes using the
newly created DSO Session. Operations SHOULD be pipelined (i.e., the
client doesn’t need wait for a response before sending the next message).
The server MUST act on messages in the order they are transmitted, but
responses to those messages SHOULD be sent out of order when appropriate.</t>

</section>
<section anchor="sessiontimeouts" title="DSO Session Timeouts">

<t>Two timeout values are associated with a DSO Session:
the inactivity timeout, and the keepalive interval. 
Both values are communicated in the same TLV, the DSO Keepalive TLV (<xref target="keepalive"/>).</t>

<t>The first timeout value, the inactivity timeout, is the maximum time for which
a client may speculatively keep a DSO Session open in the expectation that
it may have future requests to send to that server.</t>

<t>The second timeout value, the keepalive interval, is the maximum permitted
interval between messages if the client wishes to keep the DSO Session alive.</t>

<t>The two timeout values are independent. The inactivity timeout may be lower,
the same, or higher than the keepalive interval, though in most cases the
inactivity timeout is expected to be shorter than the keepalive interval.</t>

<t>A shorter inactivity timeout with a longer keepalive interval signals
to the client that it should not speculatively keep an inactive DSO
Session open for very long without reason, but when it does have an
active reason to keep a DSO Session open, it doesn’t need to be sending
an aggressive level of keepalive traffic to maintain that session.</t>

<t>A longer inactivity timeout with a shorter keepalive interval
signals to the client that it may speculatively keep an inactive
DSO Session open for a long time, but to maintain that inactive
DSO Session it should be sending a lot of keepalive traffic.
This configuration is expected to be less common.</t>

<t>In the usual case where the inactivity timeout is shorter than the keepalive
interval, it is only when a client has a very long-lived, low-traffic, operation
that the keepalive interval comes into play, to ensure that a sufficient
residual amount of traffic is generated to maintain NAT and firewall state
and to assure client and server that they still have connectivity to each other.</t>

<t>On a new DSO Session, if no explicit DSO Keepalive message exchange has taken 
place, the default value for both timeouts is 15 seconds.</t>

<t>For both timeouts, lower values of the timeout result in higher network traffic
and higher CPU load on the server.</t>

</section>
<section anchor="inactive-dso-sessions" title="Inactive DSO Sessions">

<t>At both servers and clients, the generation or reception of any complete
DNS message, including DNS requests, responses, updates, or DSO
messages, resets both timers for that DSO Session, with the exception
that a DSO Keepalive message resets only the keepalive timer,
not the inactivity timeout timer.</t>

<t>In addition, for as long as the client has an outstanding operation in progress,
the inactivity timer remains cleared, and an inactivity timeout cannot occur.</t>

<t>For short-lived DNS operations like traditional queries and updates,
an operation is considered in progress for the time between request and 
response, typically a period of a few hundred milliseconds at most.
At the client, the inactivity timer is cleared upon transmission of a 
request and remains cleared until reception of the corresponding response.
At the server, the inactivity timer is cleared upon reception of a request
and remains cleared until transmission of the corresponding response.</t>

<t>For long-lived DNS Stateful operations (such as
a Push Notification subscription <xref target="I-D.ietf-dnssd-push"/> or
a Discovery Relay interface subscription <xref target="I-D.ietf-dnssd-mdns-relay"/>),
an operation is considered in progress
for as long as the operation is active, until it is cancelled.
This means that a DSO Session can exist, with active operations,
with no messages flowing in either direction, for far longer than the 
inactivity timeout, and this is not an error.
This is why there are two separate timers:
the inactivity timeout, and the keepalive interval.
Just because a DSO Session has no traffic for an extended period of time
does not automatically make that DSO Session “inactive”,
if it has an active operation that is awaiting events.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="inactivetimer" title="The Inactivity Timeout">

<t>The purpose of the inactivity timeout is for the server to balance its trade off 
between the costs of setting up new DSO Sessions and the costs of maintaining inactive 
DSO Sessions. A server with abundant DSO Session capacity can offer a high inactivity timeout, 
to permit clients to keep a speculative DSO Session open for a long time, to save 
the cost of establishing a new DSO Session for future communications with that 
server. A server with scarce memory resources can offer a low inactivity timeout,
to cause clients to promptly close DSO Sessions whenever they have no outstanding
operations with that server, and then create a new DSO Session later when needed.</t>

<section anchor="closing-inactive-dso-sessions" title="Closing Inactive DSO Sessions">

<t>When a connection’s inactivity timeout is reached the client MUST
begin closing the idle connection, but a client is not required to
keep an idle connection open until the inactivity timeout is reached.
A client MAY close a DSO Session at any time, at the client’s discretion.
If a client determines that it has no current or reasonably
anticipated future need for a currently inactive DSO Session,
then the client SHOULD gracefully close that connection.</t>

<t>If, at any time during the life of the DSO Session,
the inactivity timeout value (i.e., 15 seconds by default) elapses
without there being any operation active on the DSO Session,
the client MUST close the connection gracefully.</t>

<t>If, at any time during the life of the DSO Session,
twice the inactivity timeout value (i.e., 30 seconds by default),
or five seconds, if twice the inactivity timeout value is less than five seconds,
elapses without there being any operation active on the DSO Session,
the server SHOULD consider the client delinquent,
and SHOULD forcibly abort the DSO Session.</t>

<t>In this context, an operation being active on a DSO Session includes
a query waiting for a response, an update waiting for a response,
or an active long-lived operation, but not a DSO Keepalive message exchange itself.
A DSO Keepalive message exchange resets only the keepalive
interval timer, not the inactivity timeout timer.</t>

<t>If the client wishes to keep an inactive DSO Session open for longer
than the default duration then it uses the DSO Keepalive message
to request longer timeout values, as described in <xref target="keepalive"/>.</t>

</section>
<section anchor="values-for-the-inactivity-timeout" title="Values for the Inactivity Timeout">

<t>For the inactivity timeout value, lower values result in
more frequent DSO Session teardown and re-establishment.
Higher values result in lower traffic and lower CPU load on the server,
but higher memory burden to maintain state for inactive DSO Sessions.</t>

<t>A server may dictate any value it chooses for the inactivity timeout
(either in a response to a client-initiated request, or in a server-initiated message)
including values under one second, or even zero.</t>

<t>An inactivity timeout of zero informs the client that it
should not speculatively maintain idle connections at all, and
as soon as the client has completed the operation or operations relating
to this server, the client should immediately begin closing this session.</t>

<t>A server will abort an idle client session after twice the
inactivity timeout value, or five seconds, whichever is greater.
In the case of a zero inactivity timeout value, this means that
if a client fails to close an idle client session then the server
will forcibly abort the idle session after five seconds.</t>

<t>An inactivity timeout of 0xFFFFFFFF represents “infinity” and
informs the client that it may keep an idle connection open as long as it wishes.
Note that after granting an unlimited inactivity timeout in this way,
at any point the server may revise that inactivity timeout by sending
a new Keepalive message dictating new Session Timeout values to the client.</t>

<t>The largest <spanx style="strong">finite</spanx> inactivity timeout
supported by the current DSO Keepalive TLV is
0xFFFFFFFE (2^32-2 milliseconds, approximately 49.7 days).</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="keepalivetimer" title="The Keepalive Interval">

<t>The purpose of the keepalive interval is to manage the generation of
sufficient messages to maintain state in middleboxes (such at NAT gateways
or firewalls) and for the client and server to periodically verify that they
still have connectivity to each other. This allows them to clean up state
when connectivity is lost, and to establish a new session if appropriate.</t>

<section anchor="keepalive-interval-expiry" title="Keepalive Interval Expiry">

<t>If, at any time during the life of the DSO Session,
the keepalive interval value (i.e., 15 seconds by default) elapses
without any DNS messages being sent or received on a DSO Session,
the client MUST take action to keep the DSO Session alive,
by sending a DSO Keepalive message (<xref target="keepalive"/>).
A DSO Keepalive message exchange resets only the keepalive timer, 
not the inactivity timer.</t>

<t>If a client disconnects from the network abruptly,
without cleanly closing its DSO Session,
perhaps leaving a long-lived operation uncancelled,
the server learns of this after failing to
receive the required keepalive traffic from that client.
If, at any time during the life of the DSO Session,
twice the keepalive interval value (i.e., 30 seconds by default) elapses
without any DNS messages being sent or received on a DSO Session,
the server SHOULD consider the client delinquent,
and SHOULD forcibly abort the DSO Session.</t>

</section>
<section anchor="values-for-the-keepalive-interval" title="Values for the Keepalive Interval">

<t>For the keepalive interval value, lower values result in a higher volume of keepalive 
traffic. Higher values of the keepalive interval reduce traffic and CPU load, 
but have minimal effect on the memory burden
at the server, because clients keep a DSO Session open for the same length of time
(determined by the inactivity timeout) regardless of the level of keepalive traffic 
required.</t>

<t>It may be appropriate for clients and servers to select different keepalive 
interval values depending on the nature of the network they are on.</t>

<t>A corporate DNS server that knows it is serving only clients on the internal 
network, with no intervening NAT gateways or firewalls, can impose a higher 
keepalive interval, because frequent keepalive traffic is not required.</t>

<t>A public DNS server that is serving primarily residential consumer clients, 
where it is likely there will be a NAT gateway on the path, may impose a lower 
keepalive interval, to generate more frequent keepalive traffic.</t>

<t>A smart client may be adaptive to its environment. A client using
a private IPv4 address <xref target="RFC1918"/> to communicate with a DNS server
at an address outside that IPv4 private address block,
may conclude that there is likely to be a NAT gateway on the path,
and accordingly request a lower keepalive interval.</t>

<t>By default it is RECOMMENDED that clients request,
and servers grant, a keepalive interval of 60 minutes.
This keepalive interval provides for reasonably timely detection if
a client abruptly disconnects without cleanly closing the session,
and is sufficient to maintain state in firewalls and NAT gateways
that follow the IETF recommended Best Current Practice that the
“established connection idle-timeout” used by middleboxes
be at least 2 hours 4 minutes <xref target="RFC5382"/>.</t>

<t>Note that the lower the keepalive interval value, the higher the load on client
and server. For example, a hypothetical keepalive interval value of 100ms would result
in a continuous stream of at least ten messages per second, in both directions,
to keep the DSO Session alive. And, in this extreme example, a single packet loss and
retransmission over a long path could introduce a momentary pause in the stream of messages,
long enough to cause the server to overzealously abort the connection.</t>

<t>Because of this concern, the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with a keepalive interval value less than ten seconds.
If a client receives a Keepalive message specifying a keepalive interval value
less than ten seconds this is a fatal error and the client MUST
forcibly abort the connection immediately.</t>

<t>A keepalive interval value of 0xFFFFFFFF represents “infinity” and
informs the client that it should generate no keepalive traffic.
Note that after signaling that the client should generate no keepalive traffic in this way,
at any point the server may revise that keepalive traffic requirement by sending
a new Keepalive message dictating new Session Timeout values to the client.</t>

<t>The largest <spanx style="strong">finite</spanx> keepalive interval
supported by the current DSO Keepalive TLV is
0xFFFFFFFE (2^32-2 milliseconds, approximately 49.7 days).</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="server-initiated-session-termination" title="Server-Initiated Session Termination">

<t>In addition to cancelling individual long-lived operations selectively (<xref target="cancellation"/>)
there are also occasions where a server may need to terminate one or more entire sessions.
An entire session may need to be terminated if the client is defective in some way,
or departs from the network without closing its session.
Sessions may also need to be terminated if the server becomes overloaded,
or if the server is reconfigured and lacks the ability to be selective about
which operations need to be cancelled.</t>

<t>This section discusses various reasons a session may be terminated,
and the mechanisms for doing so.</t>

<t>Normally a server MUST NOT close a DSO Session with a client.
A server only causes a DSO Session to be ended in the exceptional circumstances outlined below.
In normal operation, closing a DSO Session is the client’s responsibility.
The client makes the determination of when to close a DSO
Session based on an evaluation of both its own needs,
and the inactivity timeout value dictated by the server.</t>

<t>Some of the exceptional situations in which a server may terminate a DSO Session include:</t>

<t><list style="symbols">
  <t>The server application software or underlying operating system
is shutting down or restarting.</t>
  <t>The server application software terminates unexpectedly
(perhaps due to a bug that makes it crash).</t>
  <t>The server is undergoing a reconfiguration or maintenance
procedure, that, due to the way the server software is
implemented, requires clients to be disconnected.
For example, some software is implemented such that it reads
a configuration file at startup, and changing the server’s
configuration entails modifying the configuration file
and then killing and restarting the server software,
which generally entails a loss of network connections.</t>
  <t>The client fails to meets its obligation to generate the required
keepalive traffic, or to close an inactive session by the prescribed time
(twice the time interval dictated by the server, or five seconds,
whichever is greater, as described in <xref target="sessiontimeouts"/>).</t>
  <t>The client sends a grossly invalid or malformed request that
is indicative of a seriously defective client implementation.</t>
  <t>The server is over capacity and needs to shed some load.</t>
</list></t>

<section anchor="retry" title="Server-Initiated Retry Delay Message">

<t>In the cases described above where a server elects to terminate a
DSO Session, it could do so simply by forcibly aborting the connection.
However, if it did this the likely behavior of the client might be simply to to treat
this as a network failure and reconnect immediately, putting more burden on the server.</t>

<t>Therefore, to avoid this reconnection implosion, a server SHOULD instead choose
to shed client load by sending a Retry Delay message, with an appropriate RCODE
value informing the client of the reason the DSO Session needs to be terminated.
The format of the Retry Delay TLV, and the interpretations of the various RCODE values,
are described in <xref target="delay"/>.
After sending a Retry Delay message,
the server MUST NOT send any further messages on that DSO Session.</t>

<t>Upon receipt of a Retry Delay message from the server,
the client MUST make note of the reconnect delay for this server,
and then immediately close the connection gracefully.</t>

<t>After sending a Retry Delay message the server SHOULD allow the
client five seconds to close the connection, and if the client has not
closed the connection after five seconds then the server SHOULD
forcibly abort the connection.</t>

<t>A Retry Delay message MUST NOT be initiated by a client.
If a server receives a Retry Delay message this is a fatal error
and the server MUST forcibly abort the connection immediately.</t>

<t><vspace blankLines='999' /></t>

<section anchor="outstanding-operations" title="Outstanding Operations">

<t>At the instant a server chooses to initiate a Retry Delay message
there may be DNS requests already in flight from client to server on this 
DSO Session, which will arrive at the server after its Retry Delay message 
has been sent.
The server MUST silently ignore such incoming requests, and MUST NOT generate
any response messages for them. When the Retry Delay message from the
server arrives at the client, the client will determine that any DNS requests
it previously sent on this DSO Session, that have not yet received a response, now 
will certainly not be receiving any response. Such requests should be considered
failed, and should be retried at a later time, as appropriate.</t>

<t>In the case where some, but not all, of the existing operations on a DSO Session 
have become invalid (perhaps because the server has been reconfigured and is no 
longer authoritative for some of the names),
but the server is terminating all affected DSO Sessions en masse
by sending them all a Retry Delay message,
the RECONNECT DELAY MAY be zero, indicating that the clients SHOULD immediately
attempt to re-establish operations.</t>

<t>It is likely that some of the attempts will be successful and some will not,
depending on the nature of the reconfiguration.</t>

<t>In the case where a server is terminating a large number of DSO Sessions at once
(e.g., if the system is restarting) and the server doesn’t want to be inundated 
with a flood of simultaneous retries, it SHOULD send different RECONNECT delay 
values to each client.
These adjustments MAY be selected randomly, pseudorandomly, or deterministically
(e.g., incrementing the time value by one tenth of a second for each successive
client, yielding a post-restart reconnection rate of ten clients per second).</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="client-reconnection" title="Client Reconnection">

<t>After a DSO Session is ended by the server
(either by sending the client a Retry Delay message,
or by forcibly aborting the underlying transport connection)
the client SHOULD try to reconnect,
to that service instance, or to another suitable service instance, if more than one is available.
If reconnecting to the same service instance, the client MUST respect the indicated delay,
if available, before attempting to reconnect.</t>

<t>If the service instance will only be out of service for a short maintenance period,
it should use a value a little longer that the expected maintenance window.
It should not default to a very large delay value, or clients may
not attempt to reconnect after it resumes service.</t>

<t>If a particular service instance does not want a client to reconnect ever
(perhaps the service instance is being de-commissioned),
it SHOULD set the retry delay to the maximum value
0xFFFFFFFF (2^32-1 milliseconds, approximately 49.7 days).
It is not possible to instruct a client to stay away for longer than 49.7 days.
If, after 49.7 days, the DNS or other configuration information
still indicates that this is the valid service instance for a
particular service, then clients MAY attempt to reconnect.
In reality, if a client is rebooted or otherwise lose state, it
may well attempt to reconnect before 49.7 days elapses, for as
long as the DNS or other configuration information continues to
indicate that this is the service instance the client should use.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
</section>
</section>
<section anchor="base-tlvs-for-dns-stateful-operations" title="Base TLVs for DNS Stateful Operations">

<t>This section describes the three base TLVs for DNS Stateful Operations:
Keepalive, Retry Delay, and Encryption Padding.</t>

<section anchor="keepalive" title="Keepalive TLV">

<t>The Keepalive TLV (DSO-TYPE=1) performs two functions:
to reset the keepalive timer for the DSO Session,
and to establish the values for the Session Timeouts.</t>

<t>The DSO-DATA for the the Keepalive TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 INACTIVITY TIMEOUT (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 KEEPALIVE INTERVAL (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='INACTIVITY TIMEOUT:'>
  The inactivity timeout for the current DSO Session, specified as
a 32-bit unsigned integer, in network (big endian) byte order, in units of milliseconds.
This is the timeout at which the client MUST begin closing an inactive DSO Session.
The inactivity timeout can be any value of the server’s choosing.
If the client does not gracefully close an inactive DSO
Session, then after twice this interval, or five seconds,
whichever is greater, the server will forcibly abort the connection.</t>
  <t hangText='KEEPALIVE INTERVAL:'>
  The keepalive interval for the current DSO Session, specified as
a 32-bit unsigned integer, in network (big endian) byte order, in units of milliseconds.
This is the interval at which a client MUST generate keepalive
traffic to maintain connection state.
The keepalive interval MUST NOT be less than ten seconds.
If the client does not generate the mandated keepalive traffic,
then after twice this interval the server will forcibly abort the connection.
Since the minimum allowed keepalive interval is ten seconds, the
minimum time at which a server will forcibly disconnect a client for
failing to generate the mandated keepalive traffic is twenty seconds.</t>
</list></t>

<t>The transmission or reception of DSO Keepalive messages
(i.e., messages where the Keepalive TLV is the first TLV)
reset only the keepalive timer, not the inactivity timer.
The reason for this is that periodic Keepalive messages are sent for the sole
purpose of keeping a DSO Session alive, when that DSO Session has current
or recent non-maintenance activity that warrants keeping that DSO Session alive.
Sending keepalive traffic itself is not considered a client activity;
it is considered a maintenance activity that is performed
in service of other client activities.
If keepalive traffic itself were to reset the inactivity timer,
then that would create a circular livelock where keepalive traffic
would be sent indefinitely to keep a DSO Session alive, where the only
activity on that DSO Session would be the keepalive traffic keeping
the DSO Session alive so that further keepalive traffic can be sent.
For a DSO Session to be considered active, it must be carrying
something more than just keepalive traffic.
This is why merely sending or receiving a Keepalive message
does not reset the inactivity timer.</t>

<t>When sent by a client, the Keepalive request message MUST
be sent as an acknowledged request, with a nonzero MESSAGE ID.
If a server receives a Keepalive DSO message with a zero MESSAGE ID then
this is a fatal error and the server MUST forcibly abort the connection immediately.
The Keepalive request message resets a DSO Session’s keepalive timer,
and at the same time communicates to the server the the client’s
requested Session Timeout values.
In a server response to a client-initiated Keepalive request message,
the Session Timeouts contain the server’s chosen values from
this point forward in the DSO Session, which the client MUST respect.
This is modeled after the DHCP protocol, where the client requests a certain
lease lifetime using DHCP option 51 <xref target="RFC2132"/>, but the server is the
ultimate authority for deciding what lease lifetime is actually granted.</t>

<t>When a client is sending its second and subsequent Keepalive DSO requests to
the server, the client SHOULD continue to request its preferred values each time.
This allows flexibility, so that if conditions change during the lifetime of a
DSO Session, the server can adapt its responses to better fit the client’s needs.</t>

<t>Once a DSO Session is in progress (<xref target="establishment"/>)
a Keepalive message MAY be initiated by a server.
When sent by a server, the Keepalive message MUST be
sent as an unacknowledged message, with the MESSAGE ID set to zero.
The client MUST NOT generate a response to a server-initiated DSO Keepalive message.
If a client receives a Keepalive request message with a nonzero MESSAGE ID then
this is a fatal error and the client MUST forcibly abort the connection immediately.
The Keepalive unacknowledged message from the server resets a DSO Session’s keepalive timer,
and at the same time unilaterally informs the client of the new
Session Timeout values to use from this point forward in this DSO Session.
No client DSO response message to this unilateral declaration is required or allowed.</t>

<t>The Keepalive TLV is not used as an Additional TLV.</t>

<t>In Keepalive response messages, the Keepalive TLV is REQUIRED and is used only 
as a Response Primary TLV sent as a reply to a Keepalive request message from 
the client.
A Keepalive TLV MUST NOT be added as to other responses a Response Additional TLV.
If the server wishes to update a client’s Session Timeout values
other than in response to a Keepalive request message from the client,
then it does so by sending an unacknowledged Keepalive message
of its own, as described above.</t>

<t>It is not required that the Keepalive TLV be used in every DSO Session.
While many DNS Stateful operations
will be used in conjunction with a long-lived session state,
not all DNS Stateful operations require long-lived session state,
and in some cases the default 15-second value for both the inactivity timeout
and keepalive interval may be perfectly appropriate.
However, note that for clients that implement only the DSO-TYPEs defined in this document,
a Keepalive request message is the only way for a client to initiate a DSO Session.</t>

<section anchor="client-handling-of-received-session-timeout-values" title="Client handling of received Session Timeout values">

<t>When a client receives a response to its client-initiated DSO Keepalive message,
or receives a server-initiated DSO Keepalive message, the client has then 
received Session Timeout values dictated by the server. The two timeout values 
contained in the DSO Keepalive TLV from the server may each be higher, lower, or 
the same as the respective Session Timeout values the client previously had for 
this DSO Session.</t>

<t>In the case of the keepalive timer, the handling of the received value is 
straightforward. The act of receiving the message containing the DSO Keepalive 
TLV itself resets the keepalive timer and updates the keepalive interval for the 
DSO Session. The new keepalive interval indicates the 
maximum time that may elapse before another message must be sent
or received on this DSO Session, if the DSO Session is to remain alive.</t>

<t><vspace blankLines='999' /></t>

<t>In the case of the inactivity timeout, the handling of the received
value is a little more subtle, though the meaning of the inactivity
timeout remains as specified — it still indicates the maximum
permissible time allowed without useful activity on a DSO Session.
The act of receiving the message containing the DSO Keepalive TLV does not
itself reset the inactivity timer. The time elapsed since the last useful
activity on this DSO Session is unaffected by exchange of DSO Keepalive messages.
The new inactivity timeout value in the DSO Keepalive TLV in the received message
does update the timeout associated with the running inactivity timer;
that becomes the new maximum permissible time without activity on a DSO Session.</t>

<t><list style="symbols">
  <t>If the current inactivity timer value is less than the
new inactivity timeout, then the DSO Session may remain open for now.
When the inactivity timer value reaches the new inactivity timeout,
the client MUST then begin closing the DSO Session, as described above.</t>
  <t>If the current inactivity timer value is equal to the
new inactivity timeout, then this DSO Session has been
inactive for exactly as long as the server will permit,
and now the client MUST immediately begin closing this DSO Session.</t>
  <t>If the current inactivity timer value is already greater
than the new inactivity timeout, then this DSO Session has
already been inactive for longer than the server permits,
and the client MUST immediately begin closing this DSO Session.</t>
  <t>If the current inactivity timer value is already more than twice the
new inactivity timeout, then the client is immediately considered delinquent
(this DSO Session is immediately eligible to be forcibly terminated by the server)
and the client MUST immediately begin closing this DSO Session.
However if a server abruptly reduces the inactivity timeout in this
way, then, to give the client time to close the connection gracefully
before the server resorts to forcibly aborting it, the server
SHOULD give the client an additional grace period of one quarter
of the new inactivity timeout, or five seconds, whichever is greater.</t>
</list></t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="relation-to-edns0-tcp-keepalive-option" title="Relation to EDNS(0) TCP Keepalive Option">

<t>The inactivity timeout value in the Keepalive TLV (DSO-TYPE=1) has similar
intent to the EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>.
A client/server pair that supports DSO MUST NOT use the
EDNS(0) TCP KeepAlive option within any message after a DSO 
Session has been established.
Once a DSO Session has been established, if either
client or server receives a DNS message over the DSO Session that contains an
EDNS(0) TCP Keepalive option, this is a fatal error and the receiver of the
EDNS(0) TCP Keepalive option MUST forcibly abort the connection immediately.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="delay" title="Retry Delay TLV">

<t>The Retry Delay TLV (DSO-TYPE=2) can be used as
a Primary TLV (unacknowledged) in a server-to-client message,
or as a Response Additional TLV in either direction.</t>

<t>The DSO-DATA for the the Retry Delay TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     RETRY DELAY (32 bits)                     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='RETRY DELAY:'>
  A time value, specified as
a 32-bit unsigned integer, in network (big endian) byte order, in units of milliseconds,
within which the initiator MUST NOT retry this operation, or retry connecting to this server.
Recommendations for the RETRY DELAY value are given in <xref target="retry"/>.</t>
</list></t>

<section anchor="retry-delay-tlv-used-as-a-primary-tlv" title="Retry Delay TLV used as a Primary TLV">

<t>When sent from server to client, the
Retry Delay TLV is used as the Primary TLV in an unacknowledged message.
It is used by a server
to instruct a client to close the DSO Session and underlying connection,
and not to reconnect for the indicated time interval.</t>

<t>In this case it applies to the DSO Session as a whole, and the client MUST begin closing the 
DSO Session, as described in <xref target="retry"/>. The RCODE in the message header 
SHOULD indicate the principal reason for the termination:</t>

<t><list style="symbols">
  <t>NOERROR indicates a routine shutdown or restart.</t>
  <t>FORMERR indicates that the client requests are too badly malformed for the session to continue.</t>
  <t>SERVFAIL indicates that the server is overloaded due to resource exhaustion and needs to shed load.</t>
  <t>REFUSED indicates that the server has been reconfigured,
and at this time it is now unable to perform one or more
of the long-lived client operations that were previously being performed on this DSO Session.</t>
  <t>NOTAUTH indicates that the server has been reconfigured
and at this time it is now unable to perform one or more
of the long-lived client operations that were previously being performed on this DSO Session
because it does not have authority over the names in question
(for example, a DNS Push Notification server could be reconfigured
such that is is no longer accepting DNS Push Notification
requests for one or more of the currently subscribed names).</t>
</list></t>

<t>This document specifies only these RCODE values for Retry Delay message.
Servers sending Retry Delay messages SHOULD use one of these values.
However, future circumstances may create situations where other RCODE values
are appropriate in Retry Delay messages, so clients MUST be prepared
to accept Retry Delay messages with any RCODE value.</t>

<t>In some cases, when a server sends a Retry Delay message to a client,
there may be more than one reason for the server wanting to end the session.
Possibly the configuration could have been changed such that some
long-lived client operations can no longer be continued due to policy (REFUSED), and other
long-lived client operations can no longer be performed due to
the server no longer being authoritative for those names (NOTAUTH).
In such cases the server MAY use any of the applicable RCODE values,
or RCODE=NOERROR (routine shutdown or restart).</t>

<t>Note that the selection of RCODE value in a Retry Delay message
is not critical, since the RCODE value is generally used only for
information purposes, such as writing to a log file for future
human analysis regarding the nature of the disconnection.
Generally clients do not modify their behavior depending on the RCODE value.
The RETRY DELAY in the message tells the client how long it should
wait before attempting a new connection to this service instance.</t>

<t>For clients that do in some way modify their behavior depending on the RCODE value,
they should treat unknown RCODE values the same as RCODE=NOERROR (routine shutdown or restart).</t>

<t>A Retry Delay message from server to client is an unacknowledged message;
the MESSAGE ID MUST be set to zero in the outgoing message
and the client MUST NOT send a response.</t>

<t>A client MUST NOT send a Retry Delay DSO request message or DSO unacknowledged message to a server.
If a server receives a DNS request message (i.e., QR=0) where the Primary TLV is the Retry Delay TLV,
this is a fatal error and the server MUST forcibly abort the connection immediately.</t>

</section>
<section anchor="retry-delay-tlv-used-as-a-response-additional-tlv" title="Retry Delay TLV used as a Response Additional TLV">

<t>In the case of a request that returns a nonzero RCODE value,
the responder MAY append a Retry Delay TLV to the response,
indicating the time interval during which the initiator
SHOULD NOT attempt this operation again.</t>

<t>The indicated time interval during which the initiator SHOULD NOT retry
applies only to the failed operation, not to the DSO Session as a whole.</t>

</section>
</section>
<section anchor="padding" title="Encryption Padding TLV">

<t>The Encryption Padding TLV (DSO-TYPE=3) can only be used as
an Additional or Response Additional TLV.
It is only applicable when the DSO Transport layer uses encryption
such as TLS.</t>

<t>The DSO-DATA for the the Padding TLV is optional and is a
variable length field containing non-specified values. A DSO-LENGTH
of 0 essentially provides for 4 bytes of padding (the minimum amount).</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   /                                                               /
   /                   VARIABLE NUMBER OF BYTES                    /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t>As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
the PADDING bytes SHOULD be set to 0x00.  Other values MAY be used,
for example, in cases where there is a concern that the padded
message could be subject to compression before encryption.
PADDING bytes of any value MUST be accepted in the messages received.</t>

<t>The Encryption Padding TLV may be included in either a DSO request, response, or both.
As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
if a request is received with an Encryption Padding TLV,
then the response MUST also include an Encryption Padding TLV.</t>

<t>The length of padding is intentionally not specified in this document and
is a function of current best practices with respect to the type and length
of data in the preceding TLVs <xref target="I-D.ietf-dprive-padding-policy"/>.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="summary-highlights" title="Summary Highlights">

<t>This section summarizes some noteworthy highlights about
various components of the DSO protocol.</t>

<section anchor="qr-bit-and-message-id" title="QR bit and MESSAGE ID">

<t>In DSO Request Messages the QR bit is 0 and the MESSAGE ID is nonzero.</t>

<t>In DSO Response Messages the QR bit is 1 and the MESSAGE ID is nonzero.</t>

<t>In DSO Unacknowledged Messages the QR bit is 0 and the MESSAGE ID is zero.</t>

<t>The table below illustrates which combinations are legal and how they are interpreted:</t>

<figure><artwork><![CDATA[
            +--------------------------+------------------------+
            |     MESSAGE ID zero      |   MESSAGE ID nonzero   |
   +--------+--------------------------+------------------------+
   |  QR=0  |  Unacknowledged Message  |    Request Message     |
   +--------+--------------------------+------------------------+
   |  QR=1  |  Invalid - Fatal Error   |    Response Message    |
   +--------+--------------------------+------------------------+
]]></artwork></figure>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="tlv-usage" title="TLV Usage">

<t>The table below indicates, for each of the three TLVs defined in this
document, whether they are valid in each of ten different contexts.</t>

<t>The first five contexts are requests or unacknowledged messages from client to server,
and the corresponding responses from server back to client:</t>

<t><list style="symbols">
  <t>C-P - Primary TLV, sent in DSO Request message, from client to server,
with nonzero MESSAGE ID indicating that this request MUST generate response message.</t>
  <t>C-U - Primary TLV, sent in DSO Unacknowledged message, from client to server,
with zero MESSAGE ID indicating that this request MUST NOT generate response message.</t>
  <t>C-A - Additional TLV, optionally added to request message or unacknowledged message from client to server.</t>
  <t>CRP - Response Primary TLV, included in response message sent back to the client
(in response to a client “C-P” request with nonzero MESSAGE ID indicating that a response is required)
where the DSO-TYPE of the Response TLV matches the DSO-TYPE of the Primary TLV in the request.</t>
  <t>CRA - Response Additional TLV, included in response message sent back to the client
(in response to a client “C-P” request with nonzero MESSAGE ID indicating that a response is required)
where the DSO-TYPE of the Response TLV does not match the DSO-TYPE of the Primary TLV in the request.</t>
</list></t>

<t>The second five contexts are their counterparts in the opposite direction:
requests or unacknowledged messages from server to client, and the corresponding responses from client back to server.</t>

<figure><artwork><![CDATA[
              +-------------------------+-------------------------+
              | C-P  C-U  C-A  CRP  CRA | S-P  S-U  S-A  SRP  SRA |
 +------------+-------------------------+-------------------------+
 | KeepAlive  |  X              X       |       X                 |
 +------------+-------------------------+-------------------------+
 | RetryDelay |                      X  |       X                 |
 +------------+-------------------------+-------------------------+
 | Padding    |            X         X  |            X         X  |
 +------------+-------------------------+-------------------------+
]]></artwork></figure>

<t>Note that some of the columns in this table are currently empty.
The table provides a template for future TLV definitions to follow.
It is recommended that definitions of future TLVs include a
similar table summarizing the contexts where the new TLV is valid.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="dso-opcode-registration" title="DSO OPCODE Registration">

<t>The IANA is requested to record the value ([TBA1] tentatively) 6 for the DSO OPCODE
in the DNS OPCODE Registry. DSO stands for DNS Stateful Operations.</t>

</section>
<section anchor="dso-rcode-registration" title="DSO RCODE Registration">

<t>The IANA is requested to record the value ([TBA2] tentatively) 11 for the
DSOTYPENI error code in the DNS RCODE Registry.
The DSOTYPENI error code (“DSO-TYPE Not Implemented”) indicates that
the receiver does implement DNS Stateful Operations, but does not implement
the specific DSO-TYPE of the primary TLV in the DSO request message.</t>

</section>
<section anchor="dso-type-code-registry" title="DSO Type Code Registry">

<t>The IANA is requested to create the 16-bit DSO Type Code Registry,
with initial (hexadecimal) values as shown below:</t>

<texttable>
      <ttcol align='left'>Type</ttcol>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Status</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>0000</c>
      <c>Reserved</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0001</c>
      <c>KeepAlive</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0002</c>
      <c>RetryDelay</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0003</c>
      <c>EncryptionPadding</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0004-003F</c>
      <c>Unassigned, reserved for    DSO session-management TLVs</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0040-F7FF</c>
      <c>Unassigned</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>F800-FBFF</c>
      <c>Reserved for experimental/local use</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>FC00-FFFF</c>
      <c>Reserved for future expansion</c>
      <c>&#160;</c>
      <c>&#160;</c>
</texttable>

<t>DSO Type Code zero is reserved and is not currently intended for allocation.</t>

<t>Registrations of new DSO Type Codes in
the “Reserved for DSO session-management” range 0004-003F
and the “Reserved for future expansion” range FC00-FFFF
require publication of an IETF Standards Action document <xref target="RFC8126"/>.</t>

<t>Requests to register additional new DSO Type Codes
in the “Unassigned” range 0040-F7FF
are to be recorded by IANA after Expert Review <xref target="RFC8126"/>.
At the time of publication of this document, the Designated Expert
for the newly created DSO Type Code registry is [<spanx style="strong">TBD</spanx>].</t>

<t>DSO Type Codes in the “experimental/local” range F800-FBFF
may be used as Experimental Use or Private Use values <xref target="RFC8126"/>
and may be used freely for development purposes,
or for other purposes within a single site.
No attempt is made to prevent multiple sites from using
the same value in different (and incompatible) ways.
There is no need for IANA to review such assignments
(since IANA does not record them) and assignments
are not generally useful for broad interoperability.
It is the responsibility of the sites making use of
“experimental/local” values to ensure that no
conflicts occur within the intended scope of use.</t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>If this mechanism is to be used with DNS over TLS, then these messages
are subject to the same constraints as any other DNS-over-TLS messages
and MUST NOT be sent in the clear before the TLS session is established.</t>

<t>The data field of the “Encryption Padding” TLV could be used as a covert channel.</t>

<t>When designing new DSO TLVs, the potential for data in the
TLV to be used as a tracking identifier should be taken
into consideration, and should be avoided when not required.</t>

<t>When used without TLS or similar cryptographic protection, a malicious
entity maybe able to inject a malicious Retry Delay Unacknowledged Message
into the data stream, specifying an unreasonably large RETRY DELAY, causing
a denial-of-service attack against the client.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to
Stephane Bortzmeyer,
Tim Chown,
Ralph Droms,
Paul Hoffman,
Jan Komissar,
Edward Lewis,
Allison Mankin,
Rui Paulo,
David Schinazi,
Manju Shankar Rao,
and Bernie Volz
for their helpful contributions to this document.</t>

<t><vspace blankLines='999' /></t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC1035;
&RFC7766;
&RFC6891;
&RFC7828;
&RFC2119;
&RFC8174;
&RFC1034;
&RFC2136;
&RFC7830;
&RFC1918;
&RFC5382;
&RFC2132;
&RFC8126;


    </references>

    <references title='Informative References'>

<reference anchor="NagleDA" target="http://www.stuartcheshire.org/papers/nagledelayedack/">
  <front>
    <title>TCP Performance problems caused by interaction between Nagle's Algorithm and Delayed ACK</title>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization></organization>
    </author>
    <date year="2005" month="May" day="20"/>
  </front>
</reference>
&RFC7858;
&RFC2782;
&I-D.ietf-dnssd-push;
&I-D.ietf-dnssd-mdns-relay;
&RFC6763;
&RFC0768;
&RFC6335;
&RFC7413;
&I-D.ietf-tls-tls13;
&RFC6762;
&RFC1122;
&I-D.ietf-dprive-padding-policy;


    </references>



  </back>

<!-- ##markdown-source:
H4sIAMxtOlsAA+2963YbR5Yu+D+eIof6YVINwKQky7Zq9ZqmJMpml25FUnZV
9+nplQASRFpAJjozIQola615hXmD8yznUeZJZl8jduQFouQqT02vUbXaFJGI
jMuOfd/fHo/HrsmbVfYoefryMrls0iZbbFfJq01WpU1eFrWbl7MiXcMD8ypd
NOM8axbjeVGXm3Gd1TU8Mq7z6yJdjU9O3By+/ii5d3zy3fjb8T2Xb6pHSVNt
6+be8fH3x/dcWmXpo+S8aLKqyBp3c02vffU6+bms3ubFdfJDVW437u1NeGj8
FF/rZmnzKKmbudtu8CX1o+Tk+P43o+Tbbx8+dG5WzuHbj5ItzO07t8kfuSQZ
J005o//Wu3WVLWr+uawa+odLt82yrOhJ+JskeQGDXkySx9lqldf0K173Rbqz
vyyr6zC75HJXN9m6Tp7AVsHQ+XY9gg9nE3o0nU6r7B08ffmE/l3DqzNYx/ff
HCdPlmkFY8CW4+/o41ne7OB12fymLOfJE/gX/7qcwyyenCbfPzh+eF9+tS2a
Ch5+c3lKv9gsywIe+qeT5PDhN8dHyYN798cnsOn0YbZO89WjpEp3/5LXswks
IF705QRmk9XLvMrMsi+bLcww/oTWfrrZrLKwSF3UqyKTj16n1dvk53RnFvVk
CwTV5EXZWtE3xycPPrmiB8ffHSXff/9wfHJ8Eq1oJnP7lxTfO5mV63hh/zpJ
nuYzIKy6LMzK/rVcFq0PaGGXML/5tgiHe5XNlkW5Kq/zrI4OVJ6066efx8mL
9Dqdp6usSJ5ksKBMfv3q/aKs5snlLM+KGe+Q2R3+1GzNqz8/SB78cNramSJv
snnyR6D0Oa3U78Mv6fxfap5SdxMu+zfhMq3S/1abUMOChnfhapI8z9bRDlzB
OOF3tPjHwKAWZdnQdd6ugGCvIxp/DEwRmOW0rCwh/3SVHH9z//ikn5Blemvg
IGXxL4vt9baHUmF6r7c1MLYqtzMs1/GvaZJvinSxyFc5/Hoeze7gwLIR2P/8
emmm+fJJcu/bh8ffffK+fX/y/VHy3cNvxyf370f3bSNz+ZdpWlz/QqtweQHH
tgZZ8S7D43+ZXq+yp6dMCU1aXePElk2zefT11zc3N5OauIpeXORFX29S4A31
1wV+c56t0l02T2dvv+YRWDZdPXmdvM4qehOSzqYqpytku7N0W8MxTnewjTCz
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
e73FKklU4oNkdpjdGhWCc90FKrpmAiGYoGnKLui7UrEtiaaxi3WarcqbibvM
1zkVg33e9kkQVaOjfdsnO9vZvr1+bNkmChV+xmZ5t5s+3UoD7ybqR1vj9mYX
BlAC/jiotm1H12HsNGFF0ybt6WFJCZcPswdnNd9Cqs5x4h9/+ers4uLVRUKl
X5LoxdKAtdRozpiXGSgF+Qe7K6N6H08zwQkPY6Bj7eW5OzzwTr+XcCXPQw7a
wSjBkvZ7/xFVtPPIJydHju0HUywk85OL1CWSOOqkL3KyJp6DxlfbjkcxNFpH
gLEVjXrreOo28JRYZSRiw5K56nDv2Yb6N5xNeEyc8aEiHdPA9c0T93jrPYis
65C30V8O8SowoIsPM0aE72WzHtqYVeIhZ6vRUsBSW+28c8bvaOtcnD+BEG2L
YuWhsDkNe2aiR0Jhsu28ubV5sqF0jvb1hBc6Y+RFKQBaxi67xBUyYKY2ioSA
h7rN/LWNi3KKlmJhoxnMwiKB5dNP5Sb5s8UiJw0X2D0wjFivpr/XboexJtXV
YnPfp17LLnQup7+MKEDZTWigZgwbkFCRXtieSwnXccQbb/aRLgBlVGS9l9NF
15CmSpkyq0midUCSQPNbjia1Tr7OWYc8JceeiIUgOMSVN52BNG0ookRK1677
ubqTuhwvHAspVV1zDHbPKfs0SRlyZN+qNB0ISok+llc/tw7HzzaM9VXd+2qY
n+sVU2a0287iFQUh+gWtvZKa5I4uO7wPYOti8Ey9gViBb8y6IYXQVIFT7EQG
7dUuJWMrpMDT9fFs/vYz59GtR9CkpjF6USv03JO4g+Ja6iC40Kcd09DxBfTE
Qp2Qo6P2dV1gq6N3wr4OdgJUsBz18c+q+QL5LDeZ64XzkAsUrjH5iaxItd5l
ltndPJNRq0SiI/Aofox+hz4ZRK4z3tp3KRCKJJN7BbrFBs/QKOqsYF7aRdgU
H78QhtLhCuoZQVvgi1+c/iXJVpJKKpXqTKIBvyZaUztfIaQEIaQD0J1MPGyH
n/qpd2EEsAoiVPSS9ktsmjr51uqwQL2pEiOAIRSUC3aCwIVUeksmLVBkvWzl
7UhCISkbKS6fTfPBc3Scfo7cDqRNPv/0ct2dO3cQBVK16MslR70+3Kn5p4+g
iFtSN/bwXmJ+5ARMMIkd0qCH5TWBSgHHoRwMjq4Ko1BEDwph6AhKRSTuAgwA
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

-->

</rfc>

