<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.7 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC7766 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7766.xml">
<!ENTITY RFC6891 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6891.xml">
<!ENTITY RFC7828 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7828.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC7830 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7830.xml">
<!ENTITY RFC1034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC2136 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2136.xml">
<!ENTITY RFC2132 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2132.xml">
<!ENTITY RFC1918 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1918.xml">
<!ENTITY RFC5226 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5226.xml">
<!ENTITY RFC7858 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7858.xml">
<!ENTITY RFC6763 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6763.xml">
<!ENTITY I-D.ietf-dnssd-push SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dnssd-push.xml">
<!ENTITY RFC0768 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.0768.xml">
<!ENTITY I-D.ietf-dprive-padding-policy SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dprive-padding-policy.xml">
]>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-dnsop-session-signal-05" category="std" updates="RFC 7766, RFC 1035">

  <front>
    <title>DNS Stateful Operations</title>

    <author initials="R." surname="Bellis" fullname="Ray Bellis">
      <organization abbrev="ISC">Internet Systems Consortium, Inc.</organization>
      <address>
        <postal>
          <street>950 Charter Street</street>
          <city>Redwood City</city>
          <code>CA 94063</code>
          <country>USA</country>
        </postal>
        <phone>+1 650 423 1200</phone>
        <email>ray@isc.org</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>1 Infinite Loop</street>
          <city>Cupertino</city>
          <code>CA 95014</code>
          <country>USA</country>
        </postal>
        <phone>+1 408 974 3207</phone>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="J." surname="Dickinson" fullname="John Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>jad@sinodun.com</email>
      </address>
    </author>
    <author initials="S." surname="Dickinson" fullname="Sara Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>sara@sinodun.com</email>
      </address>
    </author>
    <author initials="A." surname="Mankin" fullname="Allison Mankin">
      <organization>Salesforce</organization>
      <address>
        <email>allison.mankin@gmail.com</email>
      </address>
    </author>
    <author initials="T." surname="Pusateri" fullname="Tom Pusateri">
      <organization>Unaffiliated</organization>
      <address>
        <postal>
          <street></street>
          <city>Raleigh</city>
          <code>NC 27608</code>
          <country>USA</country>
        </postal>
        <phone>+1 919 867 1330</phone>
        <email>pusateri@bangj.com</email>
      </address>
    </author>

    <date year="2017" month="November" day="19"/>

    <area>Internet</area>
    <workgroup>DNSOP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document defines a new DNS OPCODE, for DNS Stateful Operations (DSO).
DSO messages are used to communicate operations within persistent
stateful sessions, expressed using type-length-value (TLV) syntax.
This document defines an initial set of TLVs, including ones
used to manage session timeouts and termination.
This mechanism is intended to reduce the overhead of existing 
“per-packet” signaling mechanisms with “per-message” semantics as well as 
defining new stateful operations not defined in EDNS(0).</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The use of transports for DNS other than UDP is being increasingly specified,
for example, DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> and DNS over TLS <xref target="RFC7858"/>.
Such transports can offer persistent, long-lived sessions and therefore when
using them for transporting DNS messages it is of benefit to have a mechanism
that can establish parameters associated with those sessions, such as timeouts.
In such situations it is also advantageous to support server initiated messages.</t>

<t>The existing EDNS(0) Extension Mechanism for DNS <xref target="RFC6891"/> is explicitly
defined to only have “per-message” semantics. Whilst EDNS(0) has been used to
signal at least one session-related parameter (the EDNS(0) TCP Keepalive option
<xref target="RFC7828"/>) the result is less than optimal due to the restrictions
imposed by the EDNS(0) semantics and the lack of server-initiated signalling. 
For example, a server cannot arbitrarily 
instruct a client to close a connection because the server can only send EDNS(0) options 
in responses to queries that contained EDNS(0) options.</t>

<t>This document defines a new DNS OPCODE, for DNS Stateful Operations (DSO).
DSO messages are used to communicate operations within persistent
stateful sessions, expressed using type-length-value (TLV) syntax.
This document defines an initial set of TLVs, including ones
used to manage session timeouts and termination.</t>

<t>All three of the TLVs defined here are mandatory for all implementations of DSO.
Additional TLVs may be defined in additional specifications.</t>

<t>It should be noted that the message format for DNS Stateful Operations
(see <xref target="format"/>) differs from the traditional DNS packet
format used for standard queries and responses.
The standard twelve-octet header is used, but the four count fields
(QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) are set to zero and their
corresponding sections are not present.
The actual data pertaining to DNS Stateful Operations
(expressed in TLV format) is appended to the end of the DNS message header.
When displayed using packet analyzer tools that have not been
updated to recognize the DNS Stateful Operations format, this
will result in the Stateful Operations data being displayed
as unknown additional data after the end of the DNS message.
It is likely that future updates to these tools will add the ability
to recognize, decode, and display the Stateful Operations data.</t>

<t>This new format has distinct advantages over an RR-based format because it
is more explicit and more compact. Each TLV definition is specific
to the use case, and as a result contains no redundant or overloaded fields.
Importantly, it completely avoids conflating DNS Stateful Operations in anyway 
with normal DNS operations or with existing EDNS(0) based functionality.
A goal of this approach is to avoid the operational issues that have
befallen EDNS(0), particularly relating to middle-box behaviour.</t>

<t>With EDNS(0), multiple options may be packed into a single OPT pseudo-RR,
and there is no generalized mechanism for a client to be able to tell
whether a server has processed or otherwise acted upon each individual
option within the combined OPT RR.
The specifications for each individual option need to define how each
different option is to be acknowledged, if necessary.</t>

<t>In contrast to EDNS(0), with DNS Stateful Operations there is no
compelling motivation to pack multiple operations into a single
message for efficiency reasons, because DNS Stateful Operations
always operates using a connection-oriented transport protocol.
Each Stateful operation is communicated in its own separate
DNS message, and the transport protocol can take care of packing
separate DNS messages into a single IP packet if appropriate.
For example, TCP can pack multiple small DNS messages into a single TCP segment.
This simplification allows for clearer semantics.
Each DSO request message communicates just one primary operation,
and the RCODE in the corresponding response message indicates the
success or failure of that operation.</t>

</section>
<section anchor="terminology" title="Terminology">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and
“OPTIONAL” in this document are to be interpreted as described in
“Key words for use in RFCs to Indicate Requirement Levels” <xref target="RFC2119"/>.</t>

<t>“DSO” is used to mean DNS Stateful Operation.</t>

<t>The term “connection” means a bidirectional byte stream of reliable,
in-order messages, such as provided by using
DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> or DNS over TLS <xref target="RFC7858"/>.</t>

<t>The unqualified term “session” in the context of this document means the exchange of
DNS messages over a connection where:</t>

<t><list style="symbols">
  <t>The connection between client and server is persistent and relatively
long-lived (i.e., minutes or hours, rather than seconds).</t>
  <t>Either end of the connection may initiate messages to the other.</t>
</list></t>

<t>A “DSO session” is established between two endpoints that
acknowledge persistent DNS state via the exchange of DSO messages
over the connection. This is distinct from, for example a DNS-over-TCP session
as described in RC7766.</t>

<t>A “DSO session” is terminated when the underlying connection is closed.</t>

<t>The term “server” means the software with a listening socket, awaiting
incoming connection requests.</t>

<t>The term “client” means the software which initiates a connection
to the server’s listening socket.</t>

<t>The terms “initiator” and “responder” correspond respectively to the
initial sender and subsequent receiver of a DSO request message,
regardless of which was the “client” and “server” in the usual DNS sense.</t>

<t>The term “sender” may apply to either an initiator
(when sending a DNS Stateful Operation request message)
or a responder (when sending a DNS Stateful Operation response message).</t>

<t>Likewise, the term “receiver” may apply to either a responder
(when receiving a DNS Stateful Operation request message)
or an initiator (when receiving a DNS Stateful Operation response message).</t>

<t>DNS Stateful Operations are expressed using type-length-value (TLV) syntax.</t>

<t>Two timers (elapsed time since an event) are defined in this document:</t>

<t><list style="symbols">
  <t>an inactivity timer (see <xref target="keepalive"/> and <xref target="inactivetimer"/>)</t>
  <t>a keepalive timer (see <xref target="keepalive"/> and <xref target="keepalivetimer"/>)</t>
</list></t>

<t>The timeouts associated with these timers are called the inactivity timeout and 
the keepalive interval respectively. 
The term “Session Timeouts” is used to refer to this pair of timeout values.</t>

<t>Reseting a timer means resetting the timer value to zero and starting the timer 
again. Clearing a timer means resetting the timer value to zero but NOT starting 
the time again.</t>

</section>
<section anchor="discussion" title="Discussion">

<t>There are several use cases for DNS Stateful operations that can 
be described here.</t>

<t>Firstly, establishing session parameters such as server defined timeouts is of 
great use in the 
general management of persistent connections. For example, using DSO sessions 
for stub to recursive DNS-over-TLS <xref target="RFC7858"/> is more flexible for both the 
client and the server than attempting to manage sessions using just the EDNS(0)
TCP Keepalive option
<xref target="RFC7828"/>. The simple set of TLVs defined in this document is
sufficient to greatly enhance connection management for this use case.</t>

<t>Secondly, DNS-SD <xref target="RFC6763"/> has evolved into a naturally session based mechanism where,
for example, long-lived subscriptions lend themselves to ‘push’ mechanisms as 
opposed to polling. Long-lived stateful connections and server initiated 
messages align with this use case <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>A general use case is that DNS traffic is often bursty but session establishment 
can be expensive. One challenge with long-lived connections is to maintain 
sufficient traffic to maintain NAT and firewall state.
To mitigate this issue this document introduces a
new concept for the DNS, that is DSO “Keepalive traffic”.
This traffic carries no DNS data and is not considered ‘activity’
in the classic DNS sense, but serves to maintain state in middle boxes,
and to assure client and server that they still have connectivity to each other.</t>

<t>There are a myriad of other potential use cases for DSO given the versatility 
and extensibility of this specification.</t>

<t><xref target="details"/> of this document describes the protocol details of DNS Stateful
Operations including definitions of three TLVs for session management and 
encryption padding. <xref target="lifecycle"/> presents a
detailed discussion of the DSO Session lifecycle including an
in-depth discussion of keepalive traffic and session termination.</t>

</section>
<section anchor="details" title="Protocol Details">

<section anchor="establishment" title="DSO Session Establishment">

<t>DSO messages MUST only be carried in protocols and in
environments where a session may be established according to the definition above.
Standard DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/>, and DNS over TLS <xref target="RFC7858"/>
are suitable protocols.</t>

<t>DNS over plain UDP <xref target="RFC0768"/> is not appropriate since it fails on the requirement for
in-order message delivery, and, in the presence of NAT gateways and firewalls
with short UDP timeouts, it fails to provide a persistent bi-directional
communication channel unless an excessive amount of keepalive traffic is used.</t>

<t>In some environments it may be known in advance by external means
that both client and server support DSO, and in these cases either
client or server may initiate DSO messages at any time.</t>

<t>However, in the typical case a server will not know in advance whether a
client supports DSO, so in general, unless it is known in advance by other means
that a client does support DSO, a server MUST NOT initiate DSO messages until
a DSO session has been mutually established, as described below.</t>

<t>A client MAY attempt to initiate DSO messages at any time
on a connection; receiving a NOTIMP response in reply indicates that the
server does not implement DSO, and the client SHOULD NOT
issue further DSO messages on that connection.</t>

<t>The DSO message format (see <xref target="tlvformat"/>) includes a bit in the TLV structure
that indicates whether or not a particular DSO request message from the
initiator requires a corresponding DSO response message from the responder.
A “DSO session” is established over a connection by the client
sending a DSO request message of a kind that has the acknowledgement bit set,
indicating that it is a request message of a kind that requires a response.</t>

<t>When the server receives a response-requiring DSO request message
from a client, and transmits its response, the server considers
the DSO session established.</t>

<t>When the client receives the server’s DSO response,
the client considers the DSO session established.</t>

<t>Apart from cases where it is known in advance by external means
that both client and server support DSO,
session establishment can only be performed by the client sending
a DSO request message of a kind that requires a response.</t>

<t>Currently the only suitable such messages are the 
DSO Keepalive Operation TLV (see <xref target="keepalive"/>) and the
DSO Encryption Padding TLV (see <xref target="padding"/>).</t>

<t>If future documents define other client-initiated
response-requiring DSO request messages, then one of these
messages may also be used to establish a DSO session.</t>

<t>Clients MAY send non-response-requiring DSO request messages at any time
on a connection, but a “DSO session” is only considered established after:</t>

<t><list style="symbols">
  <t>the client has sents its first response-requiring DSO request message, and</t>
  <t>(at the server) the server has received this request and transmited its response</t>
  <t>(at the client) the client has received the server’s response</t>
</list></t>

<t>Once a “DSO session” has been established,
either end may unilaterally send DSO messages at any time,
and therefore either client or server may be the initiator of a message.</t>

<t>Once a “DSO session” has been established,
clients and servers should behave as described in this specification with
regard to inactivity timeouts and connection close, not as prescribed in
the previous specification for DNS over TCP <xref target="RFC7766"/>.</t>

<section anchor="middle-box-considerations" title="Middle-box Considerations">

<t>Where an application-layer middle box (e.g., a DNS proxy, forwarder, or
session multiplexer) is in the path the middle box MUST NOT blindly
forward DSO messages in either direction, and MUST treat the inbound
and outbound connections as separate sessions.  This does not preclude
the use of DSO messages in the presence of an IP-layer middle box such
as a NAT that rewrites IP-layer and/or transport-layer headers, but
otherwise preserves the effect of a single session between the client
and the server.</t>

<t>To illustrate the above, consider a network where a middle box
terminates one or more TCP connections from clients and multiplexes the
queries therein over a single TCP connection to an upstream server.  The
DSO messages and any associated state are specific to the individual
TCP connections.  A DSO-aware middle box MAY in some circumstances be
able to retain associated state and pass it between the client and
server (or vice versa) but this would be highly TLV-specific.  For
example, the middle box may be able to maintain a list of which clients
have made Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/> and
make its own subscription(s) on their behalf, relaying any subsequent
notifications to the client (or clients) that have subscribed to that
particular notification.</t>

</section>
</section>
<section anchor="format" title="Message Format">

<t>A DSO message begins with
the standard twelve-octet DNS message header <xref target="RFC1035"/>
with the OPCODE field set to the DSO OPCODE (tentatively 6).
However, unlike standard DNS messages, the question section, answer section,
authority records section and additional records sections are not present.
The corresponding count fields (QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) MUST be
set to zero on transmission.</t>

<t>If a DSO message is received where any of the count fields are
not zero, then a FORMERR MUST be returned,
unless a future document specifies otherwise.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                          MESSAGE ID                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |QR |    OPCODE     |            Z              |     RCODE     |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     QDCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ANCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     NSCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ARCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                           DSO Data                            /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<section anchor="header" title="Header">

<t>In a request the MESSAGE ID field MUST be set to a unique value, that the
initiator is not currently using for any other active operation on this 
connection.
For the purposes here, a MESSAGE ID is in use in this DSO session if the
initiator has used it in a request for which it has not yet received a
response, or if the client has used it to setup state that it has not yet
deleted. For example, state could be a subscription <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>In a response the MESSAGE ID field MUST contain a copy of the value of the
MESSAGE ID field in the request being responded to.</t>

<t>In a request the DNS Header QR bit MUST be zero (QR=0).
If the QR bit is not zero the message is not a request.</t>

<t>In a response the DNS Header QR bit MUST be one (QR=1).
If the QR bit is not one the message is not a response.</t>

<t>The DNS Header OPCODE field holds the DSO OPCODE value (tentatively 6).</t>

<t>The Z bits are currently unused in DSO messages,
and in both DSO requests and DSO responses the
Z bits MUST be set to zero (0) on transmission and MUST be silently ignored
on reception, unless a future document specifies otherwise.</t>

<t>In a request message (QR=0) the RCODE is generally set to zero on transmission,
and silently ignored on reception, except where specified otherwise
(for example, the Retry Delay operation (see <xref target="delay"/>), where the RCODE indicates the reason
for termination).</t>

<t>The RCODE value in a response may be one of the following values:</t>

<texttable>
      <ttcol align='right'>Code</ttcol>
      <ttcol align='left'>Mnemonic</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>0</c>
      <c>NOERROR</c>
      <c>Operation processed successfully</c>
      <c>1</c>
      <c>FORMERR</c>
      <c>Format error</c>
      <c>2</c>
      <c>SERVFAIL</c>
      <c>Server failed to process request due to a problem with the server</c>
      <c>3</c>
      <c>NXDOMAIN</c>
      <c>Name Error — Named entity does not exist (TLV-dependent)</c>
      <c>4</c>
      <c>NOTIMP</c>
      <c>DSO not supported</c>
      <c>5</c>
      <c>REFUSED</c>
      <c>Operation declined for policy reasons</c>
      <c>9</c>
      <c>NOTAUTH</c>
      <c>Not Authoritative (TLV dependent)</c>
      <c>11</c>
      <c>DSONOTIMP</c>
      <c>DSO type code not supported</c>
</texttable>

<t>Use of the above RCODEs is likely to be common in DSO but 
does not preclude the definition and use of other codes in future documents that 
make use of DSO.</t>

<t>If a document describing a DSO makes use of either NXDOMAIN (Name Error)
or NOTAUTH then that document MUST explain the meaning.</t>

</section>
<section anchor="dsodata" title="DSO Data">

<t>The standard twelve-octet DNS message header is followed by the DSO Data.</t>

<t>The first TLV in a DSO request message is called the Operation 
TLV. Any subsequent TLVs after this initial Operation TLV are called Modifier TLVs.</t>

<t>Depending on the operation a DSO response can contain:</t>

<t><list style="symbols">
  <t>No TLVs</t>
  <t>Only an Operation TLV</t>
  <t>An Operation TLV followed by one or more Modifier TLVs</t>
  <t>Only Modifier TLVs</t>
</list></t>

<section anchor="tlvformat" title="TLV Format">

<t>Operation and modifier TLVs both use the same encoding format.</t>

<t>Operation TLVs SHOULD normally require a response and, therefore, set the TLV
Acknowledgement bit in a request. However, for some Operation TLVs, this may be
undesirable and the TLV Acknowledgement bit MAY be cleared in the request. Each
Operation TLV definition should stipulate whether an acknowledgement is
REQUIRED. If the TLV Acknowledgement bit is cleared in a request, a response
MUST NOT be sent. Modifier TLVs MUST NEVER set the Acknowledgement bit. The
Acknowledgement bit is NEVER set in the response to an Operation TLV.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   | A |                        DSO-TYPE                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                        DSO DATA LENGTH                        |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                      TYPE-DEPENDENT DATA                      /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='A:'>
  A 1-bit TLV Response flag indicating whether or not an Operation TLV requires
a response Acknowledgement.</t>
  <t hangText='DSO-TYPE:'>
  A 15-bit field in network order giving the type of the current DSO TLV per
the IANA DSO Type Codes Registry.</t>
  <t hangText='DSO DATA LENGTH:'>
  A 16-bit field in network order giving the size in octets of
the TYPE-DEPENDENT DATA.</t>
  <t hangText='TYPE-DEPENDENT DATA:'>
  Type-code specific format.</t>
</list></t>

<t>Where domain names appear within TYPE-DEPENDENT DATA, they MAY be compressed 
using standard DNS name compression. However, the compression MUST NOT point
outside of the TYPE-DEPENDENT DATA section and offsets MUST be from the start
of the TYPE-DEPENDENT DATA.</t>

</section>
<section anchor="operation-tlvs" title="Operation TLVs">

<t>An “Operation TLV” specifies the operation to be performed.</t>

<t>A DSO message MUST contain at most one Operation TLV.</t>

<t>In all cases a DSO request message MUST contain exactly one 
Operation TLV, indicating the operation to be performed.</t>

<t>Depending on the operation, a DSO response message MAY contain no 
Operation TLV, because it is simply a response to a previous request message,
and the MESSAGE ID in the header is sufficient to identify the request in 
question. Or it may contain a single corresponding response Operation TLV, with 
the same DSO-TYPE as in the request message. The specification for each DSO
type determines whether a response for that operation type 
is required to carry the Operation TLV.</t>

<t>If a DSO response is received for an operation which requires
that the response carry an Operation TLV, and the required Operation TLV is not
the first DSO TLV in the response message, then this is a fatal 
error and the recipient of the defective response message MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
<section anchor="modifier-tlvs" title="Modifier TLVs">

<t>A “Modifier TLV” specifies additional parameters
relating to the operation. Immediately following the Operation TLV, if present,
a DSO message MAY contain one or more Modifier TLVs.</t>

</section>
<section anchor="unrecognized-tlvs" title="Unrecognized TLVs">

<t>If a DSO request is received containing an unrecognized
Operation TLV, the receiver MUST send a response with matching
MESSAGE ID, and RCODE DSONOTIMP (tentatively 11). The response MUST NOT contain 
an Operation TLV.</t>

<t>If a DSO message (request or response) is received
containing one or more unrecognized Modifier TLVs, the unrecognized
Modifier TLVs MUST be silently ignored, and the remainder of the message
is interpreted and handled as if the unrecognized parts were not present.</t>

</section>
</section>
<section anchor="edns0-and-tsig" title="EDNS(0) and TSIG">

<t>Since the ARCOUNT field MUST be zero, a DSO message
MUST NOT contain an EDNS(0) option in the additional records section.
If functionality provided by current or future EDNS(0) options is desired
for DSO messages, an Operation TLV or
Modifier TLV needs to be defined to carry the necessary information.</t>

<t>For example, the EDNS(0) Padding Option <xref target="RFC7830"/> used for security purposes
is not permitted in a DSO message,
so if message padding is desired for DSO messages
then the Encryption Padding TLV described in <xref target="padding"/> MUST be used.</t>

<t>Similarly, a DSO message MUST NOT contain a TSIG record.
A TSIG record in a conventional DNS message is added as the last record
in the additional records section, and carries a signature computed over
the preceding message content. Since DSO data appears
after the additional records section, it would not be included in the
signature calculation. 
If use of signatures with DSO messages becomes necessary in the 
future, an explicit Modifier TLV needs to be defined to 
perform this function.</t>

<t>Note however that, while DSO <spanx style="emph">messages</spanx> cannot include
EDNS(0) or TSIG records, a DSO <spanx style="emph">session</spanx> is typically used to 
carry a whole series of DNS messages of different kinds, including DSO
messages, and other DNS message types like Query <xref target="RFC1034"/> 
<xref target="RFC1035"/> and Update <xref target="RFC2136"/>, and those messages can carry EDNS(0) and 
TSIG records.</t>

<t>This specification explicitly prohibits use of the
EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>
in <spanx style="emph">any</spanx> messages sent on a DSO session (because it duplicates
the functionality provided by the DSO Keepalive operation),
but messages may contain other EDNS(0) options as appropriate.</t>

</section>
</section>
<section anchor="message-handling" title="Message Handling">

<t>The initiator MUST set the value of the QR bit in the DNS header to
zero (0), and the responder MUST set it to one (1).
Every DSO request message (QR=0) with the Acknowledgement bit set in the
operation TLV MUST elicit a response (QR=1), which MUST have the same
MESSAGE ID in the DNS message header as in the corresponding request.
DSO request messages sent by the client with the Acknowledgement
bit set in the operation TLV elicit a response from the server, and
DSO request messages sent by the server with the Acknowledgement
bit set in the operation TLV elicit a response from the client.</t>

<t>With most TCP implementations, the TCP data acknowledgement (generated because 
data has been received by TCP), the TCP window update (generated because TCP has 
delivered that data to the receiving software) and the DSO 
response (generated by the receiving software itself)
are all combined into a single packet, so in practice the requirement that every
DSO request message MUST elicit a 
DSO response incurs minimal extra cost on the network.
Requiring that every request elicit a corresponding response also avoids
performance problems caused by interaction between
Nagle’s Algorithm and Delayed Ack <xref target="NagleDA"/>.</t>

<t>The namespaces of 16-bit MESSAGE IDs are disjoint in each direction.
For example, it is <spanx style="emph">not</spanx> an error for both client and server to send a request
message with the same ID. In effect, the 16-bit MESSAGE ID combined with the 
identity of the initiator (client or server) serves as a 17-bit unique 
identifier for a particular operation on a DSO session.</t>

<t>As described in <xref target="header"/> An initiator MUST NOT reuse a MESSAGE ID that is 
already in use for an 
outstanding request, unless specified otherwise by the relevant specification 
for the DSO in question. At the very least, this means 
that a MESSAGE ID MUST NOT be reused in a particular direction
on a particular DSO session while the initiator is waiting for a response to a 
previous request using that MESSAGE ID on that DSO session,
unless specified otherwise by the relevant 
specification for the DSO in question.
(For a long-lived state the MESSAGE ID for the operation
MUST NOT be reused whilst that state remains active.)</t>

<t>If a client or server receives a response (QR=1) where the MESSAGE ID does not
match any of its outstanding operations, this is a fatal error and it MUST 
immediately terminate the connection with a TCP RST (or equivalent for other 
protocols).</t>

</section>
</section>
<section anchor="keepalive" title="Keepalive Operation TLV">

<t>The Keepalive Operation TLV (DSO-TYPE=1) performs two functions: to reset the
keepalive timer for the DSO session and to establish the values for the Session Timeouts.</t>

<t>The Keepalive Operation TLV resets only the keepalive timer, not the inactivity timer.
The reason for this is that periodic Keepalive Operation TLVs are sent for the
sole purpose of keeping a DSO session alive, because that DSO session has current
or recent non-maintenance activity that warrants keeping the DSO session alive.
If sending keepalive traffic itself were to reset the inactivity timer, then 
that would create a circular livelock where keepalive traffic would be sent 
indefinitely to keep a DSO session alive, where the only activity on that DSO 
session would be the keepalive traffic keeping the DSO session alive so that further 
keepalive traffic can be sent.</t>

<t>Sending keepalive traffic is considered a maintenance activity
that is performed in service of other client activities.
Sending keepalive traffic itself is not considered a client activity.
For a DSO session to be considered active, it must be carrying something more than just keepalive traffic.
This is why merely sending a Keepalive Operation TLV does not reset the inactivity timer.</t>

<t>When sent by a client, the Keepalive Operation TLV MUST have the Acknowledgement bit set.
It resets a DSO session’s keepalive timer, and at the same time requests what the
Session Timeout values should be from this point forward in the DSO session.
If a server receives a Keepalive Operation TLV without the Acknowledgement bit set
then this is a fatal error and the server MUST immediately terminate
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>Once a DSO session is in progress (see <xref target="details"/>) the Keepalive TLV also MAY be initiated by a server.
When sent by a server, the Keepalive Operation TLV MUST NOT have the Acknowledgement bit set.
It resets a DSO session’s keepalive timer, and unilaterally informs the client of
the new Session Timeout values to use from this point forward in this DSO session.
No client response to this unilateral declaration is required.
If a client receives a Keepalive Operation TLV with the Acknowledgement bit set
then this is a fatal error and the client MUST immediately terminate
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>It is not required that the Keepalive TLV be used in every DSO session.
While many DNS Stateful operations
will be used in conjunction with a long-lived session state,
not all DNS Stateful operations require long-lived session state,
and in some cases the default 15-second value for both the inactivity timeout
and keepalive interval may be perfectly appropriate. However, it can be noted 
that for clients that implement only the TLVs defined in this document it is
the only way for a client to initiate a DSO session.</t>

<t>The TYPE-DEPENDENT DATA for the the Keepalive TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 INACTIVITY TIMEOUT (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 KEEPALIVE INTERVAL (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='INACTIVITY TIMEOUT:'>
  the inactivity timeout for the current DSO session, specified as a
32-bit word in network (big endian) order in units of milliseconds.
This is the timeout at which the client MUST close an inactive DSO session.
If the client does not gracefully close an inactive DSO session,
then after twice this interval the server will forcibly terminate
the connection with a TCP RST (or equivalent for other protocols).</t>
  <t hangText='KEEPALIVE INTERVAL:'>
  the keepalive interval for the current DSO session, specified as a
32-bit word in network (big endian) order in units of milliseconds.
This is the interval at which a client MUST generate keepalive
traffic to maintain connection state.
If the client does not generate the necessary keepalive traffic,
then after twice this interval the server will forcibly terminate
the connection with a TCP RST (or equivalent for other protocols).</t>
</list></t>

<t>In a client-initiated DSO Keepalive message,
the Session Timeouts contain the client’s requested values.
In a server response to a client-initiated message, the Session Timeouts contain 
the server’s chosen values, which the client MUST respect.
This is modeled after the DHCP protocol, where the client
requests a certain lease lifetime using DHCP option 51 <xref target="RFC2132"/>,
but the server is the ultimate authority
for deciding what lease lifetime is actually granted.</t>

<t>In a server-initiated DSO Keepalive message, the Session Timeouts
unilaterally inform the client of the new values from this point
forward in this DSO session. The client MUST NOT generate a
response to the server-initiated DSO Keepalive message.</t>

<t>When a client is sending its second and subsequent Keepalive DSO 
requests to the server, the client SHOULD continue to request its preferred 
values each time. This allows flexibility, so that if conditions change during 
the lifetime of a DSO session, the server can adapt its responses to better fit 
the client’s needs.</t>

<section anchor="client-handling-of-received-session-timeout-values" title="Client handling of received Session Timeout values">

<t>When a client receives a response to its client-initiated DSO Keepalive message,
or receives a server-initiated DSO Keepalive message, the client has then 
received Session Timeout values dictated by the server. The two timeout values 
contained in the DSO Keepalive TLV from the server may each be higher, lower, or 
the same as the respective Session Timeout values the client previously had for 
this DSO session.</t>

<t>In the case of the keepalive timer, the handling of the received value is 
straightforward. The act of receiving the message containing the DSO Keepalive 
TLV itself resets the keepalive timer and updates the keepalive interval for the 
DSO session. The new keepalive interval indicates the 
maximum time that may elapse before another message must be sent
or received on this DSO session, if the DSO session is to remain alive.</t>

<t>In the case of the inactivity timeout, the handling of the received value 
is a little more subtle, though the meaning of the inactivity 
timeout is unchanged – it still indicates the maximum permissible time allowed 
without activity on a DSO session.
The act of receiving the message containing the DSO Keepalive TLV does not
itself reset the inactivity timer. The time elapsed since the last useful
activity on this DSO session is unaffected by exchange of DSO Keepalive messages.
The act of receiving the message containing the DSO Keepalive TLV does update 
the timeout associated with the running inactivity timer; that
becomes the new maximum permissible time without activity on a DSO session.</t>

<t><list style="symbols">
  <t>If the current inactivity timer value is not greater than the new inactivity timeout, 
then the DSO session may remain open for now. When the inactivity timer value 
exceeds the new inactivity timeout, the client MUST then close the DSO session,
as described above.</t>
  <t>If the current inactivity timer value is already greater than the new inactivity 
timeout, then this DSO session has already been inactive
for longer than the server permits, and the client MUST immediately close this DSO session.</t>
  <t>If the current inactivity timer value is more than twice the new inactivity timeout, 
then this DSO session is eligible to be
forcibly terminated by the server and and the client MUST immediately close this 
DSO session. However if a server abruptly reduces the
inactivity timeout in this way the server SHOULD give the client a grace period
of one quarter of the new inactivity timeout, to give the client time to close
the connection gracefully before the server resorts to terminating it forcibly.</t>
</list></t>

</section>
<section anchor="relation-to-edns0-tcp-keepalive-option" title="Relation to EDNS(0) TCP Keepalive Option">

<t>The inactivity timeout value in the Keepalive TLV (DSO-TYPE=1) has similar
intent to the EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>.
A client/server pair that supports DSO MUST NOT use the
EDNS(0) TCP KeepAlive option within any message after a DSO 
session has been established.
Once a DSO session has been established, if either
client or server receives a DNS message over the DSO session that contains an
EDNS(0) TCP Keepalive option, this is an error and the receiver of the
EDNS(0) TCP Keepalive option MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="delay" title="Retry Delay TLV">

<t>The Retry Delay TLV (DSO-TYPE=0) can be used as an Operation TLV or as
a Modifier TLV.</t>

<t>The TYPE-DEPENDENT DATA for the the Retry Delay TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     RETRY DELAY (32 bits)                     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='RETRY DELAY:'>
  a time value, specified as a 32-bit word in network order in units of 
milliseconds, within which the client MUST NOT retry this operation, or retry 
connecting to this server.</t>
</list></t>

<t>The RECOMMENDED value is 10 seconds.</t>

<section anchor="use-as-an-operation-tlv" title="Use as an Operation TLV">

<t>When sent in a DSO request message, from server to client, the 
Retry Delay TLV (0) is considered an Operation TLV. It is used by a server 
to request that a client close the DSO session and underlying connection, and 
not to reconnect for the indicated time interval.</t>

<t>In this case it applies to the DSO session as a whole, and the client MUST close the 
DSO session, as described in <xref target="retry"/>. The RCODE in the message header 
MUST indicate the reason for the termination:</t>

<t><list style="symbols">
  <t>NOERROR indicates a routine shutdown.</t>
  <t>SERVFAIL indicates that the server is overloaded due to resource exhaustion.</t>
  <t>REFUSED indicates that the server has been reconfigured and is no longer able 
to perform one or more of the functions 
currently being performed on this DSO session (for example, a DNS Push Notification 
server could be reconfigured such that is is no longer accepting DNS Push 
Notification requests for one or more of the currently subscribed names).</t>
</list></t>

<t>This document specifies only these three RCODE values for Retry Delay request.
Servers sending Retry Delay requests SHOULD use one of these three values.
However, future circumstances may create situations where other RCODE values
are appropriate in Retry Delay requests, so clients MUST be prepared
to accept Retry Delay requests with any RCODE value.</t>

<t>An acknowledgement is not desired for a Retry Delay Operation TLV and the TLV
Acknowledgement bit MUST be cleared in the request.</t>

</section>
<section anchor="use-as-a-modifier-tlv" title="Use as a Modifier TLV">

<t>When appended to a DSO response message for some client request,
the Retry Delay TLV (0) is considered a Modifier TLV.
The indicated time interval during which the client SHOULD NOT retry
applies only to the failed operation, not to the DSO session as a whole.</t>

<t>In the case of a client request that returns a nonzero RCODE value, the server 
MAY append a Retry Delay TLV (0) to the response, indicating the time interval
during which the client SHOULD NOT attempt this operation again.</t>

</section>
</section>
<section anchor="padding" title="Encryption Padding TLV">

<t>The Encryption Padding TLV (DSO-TYPE=2) can only be used as a Modifier TLV.
It is only applicable when the DSO Transport layer uses encryption
such as TLS.</t>

<t>The TYPE-DEPENDENT DATA for the the Padding TLV is optional and is a
variable length field containing non-specified values. A DATA LENGTH
of 0 essentially provides for 4 octets of padding (the minimum amount).</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   /                                                               /
   /                   VARIABLE NUMBER OF OCTETS                   /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t>As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
the PADDING octets SHOULD be set to 0x00.  Other values MAY be used,
for example, in cases where there is a concern that the padded
message could be subject to compression before encryption.
PADDING octets of any value MUST be accepted in the messages received.</t>

<t>The Encryption Padding TLV may be included in either a DSO request, response, or both.
As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
if a request is received with a Encryption Padding TLV,
then the response MUST also include an Encryption Padding TLV.</t>

<t>[Need discussion here of whether the Ack bit is set in requests, responses, or both –SC]</t>

<t>The length of padding is intentionally not specified in this document and
is a function of current best practices with respect to the type and length
of data in the preceding TLVs <xref target="I-D.ietf-dprive-padding-policy"/>.</t>

</section>
<section anchor="lifecycle" title="DSO Session Lifecycle and Timers">

<section anchor="dso-session-initiation" title="DSO Session Initiation">

<t>A session begins when a client makes a new connection to a server.</t>

<t>A DSO session begin as described in <xref target="establishment"/>.</t>

<t>The client may perform as many DNS operations as it wishes using the
newly created DSO session. Operations SHOULD be pipelined (i.e., the
client doesn’t need wait for a response before sending the next message).
The server MUST act on messages in the order they are transmitted, but
responses to those messages MAY be sent out of order, if appropriate.</t>

</section>
<section anchor="sessiontimeouts" title="DSO Session Timeouts">

<t>Two timeout values are associated with a DSO session: the inactivity timeout, and 
the keepalive interval.</t>

<t>The first timeout value, the inactivity timeout, is the maximum time for which
a client may speculatively keep a DSO session open in the expectation that
it may have future requests to send to that server.</t>

<t>The second timeout value, the keepalive interval, is the maximum permitted
interval between client messages to the server if the client wishes to keep
the DSO session alive.</t>

<t>The two timeout values are independent. The inactivity timeout may be lower, the 
same, or higher than the keepalive interval, though in most cases the inactivity 
timeout is expected to be shorter than the keepalive interval.</t>

<t>Only when the client has a very long-lived low-traffic state does the 
keepalive interval come into play, to ensure that a sufficient residual
amount of traffic is generated to maintain NAT and firewall state
and to assure client and server that they still have connectivity to each other.</t>

<t>On a new DSO session, if no explicit DSO Keepalive message exchange has taken 
place, the default value for both timeouts is 15 seconds.
For both timeouts, lower values of the timeout result in higher network traffic
and higher CPU load on the server.</t>

</section>
<section anchor="inactivetimer" title="Inactive DSO Sessions">

<t>At both servers and clients, the generation or reception of any complete
DNS message, including DNS requests, responses, updates, or DSO
messages, resets both timers for that DSO session, with the exception
that a DSO Keepalive message resets only the keepalive timer, not the inactivity 
timeout timer.</t>

<t>In addition, for as long as the client has an outstanding operation in progress,
the inactivity timer remains cleared, and an inactivity 
timeout cannot occur.</t>

<t>For short-lived DNS operations like traditional queries and updates,
an operation is considered in progress for the time between request and 
response, typically a period of a few hundred milliseconds at most.
At the client, the inactivity timer is cleared upon transmission of a 
request and remains cleared until reception of the corresponding response.
At the server, the inactivity timer is cleared upon reception of a request
and remains cleared until transmission of the corresponding response.</t>

<t>For long-lived DNS Stateful operations, an operation is considered in progress
for as long as the state is active, until it is cancelled.
This means that a DSO session can exist, with a state 
active, with no messages flowing in either direction, for far longer than the 
inactivity timeout, and this is not an error. This is why there are two separate 
timers: the inactivity timeout, and the keepalive interval. Just because a DSO 
session has no traffic for an extended period of time
does not automatically make that DSO session “inactive”,
if it has an active state that is awaiting events.</t>

</section>
<section anchor="the-inactivity-timeout" title="The Inactivity Timeout">

<t>The purpose of the inactivity timeout is for the server to balance its trade off 
between the costs of setting up new DSO sessions and the costs of maintaining inactive 
DSO sessions. A server with abundant DSO session capacity can offer a high inactivity timeout, 
to permit clients to keep a speculative DSO session open for a long time, to save 
the cost of establishing a new DSO session for future communications with that 
server. A server with scarce memory resources can offer a low inactivity timeout,
to cause clients to promptly close DSO sessions whenever they have no outstanding
operations with that server, and then create a new DSO session later when needed.</t>

<section anchor="closing-inactive-dso-sessions" title="Closing Inactive DSO Sessions">

<t>A client is NOT required to wait until the inactivity timeout expires
before closing a DSO session.
A client MAY close a DSO session at any time, at the client’s discretion.
If a client determines that it has no current or reasonably anticipated
future need for an inactive DSO session, then the client SHOULD close that connection.</t>

<t>If, at any time during the life of the DSO session,
the inactivity timeout value (i.e., 15 seconds by default) elapses
without there being any operation active on the DSO session,
the client MUST gracefully close the connection with a
TLS close_notify followed by a TCP FIN (or equivalent for other protocols).</t>

<t>If, at any time during the life of the DSO session, twice the inactivity timeout value
(i.e., 30 seconds by default) elapses without there being any operation
active on the DSO session, the server SHOULD consider the client delinquent,
and forcibly abort the DSO session.
For DSO sessions over TCP (or over TLS over TCP),
to avoid the burden of having a connection in TIME-WAIT state, instead of
closing the connection gracefully the server SHOULD abort
the connection with a TCP RST (or equivalent for other protocols).
(In the BSD Sockets API this is achieved by setting the
SO_LINGER option to zero before closing the socket.)</t>

<t>In this context, an operation being active on a DSO session includes
a query waiting for a response, an update waiting for a response,
or active state,
but not a DSO Keepalive message exchange itself.
A DSO Keepalive message exchange resets only the keepalive
interval timer, not the inactivity timeout timer.</t>

<t>If the client wishes to keep an inactive DSO session open for longer than
the default duration without having to send traffic every 15 seconds,
then it uses the DSO Keepalive message to request
longer timeout values, as described in <xref target="keepalive"/>.</t>

</section>
<section anchor="values-for-the-inactivity-timeout" title="Values for the Inactivity Timeout">

<t>For the inactivity timeout value, lower values result in more frequent DSO session 
teardown and re-establishment. Higher values result in lower traffic and CPU
load on the server, but a larger memory burden to maintain state for inactive 
DSO sessions.</t>

<t>A shorter inactivity timeout with a longer keepalive interval signals to the client 
that it should not speculatively keep inactive DSO sessions open for very long without
reason, but when it does have an active reason to keep a DSO session open, it 
doesn’t need to be sending an aggressive level of keepalive traffic.</t>

<t>A longer inactivity timeout with a shorter keepalive interval signals to the client
that it may speculatively keep inactive DSO sessions open for a long time, but it
should be sending a lot of keepalive traffic on those inactive DSO sessions.
This configuration is expected to be less common.</t>

<t>To avoid repeated teardown and re-establishment of sessions,
the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with an inactivity timeout value less than ten seconds.
If a client receives a Keepalive message specifying an inactivity timeout value
less than ten seconds this is an error and the client MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

<t>This does not mean that a client is forced to keep an idle connection open for
ten seconds if it doesn’t need that — a client is free to close an idle connection whenever it chooses —
it means that servers cannot <spanx style="emph">require</spanx> a client to close an idle connection in under ten seconds.</t>

<t>[Do we really want this restriction? How soon does the client reconnect after tearing down the connection? –SC]</t>

</section>
</section>
<section anchor="keepalivetimer" title="The Keepalive Interval">

<t>The purpose of the keepalive interval is to manage the generation of
sufficient messages to maintain state in middle boxes (such at NAT gateways
or firewalls) and for the client and server to periodically verify that they
still have connectivity to each other. This allows them to clean up state
when connectivity is lost, and attempt re-connection if appropriate.</t>

<section anchor="keepalive-interval-expiry" title="Keepalive Interval Expiry">

<t>If, at any time during the life of the DSO session,
the keepalive interval value (i.e., 15 seconds by default) elapses
without any DNS messages being sent or received on a DSO session,
the client MUST take action to keep the DSO session alive,
by sending a DSO Keepalive message (see <xref target="keepalive"/>).
A DSO Keepalive message exchange resets only the keepalive timer, 
not the inactivity timer.</t>

<t>If a client disconnects from the network abruptly,
without cleanly closing its DSO session,
leaving long-lived state uncanceled,
the server learns of this after failing to
receive the required keepalive traffic from that client.
If, at any time during the life of the DSO session,
twice the keepalive interval value (i.e., 30 seconds by default) elapses
without any DNS messages being sent or received on a DSO session,
the server SHOULD consider the client delinquent,
and forcibly abort the connection with a TCP RST (or equivalent for other 
protocols).</t>

</section>
<section anchor="values-for-the-keepalive-interval" title="Values for the Keepalive Interval">

<t>For the keepalive interval value, lower values result in higher volume keepalive 
traffic. Higher values of the keepalive interval reduce traffic and CPU load, 
but have minimal effect on the memory burden
at the server, because clients keep a DSO session open for the same length of time
(determined by the inactivity timeout) regardless of the level of keepalive traffic 
required.</t>

<t>It may be appropriate for clients and servers to select different keepalive 
interval values depending on the nature of the network they are on.</t>

<t>A corporate DNS server that knows it is serving only clients on the internal 
network, with no intervening NAT gateways or firewalls, can impose a higher 
keepalive interval, because frequent keepalive traffic is not required.</t>

<t>A public DNS server that is serving primarily residential consumer clients, 
where it is likely there will be a NAT gateway on the path, may impose a lower 
keepalive interval, to generate more frequent keepalive traffic.</t>

<t>A smart client may be adaptive to its environment. A client using
a private IPv4 address <xref target="RFC1918"/> to communicate with a DNS server
at an address outside that IPv4 private address block,
may conclude that there is likely to be a NAT gateway on the path,
and accordingly request a lower keepalive interval.</t>

<t>For environments where there is a NAT gateway or firewalls on the path, it is
RECOMMENDED that clients request, and servers grant, a keepalive interval of 15
minutes. In other environments it is RECOMMENDED that clients request, and 
servers grant, a keepalive interval of 60 minutes.</t>

<t>Note that the lower the keepalive interval value, the higher the load on client
and server. For example, an keepalive interval value of 100ms would result in a
continuous stream of at least ten messages per second, in both directions,
to keep the DSO session alive. And, in this extreme example, a single packet loss and
retransmission over a long path could introduce a momentary pause in the stream of messages,
long enough to cause the server to overzealously abort the connection.</t>

<t>Because of this concern, the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with an keepalive interval value less than ten seconds.
If a client receives an Keepalive message specifying an keepalive interval value
less than ten seconds this is an error and the client MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="server-initiated-termination-on-error" title="Server-Initiated Termination on Error">

<t>After sending an error response to a client, the server MAY close the DSO session,
or may allow the DSO session to remain open. For error conditions
that only affect the single operation in question, the server SHOULD return an
error response to the client and leave the DSO session open for further operations.
For error conditions that are likely to make all operations unsuccessful in the
immediate future, the server SHOULD return an error response to the client and 
then close the DSO session by sending a Retry Delay request message, as described in 
<xref target="delay"/>.</t>

</section>
<section anchor="error" title="Client Behaviour in Receiving an Error">

<t>Upon receiving an error response from the server, a client SHOULD NOT
automatically close the DSO session. An error relating to one particular operation
on a DSO session does not necessarily imply that all other operations on that
DSO session have also failed, or that future operations will fail. The client
should assume that the server will make its own decision about whether or not to
close the DSO session, based on the server’s determination of whether the error
condition pertains to this particular operation, or would also apply to any
subsequent operations. If the server does not close the DSO session then the client
SHOULD continue to use that DSO session for subsequent operations.</t>

</section>
<section anchor="server-initiated-termination-on-overload" title="Server-Initiated Termination on Overload">

<t>A server MUST NOT close a DSO session with a client,
except in certain exceptional circumstances, as outlined below.
In normal operation, closing a DSO session is the client’s responsibility.
The client makes the determination of when to close a DSO
session based on an evaluation of both its own needs,
and the inactivity timeout value dictated by the server.</t>

<t>Situations where a server may terminate a DSO session include:</t>

<t><list style="symbols">
  <t>The server is undergoing reconfiguration or maintenance procedures
that require clients to be disconnected.</t>
  <t>The server application software or underlying operating system
is shutting down or restarting.</t>
  <t>The server application software terminates unexpectedly
(perhaps due to a bug that makes it crash).</t>
  <t>The client fails to meets its obligation to generate keepalive
traffic or close an inactive session within twice the respective
time intervals dictated by the server (see <xref target="sessiontimeouts"/>).</t>
  <t>The client sends a grossly invalid or malformed request that is
indicative of a seriously defective client implementation (see <xref target="error"/>).</t>
  <t>The server is over capacity and needs to shed some load (see <xref target="retry"/>).</t>
</list></t>

<t>When a server has to close a DSO session with a client
(because of exceptional circumstances such as those outlined above)
the server SHOULD, whenever possible, send a Retry Delay Operation TLV
(see below) informing the client of the reason for the DSO session
being closed, and allow the client five seconds to receive it
before the server resorts to forcibly aborting the connection.</t>

</section>
<section anchor="retry" title="Retry Delay Operation TLV">

<t>There may be rare cases where a server is overloaded and wishes to shed load.
If a server is low on resources it MAY simply terminate a client connection with 
a TCP RST (or equivalent for other protocols).
However, the likely behavior of the client may be simply to to treat this as a
network failure and connect
immediately, putting more burden on the server.</t>

<t>Therefore to avoid this reconnection implosion, a server SHOULD instead choose 
to shed client load by sending a Retry Delay request message, with an RCODE of 
SERVFAIL, to inform the client of the overload situation. After sending a Retry 
Delay request message, the server MUST NOT send any further messages on that 
DSO session.</t>

<t>After sending the Retry Delay request the server SHOULD allow the
client five seconds to close the connection, and if the client has not
closed the connection after five seconds then the server SHOULD abort
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>Upon receipt of a Retry Delay request from the server, the client MUST
make note of the reconnect delay for this server, and then immediately
close the connection. This is to place the burden of TCP’s TIME-WAIT state on 
the client.</t>

<t>A Retry Delay request message MUST NOT be initiated by a client.
If a server receives a Retry Delay request message this is an error
and the server MUST immediately terminate the connection with a TCP RST
(or equivalent for other protocols).</t>

<section anchor="outstanding-operations" title="Outstanding Operations">

<t>At the moment a server chooses to initiate a Retry Delay request message
there may be DNS requests already in flight from client to server on this 
DSO session, which will arrive at the server after its Retry Delay request message 
has been sent.
The server MUST silently ignore such incoming requests, and MUST NOT generate
any response messages for them. When the Retry Delay request message from the
server arrives at the client, the client will determine that any DNS requests
it previously sent on this DSO session, that have not yet received a response, now 
will certainly not be receiving any response. Such requests should be considered
failed, and should be retried at a later time, as appropriate.</t>

<t>In the case where some, but not all, of the existing operations on a DSO session 
have become invalid (perhaps because the server has been reconfigured and is no 
longer authoritative for some of the names),
but the server is terminating all DSO sessions en masse with a REFUSED (5) RCODE,
the RECONNECT DELAY MAY be zero, indicating that the clients SHOULD immediately
attempt to re-establish operations.
It is likely that some of the attempts will be successful and some will not.</t>

<t>In the case where a server is terminating a large number of DSO sessions at once
(e.g., if the system is restarting) and the server doesn’t want to be inundated 
with a flood of simultaneous retries, it SHOULD send different RECONNECT delay 
values to each client.
These adjustments MAY be selected randomly, pseudorandomly, or deterministically
(e.g., incrementing the time value by one tenth of a second for each successive
client, yielding a post-restart reconnection rate of ten clients per second).</t>

</section>
<section anchor="client-reconnection" title="Client Reconnection">

<t>After a DSO session is closed by the server, the client SHOULD try to reconnect,
to that server, or to another suitable server, if more than one is available.
If reconnecting to the same server, the client MUST respect the indicated delay
before attempting to reconnect.</t>

<t>If a particular server does not want a client to reconnect (it is being
de-commissioned), it SHOULD set the retry delay to the maximum value (which is
approximately 497 days). If the server will only be out of service for a maintenance
period, it should use a value closer to the expected maintenance window and
not default to a very large delay value or clients may not attempt to reconnect
after it resumes service.</t>

</section>
</section>
</section>
<section anchor="sharing" title="Connection Sharing">

<t>As previously specified for DNS over TCP <xref target="RFC7766"/>,
to mitigate the risk of unintentional server overload, DNS clients
MUST take care to minimize the number of concurrent TCP connections
made to any individual server.  It is RECOMMENDED that for any given
client/server interaction there SHOULD be no more than one connection
for regular queries, one for zone transfers, and one for each
protocol that is being used on top of TCP (for example, if the
resolver was using TLS).
However, it is noted that certain primary/secondary configurations
with many busy zones might need to use more than one TCP
connection for zone transfers for operational reasons
(for example, to support concurrent transfers of multiple zones).</t>

<t>A single server may support multiple services, including DNS Updates 
<xref target="RFC2136"/>, DNS Push Notifications <xref target="I-D.ietf-dnssd-push"/>,
and other services, for one or more DNS zones.
When a client discovers that the target server for several different operations
is the same target hostname and port, the client SHOULD use a single
shared DSO session for all those operations.
A client SHOULD NOT open multiple connections to the same target host and port
just because the names being operated on are different or
happen to fall within different zones.
This is to reduce unnecessary connection load on the DNS server.</t>

<t>However, server implementers and operators should be aware that connection
sharing may not be possible in all cases.
A single client device may be home to multiple independent client software
instances that don’t coordinate with each other.
Similarly, multiple independent client devices behind the same NAT gateway
will also typically appear to the DNS server as different source ports on
the same client IP address.
Because of these constraints, a DNS server MUST be prepared to accept
multiple connections from different source ports on the same client IP address.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="dso-opcode-registration" title="DSO OPCODE Registration">

<t>IANA are directed to assign a value (tentatively 6)
in the DNS OPCODEs Registry for the DSO OPCODE.</t>

</section>
<section anchor="dso-rcode-registration" title="DSO RCODE Registration">

<t>IANA are directed to assign a value (tentatively 11)
in the DNS RCODE Registry for the DSONOTIMP error code.</t>

</section>
<section anchor="dso-type-codes-registry" title="DSO Type Codes Registry">

<t>IANA are directed to create the 15-bit DSO Type Codes
Registry, with initial values as follows:</t>

<texttable>
      <ttcol align='right'>Type</ttcol>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Status</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>0x0000</c>
      <c>RetryDelay</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0001</c>
      <c>KeepAlive</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0002</c>
      <c>Encryption Padding</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0003 - 0x003F</c>
      <c>Unassigned, reserved for DSO session management TLVs</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x0040 - 0x77FF</c>
      <c>Unassigned</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x7800 - 0x7BFF</c>
      <c>Reserved for local / experimental use</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x7C00 - 0x7FFF</c>
      <c>Reserved for future expansion</c>
      <c>&#160;</c>
      <c>&#160;</c>
</texttable>

<t>Registration of additional DSO Type Codes requires publication
of an appropriate IETF “Standards Action” or “IESG Approval” document <xref target="RFC5226"/>.</t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>If this mechanism is to be used with DNS over TLS, then these messages
are subject to the same constraints as any other DNS over TLS messages
and MUST NOT be sent in the clear before the TLS session is established.</t>

<t>The data field of the “Encryption Padding” TLV could be used as a covert channel.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to
Tim Chown,
Ralph Droms,
Jan Komissar,
Manju Shankar Rao,
and Ted Lemon
for their helpful contributions to this document.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC1035;
&RFC7766;
&RFC6891;
&RFC7828;
&RFC2119;
&RFC7830;
&RFC1034;
&RFC2136;
&RFC2132;
&RFC1918;
&RFC5226;


    </references>

    <references title='Informative References'>

<reference anchor="NagleDA" target="http://www.stuartcheshire.org/papers/nagledelayedack/">
  <front>
    <title>TCP Performance problems caused by interaction between Nagle's Algorithm and Delayed ACK</title>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization></organization>
    </author>
    <date year="2005" month="May" day="20"/>
  </front>
</reference>
&RFC7858;
&RFC6763;
&I-D.ietf-dnssd-push;
&RFC0768;
&I-D.ietf-dprive-padding-policy;


    </references>



  </back>

<!-- ##markdown-source:
H4sIACO7FVoAA+19a3MbR3bo9/4VfakPJh0AJvW0lbqVpSnKy129lqS82SS3
UgNgQI4FzGBnBqS4kqryQ3L/XH7JPc/u0zMDiraVzVZu5NWKBGb6cfr0eT/G
47Fri3aZP/XPXp35szZr88Vm6V+v8zpri6ps3LyaldkKHpjX2aIdF3m7GM/L
plqPm7xp4JFxU1yU2XK8/8jN4fWn/v7+wZPxwcH44DtXrOunvq03TXt/f/+7
/fsuq/PsqT8p27wu89ZdX9DEr9/4P1b1u6K88D/U1Wbt3l3Hh8bPcGI3y9qn
vmnnbrPGaZqn/vT5kX/y5PHjEf10sP/gkXOzag6jPPUbWOW3bl08dd6PfVvN
6N/mZlXni4Z/ruqWfnHZpr2sanoS/npflDj4xH+fL5dFQx8xBE6zG/thVV/E
Vfqzm6bNV40/AqDB0MVmNYIvZxN6NJtO6/wKnj47ot8bmDqH/Xz3aN8fXWY1
jAHAx8/o61nR3sB0+fy6qub+CH7jj6s5rOLo0H/3cP/xA/loU7Y1PPz27JA+
WF9WJTz0dwf+MYz98P4DfwCgp6/yVVYsn/o6u/lN0cwmsPx0y2cTWEveXBZ1
bjZ91m5gfek3tPPD9XqZxy3qlg7go0VRFm3uX1TV2uznaANY1RZl1dnMo/2D
h5/bzMP9b/13Tx76B/f3n9jNzGRZv8lwNZNZtUr39LuJf1bMALOaqjSb+l11
WXa+oD2dwermmzKe6nk+uyyrZXVR5E1ykvKk3Tr9PPYvs4tsni3z0h/lsJ1c
Pn79flHVc382K/Jylvs3Wf3OwIa/NYB5/Y8P/cMfDjtwQbDO/e8Bxee00wCH
n7L5bxpeUh8IZ8NAOMvq7L8VEBrY0HYoHE5gVSVs1oDgEC9zVdovGASw9AYW
M8vt+Bk/PVnR07+5wE/785xP/JtNAySqLsxM59Uq/ZjmeVtmi0WxLODjeXKL
dnYsIYDVFBeXBjCvjvz9J4/3v/3ctfnu4Dv/7eMn/uDBg4QGrGUlv5lm5cVP
tAdXlLDhFVD9qxxP8VV2scyfHfKBtll9gcu6bNv102++ub6+njREF/T+ITX5
Zp3BBW++KfHNeb7MbvJ5Nnv3DY/AXOb86I1/k9c0E2LAuq6mSySbs2zTwKlO
bwCIsLJshtzHT/P2OgckosV81cB5XVR10V6ufFbO/TOewx8e/Z7RMhDy28nX
Fnqn3Gv/EfCy8f1958bjMeA6nAksx7nzy6LxwA43K0BpP8+ByuWNz3yZXxP3
fP3m6PWz45GHzW3jpn732dnrvYmD//crYJ/ZBY5Q554231ZwlqvVpiyA2eW+
iq9dw56L0iN4C2AzZesaHVy4cDPy+ft1Db/AQJsGWWl7s87HcAUv2svxVbbc
5H73/MWPe8AFyzZ7P9m2n9Ij9S4yHLr11cLDSzB6Uc6WG2SuHpCrcbpgOEbY
hK4CjnmVV5u2ofOBc1wVJW1BZlsBJcnKoll5+AUPupzzMHU+3wA6tJew7au8
vsyzOU6dv4ft4pzuP/7t32H34zUgVN7+x7/9X89SB34XBmU4eXlU4EvPAtqX
bTGDZcEzwMHxX0c7xgHwAAM8DdTLSsEyh8X6YzjU3f29iWfEWBXz+TJ37h4S
yhpoDqEsogkdJy4fEKds1iANNAEpKthiDfsEML999gbBMM1xDQBeEI3w3JY3
vlnns2JR5PORw/fy99kKuNuIBwDw0DX68OF/gdyDYs+nT/wzCkOfPvHVCE++
OIMn/wG//fbRt58+TdzZZnZpVzaDpVSLBTwb0Wvkl1V5MV4CLZgHDOMzheXn
sKjcX1/mpRNMu8xXtMMwLH6KawhIXrS4V4DJNC8BpC0e+mV2lcP9CefnACwt
rSeH45gCsb30a6DpqxwwCc+uqWZEKvmc4bI3ucH/BjcGB6s4OHEnJX/YFEAF
+Ex5HdmyqXw2vwKsgNVVmwaX02zWuHQYsUbI8S3A2XQTEz7cgJSCEP74PcCM
0P9lwG89bz6Zx99+dwAnAzPDJV0WQNaXN05RC6auSjh1AseOQd2diLgT/8fL
Ytm0Yc7LDDEHSKNcRMf3wQMAl4BHLd5Shc24BkKJGwnA9Lt403QsxKbf5/k6
w/OGC0B4rEhzH5Bmjy4mEJfNksAHzLFhHMaHVzDtHKgL7EMea+tixtpDsVpX
QtftjOZCMk75JVxsRA8G/jgCn/eFFx0u3nN7GzI9KcAYvKpZPS0AAesCYAnc
DFYBVxKemi0LJHBIXZeIMfBJVZa5chjiPLSGOBwfSAPkKSyZwdLgyLjFNfyc
E9r8eQOMNCd4tDhym9Gpdt6b/A//+HX8w4GsBjAG8YgoKxwXjhvoM5IlggQM
CIy8qm8IjoA5vkB0wTUKMOB1gN/EHc7nBX4CK6WhVqDeTXNL8bP4hJDkWaan
eQKE4rLaLOf4DqAfbgcxAFcmR+NZoLrtQN1uAxv68IGfxJs2L5AWA8OoQWLE
wQClwypwFGaBTsYmOOIEcKCwcRCuFR8RggFRJ0S5wjMgVS2v8nE1a+GIkNki
vWtosJGfbngXi2pTs3DpgRct57DYPzw7ev321fnIH76SH16d6Sen9MMeHQKe
PBzuX/K60hte1KCc17wgQoOGbyDjL95fxD44JV4qSFwbpCtZmyHa4qUinKy2
QzLiLxwdnKiAf48I/nodZA3cG95sQSPDpgQUE/dH4G1wEs2aBUy+Dwx42E+2
vPkLMvGqWsq1J9KNe0CSLBYKkWtm1UVZ/CUPUw3dal7oCJ4pGnddAM4qrS3p
vaF3CDIsO4SFOmAKm/JdWV0nuEuPZouWBI9te58gRiNtL97lyxve1mLTbpC4
sMVFYIfEknZOC4VpaKRsCmpMe+Psnkdwl1BfGREOyCpv3ZBSSSSJguDI6ObE
cJGYK8tuWLoBYnN6Op5mcgnweSXoRetQ4ERJRXkuLYM+ATIJp9lO/HEG4gHi
CguDxBLgNb3tTtAFB5zBLLyTDKm2nJAQfBQWSYiF+wX3Be4jrm9ZZYhzfHsA
wCuUL+D75c0IBRFcxRLYMYA7u6qKeYOjLYBVq/Q0BCYkS+XNNQDSkRRU4raZ
MhiCDwugb3uyisBqU84YOeDMgBL6iwrGIKTgy1JXCJiCzpzWxqK5TgAPF02z
yQ36u2m+AGqbBzl5hOIG8PjNMqthhySDyBVm0Xk8rd7DccHLBVAaOPo/4orD
2ysAb4EmJuW8Qp/pGuIdx6V5kphz4J3nft3km3k1Pj0duSCp4hbgZC5A6Kxh
s38hac7KaFY8mCIaL1mQASXBgYRL0noQNBAXATQzpjJ4yPj9ddEQvUJCAcTN
5wQ6IHJXxRxomOP1Kw9GOMLBT4nH4LJPT4U4JxyGFtcZSSABt4OJC3Mqf1ld
05OOWQduRh7k88NtzZAogFZ+gQS+WMAQuImsvkFOVhIW1yg1wuPhAAiBtqGh
ga5DPM6XrItVbXFFj+BQeFT2HA0Sm8Nzhl36fAEgQOsQYkzWkGCiV3ob5c+W
cB0aGT9vhFxbMW9c1XjICDbVUPAg22pWLSeOiMBZTwHE3Rl5ithKAaIJUtcm
R1m6zZ2hoKMgzPYnIaGyzd4hGalJgkHYwDKdjtRRlxLsPnmjzAeOjm7nukbp
eJIKxCjH4zwp2JsVCkG3jI6vNfnFSngvkj8UmQIuohBVXTNGzkC5qOEmRMWE
oYcCaZ2D6AE4pMdpYNf4nzaik8DKV4B3EczhtvpTlH99uCNWWFBBJgyOt4JH
hocdaHmIz3glF1mx3NQiJGZtnGeCqvo5iZRoy7xhZe5dfuOvqxpo787Lt2fn
OyP+1796TT+fHv/h7cnp8TP8+ey3hy9ehB/4CQe/vH77Qr7Hn+KbR69fvjx+
9Yxfhk9956OXh3/aIZxxO0AHTl6/Onyxw7u3cjWiC19iMoyBiIOoiEwxb2Z1
MSW8dDu/D/vAYyIGWKJfhCjAiQDLn8IRFTUJw/5FfpUvmx3RUO8fHHyH1gG3
A0e5o8IgEescUGr46olCjHK634m3bYfeQSY5LeYwnbAaUALbnCyc2QqPBzhC
gfR2BCoVXFCUQRVDozIPuA7EjzVIutfubkYQNbcM20DYSFP+GYgq2VlkC6KF
7EQcBJC/bwNjDIfC+yNh6j1ykwvEN5fcMZZPrKp5jSTzqXNjf85jRx2UrZzC
ifA6qA2iMTqbSPRLMtEu0SVkjDS7xSSfANMsyg1eCtg+KCc1ABJOKlicQOSG
+9SAAjn2xwV9boRBsyJktaqCxy2JMERMDxUyj7jiI9CaaLfBA5NdtdcVzrKu
AH9ZXnCGHdn9IfxIL/VXRdaFrrc6ryPopoueeKJdhREXUYdifVpoJBwITDLG
t8dM9mjtrnOdgBIhGg3vUbVSNEOhmkDyIegWIOQgpTJQRP6BFod5ck/4aHcM
DjXVor3Ge04cNwMRHOFBOlKFVB+IxHVWoPAENwWoamcaobtNehsJl4ZnuSxI
rODjbRIkVYGXF/lV01uLmQRIpgxSwXYQOXeEYuP2Iv0m4o3DX5FiQRO4aCPA
xxnnN9MGtwKYADQjL/CI4dyzIeYycnV+AZosWaLgId7TdcZbDbunRSnA5VJv
mo3IyzB3k3fOhheP+I8eRVpuzjclGDZgu26Xjh4fZ1FjmD52V73nSOIMUPJ3
HiblfnCB3QvQ01DyHLHEQctXsG3ZQJxY1s/P//wdGEj4nzFSfxPbpMuMtbaf
ZY5y50Bo0H5UN34XqOSa+Bf8jnLOLMdVA8crW7ZQGCtPQtqfeue+5h2iD+oK
9CMe1Iul5p0aSsXS/uGDPJnTY58+7eH7Pjz2ubfDJ+F1xsdgCOtZvUkD533i
TmaodbEA1VkzvE+TuJYEHV0QyREAweReTry5BmdijTuXRSTyQJ0vyPjBcFtn
Bd1SnY9OBknRKSyzZYRgCDAlQhtP24rTQL7h07T2IuACdechl12Anj3xRyiB
/pJx0ayFUlgY2+mTXoZGAfFZ0cw2zBQQIGJUbABzQH8MdoCmb9OrrG4kbgxH
5kTlKzgaTvK8qBsyAQRuyeYwhrlxeKgMJMJA8BcoarBDxV2AQNWqyId7cqLu
inGVJBbUOCKnjQS/mfhEh+C7Znhe4x2bFzdTMWiBWIFoFBlpR7zyandZLPP3
BSrUOMC0YuT1zog5xupOAkrWtvlqHcwEiW1Y9TrSJIwzwX3WfTEhgYuUmtwa
pbcSAdgBqBSiiZJSTDAGapqXl+S3TmSlAGRygV3yXSE8gXtwRjIXHjcC7OyZ
gOrxk8cPAFRoUcivquVVtGiAaLGBwyP/A6ME22yi3YIEyY5r0PrrgI8CyonV
ZJkznFcNmnxJiPtqvWkuv7J+U3SHVmt21aDeXonD5YUZVRHd4E4iqgaPjYue
iWVxUSrZMmBBGJyMn000mKyZj3FJJJkfqrEmPl3IlcL7Bqo1ngvjPuAyXGu4
TTd0uxVe4V7RoTi8iVPiJ+ilu4I7+Br0UNg7WqsuROoy8LMbZAvKCsgDWvl8
ghWyEvv9q8NzgskCtJ5rVLsJaqBVo82rLS5Qtm1ZSm02eRfpxI2MgHNoAYWF
zPK1ohXduBFDAl7DK7oT0V5WsyMavC5ultXkDCjZbs6WYFhgwd5tmKEB7aqG
XX+lrOMrp9rPEngPjBFEpZFAuRY8CttmoR1+YMMe3PX3oMOxXl8hB0OFvK/d
qL8EML1FWzJZ0RX6zMUqtoGpyhEpcuZXN3XBUQLsU19XSNqKPpUGQF0AiHhT
MG8DZBrtnp4WmLPzls3XQdNLjHEw8YcP8xy2umxQtexqg0riWfgMJh95g3QX
wylcYsxVp1i0Pzc8ATq6iEgR9RXMNrSGGHtezuobtvWt0eCPd/bDB9Bp89nN
bIlChjhVEKV4PTlZ4oXHBT8AwEiZfnjbrC4rUUefAzJedt5+18VAOWBx5yUe
vHv+jcLmmcDmwz2FK3x9L1nHcXKLP9xLbjU8nvhAyWZDTttpLkhPZF0Pg0lV
UQLEroq6KlcEk2tGJwNeet9qsdkMFJm5MCQElXEUZFPgfxN3pl61O1kmRrfH
ZzgSNzZFS5bosHyRlemV9RLvHEaP8Iv7Tx4L1yUveDQPiuBbtGQUA7wqxUEf
jUCAXD3rC2wRD7S+oaWOVKpgTJqRLo50DokZ2V0twWvYKdFcovETl6jCyigu
AxkMW3V8ZoWSaTE21iIXzYcIa2RVZQ53uySVD4X592jyQ8zLVuSkHMRGEVzZ
zN1UK3R/GQyARcmhs9eMnL5XxOKnN0QbarRckYzJ4Skkx/RpmQaPAFaOBNdE
VGdKxDqYyj50pem9xNKSuvVxfBbkYfW/ra5RBg2nAdoQgGbJDDI4KMglh1iA
u7GbCa4MXYGst+EFNxU+LIx3pEDmWJkhwDDFNVAJbpR5lTcdYOji1K66Zb9w
hMXSZVb2jFEuqw26g1EAi3dzlFpBp/myuiYBQpby8vBPKlAizn0Wyg6vtOH+
f59otbDwk5dvohZLYSCoYFtLNPMzpwJ7lfOdDBEIET2YwdI6o93YsViw2NQE
32ShdHkzK7qL5cI8pT5QUTbb5VWMK2BinrNVNniW0fXJgTLAovko434UaQBb
ibIYh96gwV9DFly0DgitYSOTNejz+x2jfoh5CIaKyeesjH0zq4QaMXCdsa0M
rJjMS++Kcq5+TGbhxj65YsqEYk+LhmqCDauZCCuOJvvcuAYKumd0d6r1UNBF
rDf2qTG/GQGWTOMIXnr1BK/Q9bQqiLQ1YZxREt8kQl/jlPX3BGcimGF9gqdh
fYmB0B7kyJnHwzT+9mkOEav46JlUMlfeTnx+IVV2w+pBiPaaki0aL0yMV1Ni
yUjk7oREw4d9tKnRM7vkcTm8TLk86flJOBfpyThXFPCjIQ3vbN+ctKdkhd47
joLhGxYM7WsiK8JLyBcXGuehAq0qxkLmGQgxJM/dDTsbQrqSnH4sZjZ5VA3J
QIlRmNMYvBajPhMugNCjJTRE0ikqr6Soxjst4zYSzxpN1icxdEBGO0pEQoyk
eYpmQoMil2SnKeXeLdDEc8dbzC7Ar/2uBI8x6u7ZG4uDy+2bs+6hY9grjxKv
ufNmSF7jXne9ZkhzocP77jWZTTvACSzZcmKXR28SnizIbRhxqmYMFHi3MF0T
q0FRxTLQoJw0zcXKqdyFbl6IX/o5650JQkVa0cRwPo5L7riE+mohGQ7ED8EC
Rtf6yuMb3kTuoBFz04Yk6ujCFRkbg2G6Ey0Sb2ZQLlihQMUKVKeXMabmSPBW
wiOQkNdk/0aPgIw5xoCx2ijsfjefXExGYr8HAf39DbnOrjPUDUZwFIGAamjB
e0RTCuRnBSETC58ZNMh8AHm0gjkZMcUHGEDOPSgAzM3o9Zbsm3zyU5D054Qy
AF76JbVHNSEyI5gNJ95LpKpIYwBkEoWcRnZ1nItDCg8A7+RNH2ZIuR2Fg6FG
JOT/ui5QegrPw2q/sbHx8jHHGjZEglwMJKJZa2Wz+QKU8ZYRXcI1glVQ/atR
2ElNqigfAlYulxvMYGlzidMDJBoF0kbhx+11Vb8LynDcnguuzoapeM12XYoz
MVBn3m1uVEQQDs+IIdIwBUBXhDYTf2LuCFqMSr9ZS6CA7AUPMe/EPWMoHpAR
4yFhQxSp0HKBVG038Vid5cPQh3j+44y8oxZ5gdsUojXOihqYIwbQon1umjuN
FKtzMoH1F1FivD1rUf2jIpovpG0X4HpVzMQ2tSfxt4Cx1xpefFlcXAIhBQ4+
1n3Bqp/DlQz23869E3KpiwyWOnYuR4+pnJojkrcChMQktUv/qmoj9UntydtM
t7SjFUY4hRgp895usyfmh6ImCrtcjCiW4YbNSzfG++tKM3uIOhC47VbKHJo9
E3src001wjdrnVFW7IBELv1Lkd2es8L04Z4oSqg+WoVqml8UEj9P5GI4grof
QpyYf5w67iTEnwNCNUhapWP5brflSHVylj8GAS1o/qCVF+/MEmy4CSMAyQR0
ZJGINtcUrjWTUCtKkUMWhVG6GC4kX/FtijHDna+3RGmnOp2NFfd3ihUn+j5F
hTnGiyOasESj0t+JBgGE4C8juwjZKm9iGItZBawa0YlGFnk0889fn748Pj3V
2fEKb+oSxQK1LnUl4pCR1cSQT1iY/7l/Dob+xmH25aP78PcB/H0Ifx/B38fw
9wn8/Rb+frftOR3m78bj8a/6qwN93L6Pl8dnZ4c/HPuTZ7ds9uOXX9EfTnlV
cld6q/ynzgro/0/js38lGAnq+13FMES/vb8SjAZXJHfwb2hFQgz+hlYkVOlv
aEV3/xNW9M0tDyEJfYYewFv+fHOXge7y55svByPSb34rfPUeM9hPZNCPljek
/IYqMYfVgxT2kqFeCo9zYMgo2mujRql+0WCt4ZgDyhQo1e7N4T4mULwS9dBZ
4+xz8dquNzU61huK/0D9yiyTlacQuiFuXZXwi0VndajLkrGEDbhx97g+Cetj
1R43cZO3kU1mLtoCcZ+LrjFAx8VEWOCHaxFj1cxpBnXzHLNW5p3IEX5+pjJr
lsh/t3n85RzFFrz9ICXVhgw468DuOciHf3G9F4vo8kI4cb6UWpdRVpwM4BEK
VoJuwHDQ+GspAkg2p/97HwSzE16APCKYQ0+0JgdQ3XI6w+CGt8+IehdOeLBt
Qnxgy3zB+HieTpFIoZcVykkdIVTi67qiKA30Tzi7hJ7Fa1JuJPHOqmhs3IEP
yTxrbF+svFnTMSuKMnbn3jLU9/e6omE0EeCzxZKXUlyUoKTOXcVRiWsWhH+m
ZJfghIKWD55gJakKjfrMyMy1VYZlOHRX6NMVoj9z3Yo8GyoAxFW53STgh1aR
t/UNl8Ew1EiMvFSB49MnTOShIc2ybe6EpNlQNJFx1+tpnxp8KBK8FRUzmneB
CmGiCN4wjgJ86txHf1SBUvnRvyzzVVWCPv4R1hvJwkf3cYx/nvI/9Mf8iL/B
GPvw1qvXILK/RvkvWsJjLpYkgCw2eBL4ygE8qHL+R1Xz8rqGXeLX9+HDs+PT
H58fnrzAH1kTX3B8BDuoKaFEUUDy2zMtWBJiMdU+iYM+wGX+47PXLw9PXuGP
2Sr3xzQl7IN+nXsMUQHtKxijKEGPIlkxvALDj9FQi6M9pE2T0/EjXRV8XBwa
MBA+8gi+OT1+/vbs+FkCl3kOhL2UxOB1tSxiNhW99x0Pffj2/Lf4E4x7KHoh
3XZaju8s5+CAl5EsCWNyqSRNb3HubRPwgmxOjEmNTTEl4z+6+atSKQfaPlzP
UtcLvCjnargTF0U1Z7tdz5NB/IvtEtHUpzplN4InOgrxhUbfENtkONrdeLIU
D62gbNlhlrVxYKJOmH+aCSdCnxWG6TiWaoJI9uHevKkwPOuTuyVVe8DQUDRy
76LXSgeVK8zOCDxSusBDLizMVIhhxBGRHLw18YeJeYajkjSdmCQYDuVPPVQm
NPllNUdaVtObGMlCmMWlANgdFt7MEqZAzjlh++RweVXRGPDTa3TQwLfJpPD5
YeejBDjWiJksSgdMP8QTukeDBDNRdKm7GMclecXmVWZ4oa5ERmEnXJtOfPQT
+z69ImEAnM9LCbPkR7Qkl8Jxgq9kxCyHvfjucMBnbWXEiQ+GJIooQ6NmugLO
Pxe67jClpSlqsiCqXRlBMTQPGkrxKlNyYFfo4iTrdLf2MovbpWmL9QadRjFW
pew54ovGaUbexJ8sbl0UZd+EBQU4jAxAXXRP5OS9m6QYIO6L4x+PTwOsB6ai
+OLhA2jM2wEsKvhVPQT+/8CmdLhd10Uj/Pmf3hzfstm/ouZNVPTw/NC/OH71
A1D3//oV3fHP52wBCOLxs+M3mIj66pz3OPjnb9IWcPjUPQUkOhjj/cK7f6r3
abHMLryJ0OmGL3U5gwZqOENhO5d4QmGmhJQy7SOaNyiX6jzjAMoLDhaT+Lwg
/4iaRBiFE8MqyJlwcviKvQ3n+PARyTCn+QUIhJSX30FAWcDjOy6gwaIj6GtD
wQFjimnKgbNHKaH/Kc6GyxqTdBe8aYF5sU95XqFniUrtcY2VrNY6BwNjjjjY
W7lFtdIELykjlng2cMzwDKV3Bv7FVv7wTXQyU46pQ8c7BpdqmaABdLdOj2qx
aHKjdIYgNEoUcttHmYiAkHJRwNDS7ySf7RglMxV3WAQOYUeTrvsptXuAvFZJ
Fn2Xa5xQlr4EUA3LeMlYoEbOUBXFsVLWPPJJkNvtq90uyY26olxYBpy+rqKs
epPH8i1eCxHcJNYSVsIkTKKXFaqSirWx8cqiuJxm9hSo4hSLm8ROhKke6kyb
+Ne1xglHE5T4rrdUKehsipRFF0TBwOeypmug0mAWzljqBYHkUmvBEXmZ56yw
m1BNAynOGrEVEJgoOQkfKmopGZbV9U1H7hekWnQP0Tre2CZqRmcDZKCqoRqW
keZxpi4djvGwYVUpnWaLFoGPVRmlo12BKgRUiSLG2eAZqPUtqCeOtf842axY
F5IaJ/olJ0MO4CxenWIFOI8e/uVNDIwQWhRz/DmDG0MMTuEd9Fbjpq6wFC6b
aSVZRQP795SKdFSPQ79jP7EkxHhpY7Kgs/V1kpsIgnJcubHR9E6cCsOIe3fk
Uo+rvbVbtSjdin9bhhpQc9nPSTeR26KSjMyhAH5j3u6SBzk5Tg6nY6HoMoP2
dALAo2aYVWkMwoxmbM6KZozExHlwsMcXLwwWOIvu3Q1I7D339K7ukQKgeag9
u2FnNmyhaXeegpZ3nkBmQFMZMIPa24W8es5J9cZi7KQUaygtAs9fwv8tucyI
eAqSpWFoBRZS7YYEkElDK03hOOdnJz84d0ZpKKQ8iYstdc+wcz6BoetBPis7
JRX1+m8PWphwbKspdZWUE1GxDIvGsNmoW+uxoBhAJElOM8liwEVPnqzq5Eyo
TJMWYDK1PiO9DUWYfKi9TPEOz7t2Xl2XhvK+Vp8KRQF++2D/0ydTCBAzdGmv
4nhy4hJYI9FqW9WHzW5GDhNAFgGBJT7Y7N939+9ajQ7fEmqcBE+akONw6pKW
c1asCqoQ1sGA/t3LCJ3kkDExwPzqxS9UYoZ/EWolGvsWzM8IjWteZhSei2+6
z6IRXyHNpMy4IinhCwqhm1ayEDSAc5bPuSqxVkHCMsftxPMtwB1yFiZJy6B8
hLp8t60A5A+OBuMig5rNobYWZ9aULTHoiSk/XgAxYoYnpEpyEkoHUleFIrzF
SA5C55sx4oQrKaN3Fyx3IiYyG9ZLCOf9qmqpZFmuGaDonwCiRQv6Wlf0tRZ1
lY26cDVre+yNIs3X4jP9mjJ2OTeKvLeyGhE9YKqKQijpKCUxM6bYLHwsoYYB
/UnZUhS77O0X10yCZyhgsX3b/2GTw4whDOwhYL6zQWE0wluqrBhKMD0I+YFc
2zisjOygtAVLXZ2FhJZOTIXGWG4YSd9lQe61TTDNu+ESwB36gjn0eE2+zsqb
r+OiGiKeSkrUab1rJPj5huONmVzcQorVam3T+IW07o0cOgWSxIEgidABdKl2
1qQ10my832+RsaFgQJbx6FkXUaLtuZSDt7UMjlrRJNrKqWPSMlkt7RJGZJ86
+XHRiXuMmZWDCpq4F4NnacigGO2IrkqYDzsapMxlFGDYdTwS2ZweonhJ1UVc
X1Ea8DFEPaWr74hLezDvgvAjTaTZtjeX7s2ne+tvK+ro5H3jFIrPLiIkSX7h
RfDmtIAl6eh4nzp1h5mV4xdM/zunu8ue5JYyGfkGOXowJDAEcRm2A8PsxQFB
np9X11KndWgkfOiSa95Taq8WK6YJQt1uTXbUSlEhpYjQ1UWkMhPcbHkXo4Dz
5WKP8pnJNKE1L9Pig1zXUDNQ19T4QYRFm6dMq0WWcTN0zB3sd6nOWmLFEqyM
RpXK8/dtjZICGVJEDCMT2sSdhjSdOF2YKoy+ReXnkvJUxlV538/ocOE+0+Fi
9g6osbTkCAXsyOwGAGTWJZbBeKE5RmNeND+hWYySLNB8EFIsOtUj2eLyNTBd
qn/E2nKo3DJQvaGKuheBKNTxjL5xtHacoKumlEwGxtneUiN2hHcdG2baEOhj
Sk51s4P2tCgFpWIcPKHRJdZLxiF5hQu+msDwJISrm3R22HSFWAk9+4Rexg7v
QEG1zjeUjG32pdU6XLas4eUbDfcS4wnZKtHqaahpiFUZiAGJ922ZYyXkDrd3
oVIIbARmiiasQ+FsiNHUH0CdfVQ8SXO4zcKtZ4z2JSK2AV5AJM6q6yQHqzzA
wl16gJjbwAXt5EhS857r2fe0zUSWII2mRJvpQgj3XYDn+ga2IeC53ee0yGWn
GE4vVE3eD0jlBoB4zW0caN08CuvljUQVTvbEoNDLgBtIDxb2bgJ8zHI0isKR
MUQj5Ck5wyBdLFs16lnMosFMA9KcMYL5X20Ec6kVbGuy64d7Mc+VKd/WtFg1
rSJUhAo3VIFSZc/mKSftiKznunXaLBIoCksdm5ieGoTEJjzfLZmGhb5uWymt
QPJM8f3OOjhHkG9NWoeOEy84micWnNISSTBHAdrZbNu8jZQzC8WqQHVEjUhs
BVpDIwbCBBjgWNE83713JF2IQcVVjKwwB6bpUu5RXhIzjFvB90FOqDMM0tEp
e4DHScmKo2n8AwU+SM5gY5Q92R7gxCzMtI6VaWy501JDEMzuQsqFQy+rmWbD
9acLOVkEQywIwJEMEtCELwxDLt5ROvOwNkvEQoZlmKWDGrKIW+GFopRU7+cy
Eq4/gJTEEqvd2XbgNjYJOvNDZ+mUx8XseUyaA6JVzGyIlggQ/FaBNQJvmZcP
tV+lKuuMc8NCTApxDSyLbxFpJRFntaEwYNamWWBd5e0l1y6nAwLQUIm53qqk
tBYyr8sb4Jx1LsnNfFu23fQQzbYdNbXYgiorsaRDewsJSbW5LdoitXUQYpNA
6aumT3MoB6yNohsVRwwhu9caLt+hdUoKYzsU0YwQJ0j01KRf1TCtmEXMrs/i
tm0aeUu12RqKg1tW0+Q2ZmZUwa5jJ/I09yUcO5KQnsT0N1KW6gK91zFWV4qL
7XVOnCLpULMQp3msskdooom+HexRrfiz2IOyyRfHoCT5ny3bjTUCSCgCVrjb
gklwgTfNZ9AozZWYuFdVrFMShUkuOxgWRJGxWSzvrx7HSSJz3RENfy0Oapmi
/1wcPAmZAtHpq57ZFM+0EkdRiuqbwPePJMevUIzcUveUO9eYUWDpP4nYFUpb
99rKsRQ8oixNbVQwVFRVwyG3jyC5BpyunUlKAdqkM2zUcvBozOXPxbyX1CTt
l26g0QZq5moTEuB1OUVQWFNjDFEpWuWx3BqKmeQiJi+LZhgKQwVB8DOFSSkG
MkgR2Aam28Uk1Lnq6rPnW4JhVITtY0RBGjW7jDGa/7YYr4OB/+4P/PfAPwjj
7NMzD/xD/8g/9k/8t/67n/NZjCr7lf9tj7w7eXV4dH7y48n5n/z5ycvj12/h
2j24T1kqA5mBH/8KK/r98fGbwxcnP4KO9+r8+PTHwxd/pRW5PiwwSGz4+gSk
srFvqqMb5RwNNu7BfTLYXIsfT0PadqfFBVaUKbJyT+Lb0HpSkgq78KsC2/Fy
R4MomhEia+3rVuzeXWorfQBDke++SGLeCPLbRZ3Ncs4wuXWAERN/cexdszlT
nexIQxJbNJA8bDRcTL845e9jip7XAF37rzyvsIhwYFlyXGpujut2Q8V3Dbyk
7O62g9TxUid8T+D/WzlISkbrVuHq+MuCJ3/IGBEcZhEaXwXjWj4PRdtpoiCL
W5Ncb3Yba7V9PhchBBPO0KlZymyjLXdTitJHDFlVmG86Nw3snv0WwKcQspq1
lMGJSYZ+xq0DyeaZU2lb0mmkyjmOI8Ekjw6iF/b+p0/sdDTnK6iKhW1WxFy1
kAbZXEGsLOYccywNWM1kRSPdDAExLtDgoeVIFdafPdRBILsBOTsVs72K2Wqr
SuVpd5s8zT1qzLmgqhAuTswmVu/R3Xaiim6430UTNGgkEyKhdbqBxGHEDyXH
m0w9snuXXBpEw6LciGFI4s5aKry1AFkc5TIBDXlGqNQqF4vSlldUwZ5KQ4+C
XaVY4MBzKdYsDWrmmzr0FAgnH7qXBEpqMArlw2yerdukapuEUrSI69gm2SVX
loIt2KN9pKnb7NDmhkriIBxWq7qwHzIoo/yI9/eOxKZKdPafg80m85zNcp9Z
vJ8Xs9a6HLUuFOJpK50/zOMaYpcnVodUvO14kUm2J0SQkkuIVJg7RtXPTPxu
pomz2j5jqx4bN6ouDerzzOFUrq/EIlWgl7KYPdnTsfFDe+zRAauknDxOWPQL
NtHKLWdIZVxMLPpr8WUbqqR9VnsAc6QQsF1OrAEDq2MDgPYLvV3UcD16g7Rq
4IU0X9mtsvfFarNi6xTdSDo46vgCR0dlBLNSSxTz1tTs1xj7NMGr6tO+kcY8
duw2REQo30Hs0kOn1ReF73RgjqwEQGdaVLIrqgE+bTn+r9pcSF09zh0dmMop
9pO1g0nS3I/HqC9ybf0UhgpCCgmEDVKZMOqEIsmSTu1s1k7dUSh/HT5Z06iz
eDVsIeV7jkvU1j5NiCqlaL5NQ8X1U7t6t6AGQicjRzQTkm5/sR6xar7YNiU4
IzSdIeD2e/v4elPSUF0I/D2hutNIPWXtW0/yDgfovtYcSpX6e02PAjlhBQjd
JdKqRRcwhPAxONRCH2+pXKBqnbPzqqyusbW9PL1leoelEfJ5c+ucXTmSlsB6
Wmcho7Tdm1Tx/znAUGf+5wDi7OoG8BG5n45FIT6qTpJQiZYuO7hwKQ7jbXpl
xHt2RN18j8n8jJ1Gn4jqP58/9f6ly5fFRSGlCKe0uY6a1OHqUtrxzttLOYkY
4ahXahhwWm/WLWVVc4eVlgrr9MwWKgpfZ8l6RJ68KK6sogHDk01AvK6YKoZh
fn/eZHUbw+y3ImzVG485WsVb66qOxvwgTM4sECgnVfOn1sVSxINk6qCTstR4
mi9DLtdtsZ8aH9kDUKgE0rcWJs53qofMod2OfIah1uGdQ04noZT/N4r62GyM
QydM+4Kon0jCfS+q9dB0htL8RDRkKwVn1TJLfbBDhYMnQy6dwQrDiH3bej4Y
kdkGW4aelokvU2r+c5PxrNwSsVtJEZngcSh9L90pdFQcApEd5j8738ndSyrX
cIgHl6uRojOdbyNmwYrFrk5OhqwZSsOAj12WRKlrNMbnzN/dif/HAI5/To/P
T//knx2/OPzTbbbmL2xuNrOi3ZLb/WnpttQi6bdYJPtGSGetkCOlBcOWKA7p
aylZp2hsaispEPhFKPimeXeFduvT8kmx5XNkqgf7PthBkShjqZwBTLZBAdsq
t4xYiY0hmTZwwPXu0f5eN6Sjm87m2V+ooaqBgTpjQkk7vgzKWOIIHuiKy3IL
ufu4nSB/E66hKirSu1OVQNW2qFINZxdQNfPYljiZvdFcj2ExKa7ZJYpft+j7
hw90ztpCMGlQ3omR52A/Xb3QXBOkldvqWlTMJpS0irpZ5mtgsth6obnctPPq
GnN44MlQqqrfbMYYKJGBLKsMcyrmavRqqk09w+Z3l9lGYkFxQK0atX08G3Ze
lYviYlNLciBpAyqdUn0YRA7N97H5jFoXTGPv4L6EinFcii/GDA3pa2nFM+aW
/frUWkc7lB5MVkzNNTREKV36jGqvoSFYx3XJwMHQSHysv6+4GVN+moKy9zQb
Z6jMnHh6CQGxy5spscZT2WsbUizOtEuBmEsHHgo1hCjBx7TdkInUzB8LAXHa
Y1rbnBJsODCuKdqNuN/ZyM7M3C6Y4/tNzzHsnj2wNDKfqu9bUwDXNRbrz+eI
P3waw9tiKQMENjPzhAot9AsEkaZqsxazZMxOkapY2Giwfo8udEtlo4R6JwKH
2lrXVEON2yBu6XmkxZiCVZajwN2QPDJAwFM5R8T2QRKqNuoet4sNqJitOaWs
jKpMXqU2nuGCQsK3096+hSzr7NJLywSsv42vlVVJOVXmnBObuaOeXgTUzrkq
dEIyixY77VSzSCDi7gCR0EEskQGkZTCKslvyXz/c05RXlgS2deQJou39vaQX
UZBvOwfM/JljSLmdB1Lga2twOddOE547TWyoAV2Y32lf4fMXZ3cMC7ErJjBI
nqqwg8xdZXD7cSHcoFsSvI1lDCOBo9AmlAgbL8QCN6g/73usCENtPJchRZCp
4sNYyiYkKO8SI8bMns1K2gDu/bevofXFqjENDfTj4enJ4fcvjv2rty+/Pz71
r5/710fnx+dnP3egX7SiL1EfyuZ+KA7fIYGe6O2bw2fPTl79oJgmZCBWot1/
v78/8f41sUHh2BKZife105MZYxJMR7OW+5pxLzxgtXUZha41pae7aFLWKPPN
9CeUjlGyNxWPxAAU7/TEdZZOPWtuROdQNsY8NvKxkCWp3ogJHsRt5ErC32z6
uVTHTNSTkSHAEmc3+eUnQ4a8obohYn0YXusoWqHTeh4UTys7oLISg68DGfmX
f36V50m7XBaCFqHcDg6OuXlS60+SR6PME7y6AQx+PD47+j9MdYVWGnomwSVS
wgAoIJVVDUDrhQNi2ivHl2qcJQymVt0pgkszKkWIEp+lskkqCIREnJeCFJhS
QmMHJKlmQFGJSQ1vEPeu8rEsfMxFZrkZFSGCekRfhG7CVA8ErcvY9Te2KO71
/T1h9zEZIQ+DVKGNWBIPNldpzbw0y7YdhKIafphIJzTOgJ6XdhfWDMswz03Q
b7ImBsGa8NSMGv1co/GvCelqObbxXqo4PU8DLEwb6Ehn1sU659K9u8Ukn5Dw
owZEdCOVX7UUBED5c93kOaEKqiGw8fl9sBXssXRoQ9/Jr1X2Ol+x3aTFYm3U
jVAazLVo18RuVUmwQqdUgZBDLg6wIbdZxR3E8Bp38/LtwYfooQ/3BEjaRg1F
qL6LnzSPjgctscxuC04UE8Swe1pNhVxqKplytHW8InWrkpAZavK7zOIR3j+q
z0Elhwbyhcg3JgeBPetnrVjs0f0ndcgoZl+0NxsOQwm50gApNURJZM3Afvog
6O0nVI5xQZfQlla6Mz3+JCan02ZAboekSfW6j6pXnTy9w8eN6VZSlZotMgMe
CmFRErhBNh6M2iAKzFEd0aU2tHdxuMMJUCZ/jCTf4m/nM2IdDxEfW1/fPgdl
hmD0dqfBKrkDJUc3RrnDRsYa7sgZo+RPpo0NBEuge5hz7Ncg/ZObKS+bTZ2r
2c6Uv4N7zC3RYgdtk/kVs/xtlCU2urMdv3lNTnIk4T6SRaGfLS6Szo3EIxAG
K83m86s4+IZsDAQioezd0IyyiqVoBp320a1P4UXAJErvABozwXhNCegmAij9
QRPto2iifd59QKKCFDHFGqQoAUDFwQFUgm1qjRbQEqjkq6M3bz1a7LQUQbiy
QBpPbGix0EikjeojJk8tNiyT7rfaxpKKFbGhhbcr50i0hZ1PaxUVkJGhXIn9
PJzxRSV1b+DjQYlGwnzoYqXFcSQ+KACt1jzZTrJ2jHrg5gfI8wVLhw/2l2TN
hruqqXYYeSmllrgWNiAJ3jeN67K3sRxOlrY5XGyp6bnQNa1bTEeSXFcOrkxq
HVUzEN2k/heREaEAHVGDygsBMoVqUdpe0cReYTaMXW5iM7IJaEHLR5alRN12
lzV9Y2JdpUxc3mzTWcAlvdyUcxzb+le0YunEHdo+tINstLb1ujfrqtPpg+Zx
dl0d+HL7+BS72Vc5VK0jrMjGjn52RenVCWUvtq+mu4XbFkSnbsj+ljyokb/b
wboBxGbuUTQhH5ZXKbXS0fqL5fol8porQ5jbqGx6RqXAClTyROTicZ2OSp8C
kQ4ywUIqTg62ecV1LrJ+tMtAdIb6ctSQ3wY3t0TtSmouK9okuV6jTCQNYR2T
otulwm1C4e84gJCz3wciBWC/yjqltge2KSfbb7wq1II6pCFkm7bCmn98pahF
RS+tfkep/c4I1eAikCXhDbZJE3yuVTVyLIPXcJMJkpNO4nZFzGY5y+T9D0OF
+0vUVqhDOSdbUg44elWREuEAC++SPqdVw2YIoNi0ps26y82b6JvTh1XMMBFw
qY+OjIa2kFM2BcqTpRkrgKPrbIa7IIsqlnSDM0OeuyVwqRIRN2bnhVR+I6/3
xfRFKAzCzaxJBkfJxumuqH+I6pacKN6BAt+AjRYUXG3K0PpU2CN2MNFw53Tz
zSxD794qX1VUqoi9fU2ybbh8Q7t2VIoSsdnsGajHisKk2EGanBVKq1K0LxcN
BJDesEdneFRcuanQ5ckgE4oudOFAyQwsFKOKS1kSVFH0CBaDoBuUiFyIEqJu
C+TDiMWNSU0WYjyM3yBKUrliUZ5nMlcnVDLMQYVwOfsrVV5MS3PNoQ9h+2hB
qvNQkjTog6aAc9pnzdYmZS9yNqV+J0AtijXK5FKYkY0BQnEGk9F829EyNDdC
XOAcXhS61sH6RnYz6jTCAdBoo5Sim++2PVZMDBlRosa4AhHB9ySat3Emr7/O
xTlMJWuix0W67vUCS0cmR0ISxrqZeu1Q1JI7f3HG3/8rNQjW4sga+YBBTc+x
3c/dkrR+PtxMTOU26DmB3oP926DnPws9tx16lrTHvBnuDm4Ai5XjSsrH4Uzr
EMSZTdHT1BmVtaaEfoTm9QhP/uVFbGm/RwSJ6qfRWNNNDVo+Qg0oDV9Ic4DY
X+Dk5fH4j4cn55L+DZ81bY6q1MLpJe4cu0GL/p5pG18iXW9XfJ7fnz3zZxVW
t2v84ZuTILeAjlvkUsZPeSNa+c5e/+uLk1c/HJ9qFJ42k+tQJlo6jUu1ojQo
BsvMvm874qFgQjj7Ti0KtoFjsNyfqVrpcFGuEfdjp/D1LU9gSoWVSDh9jvsQ
fkZF59D/iZhpb3lwq+4XjVK3l05KdMBbDFPbSGlk+UZWddagAHc+C3iD0wnu
BsucSIhcXiFSRHFVFC27avUu9YERg7CcriExkg1FMMXaWZ+kQvePaemqIdlQ
m5duo0sdE0i0eVB8zKKWzD0LPQe3s8aQJlHfxonJfeJ/yyaR3og8kYIO3z16
89b1rSZkmkZ5J6svKPOHZCKhI9aCxTIz7n6LhEl+BzHjDQDAlLKABwZMcFRq
edntXO+UxUudHHXtdIzBQ5jXRNQL1kHFMcfyAe/+WtCIdAwS0aKqINFow0Wq
cHyqWuESL4OYNLXGEYY9kHaJ4y0Bi5daMKxTKAkAKODZDj+F8F0BGOC3xYr+
GcAlYjrCqmhdrFgUyzgtq3ZwU4xsVZMPTyRaswaeBe28Yx2m2oTc8hAt3crx
6nzNHqJb7whrUzzfyKRWx3BVKcjZIxxuN3hpP5PXHRy4BLJeRqe6kpyEZG0X
+2inrM1TEKsYUz9bZ0dJHXs9bwTvtspHg9P4rWHwW5JJvnCAu4T+iZ6PlhSf
xsyyUj1jtAg8Z75MplbUdXZnbARILykOjR1Gk+Ex4E9TSYZGD+ocar2XFXWo
hkHIwxRNP2pUFgvl16JbfZ1UnNk6B0VekxxpUcD9yz8/A82MKNKSitiUEl4F
uNnWBb37D5jGA3IOjBLcHRFtJGZYSgLAnUE0oXuTHt8/qLtdzCARzU6U1pji
kmpRHzCMDGWlNsxVSmLMHTv7whk3i3WOdbgQcsxijmCbVu9zrAdGsVktuVku
4Inr7KZB6UrdLQ0XZQ7lOobK8moRSIIufMbdjcT/4u7mf0nS4OGTFR90TqKg
+HyI2yRjFGhwbFqtJMeRczU2EYs40fcC3xs6l2PUy29+uT46cGK/RB9VV79p
lUBVA4NyHvOIs9uVUvRD+SxEKNCtH3SBgvBs6woOS4JSOM4Id3u/RoZW0dlt
LzuaWi6KRs60iWn06ujSZLtRgCIhjmjjWushARZ8T5Jyr8bupmTDNAZXGY6H
ZvZSXG+FdqPFEFUWt7WaAC0r2IP6PF2Wnqnhb/LL0C2o8Z9DutvV+C+EdF9E
l//15Xz7ikb/lkdFYxvktioa4kG9qpablX1dSwN1FYrthJxTQrsaBvll4UJM
WY3LYwF5yh9X3SNRM1yWepXUX6AW1m3RHsHAjtUlYlQYuQt2g5EwJMn2haE9
2MQFSI4kDclOt8vn7EjjuocYTywREzaK31aqi8xFYkyWuH/TKSXCPj27RnqI
m/6A0qQmpMaKZ1wjjbjuOvrI1hX5bPAW2AgCDNFvtDkglpiloYmy8GIrzSSH
haBv1Mkc0S3Fa8zJxWC5rLdcdkQm9GK1ZkuvINtAvEU85KD0DpbRtQUYaY/r
Dcj1s94Gzb7gKFYg2VDScsNV7Cm+o2w2q1BQF1bqOLyUgaK91ekjLciY2Y0q
iNZZezmisw/b5Ks2uEvMVtbqP6mOP6z+NbB0paoBwbDaDT3IVWby8qqoq5LV
/2Bhp+A5h00egcTAbCdvrh6iw57c1dJB57uDbz99kqBYcZjkIQAsQNQRIQ/v
al9QgjONqlPoE1Ms/Txy0mJGW89nalctOq3rt4OVqGo2w8Y82OYidpFQGA8G
BVE7hgiTgbjhZD6DrumZFtIoO6YeGhbXRBXPXmwqTIU5VgMEEptLPHJAgjYt
Bu2faOOdZK2Mfneb1N1x1sf7XmeVxlEhYFqsQrdyDvw2RHzlIdBGzAlx9xOf
NMIAlNnKxxEU+/urRip0R3aUOSk2hW0LQIvJsxVFCXA1sJY0oMDOQUAXOYCC
xClOJrjEG7KEbxcP4arIeyT6YD+THMuixDS5pLUKCuREwx3m9th4hKs8WEUQ
byToHDZcV8QQM7jo1L4G+NuaWzqJvS1sL4T8kDkSEIJr1ahnMXUa44R/AZWP
qyANiRpwyt8LNVXJTiLlEy/Ff6G5Yyti/CxzR/lZe8e2ef427R2oXnN+4vgk
wO48prvirTvGdQFnIEndWBR5vUPHlJ558Lv2xO+KK3eRrtq7MrFoE0pactNp
yljDjS2LnFLFwh1NzLcoifnSniBDTjPOYsMSDf0tdVR11Hb6KdNBFNTC/dGf
Lq16OusWoxIWRQ5sicJIMCzTOOM3IDHMsMolhhJJ97CADF47/N2yo4FD6uyI
HRjDqeCJNjuQ3xmDDrvOC4eV0bEsxKek5t33OfpVqk3NyaZakykTJPMf7tF6
Pzn3VsO2whOdnfQbifVTAF0aqDO4SSTKYezYiBeTcIfaDbmeLy5YC7UeKcp9
3P2aTxmPtIMV2jvCei/E6o8pLpyxSaRN+kGw7G2jNLBoKTxmyz2qVRxDeVeG
49pCp4RlVFLhuqTil8yephX7IHidtWSIuuF766dZk3d8OBgrkbeWcKS5NgRh
F24AMlIujKLFF4aATRBgfs1NutZrviugZjtTZtJcNy2QJHsOhzOM4J0ICzdQ
fXKwZwql/g7OfyeK+lrS/TlNJuWMQyEqQtqFuDoOuaUkNSmSGoJwUc2wOeF0
M+FsOTNlmgOhpWKxJTY5W1pID4bPaDqBqTxL108qa07SVJt3oXB7HxFKY26m
mONAYxSX8IojpwxvkXClqEr1M2OX+K3Oiy3FJrFbbScjPhTIQBYUueqgo52q
PpxHtKJydPO8vqg4FDR1HhFbi+1WgOHO8vkmdFbXevgmemuaG7scqZnJdJIu
zAWStU0fzGLKdMhJoq3ppmnzFSaXYSWKNtjXmXi2eM3KizvNEICCu1V3GIgg
uzDXZbZutFZF5qcb6fHFSICOiTprLvfCNIIjSLHYmJ7npHnA4YIyfREqW91S
MJrsGt3i3faGFLbUWSzx6ZLE8W3lSNUs281f+tTbA3LEhgqIgXhO9Xth2GLO
p76UmhhJljyodJrLfiXJ9NjHlqXp2LxeXUBJ80ldF/NFs5q0eEiMm8QbEjr7
YkErrlFAKpSMJZVR9mJNX1M5JL2mwyTIhVaxGCO5jfZ4zVZn52ugQlS2b69v
8BxFz9a64oKII1UUthaCcLQnImx7nksph/ihpJpyp6SL2ZtjGy3tWqP9g0Sq
iMvIJjJ7pRoBuqJvLemW2mf7kU1a221bmYsP9/iwyLVV52qPqbM6TzKUsw4+
SDEZ3EsMkSFswG/S3j3k+rn2JG9pGGrB8ZKNyDGGOmrtoI7i4X6m5hEqmbB9
noTgKUuHof5eaoPStVT0PwxFFQ8CVjFQeyQSmE3NKauyRNv5buTXQhLJEqah
ap0UHgI1H2oMbOPsZeMNg9VUUnuoI31rPBs7ZylImUAv+6GreHfRWhVYrqyB
lbC0ptCIm4ZsKR+uaBBrwYCom+pwMrHbMvN2xb28CapO7MEtrvKkpGNXbcQh
h3bbV2HCFXRbruBQfCjf3jR3keNyW5Zl550X1P+UjK1C4X9SmKHRbdYts4Mh
kPQUnI5VwJEoj01qTGVica+T7hV7DPYiua1BYQiOMSuDsxGFqcbQTtgwSIOd
SE5flbbqOVmTb0HtpFNppz1WdOr5oR5jt43atagEmfGzncNut6i4ux0ues9e
m8yzmCzuNHWJjXNxYxrEkbYAumWPrrXMwKb5edOtdrHEIuKMRzHkQ+asxAiZ
VlHjcjqkKGY1lgnwqQrJtwXFtttOwIUKZNym8LwD/KZYcvGt4qLkgtkzTO+Y
VSvTTFfK5PY6GDgkPt1aTMFTuTI1iW9bol4urUDGu23S+P/kyhFQgkdPVHvx
9uqSMQTHlItnr+9QmXJ6WxIxWn+TBxPjPIneLYECcm8uUfSkrsQ0T0wjER4T
f4awDNgQw+RirplT6wKZ0S9j6bW2pqqMHInZSoQqKZBp2IetDMXSB0qYHJon
vcBGSpIo3SztVtuPZnYECa6PHcTpoGTExqV3rnCnIbba6oMF71CvS32YVO9t
sF+IKcRLnc1sXCK6A7KmCV4rLci3+2iPebQUADs+ev3q1fHRuZTflOoKGBfe
KW2V4FwoKWFJdKhkVSWRhYnd4SR1ImIEmNmrjNAEx6KxKxIeVCtxOsIJDp5x
tg0+HLbry81qmtdajj3mieENmKFdf3IxCfX5WUf1EjjGKmnsWW9sNxgqx1Fm
FXMJTBlrtcw9ZrAuK87QA/FwswSim3P3aUTmhhxqAk8SXKLrOx4P80ptJ6Kx
VMqAzqkKXzbHxqLsLgtlMpYcHlrDsqsVyZZNvplX8XdqL8OwwltARsgAiHJW
k5aXlDdjG8b0hsyPWE3mUtVFqgFBNYpwdXJ6qN0qqbrBul18IKA9tWMBbCq0
kmqNKBHqP1iXlrIvMdaemjdVjutZh0SqSnTpoYYuVIzVVA0lV1mSZlbVbNlj
ntpsipbKkunXgDmxpDmCB1n8FZAyfIoEhbhTrekqcRlbBKhYUufSVt4jfFCt
Tu6NjBhm0JgqY7TsGhwJa22sZZTOdtnjSmqnm2OM3Upce/l8L8XZVgQ7BB8j
qmxMC3xIkBIz7qJxRKrfU6cjoAMPv3vi59kNCCYduyhddS1YJ8VetPEvx1wb
C5bjsMSRCYHnXFqenFCg1oWFsGlrArsG8AIvQ18mF3nkrAuyHXFcPNEQ3qH4
a2MYC8o5xFgsGVTtTkUS8uhifwXZBtUzOoqof3bJsaYf7jX80yeqOGbZdVLi
ilL3NfFJilo9efwYG0yh/QrEtItQLbZo3iEAN6UpARUELVHDRjSibMnFuMJZ
xnomBSkVf5FC/YGYohdVMgpxIfFGNiD/z3MxhhP6XlFFkOAZl3rAPb8+pxze
UAn70qVl2slKppGORPZjgSPMC08uoKEOCzIuXtBFkJoGI3oGv/gLETN0YAPt
FbFOv0NqFqLP1FomQXMbdTJUa1E5OmVlmZlgmYNqSUidaQGn8xdn1sZQaHlR
jblWuzkH6tx8w/QP3eWJJZfj+rhq1HTT3NBWAB9JrtY0C7wKKWBgpc4Q3T4M
WHdQ5k2BbGicaly6P5TWuVq+RYM4Crrxsa0ZPMwr2+MAHnZ/Guu2jhKeljvS
dKuFvJX+Py50VEOEH67e26kqVjbNfLyGh/CG0BEzHQ8zdUvx4qC06kmnuxVZ
wjlmTWWjFsmDsgoW5PBksTJq4Oimna14LbgTNr96CTyxpBZQsDQExhCTYqrG
8HNIJtLKX3x1lks1aBrp67AzEmos5BUOIDc3N2FOZn1hbe4nW7MgyKpyL3he
cZrUuQVBDaI01lgl0yOuVOzi8RGBuFHvJYhyU8Z+igZ5bbZWjM8CPAuXS0mH
mq21kg0vs6qtFpKxXyFNXXZCkAOdx2pqYgCmAB3Uf9DWOYnIHcJhiWOJInxZ
cROOAHNTdCpY78W54dBIx2ZqWs68QlFzVlHcV4hJs2WNzrgnBgp2t03AS8Kz
AsDP4zmbADBW6cijaQqzwLllgYua4EJ0rYfjk6Lg3EGjKmNnM5n95I2GxE3S
gByUYlEHxNZiFHtow+16ZZ19KOvsBhGY1Oetq/K3rQrZ8snhq0PkzaSRqnFE
asq9fkN2ztP8osDFsvBJLzCu1yEpC5Sw4qIMYshuyz4Tyit7vOeKiLQ8ZqOD
3iReAP4yFrU7/RLzHxwkC0jGTKYHQnHy8k0IEJmb6nrnWOLxqMIquvrmlpVI
YQYc8uAR9VNI33f6vliT2coUYn2TRhkf+b2P/hUe4EeqZAMa1UdYA502nPNH
93E8fgp/8Y/8Y37An2EYrLi6v08vwsxshqHhkNHO8fPnR+Pz75/58PABfBib
vtz+7H34cKD85+0vPfBj+uHBc/j2bckHiKYQzK6or1TySzpfYZIQmeuokOZH
/E+Ge7hPwz158jwdzjz05Nt9eeh7eujUzrOs4Ob7b0hiBjkEsWdJLMi8f6Tv
P++/L1Eh8DoIBLhYfs9Z1CX1cR7qTXXQSjzRjYQ0S4DLgkJvTUj5yfH5c7+j
gG38IVGBHeTkOyfHZz/4Q3wYkGkn1jdlAeLR/fuPpbToWQ4CDDoou/f+ROIF
VzmmuhTNSviSVtImjI3S+IuzWBjDGACpmr2puRtJUCR63KrjRiQTO6QZxtoc
tRpm6L+LFNr4+/BN2yzLthsiqyeVZOWK2mKI2ekj7Q55+kLh4Fg+nKSglvqU
lvmSoNgpdd/gNFn5DgHmzouVP7qsrsuRO82WawAaUOlm5H6HUYsVaphZPXIv
s/KnDWpD5TvYzGlWsbR2DpO+yFciy8NKi9pf5ss1GogwHKYuphsjvJhStrAu
TGGcZrN37v8Bb4jiJJb4AAA=

-->

</rfc>

