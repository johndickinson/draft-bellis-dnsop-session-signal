<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.7 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC7766 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7766.xml">
<!ENTITY RFC6891 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6891.xml">
<!ENTITY RFC7828 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7828.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC7830 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7830.xml">
<!ENTITY RFC1034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC2136 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2136.xml">
<!ENTITY RFC1918 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1918.xml">
<!ENTITY RFC2132 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2132.xml">
<!ENTITY RFC5226 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5226.xml">
<!ENTITY RFC7858 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7858.xml">
<!ENTITY RFC6763 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6763.xml">
<!ENTITY I-D.ietf-dnssd-push SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dnssd-push.xml">
<!ENTITY RFC0768 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.0768.xml">
<!ENTITY RFC1122 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1122.xml">
<!ENTITY I-D.ietf-dprive-padding-policy SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dprive-padding-policy.xml">
]>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-dnsop-session-signal-05" category="std" updates="RFC 7766, RFC 1035">

  <front>
    <title>DNS Stateful Operations</title>

    <author initials="R." surname="Bellis" fullname="Ray Bellis">
      <organization abbrev="ISC">Internet Systems Consortium, Inc.</organization>
      <address>
        <postal>
          <street>950 Charter Street</street>
          <city>Redwood City</city>
          <code>CA 94063</code>
          <country>USA</country>
        </postal>
        <phone>+1 650 423 1200</phone>
        <email>ray@isc.org</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>1 Infinite Loop</street>
          <city>Cupertino</city>
          <code>CA 95014</code>
          <country>USA</country>
        </postal>
        <phone>+1 408 974 3207</phone>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="J." surname="Dickinson" fullname="John Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>jad@sinodun.com</email>
      </address>
    </author>
    <author initials="S." surname="Dickinson" fullname="Sara Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>sara@sinodun.com</email>
      </address>
    </author>
    <author initials="A." surname="Mankin" fullname="Allison Mankin">
      <organization>Salesforce</organization>
      <address>
        <email>allison.mankin@gmail.com</email>
      </address>
    </author>
    <author initials="T." surname="Pusateri" fullname="Tom Pusateri">
      <organization>Unaffiliated</organization>
      <address>
        <postal>
          <street></street>
          <city>Raleigh</city>
          <code>NC 27608</code>
          <country>USA</country>
        </postal>
        <phone>+1 919 867 1330</phone>
        <email>pusateri@bangj.com</email>
      </address>
    </author>

    <date year="2017" month="November" day="30"/>

    <area>Internet</area>
    <workgroup>DNSOP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document defines a new DNS OPCODE, for DNS Stateful Operations (DSO).
DSO messages are used to communicate operations within persistent
stateful sessions, expressed using type-length-value (TLV) syntax.
This document defines an initial set of TLVs, including ones
used to manage session timeouts and termination,
as well as defining new stateful operations
not supported by the existing EDNS(0) mechanism.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The use of transports for DNS other than UDP is being increasingly specified,
for example, DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> and DNS over TLS <xref target="RFC7858"/>.
Such transports can offer persistent, long-lived sessions and therefore when
using them for transporting DNS messages it is of benefit to have a mechanism
that can establish parameters associated with those sessions, such as timeouts.
In such situations it is also advantageous to support server initiated messages.</t>

<t>The existing EDNS(0) Extension Mechanism for DNS <xref target="RFC6891"/> is explicitly
defined to only have “per-message” semantics. Whilst EDNS(0) has been used to
signal at least one session-related parameter (the EDNS(0) TCP Keepalive option
<xref target="RFC7828"/>) the result is less than optimal due to the restrictions
imposed by the EDNS(0) semantics and the lack of server-initiated signalling. 
For example, a server cannot arbitrarily 
instruct a client to close a connection because the server can only send EDNS(0) options 
in responses to queries that contained EDNS(0) options.</t>

<t>This document defines a new DNS OPCODE, for DNS Stateful Operations (DSO).
DSO messages are used to communicate operations within persistent
stateful sessions, expressed using type-length-value (TLV) syntax.
This document defines an initial set of TLVs, including ones
used to manage session timeouts and termination.</t>

<t>All three of the TLVs defined here are mandatory for all implementations of DSO.
Additional TLVs may be defined in additional specifications.</t>

<t>It should be noted that the message format for DNS Stateful Operations
(see <xref target="format"/>) differs from the traditional DNS message
format used for standard queries and responses.
The standard twelve-octet header is used, but the four count fields
(QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) are set to zero and their
corresponding sections are not present.
The actual data pertaining to DNS Stateful Operations
(expressed in TLV format) is appended to the end of the DNS message header.
When displayed using packet analyzer tools that have not been
updated to recognize the DNS Stateful Operations format, this
will result in the Stateful Operations data being displayed
as unknown additional data after the end of the DNS message.
It is likely that future updates to these tools will add the ability
to recognize, decode, and display the Stateful Operations data.</t>

<t>This new format has distinct advantages over an RR-based format because it
is more explicit and more compact. Each TLV definition is specific
to the use case, and as a result contains no redundant or overloaded fields.
Importantly, it completely avoids conflating DNS Stateful Operations in anyway 
with normal DNS operations or with existing EDNS(0) based functionality.
A goal of this approach is to avoid the operational issues that have
befallen EDNS(0), particularly relating to middle-box behaviour.</t>

<t>With EDNS(0), multiple options may be packed into a single OPT pseudo-RR,
and there is no generalized mechanism for a client to be able to tell
whether a server has processed or otherwise acted upon each individual
option within the combined OPT RR.
The specifications for each individual option need to define how each
different option is to be acknowledged, if necessary.</t>

<t>In contrast to EDNS(0), with DNS Stateful Operations there is no
compelling motivation to pack multiple operations into a single
message for efficiency reasons, because DNS Stateful Operations
always operates using a connection-oriented transport protocol.
Each Stateful operation is communicated in its own separate
DNS message, and the transport protocol can take care of packing
separate DNS messages into a single IP packet if appropriate.
For example, TCP can pack multiple small DNS messages into a single TCP segment.
This simplification allows for clearer semantics.
Each DSO request message communicates just one primary operation,
and the RCODE in the corresponding response message indicates the
success or failure of that operation.</t>

</section>
<section anchor="terminology" title="Terminology">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and
“OPTIONAL” in this document are to be interpreted as described in
“Key words for use in RFCs to Indicate Requirement Levels” <xref target="RFC2119"/>.</t>

<t>“DSO” is used to mean DNS Stateful Operation.</t>

<t>The term “connection” means a bidirectional byte stream of reliable,
in-order messages, such as provided by using
DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> or DNS over TLS <xref target="RFC7858"/>.</t>

<t>The unqualified term “session” in the context of this document means the exchange of
DNS messages over a connection where:</t>

<t><list style="symbols">
  <t>The connection between client and server is persistent and relatively
long-lived (i.e., minutes or hours, rather than seconds).</t>
  <t>Either end of the connection may initiate messages to the other.</t>
</list></t>

<t>A “DSO Session” is established between two endpoints that
acknowledge persistent DNS state via the exchange of DSO messages
over the connection. This is distinct from, for example a DNS-over-TCP session
as described in RC7766.</t>

<t>A “DSO Session” is terminated when the underlying connection is closed.</t>

<t>The term “server” means the software with a listening socket, awaiting
incoming connection requests.</t>

<t>The term “client” means the software which initiates a connection
to the server’s listening socket.</t>

<t>The terms “initiator” and “responder” correspond respectively to the
initial sender and subsequent receiver of a DSO request message,
regardless of which was the “client” and “server” in the usual DNS sense.</t>

<t>The term “sender” may apply to either an initiator
(when sending a DNS Stateful Operation request message)
or a responder (when sending a DNS Stateful Operation response message).</t>

<t>Likewise, the term “receiver” may apply to either a responder
(when receiving a DNS Stateful Operation request message)
or an initiator (when receiving a DNS Stateful Operation response message).</t>

<t>DNS Stateful Operations are expressed using type-length-value (TLV) syntax.</t>

<t>Two timers (elapsed time since an event) are defined in this document:</t>

<t><list style="symbols">
  <t>an inactivity timer (see <xref target="keepalive"/> and <xref target="inactivetimer"/>)</t>
  <t>a keepalive timer (see <xref target="keepalive"/> and <xref target="keepalivetimer"/>)</t>
</list></t>

<t>The timeouts associated with these timers are called the inactivity timeout and 
the keepalive interval respectively. 
The term “Session Timeouts” is used to refer to this pair of timeout values.</t>

<t>Reseting a timer means resetting the timer value to zero and starting the timer 
again. Clearing a timer means resetting the timer value to zero but NOT starting 
the time again.</t>

</section>
<section anchor="discussion" title="Discussion">

<t>There are several use cases for DNS Stateful operations that can 
be described here.</t>

<t>Firstly, establishing session parameters such as server defined timeouts is of 
great use in the 
general management of persistent connections. For example, using DSO sessions 
for stub to recursive DNS-over-TLS <xref target="RFC7858"/> is more flexible for both the 
client and the server than attempting to manage sessions using just the EDNS(0)
TCP Keepalive option
<xref target="RFC7828"/>. The simple set of TLVs defined in this document is
sufficient to greatly enhance connection management for this use case.</t>

<t>Secondly, DNS-SD <xref target="RFC6763"/> has evolved into a naturally session based mechanism where,
for example, long-lived subscriptions lend themselves to ‘push’ mechanisms as 
opposed to polling. Long-lived stateful connections and server initiated 
messages align with this use case <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>A general use case is that DNS traffic is often bursty but session establishment 
can be expensive. One challenge with long-lived connections is to maintain 
sufficient traffic to maintain NAT and firewall state.
To mitigate this issue this document introduces a
new concept for the DNS, that is DSO “Keepalive traffic”.
This traffic carries no DNS data and is not considered ‘activity’
in the classic DNS sense, but serves to maintain state in middle boxes,
and to assure client and server that they still have connectivity to each other.</t>

<t>There are a myriad of other potential use cases for DSO given the versatility 
and extensibility of this specification.</t>

<t><xref target="details"/> of this document describes the protocol details of DNS Stateful
Operations including definitions of three TLVs for session management and 
encryption padding. <xref target="lifecycle"/> presents a
detailed discussion of the DSO Session lifecycle including an
in-depth discussion of keepalive traffic and session termination.</t>

</section>
<section anchor="details" title="Protocol Details">

<section anchor="establishment" title="DSO Session Establishment">

<t>DSO messages MUST only be carried in protocols and in
environments where a session may be established according to the definition above.
Standard DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/>, and DNS over TLS <xref target="RFC7858"/>
are suitable protocols.</t>

<t>DNS over plain UDP <xref target="RFC0768"/> is not appropriate since it fails on the requirement for
in-order message delivery, and, in the presence of NAT gateways and firewalls
with short UDP timeouts, it fails to provide a persistent bi-directional
communication channel unless an excessive amount of keepalive traffic is used.</t>

<t>In some environments it may be known in advance by external means
that both client and server support DSO, and in these cases either
client or server may initiate DSO messages at any time.</t>

<t>However, in the typical case a server will not know in advance whether a
client supports DSO, so in general, unless it is known in advance by other means
that a client does support DSO, a server MUST NOT initiate DSO request messages
until a DSO Session has been mutually established, as described below.
Similarly, unless it is known in advance by other means that a server
does support DSO, a client MUST NOT initiate non-response-requiring
DSO request messages until after a DSO Session has been mutually established.</t>

<t>Many, but not all, DSO request messages sent by an initiator
elicit a response from the responder.
Whether or not a given DSO request message elicits a response is
determined by whether or not the first DSO TLV (see <xref target="tlvformat"/>)
in the message (the Primary TLV) is one that is specified to generate a response.</t>

<t>A DSO Session is established over a connection by the client
sending a DSO request message of a kind that requires a response,
such as the DSO Keepalive Operation TLV (see <xref target="keepalive"/>),
and receiving a response, with matching MESSAGE ID, and RCODE
set to NOERROR (0), indicating that the DSO request was successful.</t>

<t>If the RCODE is set to DSONOTIMP (tentatively 11) this indicates
that the server does support DSO, but does not support the particular
operation the client requested.
A server MUST NOT return DSONOTIMP for the DSO Keepalive Operation
TLV, but this could happen in the future, if a client attempts to
establish a DSO Session using a future response-requiring DSO TLV
which the server does not understand.
If the server returns DSONOTIMP then a DSO Session is not
considered established, but the client is permitted to continue
sending DNS messages on the connection,
including other response-requiring DSO messages such as the DSO Keepalive,
which may result in a successful NOERROR response,
yielding the establishment of a DSO Session.</t>

<t>If the RCODE is set to any value other than NOERROR (0) or DSONOTIMP
(tentatively 11), then the client should assume that the server does
not support DSO. In this case the client is permitted to continue
sending DNS messages on that connection, but the client SHOULD NOT
issue further DSO messages on that connection.</t>

<t>When the server receives a response-requiring DSO request message
from a client, and transmits a sucessful NOERROR response to that
request, the server considers the DSO Session established.</t>

<t>When the client receives the server’s NOERROR response to its
DSO request message, the client considers the DSO Session established.</t>

<t>Once a DSO Session has been established,
either end may unilaterally send DSO messages at any time,
and therefore either client or server may be the initiator of a message.</t>

<t>Once a DSO Session has been established,
clients and servers should behave as described in this specification with
regard to inactivity timeouts and connection close, not as prescribed in
the previous specification for DNS over TCP <xref target="RFC7766"/>.</t>

<section anchor="middle-box-considerations" title="Middle-box Considerations">

<t>Where an application-layer middle box (e.g., a DNS proxy, forwarder, or
session multiplexer) is in the path the middle box MUST NOT blindly
forward DSO messages in either direction, and MUST treat the inbound
and outbound connections as separate sessions.  This does not preclude
the use of DSO messages in the presence of an IP-layer middle box such
as a NAT that rewrites IP-layer and/or transport-layer headers, but
otherwise preserves the effect of a single session between the client
and the server.</t>

<t>To illustrate the above, consider a network where a middle box
terminates one or more TCP connections from clients and multiplexes the
queries therein over a single TCP connection to an upstream server.  The
DSO messages and any associated state are specific to the individual
TCP connections.  A DSO-aware middle box MAY in some circumstances be
able to retain associated state and pass it between the client and
server (or vice versa) but this would be highly TLV-specific.  For
example, the middle box may be able to maintain a list of which clients
have made Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/> and
make its own subscription(s) on their behalf, relaying any subsequent
notifications to the client (or clients) that have subscribed to that
particular notification.</t>

</section>
</section>
<section anchor="format" title="Message Format">

<t>A DSO message begins with
the standard twelve-octet DNS message header <xref target="RFC1035"/>
with the OPCODE field set to the DSO OPCODE (tentatively 6).
However, unlike standard DNS messages, the question section, answer section,
authority records section and additional records sections are not present.
The corresponding count fields (QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) MUST be
set to zero on transmission.</t>

<t>If a DSO message is received where any of the count fields are
not zero, then a FORMERR MUST be returned,
unless a future document specifies otherwise.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                          MESSAGE ID                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |QR |    OPCODE     |            Z              |     RCODE     |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     QDCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ANCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     NSCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ARCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                           DSO Data                            /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<section anchor="header" title="Header">

<t>In a request the MESSAGE ID field MUST be set to a unique value, that the
initiator is not currently using for any other active operation on this 
connection.
For the purposes here, a MESSAGE ID is in use in this DSO Session if the
initiator has used it in a request for which it has not yet received a
response, or if the client has used it to setup state that it has not yet
deleted. For example, state could be a subscription <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>In a response the MESSAGE ID field MUST contain a copy of the value of the
MESSAGE ID field in the request being responded to.</t>

<t>In a request the DNS Header QR bit MUST be zero (QR=0).
If the QR bit is not zero the message is not a request.</t>

<t>In a response the DNS Header QR bit MUST be one (QR=1).
If the QR bit is not one the message is not a response.</t>

<t>The DNS Header OPCODE field holds the DSO OPCODE value (tentatively 6).</t>

<t>The Z bits are currently unused in DSO messages,
and in both DSO requests and DSO responses the
Z bits MUST be set to zero (0) on transmission and MUST be silently ignored
on reception, unless a future document specifies otherwise.</t>

<t>In a request message (QR=0) the RCODE is generally set to zero on transmission,
and silently ignored on reception, except where specified otherwise
(for example, the Retry Delay operation (see <xref target="delay"/>), where the RCODE indicates the reason
for termination).</t>

<t>The RCODE value in a response may be one of the following values:</t>

<texttable>
      <ttcol align='right'>Code</ttcol>
      <ttcol align='left'>Mnemonic</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>0</c>
      <c>NOERROR</c>
      <c>Operation processed successfully</c>
      <c>1</c>
      <c>FORMERR</c>
      <c>Format error</c>
      <c>2</c>
      <c>SERVFAIL</c>
      <c>Server failed to process request due to a problem with the server</c>
      <c>3</c>
      <c>NXDOMAIN</c>
      <c>Name Error — Named entity does not exist (TLV-dependent)</c>
      <c>4</c>
      <c>NOTIMP</c>
      <c>DSO not supported</c>
      <c>5</c>
      <c>REFUSED</c>
      <c>Operation declined for policy reasons</c>
      <c>9</c>
      <c>NOTAUTH</c>
      <c>Not Authoritative (TLV dependent)</c>
      <c>11</c>
      <c>DSONOTIMP</c>
      <c>DSO type code not supported</c>
</texttable>

<t>Use of the above RCODEs is likely to be common in DSO but 
does not preclude the definition and use of other codes in future documents that 
make use of DSO.</t>

<t>If a document describing a DSO makes use of either NXDOMAIN (Name Error)
or NOTAUTH then that document MUST explain the meaning.</t>

</section>
<section anchor="dsodata" title="DSO Data">

<t>The standard twelve-octet DNS message header is followed by the DSO Data.</t>

<t>The first TLV in a DSO request message is called the Operation 
TLV. Any subsequent TLVs after this initial Operation TLV are called Modifier TLVs.</t>

<t>Depending on the operation a DSO response can contain:</t>

<t><list style="symbols">
  <t>No TLVs</t>
  <t>Only an Operation TLV</t>
  <t>An Operation TLV followed by one or more Modifier TLVs</t>
  <t>Only Modifier TLVs</t>
</list></t>

<section anchor="tlvformat" title="TLV Format">

<t>Operation and modifier TLVs both use the same encoding format.</t>

<t>The Acknowledgement bit in an Operation TLV of a request dictates if a response is to be sent. The Operation TLV may or may not be echoed back in the response according to the definition of the TLV. Each Operation TLV definition should stipulate whether an acknowledgement is REQUIRED. If the Operation TLV is not included in the response according to the TLV definition, the matching identifier in the standard DNS Header response is sufficient as an acknowledgement. If the TLV Acknowledgement bit is cleared in a request, a response MUST NOT be sent. The Acknowledgement bit is NEVER set in a response. Modifier TLVs MUST NEVER set the Acknowledgement bit in request or response.</t>

<t>It is by design that Operation TLVs SHOULD normally require a response and, therefore, set the TLV Acknowledgement bit in a request. However, for some Operation TLVs, this may be undesirable and the TLV Acknowledgement bit MAY be cleared in the request.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   | A |                        DSO-TYPE                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                        DSO DATA LENGTH                        |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                      TYPE-DEPENDENT DATA                      /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='A:'>
  A 1-bit TLV Response flag indicating whether or not an Operation TLV requires
a response Acknowledgement. This bit is never set in responses to Operation TLVs and never set in Modifier TLVs in either direction.</t>
  <t hangText='DSO-TYPE:'>
  A 15-bit field in network order giving the type of the current DSO TLV per
the IANA DSO Type Codes Registry.</t>
  <t hangText='DSO DATA LENGTH:'>
  A 16-bit field in network order giving the size in octets of
the TYPE-DEPENDENT DATA.</t>
  <t hangText='TYPE-DEPENDENT DATA:'>
  Type-code specific format.</t>
</list></t>

<t>Where domain names appear within TYPE-DEPENDENT DATA, they MAY be compressed 
using standard DNS name compression. However, the compression MUST NOT point
outside of the TYPE-DEPENDENT DATA section and offsets MUST be from the start
of the TYPE-DEPENDENT DATA.</t>

</section>
<section anchor="operation-tlvs" title="Operation TLVs">

<t>An “Operation TLV” specifies the operation to be performed.</t>

<t>A DSO message MUST contain at most one Operation TLV.</t>

<t>In all cases a DSO request message MUST contain exactly one 
Operation TLV, indicating the operation to be performed.</t>

<t>Depending on the operation, a DSO response message MAY contain no 
Operation TLV, because it is simply a response to a previous request message,
and the MESSAGE ID in the header is sufficient to identify the request in 
question. Or it may contain a single corresponding response Operation TLV, with 
the same DSO-TYPE as in the request message. The specification for each DSO
type determines whether a response for that operation type 
is required to carry the Operation TLV.</t>

<t>If a DSO response is received for an operation which requires
that the response carry an Operation TLV, and the required Operation TLV is not
the first DSO TLV in the response message, then this is a fatal 
error and the recipient of the defective response message MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
<section anchor="modifier-tlvs" title="Modifier TLVs">

<t>A “Modifier TLV” specifies additional parameters
relating to the operation. Immediately following the Operation TLV, if present,
a DSO message MAY contain one or more Modifier TLVs.</t>

</section>
<section anchor="unrecognized-tlvs" title="Unrecognized TLVs">

<t>If a DSO request is received containing an unrecognized
Operation TLV, the receiver MUST send a response with matching
MESSAGE ID, and RCODE DSONOTIMP (tentatively 11). The response MUST NOT contain 
an Operation TLV.</t>

<t>If a DSO message (request or response) is received
containing one or more unrecognized Modifier TLVs, the unrecognized
Modifier TLVs MUST be silently ignored, and the remainder of the message
is interpreted and handled as if the unrecognized parts were not present.</t>

</section>
</section>
<section anchor="edns0-and-tsig" title="EDNS(0) and TSIG">

<t>Since the ARCOUNT field MUST be zero, a DSO message
MUST NOT contain an EDNS(0) option in the additional records section.
If functionality provided by current or future EDNS(0) options is desired
for DSO messages, an Operation TLV or
Modifier TLV needs to be defined to carry the necessary information.</t>

<t>For example, the EDNS(0) Padding Option <xref target="RFC7830"/> used for security purposes
is not permitted in a DSO message,
so if message padding is desired for DSO messages
then the Encryption Padding TLV described in <xref target="padding"/> MUST be used.</t>

<t>Similarly, a DSO message MUST NOT contain a TSIG record.
A TSIG record in a conventional DNS message is added as the last record
in the additional records section, and carries a signature computed over
the preceding message content. Since DSO data appears
after the additional records section, it would not be included in the
signature calculation. 
If use of signatures with DSO messages becomes necessary in the 
future, an explicit Modifier TLV needs to be defined to 
perform this function.</t>

<t>Note however that, while DSO <spanx style="emph">messages</spanx> cannot include
EDNS(0) or TSIG records, a DSO <spanx style="emph">session</spanx> is typically used to 
carry a whole series of DNS messages of different kinds, including DSO
messages, and other DNS message types like Query <xref target="RFC1034"/> 
<xref target="RFC1035"/> and Update <xref target="RFC2136"/>, and those messages can carry EDNS(0) and 
TSIG records.</t>

<t>This specification explicitly prohibits use of the
EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>
in <spanx style="emph">any</spanx> messages sent on a DSO Session (because it duplicates
the functionality provided by the DSO Keepalive operation),
but messages may contain other EDNS(0) options as appropriate.</t>

</section>
</section>
<section anchor="message-handling" title="Message Handling">

<t>The initiator MUST set the value of the QR bit in the DNS header to
zero (0), and the responder MUST set it to one (1).
Every DSO request message (QR=0) with the Acknowledgement bit set in the
operation TLV MUST elicit a response (QR=1), which MUST have the same
MESSAGE ID in the DNS message header as in the corresponding request.
DSO request messages sent by the client with the Acknowledgement
bit set in the operation TLV elicit a response from the server, and
DSO request messages sent by the server with the Acknowledgement
bit set in the operation TLV elicit a response from the client.</t>

<t>A DSO request message (QR=0) with the Acknowledgement bit clear in the
operation TLV MUST NOT elicit a response.</t>

<t>The namespaces of 16-bit MESSAGE IDs are disjoint in each direction.
For example, it is <spanx style="emph">not</spanx> an error for both client and server to send a request
message with the same ID. In effect, the 16-bit MESSAGE ID combined with the 
identity of the initiator (client or server) serves as a 17-bit unique 
identifier for a particular operation on a DSO Session.</t>

<t>As described in <xref target="header"/> An initiator MUST NOT reuse a MESSAGE ID that is 
already in use for an 
outstanding request, unless specified otherwise by the relevant specification 
for the DSO in question. At the very least, this means 
that a MESSAGE ID MUST NOT be reused in a particular direction
on a particular DSO Session while the initiator is waiting for a response to a 
previous request using that MESSAGE ID on that DSO Session,
unless specified otherwise by the relevant 
specification for the DSO in question.
(For a long-lived state the MESSAGE ID for the operation
MUST NOT be reused whilst that state remains active.)</t>

<t>If a client or server receives a response (QR=1) where the MESSAGE ID does not
match any of its outstanding operations, this is a fatal error and it MUST 
immediately terminate the connection with a TCP RST (or equivalent for other 
protocols).</t>

</section>
<section anchor="dso-response-generation" title="DSO Response Generation">

<t>With most TCP implementations, for DSO requests that generate a response,
the TCP data acknowledgement (generated because data has been received by TCP),
the TCP window update (generated because TCP has delivered that data to the receiving software),
and the DSO response (generated by the receiving application-layer software itself)
are all combined into a single IP packet.
Combining these three elements into a single IP packet gives a
potentially significant improvement in network efficiency.</t>

<t>For DSO requests that do not generate a response,
the TCP implementation generally doesn’t have any way to know
that no response will be forthcoming, so it waits fruitlessly
for the application-layer software to generate a response,
until the Delayed ACK timer fires <xref target="RFC1122"/> (typically 200 milliseconds)
and only then does it send the TCP ack and window update.
In conjunction with Nagle’s Algorithm at the sender,
this can delay the sender’s transmission of its next
(non-full-sized) TCP segment, while the sender is waiting for
its previous (non-full-sized) TCP segment to be acknowledged.
Nagle’s Algorithm exists to combine multiple small
application writes into more efficient large TCP segments,
to guard against wasteful use of the network by applications
that would otherwise transmit a stream of small TCP segments,
but in this case Nagle’s Algorithm (created to improve network efficiency)
can interact badly with TCP’s Delayed ACK feature
(also created to improve network efficiency) <xref target="NagleDA"/>.</t>

<t>Possible mitigations for this problem include:</t>

<t><list style="symbols">
  <t>Disabling Nagle’s Algorithm at the sender.
This is not great, because it results in less efficient use of the network.</t>
  <t>Disabling Delayed ACK at the receiver.
This is not great, because it results in less efficient use of the network.</t>
  <t>Using a networking API that lets the receiver signal to the TCP
implementation that the receiver has received and processed a client
request for which it will not be generating any immediate response.
This allows the TCP implementation to operate efficiently in both cases;
for requests that generate a response, the TCP ack, window update, and
DSO response are transmitted together in a single TCP segment,
and for requests that do not generate a response,
the application-layer software informs the TCP implementation
that it should go ahead and send the TCP ack and window update
immediately, without waiting for the Delayed ACK timer.
Unfortunately it is not known at this time which (if any) of the
widely-available networking APIs currently include this capability.</t>
</list></t>

</section>
</section>
<section anchor="lifecycle" title="DSO Session Lifecycle and Timers">

<section anchor="dso-session-initiation" title="DSO Session Initiation">

<t>A session begins when a client makes a new connection to a server.</t>

<t>A DSO Session begin as described in <xref target="establishment"/>.</t>

<t>The client may perform as many DNS operations as it wishes using the
newly created DSO Session. Operations SHOULD be pipelined (i.e., the
client doesn’t need wait for a response before sending the next message).
The server MUST act on messages in the order they are transmitted, but
responses to those messages MAY be sent out of order, if appropriate.</t>

</section>
<section anchor="sessiontimeouts" title="DSO Session Timeouts">

<t>Two timeout values are associated with a DSO Session: the inactivity timeout, and 
the keepalive interval.</t>

<t>The first timeout value, the inactivity timeout, is the maximum time for which
a client may speculatively keep a DSO Session open in the expectation that
it may have future requests to send to that server.</t>

<t>The second timeout value, the keepalive interval, is the maximum permitted
interval between client messages to the server if the client wishes to keep
the DSO Session alive.</t>

<t>The two timeout values are independent. The inactivity timeout may be lower, the 
same, or higher than the keepalive interval, though in most cases the inactivity 
timeout is expected to be shorter than the keepalive interval.</t>

<t>Only when the client has a very long-lived low-traffic state does the 
keepalive interval come into play, to ensure that a sufficient residual
amount of traffic is generated to maintain NAT and firewall state
and to assure client and server that they still have connectivity to each other.</t>

<t>On a new DSO Session, if no explicit DSO Keepalive message exchange has taken 
place, the default value for both timeouts is 15 seconds.
For both timeouts, lower values of the timeout result in higher network traffic
and higher CPU load on the server.</t>

</section>
<section anchor="inactivetimer" title="Inactive DSO Sessions">

<t>At both servers and clients, the generation or reception of any complete
DNS message, including DNS requests, responses, updates, or DSO
messages, resets both timers for that DSO Session, with the exception
that a DSO Keepalive message resets only the keepalive timer, not the inactivity 
timeout timer.</t>

<t>In addition, for as long as the client has an outstanding operation in progress,
the inactivity timer remains cleared, and an inactivity 
timeout cannot occur.</t>

<t>For short-lived DNS operations like traditional queries and updates,
an operation is considered in progress for the time between request and 
response, typically a period of a few hundred milliseconds at most.
At the client, the inactivity timer is cleared upon transmission of a 
request and remains cleared until reception of the corresponding response.
At the server, the inactivity timer is cleared upon reception of a request
and remains cleared until transmission of the corresponding response.</t>

<t>For long-lived DNS Stateful operations, an operation is considered in progress
for as long as the state is active, until it is cancelled.
This means that a DSO Session can exist, with a state 
active, with no messages flowing in either direction, for far longer than the 
inactivity timeout, and this is not an error. This is why there are two separate 
timers: the inactivity timeout, and the keepalive interval.
Just because a DSO Session has no traffic for an extended period of time
does not automatically make that DSO Session “inactive”,
if it has an active state that is awaiting events.</t>

</section>
<section anchor="the-inactivity-timeout" title="The Inactivity Timeout">

<t>The purpose of the inactivity timeout is for the server to balance its trade off 
between the costs of setting up new DSO Sessions and the costs of maintaining inactive 
DSO Sessions. A server with abundant DSO Session capacity can offer a high inactivity timeout, 
to permit clients to keep a speculative DSO Session open for a long time, to save 
the cost of establishing a new DSO Session for future communications with that 
server. A server with scarce memory resources can offer a low inactivity timeout,
to cause clients to promptly close DSO Sessions whenever they have no outstanding
operations with that server, and then create a new DSO Session later when needed.</t>

<section anchor="closing-inactive-dso-sessions" title="Closing Inactive DSO Sessions">

<t>A client is NOT required to wait until the inactivity timeout expires
before closing a DSO Session.
A client MAY close a DSO Session at any time, at the client’s discretion.
If a client determines that it has no current or reasonably anticipated
future need for an inactive DSO Session, then the client SHOULD close that connection.</t>

<t>If, at any time during the life of the DSO Session,
the inactivity timeout value (i.e., 15 seconds by default) elapses
without there being any operation active on the DSO Session,
the client MUST gracefully close the connection with a
TLS close_notify followed by a TCP FIN (or equivalent for other protocols).</t>

<t>If, at any time during the life of the DSO Session,
twice the inactivity timeout value (i.e., 30 seconds by default),
or five seconds, if twice the inactivity timeout value is less than five seconds,
elapses without there being any operation active on the DSO Session,
the server SHOULD consider the client delinquent,
and forcibly abort the DSO Session.
For DSO Sessions over TCP (or over TLS over TCP),
to avoid the burden of having a connection in TIME-WAIT state,
instead of closing the connection gracefully the server SHOULD abort
the connection with a TCP RST (or equivalent for other protocols).
(In the BSD Sockets API this is achieved by setting the
SO_LINGER option to zero before closing the socket.)</t>

<t>In this context, an operation being active on a DSO Session includes
a query waiting for a response, an update waiting for a response,
or active state,
but not a DSO Keepalive message exchange itself.
A DSO Keepalive message exchange resets only the keepalive
interval timer, not the inactivity timeout timer.</t>

<t>If the client wishes to keep an inactive DSO Session open for longer than
the default duration without having to send traffic every 15 seconds,
then it uses the DSO Keepalive message to request
longer timeout values, as described in <xref target="keepalive"/>.</t>

</section>
<section anchor="values-for-the-inactivity-timeout" title="Values for the Inactivity Timeout">

<t>For the inactivity timeout value, lower values result in
more frequent DSO Session teardown and re-establishment.
Higher values result in larger memory burden to maintain state for
inactive DSO Sessions, but lower traffic and CPU load on the server.</t>

<t>A server may dictate (in a server-initiated Keepalive message,
or in a response to a client-initiated Keepalive request message)
any value it chooses for the inactivity timeout.
When a connection’s inactivity timeout is reached the client MUST
begin closing the idle connection, but a client is NOT REQUIRED
to keep an idle connection open until the inactivity timeout is
reached — a client SHOULD begin closing the connection sooner
if it has no reason to expect future operations with that server
before the inactivity timeout is reached.</t>

<t>A shorter inactivity timeout with a longer keepalive interval signals
to the client that it should not speculatively keep an inactive DSO
Session open for very long without reason, but when it does have an
active reason to keep a DSO Session open, it doesn’t need to be sending
an aggressive level of keepalive traffic to maintain that session.</t>

<t>A longer inactivity timeout with a shorter keepalive interval
signals to the client that it may speculatively keep an inactive
DSO Session open for a long time, but to maintain that inactive
DSO Session it should be sending a lot of keepalive traffic.
This configuration is expected to be less common.</t>

<t>A server may dictate any value it chooses for the inactivity timeout
(either in a response to a client-initiated request, or in a server-initiated message)
including values under one second, or even zero.
An inactivity timeout of zero informs the client that it
should not speculatively maintain idle connections at all, and
as soon as the client has completed the operation or operations relating
to this server, the client should immediately begin closing this session.</t>

<t>A server will abort an idle client session after twice the
inactivity timeout value, or five seconds, whichever is greater.
In the case of a zero inactivity timeout value, this means that
if a client fails to close an idle client session then the server
will forcibly abort the idle session after five seconds.</t>

</section>
</section>
<section anchor="keepalivetimer" title="The Keepalive Interval">

<t>The purpose of the keepalive interval is to manage the generation of
sufficient messages to maintain state in middle boxes (such at NAT gateways
or firewalls) and for the client and server to periodically verify that they
still have connectivity to each other. This allows them to clean up state
when connectivity is lost, and attempt re-connection if appropriate.</t>

<section anchor="keepalive-interval-expiry" title="Keepalive Interval Expiry">

<t>If, at any time during the life of the DSO Session,
the keepalive interval value (i.e., 15 seconds by default) elapses
without any DNS messages being sent or received on a DSO Session,
the client MUST take action to keep the DSO Session alive,
by sending a DSO Keepalive message (see <xref target="keepalive"/>).
A DSO Keepalive message exchange resets only the keepalive timer, 
not the inactivity timer.</t>

<t>If a client disconnects from the network abruptly,
without cleanly closing its DSO Session,
leaving long-lived state uncanceled,
the server learns of this after failing to
receive the required keepalive traffic from that client.
If, at any time during the life of the DSO Session,
twice the keepalive interval value (i.e., 30 seconds by default) elapses
without any DNS messages being sent or received on a DSO Session,
the server SHOULD consider the client delinquent,
and forcibly abort the connection with a TCP RST (or equivalent for other 
protocols).</t>

</section>
<section anchor="values-for-the-keepalive-interval" title="Values for the Keepalive Interval">

<t>For the keepalive interval value, lower values result in higher volume keepalive 
traffic. Higher values of the keepalive interval reduce traffic and CPU load, 
but have minimal effect on the memory burden
at the server, because clients keep a DSO Session open for the same length of time
(determined by the inactivity timeout) regardless of the level of keepalive traffic 
required.</t>

<t>It may be appropriate for clients and servers to select different keepalive 
interval values depending on the nature of the network they are on.</t>

<t>A corporate DNS server that knows it is serving only clients on the internal 
network, with no intervening NAT gateways or firewalls, can impose a higher 
keepalive interval, because frequent keepalive traffic is not required.</t>

<t>A public DNS server that is serving primarily residential consumer clients, 
where it is likely there will be a NAT gateway on the path, may impose a lower 
keepalive interval, to generate more frequent keepalive traffic.</t>

<t>A smart client may be adaptive to its environment. A client using
a private IPv4 address <xref target="RFC1918"/> to communicate with a DNS server
at an address outside that IPv4 private address block,
may conclude that there is likely to be a NAT gateway on the path,
and accordingly request a lower keepalive interval.</t>

<t>For environments where there is a NAT gateway or firewalls on the path, it is
RECOMMENDED that clients request, and servers grant, a keepalive interval of 15
minutes. In other environments it is RECOMMENDED that clients request, and 
servers grant, a keepalive interval of 60 minutes.</t>

<t>Note that the lower the keepalive interval value, the higher the load on client
and server. For example, an keepalive interval value of 100ms would result in a
continuous stream of at least ten messages per second, in both directions,
to keep the DSO Session alive. And, in this extreme example, a single packet loss and
retransmission over a long path could introduce a momentary pause in the stream of messages,
long enough to cause the server to overzealously abort the connection.</t>

<t>Because of this concern, the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with an keepalive interval value less than ten seconds.
If a client receives an Keepalive message specifying an keepalive interval value
less than ten seconds this is an error and the client MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="server-initiated-termination-on-error" title="Server-Initiated Termination on Error">

<t>After sending an error response to a client, the server MAY end the DSO Session,
or may allow the DSO Session to remain open. For error conditions
that only affect the single operation in question, the server SHOULD return an
error response to the client and leave the DSO Session open for further operations.
For error conditions that are likely to make all operations unsuccessful in the
immediate future, the server SHOULD return an error response to the client and 
then end the DSO Session by sending a Retry Delay request message, as described in 
<xref target="delay"/>.</t>

</section>
<section anchor="error" title="Client Behaviour in Receiving an Error">

<t>Upon receiving an error response from the server, a client SHOULD NOT
automatically close the DSO Session. An error relating to one particular operation
on a DSO Session does not necessarily imply that all other operations on that
DSO Session have also failed, or that future operations will fail. The client
should assume that the server will make its own decision about whether or not to
end the DSO Session, based on the server’s determination of whether the error
condition pertains to this particular operation, or would also apply to any
subsequent operations. If the server does not end the DSO Session by
sending the client a Retry Delay message (see <xref target="delay"/>) then the client
SHOULD continue to use that DSO Session for subsequent operations.</t>

</section>
<section anchor="server-initiated-termination-on-overload" title="Server-Initiated Termination on Overload">

<t>A server MUST NOT close a DSO Session with a client,
except in certain exceptional circumstances, as outlined below.
In normal operation, closing a DSO Session is the client’s responsibility.
The client makes the determination of when to close a DSO
Session based on an evaluation of both its own needs,
and the inactivity timeout value dictated by the server.</t>

<t>Some exceptional situations where a server may terminate a DSO Session include:</t>

<t><list style="symbols">
  <t>The server is undergoing reconfiguration or maintenance procedures
that require clients to be disconnected.</t>
  <t>The server application software or underlying operating system
is shutting down or restarting.</t>
  <t>The server application software terminates unexpectedly
(perhaps due to a bug that makes it crash).</t>
  <t>The client fails to meets its obligation to generate keepalive
traffic or close an inactive session by the prescribed times
(twice the time interval dictated by the server, or five seconds,
whichever is greater, as described in <xref target="sessiontimeouts"/>).</t>
  <t>The client sends a grossly invalid or malformed request that is
indicative of a seriously defective client implementation (see <xref target="error"/>).</t>
  <t>The server is over capacity and needs to shed some load (see <xref target="retry"/>).</t>
</list></t>

<t>When a server has to close a DSO Session with a client
(because of exceptional circumstances such as those outlined above)
the server SHOULD, whenever possible, send a Retry Delay Operation TLV
(see below) informing the client of the reason for the DSO Session
being closed, and allow the client five seconds to receive it
before the server resorts to forcibly aborting the connection.</t>

</section>
<section anchor="retry" title="Retry Delay Operation TLV">

<t>There may be rare cases where a server is overloaded and wishes to shed load.
If a server is low on resources it MAY simply terminate a client connection with 
a TCP RST (or equivalent for other protocols).
However, the likely behavior of the client may be simply to to treat this as a
network failure and connect
immediately, putting more burden on the server.</t>

<t>Therefore to avoid this reconnection implosion, a server SHOULD instead choose 
to shed client load by sending a Retry Delay request message, with an RCODE of 
SERVFAIL, to inform the client of the overload situation. After sending a Retry 
Delay request message, the server MUST NOT send any further messages on that 
DSO Session.</t>

<t>After sending the Retry Delay request the server SHOULD allow the
client five seconds to close the connection, and if the client has not
closed the connection after five seconds then the server SHOULD abort
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>Upon receipt of a Retry Delay request from the server, the client MUST
make note of the reconnect delay for this server, and then immediately
close the connection.
This is to place the burden of TCP’s TIME-WAIT state on the client.</t>

<t>A Retry Delay request message MUST NOT be initiated by a client.
If a server receives a Retry Delay request message this is an error
and the server MUST immediately terminate the connection with a TCP RST
(or equivalent for other protocols).</t>

<section anchor="outstanding-operations" title="Outstanding Operations">

<t>At the moment a server chooses to initiate a Retry Delay request message
there may be DNS requests already in flight from client to server on this 
DSO Session, which will arrive at the server after its Retry Delay request message 
has been sent.
The server MUST silently ignore such incoming requests, and MUST NOT generate
any response messages for them. When the Retry Delay request message from the
server arrives at the client, the client will determine that any DNS requests
it previously sent on this DSO Session, that have not yet received a response, now 
will certainly not be receiving any response. Such requests should be considered
failed, and should be retried at a later time, as appropriate.</t>

<t>In the case where some, but not all, of the existing operations on a DSO Session 
have become invalid (perhaps because the server has been reconfigured and is no 
longer authoritative for some of the names),
but the server is terminating all DSO Sessions en masse with a REFUSED (5) RCODE,
the RECONNECT DELAY MAY be zero, indicating that the clients SHOULD immediately
attempt to re-establish operations.
It is likely that some of the attempts will be successful and some will not.</t>

<t>In the case where a server is terminating a large number of DSO Sessions at once
(e.g., if the system is restarting) and the server doesn’t want to be inundated 
with a flood of simultaneous retries, it SHOULD send different RECONNECT delay 
values to each client.
These adjustments MAY be selected randomly, pseudorandomly, or deterministically
(e.g., incrementing the time value by one tenth of a second for each successive
client, yielding a post-restart reconnection rate of ten clients per second).</t>

</section>
<section anchor="client-reconnection" title="Client Reconnection">

<t>After a DSO Session is closed by the server, the client SHOULD try to reconnect,
to that server, or to another suitable server, if more than one is available.
If reconnecting to the same server, the client MUST respect the indicated delay
before attempting to reconnect.</t>

<t>If a particular server does not want a client to reconnect (it is being
de-commissioned), it SHOULD set the retry delay to the maximum value (which is
approximately 497 days). If the server will only be out of service for a maintenance
period, it should use a value closer to the expected maintenance window and
not default to a very large delay value or clients may not attempt to reconnect
after it resumes service.</t>

</section>
</section>
</section>
<section anchor="sharing" title="Connection Sharing">

<t>As previously specified for DNS over TCP <xref target="RFC7766"/>,
to mitigate the risk of unintentional server overload, DNS clients
MUST take care to minimize the number of concurrent TCP connections
made to any individual server.  It is RECOMMENDED that for any given
client/server interaction there SHOULD be no more than one connection
for regular queries, one for zone transfers, and one for each
protocol that is being used on top of TCP (for example, if the
resolver was using TLS).
However, it is noted that certain primary/secondary configurations
with many busy zones might need to use more than one TCP
connection for zone transfers for operational reasons
(for example, to support concurrent transfers of multiple zones).</t>

<t>A single server may support multiple services, including DNS Updates 
<xref target="RFC2136"/>, DNS Push Notifications <xref target="I-D.ietf-dnssd-push"/>,
and other services, for one or more DNS zones.
When a client discovers that the target server for several different operations
is the same target hostname and port, the client SHOULD use a single
shared DSO Session for all those operations.
A client SHOULD NOT open multiple connections to the same target host and port
just because the names being operated on are different or
happen to fall within different zones.
This is to reduce unnecessary connection load on the DNS server.</t>

<t>However, server implementers and operators should be aware that connection
sharing may not be possible in all cases.
A single client device may be home to multiple independent client software
instances that don’t coordinate with each other.
Similarly, multiple independent client devices behind the same NAT gateway
will also typically appear to the DNS server as different source ports on
the same client IP address.
Because of these constraints, a DNS server MUST be prepared to accept
multiple connections from different source ports on the same client IP address.</t>

</section>
<section anchor="base-tlvs-for-dns-stateful-operations" title="Base TLVs for DNS Stateful Operations">

<section anchor="delay" title="Retry Delay TLV">

<t>The Retry Delay TLV (DSO-TYPE=0) can be used as an Operation TLV or as
a Modifier TLV.</t>

<t>The TYPE-DEPENDENT DATA for the the Retry Delay TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     RETRY DELAY (32 bits)                     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='RETRY DELAY:'>
  a time value, specified as a 32-bit word in network order in units of 
milliseconds, within which the client MUST NOT retry this operation, or retry 
connecting to this server.</t>
</list></t>

<t>The RECOMMENDED value is 10 seconds.</t>

<section anchor="use-as-an-operation-tlv" title="Use as an Operation TLV">

<t>When sent in a DSO request message, from server to client, the 
Retry Delay TLV (0) is considered an Operation TLV. It is used by a server 
to request that a client close the DSO Session and underlying connection, and 
not to reconnect for the indicated time interval.</t>

<t>In this case it applies to the DSO Session as a whole, and the client MUST begin closing the 
DSO Session, as described in <xref target="retry"/>. The RCODE in the message header 
MUST indicate the reason for the termination:</t>

<t><list style="symbols">
  <t>NOERROR indicates a routine shutdown.</t>
  <t>SERVFAIL indicates that the server is overloaded due to resource exhaustion.</t>
  <t>REFUSED indicates that the server has been reconfigured and is no longer able 
to perform one or more of the functions 
currently being performed on this DSO Session (for example, a DNS Push Notification 
server could be reconfigured such that is is no longer accepting DNS Push 
Notification requests for one or more of the currently subscribed names).</t>
</list></t>

<t>This document specifies only these three RCODE values for Retry Delay request.
Servers sending Retry Delay requests SHOULD use one of these three values.
However, future circumstances may create situations where other RCODE values
are appropriate in Retry Delay requests, so clients MUST be prepared
to accept Retry Delay requests with any RCODE value.</t>

<t>An acknowledgement is not desired for a Retry Delay Operation TLV and the TLV
Acknowledgement bit MUST be cleared in the request.</t>

</section>
<section anchor="use-as-a-modifier-tlv" title="Use as a Modifier TLV">

<t>In the case of a client request that returns a nonzero RCODE value,
the server MAY append a Retry Delay TLV (0) to the response,
indicating the time interval during which the client
SHOULD NOT attempt this operation again.</t>

<t>When appended to a DSO response message for some client request,
the Retry Delay TLV (0) is considered a Modifier TLV.</t>

<t>The indicated time interval during which the client SHOULD NOT retry
applies only to the failed operation, not to the DSO Session as a whole.</t>

</section>
</section>
<section anchor="keepalive" title="Keepalive Operation TLV">

<t>The Keepalive Operation TLV (DSO-TYPE=1) performs two functions: to reset the
keepalive timer for the DSO Session and to establish the values for the Session Timeouts.</t>

<t>The Keepalive Operation TLV resets only the keepalive timer, not the inactivity timer.
The reason for this is that periodic Keepalive Operation TLVs are sent for the
sole purpose of keeping a DSO Session alive, because that DSO Session has current
or recent non-maintenance activity that warrants keeping the DSO Session alive.
If sending keepalive traffic itself were to reset the inactivity timer, then 
that would create a circular livelock where keepalive traffic would be sent 
indefinitely to keep a DSO Session alive, where the only activity on that DSO 
Session would be the keepalive traffic keeping the DSO Session alive so that further 
keepalive traffic can be sent.</t>

<t>Sending keepalive traffic is considered a maintenance activity
that is performed in service of other client activities.
Sending keepalive traffic itself is not considered a client activity.
For a DSO Session to be considered active, it must be carrying something more than just keepalive traffic.
This is why merely sending a Keepalive Operation TLV does not reset the inactivity timer.</t>

<t>When sent by a client, the Keepalive Operation TLV MUST have the Acknowledgement bit set.
It resets a DSO Session’s keepalive timer, and at the same time requests what the
Session Timeout values should be from this point forward in the DSO Session.
If a server receives a Keepalive Operation TLV without the Acknowledgement bit set
then this is a fatal error and the server MUST immediately terminate
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>Once a DSO Session is in progress (see <xref target="details"/>) the Keepalive TLV also MAY be initiated by a server.
When sent by a server, the Keepalive Operation TLV MUST NOT have the Acknowledgement bit set.
It resets a DSO Session’s keepalive timer, and unilaterally informs the client of
the new Session Timeout values to use from this point forward in this DSO Session.
No client response to this unilateral declaration is required.
If a client receives a Keepalive Operation TLV with the Acknowledgement bit set
then this is a fatal error and the client MUST immediately terminate
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>It is not required that the Keepalive TLV be used in every DSO Session.
While many DNS Stateful operations
will be used in conjunction with a long-lived session state,
not all DNS Stateful operations require long-lived session state,
and in some cases the default 15-second value for both the inactivity timeout
and keepalive interval may be perfectly appropriate.
However, note that for clients that implement only the TLVs defined in
this document it is the only way for a client to initiate a DSO Session.</t>

<t>The TYPE-DEPENDENT DATA for the the Keepalive TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 INACTIVITY TIMEOUT (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 KEEPALIVE INTERVAL (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='INACTIVITY TIMEOUT:'>
  the inactivity timeout for the current DSO Session, specified as a
32-bit word in network (big endian) order in units of milliseconds.
This is the timeout at which the client MUST begin closing an inactive DSO Session.
The inactivity timeout can be any value of the server’s choosing.
If the client does not gracefully close an inactive DSO
Session, then after twice this interval, or five seconds,
whichever is greater, the server will forcibly terminate the
connection with a TCP RST (or equivalent for other protocols).</t>
  <t hangText='KEEPALIVE INTERVAL:'>
  the keepalive interval for the current DSO Session, specified as a
32-bit word in network (big endian) order in units of milliseconds.
This is the interval at which a client MUST generate keepalive
traffic to maintain connection state.
The keepalive interval MUST NOT be less than ten seconds.
If the client does not generate the mandated keepalive traffic,
then after twice this interval the server will forcibly terminate
the connection with a TCP RST (or equivalent for other protocols).
Since the minimum allowed keepalive interval is ten seconds, the
minimum time at which a server will forcibly disconnect a client for
failing to generate the mandated keepalive traffic is twenty seconds.</t>
</list></t>

<t>In a client-initiated DSO Keepalive message,
the Session Timeouts contain the client’s requested values.
In a server response to a client-initiated message, the Session Timeouts contain 
the server’s chosen values, which the client MUST respect.
This is modeled after the DHCP protocol, where the client
requests a certain lease lifetime using DHCP option 51 <xref target="RFC2132"/>,
but the server is the ultimate authority
for deciding what lease lifetime is actually granted.</t>

<t>In a server-initiated DSO Keepalive message, the Session Timeouts
unilaterally inform the client of the new values from this point
forward in this DSO Session. The client MUST NOT generate a
response to the server-initiated DSO Keepalive message.</t>

<t>When a client is sending its second and subsequent Keepalive DSO 
requests to the server, the client SHOULD continue to request its preferred 
values each time. This allows flexibility, so that if conditions change during 
the lifetime of a DSO Session, the server can adapt its responses to better fit 
the client’s needs.</t>

<section anchor="client-handling-of-received-session-timeout-values" title="Client handling of received Session Timeout values">

<t>When a client receives a response to its client-initiated DSO Keepalive message,
or receives a server-initiated DSO Keepalive message, the client has then 
received Session Timeout values dictated by the server. The two timeout values 
contained in the DSO Keepalive TLV from the server may each be higher, lower, or 
the same as the respective Session Timeout values the client previously had for 
this DSO Session.</t>

<t>In the case of the keepalive timer, the handling of the received value is 
straightforward. The act of receiving the message containing the DSO Keepalive 
TLV itself resets the keepalive timer and updates the keepalive interval for the 
DSO Session. The new keepalive interval indicates the 
maximum time that may elapse before another message must be sent
or received on this DSO Session, if the DSO Session is to remain alive.</t>

<t>In the case of the inactivity timeout, the handling of the received value 
is a little more subtle, though the meaning of the inactivity 
timeout is unchanged — it still indicates the maximum permissible time allowed 
without activity on a DSO Session.
The act of receiving the message containing the DSO Keepalive TLV does not
itself reset the inactivity timer. The time elapsed since the last useful
activity on this DSO Session is unaffected by exchange of DSO Keepalive messages.
The new inactivity timeout value in the DSO Keepalive TLV in the received message
does update the timeout associated with the running inactivity timer;
that becomes the new maximum permissible time without activity on a DSO Session.</t>

<t><list style="symbols">
  <t>If the current inactivity timer value is not greater than the
new inactivity timeout, then the DSO Session may remain open for now.
When the inactivity timer value exceeds the new inactivity timeout,
the client MUST then begin closing the DSO Session, as described above.</t>
  <t>If the current inactivity timer value is already greater
than the new inactivity timeout, then this DSO Session has
already been inactive for longer than the server permits,
and the client MUST immediately begin closing this DSO Session.</t>
  <t>If the current inactivity timer value is already more than twice the
new inactivity timeout, then the client is immediately considered delinquent
(this DSO Session is immediately eligible to be forcibly terminated by the server)
and the client MUST immediately begin closing this DSO Session.
However if a server abruptly reduces the inactivity timeout in this
way, then, to give the client time to close the connection gracefully
before the server resorts to terminating it forcibly, the server
SHOULD give the client an additional grace period of one quarter
of the new inactivity timeout, or five seconds, whichever is greater.</t>
</list></t>

</section>
<section anchor="relation-to-edns0-tcp-keepalive-option" title="Relation to EDNS(0) TCP Keepalive Option">

<t>The inactivity timeout value in the Keepalive TLV (DSO-TYPE=1) has similar
intent to the EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>.
A client/server pair that supports DSO MUST NOT use the
EDNS(0) TCP KeepAlive option within any message after a DSO 
Session has been established.
Once a DSO Session has been established, if either
client or server receives a DNS message over the DSO Session that contains an
EDNS(0) TCP Keepalive option, this is an error and the receiver of the
EDNS(0) TCP Keepalive option MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="padding" title="Encryption Padding TLV">

<t>The Encryption Padding TLV (DSO-TYPE=2) can only be used as a Modifier TLV.
It is only applicable when the DSO Transport layer uses encryption
such as TLS.</t>

<t>The TYPE-DEPENDENT DATA for the the Padding TLV is optional and is a
variable length field containing non-specified values. A DATA LENGTH
of 0 essentially provides for 4 octets of padding (the minimum amount).</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   /                                                               /
   /                   VARIABLE NUMBER OF OCTETS                   /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t>As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
the PADDING octets SHOULD be set to 0x00.  Other values MAY be used,
for example, in cases where there is a concern that the padded
message could be subject to compression before encryption.
PADDING octets of any value MUST be accepted in the messages received.</t>

<t>The Encryption Padding TLV may be included in either a DSO request, response, or both.
As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
if a request is received with a Encryption Padding TLV,
then the response MUST also include an Encryption Padding TLV.</t>

<t>The length of padding is intentionally not specified in this document and
is a function of current best practices with respect to the type and length
of data in the preceding TLVs <xref target="I-D.ietf-dprive-padding-policy"/>.</t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="dso-opcode-registration" title="DSO OPCODE Registration">

<t>IANA are directed to assign a value (tentatively 6)
in the DNS OPCODEs Registry for the DSO OPCODE.</t>

</section>
<section anchor="dso-rcode-registration" title="DSO RCODE Registration">

<t>IANA are directed to assign a value (tentatively 11)
in the DNS RCODE Registry for the DSONOTIMP error code.</t>

</section>
<section anchor="dso-type-codes-registry" title="DSO Type Codes Registry">

<t>IANA are directed to create the 15-bit DSO Type Codes
Registry, with initial values as follows:</t>

<texttable>
      <ttcol align='right'>Type</ttcol>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Status</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>0x0000</c>
      <c>RetryDelay</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0001</c>
      <c>KeepAlive</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0002</c>
      <c>Encryption Padding</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0003 - 0x003F</c>
      <c>Unassigned, reserved for DSO session-management TLVs</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x0040 - 0x77FF</c>
      <c>Unassigned</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x7800 - 0x7BFF</c>
      <c>Reserved for local / experimental use</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x7C00 - 0x7FFF</c>
      <c>Reserved for future expansion</c>
      <c>&#160;</c>
      <c>&#160;</c>
</texttable>

<t>Registration of additional DSO Type Codes requires publication
of an appropriate IETF “Standards Action” or “IESG Approval” document <xref target="RFC5226"/>.</t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>If this mechanism is to be used with DNS over TLS, then these messages
are subject to the same constraints as any other DNS over TLS messages
and MUST NOT be sent in the clear before the TLS session is established.</t>

<t>The data field of the “Encryption Padding” TLV could be used as a covert channel.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to
Tim Chown,
Ralph Droms,
Jan Komissar,
Manju Shankar Rao,
and Ted Lemon
for their helpful contributions to this document.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC1035;
&RFC7766;
&RFC6891;
&RFC7828;
&RFC2119;
&RFC7830;
&RFC1034;
&RFC2136;
&RFC1918;
&RFC2132;
&RFC5226;


    </references>

    <references title='Informative References'>

<reference anchor="NagleDA" target="http://www.stuartcheshire.org/papers/nagledelayedack/">
  <front>
    <title>TCP Performance problems caused by interaction between Nagle's Algorithm and Delayed ACK</title>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization></organization>
    </author>
    <date year="2005" month="May" day="20"/>
  </front>
</reference>
&RFC7858;
&RFC6763;
&I-D.ietf-dnssd-push;
&RFC0768;
&RFC1122;
&I-D.ietf-dprive-padding-policy;


    </references>



  </back>

<!-- ##markdown-source:
H4sIAOipOFoAA+19a3fbRpLo9/4VuPaHSFmSkfxMvOeeO4osJ5qxJY8kJzv7
ZQ9IghJiEuAAoGSO7f9+69ldjQetPHZ2z571rDYSCXRXV1dX17vG47Fr8maZ
vUhenl0ml03aZIvNMjlfZ1Xa5GVRu3k5K9IVPDCv0kUzzrNmMZ4Xdbke11ld
wyPjOr8u0uX44Kmbw+svkkcHh8/Hh4fjxwcuX1cvkqba1M2jg4PvDh65tMrS
F8lp0WRVkTXu7pomPn+b/FxW7/PiOvmhKjdr9/4uPDR+iRO7Wdq8SOpm7jZr
nKZ+kVy8Ok6eP3/2bES/HR48furcrJzDKC+SDUD5rVvnL1ySjJOmnNF/6+2q
yhY1/15WDf3h0k1zU1b0JPwkSV7g4JPk+2y5zGv6iDFwkW7th2V1HaBMLrd1
k63q5BiQBkPnm9UIvpxN6NF0Oq2yW3j68pj+rmHqDNbz3dOD5PgmrWAMQD5+
Rl/P8mYL02Xzu7KcJ8fwF39czgGK46PkuycHzx7LR5uiqeDhd5dH9MH6pizg
oX85TJ7B2E8ePU4OAfX0VbZK8+WLpEq3f8rr2QTAj5d8OQFYsvomrzKz6Mtm
A/DF39DKj9brZRaWqEs6hI8WeZE3WfK6LNdmPccboKomL8rWYp4eHD750mKe
HHybfPf8SfL40cFzu5iZgPWnFKGZzMpVvKY/T5KX+Qwoqy4Ls6g/lzdF6wta
0yVAN98UYVevstlNUS7L6zyro52UJ+3S6fdx8ia9TufpMiuS4wyWk8nH5x8W
ZTVPLmd5Vsyy5G1avTe44W8NYs7/7Uny5IejFl4QrfPkL0Dic1qpx8Mv6fxP
NYPURcJlPxIu0yr9H4WEGhY0jIWjCUBVwGINCo7wMJeF/YJRAKDXAMwss+On
/PRkRU//6Ro/7c5zNUnebmpgUVVuZroqV/HHNM+7Il0s8mUOH8+jU/TggWUE
AE1+fWMQc3acPHr+7ODbLx2b7w6/S7599jw5fPw44gFrgeRP07S4/oXW4PIC
FrwCrn+b4S6epdfL7OURb2iTVtcI1k3TrF98883d3d2kJr6g5w+5yTfrFA54
/U2Bb86zZbrN5uns/Tc8At8yV8dvk7dZRTMhBayrcrpEtjlLNzXs6nQLSATI
0hnePsk0a+4yICIC5qsa9uu6rPLmZpWkxTx5yXMkR8d/YbL0jHw3+xrgd3p7
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
LlqVXggBAA==

-->

</rfc>

