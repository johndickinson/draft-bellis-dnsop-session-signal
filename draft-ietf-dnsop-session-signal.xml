<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.1.1 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC7766 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7766.xml">
<!ENTITY RFC6891 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6891.xml">
<!ENTITY RFC7828 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7828.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC7830 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7830.xml">
<!ENTITY RFC1034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC2136 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2136.xml">
<!ENTITY RFC2132 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2132.xml">
<!ENTITY RFC1918 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1918.xml">
<!ENTITY RFC5226 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5226.xml">
<!ENTITY RFC7858 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7858.xml">
<!ENTITY I-D.ietf-dnssd-push SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dnssd-push.xml">
<!ENTITY RFC0768 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.0768.xml">
<!ENTITY I-D.ietf-dprive-padding-policy SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dprive-padding-policy.xml">
]>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-dnsop-session-signal-04" category="std" updates="RFC 7766, RFC 1035">

  <front>
    <title>DNS Stateful Operations</title>

    <author initials="R." surname="Bellis" fullname="Ray Bellis">
      <organization abbrev="ISC">Internet Systems Consortium, Inc.</organization>
      <address>
        <postal>
          <street>950 Charter Street</street>
          <city>Redwood City</city>
          <code>CA 94063</code>
          <country>USA</country>
        </postal>
        <phone>+1 650 423 1200</phone>
        <email>ray@isc.org</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>1 Infinite Loop</street>
          <city>Cupertino</city>
          <code>CA 95014</code>
          <country>USA</country>
        </postal>
        <phone>+1 408 974 3207</phone>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="J." surname="Dickinson" fullname="John Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>jad@sinodun.com</email>
      </address>
    </author>
    <author initials="S." surname="Dickinson" fullname="Sara Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>sara@sinodun.com</email>
      </address>
    </author>
    <author initials="A." surname="Mankin" fullname="Allison Mankin">
      <organization>Salesforce</organization>
      <address>
        <email>allison.mankin@gmail.com</email>
      </address>
    </author>
    <author initials="T." surname="Pusateri" fullname="Tom Pusateri">
      <organization>Unaffiliated</organization>
      <address>
        <phone>+1 919 867 1330</phone>
        <email>pusateri@bangj.com</email>
      </address>
    </author>

    <date year="2017" month="September" day="04"/>

    <area>Internet</area>
    <workgroup>DNSOP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document defines a new DNS Stateful Operation OPCODE used to communicate 
operations within persistent stateful sessions, expressed using type-length-value (TLV) 
syntax, and defines an initial set of TLVs used to manage session timeouts and 
termination. This mechanism is intended to reduce the overhead of existing 
“per-packet” signaling mechanisms with “per-message” semantics as well as 
defining new stateful operations not defined in EDNS(0).</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The use of transports for DNS other than UDP is being increasingly specified,
for example, DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> and DNS over TLS <xref target="RFC7858"/>.
Such transports can offer persistent, long-lived sessions and therefore when
using them for transporting DNS messages it is of benefit to have a mechanism
that can establish parameters associated with those sessions, such as timeouts.
In such situations it is also advantageous to support server initiated messages.</t>

<t>The existing EDNS(0) Extension Mechanism for DNS <xref target="RFC6891"/> is explicitly
defined to only have “per-message” semantics. Whilst EDNS(0) has been used to
signal at least one session related parameter (the EDNS(0) TCP Keepalive option
<xref target="RFC7828"/>) the result is less than optimal due to the restrictions
imposed by the EDNS(0) semantics and the lack of server-initiated signalling. 
For example, a server cannot arbitrarily 
instruct a client to close a connection because the server can only send EDNS(0) options 
in responses to queries that contained EDNS(0) options.</t>

<t>This document defines a new DNS Stateful Operation OPCODE used to carry
operations within persistent stateful connections, expressed using type-length-value (TLV)
syntax, and
defines an initial set of TLVs including ones used to manage session timeouts and termination.</t>

<t>This new format has distinct advantages over an RR based format because it
is more explicit and more compact. Each TLV definition is specific
to the use case, and as a result contains no redundant or overloaded fields.
Importantly, it completely avoids conflating DNS Stateful Operations in anyway 
with normal DNS operations or with existing EDNS(0) based functionality. A goal 
of this approach is to avoid the operational
issues that have befallen EDNS(0), particularly relating to middle-box 
behaviour.</t>

<t>With EDNS(0), multiple options may be packed into a single OPT pseudo-RR,
and there is no generalized mechanism for a client to be able to tell
whether a server has processed or otherwise acted upon each individual
option within the combined OPT RR.
The specifications for each individual option need to define how each
different option is to be acknowledged, if necessary.</t>

<t>With DNS Stateful Operations, in contrast, there is no compelling motivation
to pack multiple operations into a single message for efficiency reasons.
Each Stateful operation is communicated in its own separate
DNS message, and the transport protocol can take care of packing
separate DNS messages into a single IP packet if appropriate.
For example, TCP can pack multiple small DNS messages into a single TCP segment.
The RCODE in each response message indicates the success or failure of the operation in question.</t>

<t>It should be noted that the message format for DNS Stateful Operations
(see <xref target="format"/>) differs from the traditional DNS packet
format used for standard queries and responses.
The standard twelve-octet header is used, but the four count fields
(QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) are set to zero and their
corresponding sections are not present.
The actual data pertaining to DNS Stateful Operations is
appended to the end of the DNS message header.
When displayed using today’s packet analyzer tools that have not been updated
to recognize the DNS Stateful Operations format, this will result
in the Stateful Operations data being displayed as unknown additional
data after the end of the DNS message. It is likely that future updates
to these tools will add the ability to recognize, decode, and display the
Stateful Operations data.</t>

</section>
<section anchor="terminology" title="Terminology">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and
“OPTIONAL” in this document are to be interpreted as described in
“Key words for use in RFCs to Indicate Requirement Levels” <xref target="RFC2119"/>.</t>

<t>“DSO” is used to mean DNS Stateful Operation.</t>

<t>The term “connection” means a bidirectional byte stream of reliable,
in-order messages, such as provided by using
DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> or DNS over TLS <xref target="RFC7858"/>.</t>

<t>The unqualified term “session” in the context of this document means the exchange of
DNS messages over a connection where:</t>

<t><list style="symbols">
  <t>The connection between client and server is persistent and relatively
long-lived (i.e., minutes or hours, rather than seconds).</t>
  <t>Either end of the connection may initiate messages to the other.</t>
</list></t>

<t>A “DSO session” is established between two endpoints that
acknowledge persistent DNS state via the exchange of DSO messages
over the connection. This is distinct from, for example a DNS-over-TCP session
as described in RC7766.</t>

<t>A “DSO session” is terminated when the underlying connection is closed.</t>

<t>The term “server” means the software with a listening socket, awaiting
incoming connection requests.</t>

<t>The term “client” means the software which initiates a connection
to the server’s listening socket.</t>

<t>The terms “initiator” and “responder” correspond respectively to the
initial sender and subsequent receiver of a DSO request message,
regardless of which was the “client” and “server” in the usual DNS sense.</t>

<t>The term “sender” may apply to either an initiator
(when sending a DNS Stateful Operation request message)
or a responder (when sending a DNS Stateful Operation response message).</t>

<t>Likewise, the term “receiver” may apply to either a responder
(when receiving a DNS Stateful Operation request message)
or an initiator (when receiving a DNS Stateful Operation response message).</t>

<t>DNS Stateful Operations are expressed using type-length-value (TLV) syntax.</t>

<t>Two timers are defined in this document: an inactivity timeout and a keepalive
interval. The term “Session Timers” is used to refer to this pair of values.</t>

</section>
<section anchor="discussion" title="Discussion">

<t>There are several use cases for DNS Stateful operations that can 
be described here.</t>

<t>Firstly, establishing session parameters such as server defined timeouts is of 
great use in the 
general management of persistent connections. For example, using DSO sessions 
for stub to recursive DNS-over-TLS <xref target="RFC7858"/> is more flexible for both the 
client and the server than attempting to manage sessions using just the EDNS(0)
TCP Keepalive option
<xref target="RFC7828"/>. The simple set of TLVs defined in this document is
sufficient to greatly enhance connection management for this use case.</t>

<t>Secondly, DNS-SD has evolved into a naturally session based mechanism where, for 
example, long-lived subscriptions lend themselves to ‘push’ mechanisms as 
opposed to polling. Long-lived stateful connections and server initiated 
messages align with this use case as described in <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>A general use case is that DNS traffic is often bursty but session establishment can be expensive. One 
challenge with long-lived connections is to maintain sufficient traffic to 
maintain NAT and firewall state. To mitigate this issue this document introduces a 
new concept for the DNS, that is DSO “Keepalive traffic”. This traffic carries 
no DNS data and is not considered ‘activity’ in the classic DNS sense but serves 
to reset a keepalive timer in order to avoid re-cycling a DSO session.</t>

<t>There are a myriad of other potential use cases for DSO given the versatility 
and extensibility of this specification.</t>

<t><xref target="details"/> of this document first describes the protocol details of DNS Stateful Operations including definitions of three TLVs for session management and encryption padding. <xref target="lifecycle"/> then presents a
detailed discussion of the DSO Session lifecycle including an
in-depth discussion of keepalive traffic and session termination.</t>

</section>
<section anchor="details" title="Protocol Details">

<section anchor="establishment" title="DSO Session Establishment">

<t>DSO messages MUST only be carried in protocols and in
environments where a session may be established according to the definition above.
Standard DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/>, and DNS over TLS <xref target="RFC7858"/>
are suitable protocols.</t>

<t>DNS over plain UDP <xref target="RFC0768"/> is not appropriate since it fails on the requirement for
in-order message delivery, and, in the presence of NAT gateways and firewalls
with short UDP timeouts, it fails to provide a persistent bi-directional
communication channel unless an excessive amount of keepalive traffic is used.</t>

<t>DSO messages relate only to the specific “DSO session” in which
they are being carried. A “DSO session” is established over a connection when
either side of the connection sends the first DSO
TLV and it is acknowledged by the other side. While this specification defines
an initial set of three TLVs, additional TLVs may be defined in
additional specifications. All three of the TLVs defined are mandatory to implement.</t>

<t>A client MAY attempt to initiate DSO messages at any time
on a connection; receiving a NOTIMP response in reply indicates that the
server does not implement DSO, and the client SHOULD NOT
issue further DSO messages on that connection.</t>

<t>A server SHOULD NOT initiate DSO messages until a
client-initiated DSO message is received first,
unless in an environment where it is known in advance by other
means that the client supports DSO.
This requirement is to ensure that the clients that do not support
DSO do not receive unsolicited inbound DSO
messages that they would not know how to handle.</t>

<t>On a session between a client and server that support DSO,
once the client has sent at least one DSO message (or it is
known in advance by other means that the client supports DSO)
either end may unilaterally send DSO messages at any time,
and therefore either client or server may be the initiator of a message.</t>

<t>From this point on it is considered that a “DSO session” is in
progress. Clients and servers should behave as described in this specification
with regard to inactivity timeouts and connection close, not as prescribed in <xref target="RFC7766"/>.</t>

<section anchor="middle-box-considerations" title="Middle-box Considerations">

<t>Where an application-layer middle box (e.g., a DNS proxy, forwarder, or
session multiplexer) is in the path the middle box MUST NOT blindly
forward DSO messages in either direction, and MUST treat the inbound
and outbound connections as separate sessions.  This does not preclude
the use of DSO messages in the presence of an IP-layer middle box such
as a NAT that rewrites IP-layer and/or transport-layer headers, but
otherwise preserves the effect of a single session between the client
and the server.</t>

<t>To illustrate the above, consider a network where a middle box
terminates one or more TCP connections from clients and multiplexes the
queries therein over a single TCP connection to an upstream server.  The
DSO messages and any associated state are specific to the individual
TCP connections.  A DSO-aware middle box MAY in some circumstances be
able to retain associated state and pass it between the client and
server (or vice versa) but this would be highly TLV-specific.  For
example, the middle box may be able to maintain a list of which clients
have made Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/> and
make its own subscription(s) on their behalf, relaying any subsequent
notifications to the client (or clients) that have subscribed to that
particular notification.</t>

</section>
</section>
<section anchor="format" title="Message Format">

<t>A DSO message begins with
the standard twelve-octet DNS message header <xref target="RFC1035"/>
with the OPCODE field set to the DSO OPCODE (tentatively 6).
However, unlike standard DNS messages, the question section, answer section,
authority records section and additional records sections are not present.
The corresponding count fields (QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) MUST be
set to zero on transmission.</t>

<t>If a DSO message is received where any of the count fields are
not zero, then a FORMERR MUST be returned.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                          MESSAGE ID                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |QR |    OPCODE     |            Z              |     RCODE     |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     QDCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ANCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     NSCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ARCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                           DSO Data                            /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<section anchor="header" title="Header">

<t>In a request the MESSAGE ID field MUST be set to a unique value, that the
initiator is not currently using for any other active operation on this 
connection.
For the purposes here, a MESSAGE ID is in use in this DSO session if the
initiator has used it in a request for which it has not yet received a
response, or if the client has used it to setup state that it has not yet ready
to delete. For example, state could be a subscription as defined in 
<xref target="I-D.ietf-dnssd-push"/>.</t>

<t>In a response the MESSAGE ID field MUST contain a copy of the value of the
MESSAGE ID field in the request being responded to.</t>

<t>In a request the DNS Header QR bit MUST be zero (QR=0).
If the QR bit is not zero the message is not a request.</t>

<t>In a response the DNS Header QR bit MUST be one (QR=1).
If the QR bit is not one the message is not a response.</t>

<t>The DNS Header OPCODE field holds the DSO OPCODE value (tentatively 6).</t>

<t>The Z bits are currently unused, and in both requests and responses the
Z bits MUST be set to zero (0) on transmission and MUST be silently ignored
on reception, unless a future document specifies otherwise.</t>

<t>In a request message (QR=0) the RCODE is generally set to zero on transmission,
and silently ignored on reception, except where specified otherwise
(for example, the Retry Delay operation (see <xref target="delay"/>), where the RCODE indicates the reason
for termination).</t>

<t>The RCODE value in a response may be one of the following values:</t>

<texttable>
      <ttcol align='right'>Code</ttcol>
      <ttcol align='left'>Mnemonic</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>0</c>
      <c>NOERROR</c>
      <c>Operation processed successfully</c>
      <c>1</c>
      <c>FORMERR</c>
      <c>Format error</c>
      <c>2</c>
      <c>SERVFAIL</c>
      <c>Server failed to process request due to a problem with the server</c>
      <c>3</c>
      <c>NXDOMAIN</c>
      <c>TLV dependent</c>
      <c>4</c>
      <c>NOTIMP</c>
      <c>DSO not supported</c>
      <c>5</c>
      <c>REFUSED</c>
      <c>Operation declined for policy reasons</c>
      <c>9</c>
      <c>NOTAUTH</c>
      <c>Not Authoritative (TLV dependent)</c>
      <c>11</c>
      <c>DSONOTIMP</c>
      <c>DSO type code not supported</c>
</texttable>

<t>Use of the above RCODE’s is likely to be common in DSO but 
does not preclude the definition and use of other codes in future documents that 
make use of DSO.</t>

<t>If a document describing a DSO makes use of either NXDOMAIN 
or NOTAUTH then that document MUST explain the meaning.</t>

</section>
<section anchor="dso-data" title="DSO Data">

<t>The standard twelve-octet DNS message header is followed by the DSO Data.</t>

<t>The first TLV in a DSO request message is called the Operation 
TLV. Any subsequent TLVs after this initial Operation TLV are called Modifier TLVs.</t>

<t>Depending on the operation a DSO response can contain:</t>

<t><list style="symbols">
  <t>No TLVs</t>
  <t>Only an Operation TLV</t>
  <t>An Operation TLV followed by one or more Modifier TLVs</t>
  <t>Only Modifier TLVs</t>
</list></t>

<section anchor="tlv-format" title="TLV Format">

<t>Operation and modifier TLVs both use the same encoding format.</t>

<t>Operation TLVs SHOULD normally require a response and, therefore, set the TLV
Acknowledgement bit in a request. However, for some Operation TLVs, this may be
undesirable and the TLV Acknowledgement bit MAY be cleared in the request. Each
Operation TLV definition should stipulate whether an acknowledgement is
REQUIRED. If the TLV Acknowledgement bit is cleared in a request, a response
MUST NOT be sent. Modifier TLVs MUST NEVER set the Acknowledgement bit. The
Acknowledgement bit is NEVER set in the response to an Operation TLV.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   | A |                        DSO-TYPE                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                        DSO DATA LENGTH                        |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                      TYPE-DEPENDENT DATA                      /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='A:'>
  A 1 bit TLV Response flag indicating whether or not an Operation TLV requires
a response Acknowledgement.
DSO-TYPE:</t>
  <t>A 15 bit field in network order giving the type of the current DSO TLV per
the IANA DSO Type Codes Registry.</t>
  <t hangText='DSO DATA LENGTH:'>
  A 16 bit field in network order giving the size in octets of
the TYPE-DEPENDENT DATA.</t>
  <t hangText='TYPE-DEPENDENT DATA:'>
  Type-code specific format.</t>
</list></t>

<t>Where domain names appear within TYPE-DEPENDENT DATA, they MAY be compressed 
using standard DNS name compression. However, the compression MUST NOT point
outside of the TYPE-DEPENDENT DATA section and offsets MUST be from the start
of the TYPE-DEPENDENT DATA.</t>

</section>
<section anchor="operation-tlvs" title="Operation TLVs">

<t>An “Operation TLV” specifies the operation to be performed.</t>

<t>A DSO message MUST contain at most one Operation TLV.</t>

<t>In all cases a DSO request message MUST contain exactly one 
Operation TLV, indicating the operation to be performed.</t>

<t>Depending on the operation, a DSO response message MAY contain no 
Operation TLV, because it is simply a response to a previous request message,
and the MESSAGE ID in the header is sufficient to identify the request in 
question. Or it may contain a single corresponding response Operation TLV, with 
the same DSO-TYPE as in the request message. The specification for each DSO
type determines whether a response for that operation type 
is required to carry the Operation TLV.</t>

<t>If a DSO response is received for an operation which requires
that the response carry an Operation TLV, and the required Operation TLV is not
the first DSO TLV in the response message, then this is a fatal 
error and the recipient of the defective response message MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
<section anchor="modifier-tlvs" title="Modifier TLVs">

<t>A “Modifier TLV” specifies additional parameters
relating to the operation. Immediately following the Operation TLV, if present,
a DSO message MAY contain one or more Modifier TLVs.</t>

</section>
<section anchor="unrecognized-tlvs" title="Unrecognized TLVs">

<t>If a DSO request is received containing an unrecognized
Operation TLV, the receiver MUST send a response with matching
MESSAGE ID, and RCODE DSONOTIMP (tentatively 11). The response MUST NOT contain 
an Operation TLV.</t>

<t>If a DSO message (request or response) is received
containing one or more unrecognized Modifier TLVs, the unrecognized
Modifier TLVs MUST be silently ignored, and the remainder of the message
is interpreted and handled as if the unrecognized parts were not present.</t>

</section>
</section>
<section anchor="edns0-and-tsig" title="EDNS(0) and TSIG">

<t>Since the ARCOUNT field MUST be zero, a DSO message
MUST NOT contain an EDNS(0) option in the additional records section.
If functionality provided by current or future EDNS(0) options is desired
for DSO messages, an Operation TLV or
Modifier TLV needs to be defined to carry the necessary information.</t>

<t>For example, the EDNS(0) Padding Option <xref target="RFC7830"/> used for security purposes
is not permitted in a DSO message,
so if message padding is desired for DSO messages
then the Encryption Padding TLV described in <xref target="padding"/> MUST be used.</t>

<t>Similarly, a DSO message MUST NOT contain a TSIG record.
A TSIG record in a conventional DNS message is added as the last record
in the additional records section, and carries a signature computed over
the preceding message content. Since DSO data appears
after the additional records section, it would not be included in the
signature calculation. 
If use of signatures with DSO messages becomes necessary in the 
future, an explicit Modifier TLV needs to be defined to 
perform this function.</t>

<t>Note however that, while DSO <spanx style="emph">messages</spanx> cannot include
EDNS(0) or TSIG records, a DSO <spanx style="emph">session</spanx> is typically used to 
carry a whole series of DNS messages of different kinds, including DSO
messages, and other DNS message types like Query <xref target="RFC1034"/> 
<xref target="RFC1035"/> and Update <xref target="RFC2136"/>, and those messages can carry EDNS(0) and 
TSIG records.</t>

<t>This specification explicitly prohibits use of the
EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>
in <spanx style="emph">any</spanx> messages sent on a DSO session (because it duplicates
the functionality provided by the DSO Keepalive operation),
but messages may contain other EDNS(0) options as appropriate.</t>

</section>
</section>
<section anchor="message-handling" title="Message Handling">

<t>The initiator MUST set the value of the QR bit in the DNS header to zero
(0), and the responder MUST set it to one (1). Every DSO request 
message (QR=0) MUST elicit a response (QR=1), 
which MUST have the same MESSAGE ID in the DNS message header as in the 
corresponding request. DSO request messages sent by the client 
elicit a response from the server, and DSO request messages sent 
the server elicit a response from the client.</t>

<t>With most TCP implementations, the TCP data acknowledgement (generated because 
data has been received by TCP), the TCP window update (generated because TCP has 
delivered that data to the receiving software) and the DSO 
response (generated by the receiving software itself)
are all combined into a single packet, so in practice the requirement that every
DSO request message MUST elicit a 
DSO response incurs minimal extra cost on the network.
Requiring that every request elicit a corresponding response also avoids
performance problems caused by interaction between
Nagle’s Algorithm and Delayed Ack <xref target="NagleDA"/>.</t>

<t>The namespaces of 16-bit MESSAGE IDs are disjoint in each direction.
For example, it is <spanx style="emph">not</spanx> an error for both client and server to send a request
message with the same ID. In effect, the 16-bit MESSAGE ID combined with the 
identity of the initiator (client or server) serves as a 17-bit unique 
identifier for a particular operation on a DSO session.</t>

<t>As described in <xref target="header"/> An initiator MUST NOT reuse a MESSAGE ID that is 
already in use for an 
outstanding request, unless specified otherwise by the relevant specification 
for the DSO in question. At the very least, this means 
that a MESSAGE ID MUST NOT be reused in a particular direction
on a particular DSO session while the initiator is waiting for a response to a 
previous request on that DSO session, unless specified otherwise by the relevant 
specification for the DSO in question.
(For a long-lived state the MESSAGE ID for the operation
MUST NOT be reused whilst that state remains active.)</t>

<t>If a client or server receives a response (QR=1) where the MESSAGE ID does not
match any of its outstanding operations, this is a fatal error and it MUST 
immediately terminate the connection with a TCP RST (or equivalent for other 
protocols).</t>

</section>
</section>
<section anchor="keepalive" title="Keepalive Operation TLV">

<t>The Keepalive Operation TLV (DSO-TYPE=1) performs two functions: to reset the
keepalive timer for the DSO session and to establish the values for the Session Timers.</t>

<t>The Keepalive Operation TLV resets only the keepalive timer, not the inactivity timer.
The reason for this is that periodic Keepalive Operation TLVs are sent for the
sole purpose of keeping a DSO session alive because that DSO session has current or recent
activity that warrants keeping the DSO session alive.
If sending keepalive traffic itself were to reset the inactivity timer, then that would
create a circular livelock where keepalive traffic would be sent indefinitely to keep
a DSO session alive, where the only activity on that DSO session would be keepalive traffic
keeping the DSO session alive so that further keepalive traffic can be sent.</t>

<t>Sending keepalive traffic is considered a maintenance activity
that is performed in service of other client activities.
Sending keepalive traffic itself is not considered a client activity.
For a DSO session to be considered active, it must be carrying something more than just keepalive traffic.
This is why merely sending a Keepalive Operation TLV does not reset the inactivity timer.</t>

<t>When sent by a client, the Keepalive Operation TLV resets a DSO session’s keepalive timer,
and at the same time requests what the Session Timer timeout values should be from this point forward in the DSO session.</t>

<t>An acknowledgement is always required for a Keepalive Operation TLV and the TLV
Acknowledgement bit MUST be set in the request when originated by either the
client or the server.</t>

<t>Once a DSO session is in progress (see <xref target="details"/>)
the Keepalive TLV also MAY be initiated by a server.
When sent by a server, it resets a DSO session’s keepalive timer,
and unilaterally informs the client of the new Session Timer values to use from 
this point forward in this DSO session.</t>

<t>It is not required that the Keepalive TLV be used in every DSO session.
While many DNS Stateful operations
will be used in conjunction with a long-lived session state,
not all DNS Stateful operations require long-lived session state,
and in some cases the default 15-second value for both the inactivity timeout
and keepalive interval may be perfectly appropriate.</t>

<t>The TYPE-DEPENDENT DATA for the the Keepalive TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 INACTIVITY TIMEOUT (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 KEEPALIVE INTERVAL (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='INACTIVITY TIMEOUT:'>
  the inactivity timeout for the current DSO session, specified as a 32
bit word in network (big endian) order in units of milliseconds.
This is the timeout at which the client MUST close an inactive DSO session.
If the client does not gracefully close an inactive DSO session then after
twice this interval the server will forcibly terminate the connection
with a TCP RST (or equivalent for other protocols).</t>
  <t hangText='KEEPALIVE INTERVAL:'>
  the keepalive interval for the current DSO session, specified as a 32-bit
word, in network (big endian) order, in units of milliseconds.
This is the interval at which a client MUST generate keepalive
traffic to maintain connection state.
If the client does not generate the necessary keepalive traffic then after
twice this interval the server will forcibly terminate the connection
with a TCP RST (or equivalent for other protocols).</t>
</list></t>

<t>In a client-initiated DSO Keepalive message,
the inactivity timeout and keepalive interval contain the client’s requested values.
In a server response to a client-initiated message, the inactivity timeout and 
keepalive interval contain the server’s chosen values, which the client MUST 
respect. This is modeled after the DHCP protocol, where the client
requests a certain lease lifetime using DHCP option 51 <xref target="RFC2132"/>,
but the server is the ultimate authority
for deciding what lease lifetime is actually granted.</t>

<t>In a server-initiated DSO Keepalive message, the inactivity timeout and 
keepalive interval unilaterally inform the client of the new values from this 
point forward in this DSO session. The client MUST generate a response to the 
server-initiated DSO Keepalive message.
The MESSAGE ID in the response message MUST match the ID from the 
server-initiated DSO Keepalive message, and the response message 
MUST NOT contain any Operation TLV.</t>

<t>TODO: We may wish to change this, now that we’ve decided that we don’t need
all requests to generate responses.</t>

<t>When a client is sending its second and subsequent Keepalive DSO 
requests to the server, the client SHOULD continue to request its preferred 
values each time. This allows flexibility, so that if conditions change during 
the lifetime of a DSO session, the server can adapt its responses to better fit the
client’s needs.</t>

<section anchor="client-handling-of-received-session-timer-values" title="Client handling of received Session Timer values">

<t>When a client receives a response to its client-initiated DSO Keepalive message,
or receives a server-initiated DSO Keepalive message, the client has then received
Session Timer values dictated by the server. The two timer values contained in the
DSO Keepalive TLV from the server may each be higher, lower, or the same as the
respective Session Timer values the client previously had for this DSO session.</t>

<t>In the case of the keepalive timer, the handling of the received value is straightforward.
The act of receiving the message containing the DSO Keepalive TLV itself resets
the keepalive timer, and the keepalive interval given in the DSO Keepalive TLV
indicates the maximum time that may elapse before another message must be sent
or received on this DSO session, if the DSO session is to remain alive.</t>

<t>In the case of the inactivity timeout, the handling of the received value superficially
appears a little more subtle, though the meaning of the inactivity timeout is unchanged –
it still indicates the maximum permissible time allowed without activity on a DSO session.
The act of receiving the message containing the DSO Keepalive TLV does not
itself reset the inactivity timer. The time elapsed since the last useful
activity on this DSO session is unaffected by exchange of DSO Keepalive messages.
Upon reception of an inactivity timeout value from the server, that
becomes the new maximum permissible time without activity on a DSO session.</t>

<t><list style="symbols">
  <t>If the time since the last non-keepalive activity on this DSO session is not
greater than the inactivity timeout, then the DSO session may remain open for now.
When such time comes that the time since the last non-keepalive activity on this DSO session exceeds
the inactivity timeout dictated by the server, the client MUST then close the DSO session,
as described above.</t>
  <t>If more than the maximum permissible time has already elapsed since the last
non-keepalive activity on this DSO session, then this DSO session has already been inactive
for longer than the server permits, and the client MUST immediately close this DSO session.</t>
  <t>If more than twice the new maximum permissible time has already elapsed since the last
non-keepalive activity on this DSO session, then this DSO session is eligible to be
forcibly terminated by the server, though if a server abruptly reduces the
inactivity timeout in this way the server SHOULD give the client a grace period
of one quarter of the new inactivity timeout, to give the client time to close
the connection gracefully before the server resorts to terminating it forcibly.</t>
</list></t>

</section>
<section anchor="relation-to-edns0-tcp-keepalive-option" title="Relation to EDNS(0) TCP Keepalive Option">

<t>The inactivity timeout value in the Keepalive TLV (DSO-TYPE=1) has similar
intent to the EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>.
A client/server pair that supports DSO MUST NOT use the
EDNS(0) TCP KeepAlive option within any message after a DSO 
session has been established.
Once a DSO session has been established, if either
client or server receives a DNS message over the DSO session that contains an
EDNS(0) TCP Keepalive option, this is an error and the receiver of the
EDNS(0) TCP Keepalive option MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="delay" title="Retry Delay TLV">

<t>The Retry Delay TLV (DSO-TYPE=0) can be used as an Operation TLV or as
a Modifier TLV.</t>

<t>The TYPE-DEPENDENT DATA for the the Retry Delay TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     RETRY DELAY (32 bits)                     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='RETRY DELAY:'>
  a time value, specified as a 32 bit word in network order in units of 
milliseconds, within which the client MUST NOT retry this operation, or retry 
connecting to this server.</t>
</list></t>

<t>The RECOMMENDED value is 10 seconds.</t>

<section anchor="use-as-an-operation-tlv" title="Use as an Operation TLV">

<t>When sent in a DSO request message, from server to client, the 
Retry Delay TLV (0) is considered an Operation TLV. It is used by a server 
to request that a client close the DSO session and underlying connection, and 
not to reconnect for the indicated time interval.</t>

<t>In this case it applies to the DSO session as a whole, and the client MUST close the 
DSO session, as described in section <xref target="retry"/>. The RCODE in the message header 
MUST indicate the reason for the termination:</t>

<t><list style="symbols">
  <t>NOERROR indicates a routine shutdown.</t>
  <t>SERVFAIL indicates that the server is overloaded due to resource exhaustion.</t>
  <t>REFUSED indicates that the server has been reconfigured and is no longer able 
to perform one or more of the functions 
currently being performed on this DSO session (for example, a DNS Push Notification 
server could be reconfigured such that is is no longer accepting DNS Push 
Notification requests for one or more of the currently subscribed names).</t>
</list></t>

<t>This document specifies only these three RCODE values for Retry Delay request.
Servers sending Retry Delay requests SHOULD use one of these three values.
However, future circumstances may create situations where other RCODE values
are appropriate in Retry Delay requests, so clients MUST be prepared
to accept Retry Delay requests with any RCODE value.</t>

<t>An acknowledgement is not desired for a Retry Delay Operation TLV and the TLV
Acknowledgement bit MUST be cleared in the request.</t>

</section>
<section anchor="use-as-a-modifier-tlv" title="Use as a Modifier TLV">

<t>When appended to a DSO response message for some client request,
the Retry Delay TLV (0) is considered a Modifier TLV.
The indicated time interval during which the client SHOULD NOT retry
applies only to the failed operation, not to the DSO session as a whole.</t>

<t>In the case of a client request that returns a nonzero RCODE value, the server 
MAY append a Retry Delay TLV (0) to the response, indicating the time interval
during which the client SHOULD NOT attempt this operation again.</t>

</section>
</section>
<section anchor="padding" title="Encryption Padding TLV">

<t>The Encryption Padding TLV (DSO-TYPE=2) can only be used as a Modifier TLV.
It is only applicable when the DSO Transport layer uses encryption
such as TLS.</t>

<t>The TYPE-DEPENDENT DATA for the the Padding TLV is optional and is a
variable length field containing non-specified values. A DATA LENGTH
of 0 essentially provides for 4 octets of padding (the minimum amount).</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   /                                                               /
   /                   VARIABLE NUMBER OF OCTETS                   /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t>As in <xref target="RFC7830"/> the PADDING octets SHOULD be set to 0x00.  Other values MAY be used,
for example, in cases where there is a concern that the padded
message could be subject to compression before encryption.
PADDING octets of any value MUST be accepted in the messages received.</t>

<t>The Encryption Padding TLV may be included in either a DSO
request, response, or both. As in <xref target="RFC7830"/> if a request is received with a Encryption
Padding TLV, then the response MUST also include an Encryption Padding TLV.</t>

<t>The length of padding is intentionally not specified in this document and
is a function of current best practices with respect to the type and length
of data in the preceding TLVs. See <xref target="I-D.ietf-dprive-padding-policy"/></t>

</section>
<section anchor="lifecycle" title="DSO Session Lifecycle and Timers">

<section anchor="dso-session-initiation" title="DSO Session Initiation">

<t>A session begins when a client makes a new connection to a server.</t>

<t>A DSO session begin as described in <xref target="establishment"/>.</t>

<t>The client may perform as many DNS operations as it wishes using the
newly created DSO session. Operations SHOULD be pipelined (i.e., the
client doesn’t need wait for a response before sending the next message).
The server MUST act on messages in the order they are transmitted, but
responses to those messages MAY be sent out of order, if appropriate.</t>

</section>
<section anchor="timers" title="Timers">

<t>Two timer values are associated with a DSO session: the inactivity timeout, and the
keepalive interval.</t>

<t>The first timer value, the inactivity timeout, is the maximum time for which
a client may speculatively keep a DSO session open in the expectation that
it may have future requests to send to that server.</t>

<t>The second timer value, the keepalive interval, is the maximum permitted
interval between client messages to the server if the client wishes to keep
the DSO session alive.</t>

<t>The two timer values are independent. The inactivity timeout may be lower, the same,
or higher than the keepalive interval, though in most cases the inactivity timeout is 
expected to be shorter than the keepalive interval.</t>

<t>Only when the client has a very long-lived low-traffic state does the 
keepalive interval timer come into play, to ensure that a sufficient residual
amount of traffic is generated to maintain NAT and firewall state.</t>

<t>On a new DSO session, if no explicit DSO
Keepalive message exchange has taken place, the default value for both timers is 15 seconds.
For both timers, lower values of the timer result in higher network traffic
and higher CPU load on the server.</t>

</section>
<section anchor="inactive-dso-sessions" title="Inactive DSO Sessions">

<t>At both servers and clients, the generation or reception of any complete
DNS message, including DNS requests, responses, updates, or DSO
messages, resets both timers for that DSO session, with the exception
that a DSO Keepalive message resets only the keepalive interval 
timer, not the inactivity timeout timer.</t>

<t>In addition, for as long as the client has an outstanding operation in progress,
the inactivity timeout timer remains conceptually fixed at zero, and an inactivity timeout cannot
occur.</t>

<t>For short-lived DNS operations like traditional queries and updates,
an operation is considered in progress for the time between request and 
response, typically a period of a few hundred milliseconds at most.
At the client, the inactivity timeout timer is cleared upon transmission of a 
request and remains cleared until reception of the corresponding response.
At the server, the inactivity timeout timer is cleared upon reception of a request
and remains cleared until transmission of the corresponding response.</t>

<t>For long-lived DNS Stateful operations, an operation is considered in progress for
as long as the state is active, until it is cancelled.
This means that a DSO session can exist, with a state 
active, with no messages flowing in either direction, for far longer than the 
inactivity timeout, and this is not an error. This is why there are two separate 
timers: the inactivity timeout, and the keepalive interval. Just because a DSO session has 
no traffic for an extended period of time
does not automatically make that DSO session “inactive”, if it has an active state 
that is awaiting for events.</t>

</section>
<section anchor="the-inactivity-timeout" title="The Inactivity Timeout">

<t>The purpose of the inactivity timeout is for the server to balance its trade off 
between the costs of setting up new DSO sessions and the costs of maintaining inactive 
DSO sessions. A server with abundant DSO session capacity can offer a high inactivity timeout, 
to permit clients to keep a speculative DSO session open for a long time, to save 
the cost of establishing a new DSO session for future communications with that 
server. A server with scarce memory resources can offer a low inactivity timeout,
to cause clients to promptly close DSO sessions whenever they have no outstanding
operations with that server, and then create a new DSO session later when needed.</t>

<section anchor="closing-inactive-dso-sessions" title="Closing Inactive DSO Sessions">

<t>A client is NOT required to wait until the inactivity timeout timer expires
before closing a DSO session.
A client MAY close a DSO session at any time, at the client’s discretion.
If a client determines that it has no current or reasonably anticipated
future need for an inactive DSO session, then the client SHOULD close that connection.</t>

<t>If, at any time during the life of the DSO session,
the inactivity timeout value (i.e., 15 seconds by default) elapses
without there being any operation active on the DSO session,
the client MUST gracefully close the connection with a TCP FIN
(or equivalent for other protocols).</t>

<t>If, at any time during the life of the DSO session, twice the inactivity timeout value
(i.e., 30 seconds by default) elapses without there being any operation
active on the DSO session, the server SHOULD consider the client delinquent,
and forcibly abort the DSO session.
For DSO sessions over TCP (or over TLS over TCP),
to avoid the burden of having a connection in TIME-WAIT state, instead of
closing the connection gracefully with a TCP FIN the server SHOULD abort
the connection with a TCP RST (or equivalent for other protocols).
(In the BSD Sockets API this is achieved by setting the
SO_LINGER option to zero before closing the socket.)</t>

<t>In this context, an operation being active on a DSO session includes
a query waiting for a response, an update waiting for a response,
or active state,
but not a DSO Keepalive message exchange itself.
A DSO Keepalive message exchange resets only the keepalive
interval timer, not the inactivity timeout timer.</t>

<t>If the client wishes to keep an inactive DSO session open for longer than
the default duration without having to send traffic every 15 seconds,
then it uses the DSO Keepalive message to request
longer timeout values, as described in <xref target="keepalive"/>.</t>

</section>
<section anchor="values-for-the-inactivity-timeout" title="Values for the Inactivity Timeout">

<t>For the inactivity timeout value, lower values result in more frequent DSO session 
teardown and re-establishment. Higher values result in lower traffic and CPU
load on the server, but a larger memory burden to maintain state for inactive 
DSO sessions.</t>

<t>A shorter inactivity timeout with a longer keepalive interval signals to the client 
that it should not speculatively keep inactive DSO sessions open for very long for no 
reason, but when it does have an active reason to keep a DSO session open, it 
doesn’t need to be sending an agressive level of keepalive traffic.</t>

<t>A longer inactivity timeout with a shorter keepalive interval signals to the client
that it may speculatively keep inactive DSO sessions open for a long time, but it
should be sending a lot of keepalive traffic on those inactive DSO sessions.
This configuration is expected to be less common.</t>

<t>To avoid excessive traffic the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with an inactivity timeout value less than ten seconds.
If a client receives an Keepalive message specifying an inactivity timeout value
less than ten seconds this is an error and the client MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="the-keepalive-interval" title="The Keepalive Interval">

<t>The purpose of the keepalive interval is to manage the generation of
sufficient messages to maintain state in middle-boxes (such at NAT gateways
or firewalls) and for the client and server to periodically verify that they
still have connectivity to each other. This allows them to clean up state
when connectivity is lost, and attempt re-connection if appropriate.</t>

<section anchor="keepalive-interval-expiry" title="Keepalive Interval Expiry">

<t>If, at any time during the life of the DSO session,
the keepalive interval value (i.e., 15 seconds by default) elapses
without any DNS messages being sent or received on a DSO session,
the client MUST take action to keep the DSO session alive.
To keep the DSO session alive the client MUST send a
DSO Keepalive message (see <xref target="keepalive"/>).
A DSO Keepalive message exchange resets only the keepalive
interval timer, not the inactivity timeout timer.</t>

<t>If a client disconnects from the network abruptly,
without cleanly closing its DSO session,
leaving long-lived state uncanceled,
the server learns of this after failing to
receive the required keepalive traffic from that client.
If, at any time during the life of the DSO session,
twice the keepalive interval value (i.e., 30 seconds by default) elapses
without any DNS messages being sent or received on a DSO session,
the server SHOULD consider the client delinquent,
and forcibly abort the connection with a TCP RST (or equivalent for other 
protocols).</t>

</section>
<section anchor="values-for-the-keepalive-interval" title="Values for the Keepalive Interval">

<t>For the keepalive interval value, lower values result in higher volume keepalive 
traffic. Higher values of the keepalive interval reduce traffic and CPU load, 
but have minimal effect on the memory burden
at the server, because clients keep a DSO session open for the same length of time
(determined by the inactivity timeout) regardless of the level of keepalive traffic 
required.</t>

<t>It may be appropriate for clients and servers to select different keepalive 
interval values depending on the nature of the network they are on.</t>

<t>A corporate DNS server that knows it is serving only clients on the internal 
network, with no intervening NAT gateways or firewalls, can impose a higher 
keepalive interval, because frequent keepalive traffic is not required.</t>

<t>A public DNS server that is serving primarily residential consumer clients, 
where it is likely there will be a NAT gateway on the path, may impose a lower 
keepalive interval, to generate more frequent keepalive traffic.</t>

<t>A smart client may be adaptive to its environment. A client using
a private IPv4 address <xref target="RFC1918"/> to communicate with a DNS server
at an address that is not in the same IPv4 private address block,
may conclude that there is likely to be a NAT gateway on the path,
and accordingly request a lower keepalive interval.</t>

<t>For environments where there is a NAT gateway or firewalls on the path, it is
RECOMMENDED that clients request, and servers grant, a keepalive interval of 15
minutes. In other environments it is RECOMMENDED that clients request, and 
servers grant, a keepalive interval of 60 minutes.</t>

<t>Note that the lower the keepalive interval value, the higher the load on client
and server. For example, an keepalive interval value of 100ms would result in a
continuous stream of at least ten messages per second, in both directions,
to keep the DSO session alive. And, in this extreme example, a single packet loss and
retransmission over a long path could introduce a momentary pause in the stream of messages,
long enough to cause the server to overzealously abort the connection.</t>

<t>Because of this concern, the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with an keepalive interval value less than ten seconds.
If a client receives an Keepalive message specifying an keepalive interval value
less than ten seconds this is an error and the client MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="server-initiated-termination-on-error" title="Server-Initiated Termination on Error">

<t>After sending an error response to a client, the server MAY close the DSO session,
or may allow the DSO session to remain open. For error conditions
that only affect the single operation in question, the server SHOULD return an
error response to the client and leave the DSO session open for further operations.
For error conditions that are likely to make all operations unsuccessful in the
immediate future, the server SHOULD return an error response to the client and 
then close the DSO session by sending a Retry Delay request message, as described in 
<xref target="delay"/>.</t>

</section>
<section anchor="client-behaviour-in-receiving-an-error" title="Client Behaviour in Receiving an Error">

<t>Upon receiving an error response from the server, a client SHOULD NOT
automatically close the DSO session. An error relating to one particular operation
on a DSO session does not necessarily imply that all other operations on that
DSO session have also failed, or that future operations will fail. The client
should assume that the server will make its own decision about whether or not to
close the DSO session, based on the server’s determination of whether the error
condition pertains to this particular operation, or would also apply to any
subsequent operations. If the server does not close the DSO session then the client
SHOULD continue to use that DSO session for subsequent operations.</t>

</section>
<section anchor="server-initiated-termination-on-overload" title="Server-Initiated Termination on Overload">

<t>Apart from the cases where:</t>

<t><list style="symbols">
  <t>Session Timer expire (see Section xx)</t>
  <t>On error (see Section xx)</t>
  <t>When under load (see below)</t>
</list></t>

<t>a server MUST NOT close a DSO session with a client, except in extraordinary error 
conditions. Closing the DSO session is the
client’s responsibility, to be done at the client’s discretion, when it so 
chooses. A server only closes a DSO session under exceptional circumstances, such as
when the server application software or underlying operating system is
restarting, the server application terminated unexpectedly (perhaps due to a
bug that makes it crash), or the server is undergoing maintenance procedures.
When possible, a server SHOULD send a Retry Delay message informing the
client of the reason for the DSO session being closed, and allow the client
five seconds to receive it before the server resorts to forcibly aborting the 
connection.</t>

</section>
<section anchor="retry" title="Retry Delay Operation TLV">

<t>There may be rare cases where a server is overloaded and wishes to shed load.
If a server is low on resources it MAY simply terminate a client connection with 
a TCP RST (or equivalent for other protocols).
However, the likely behavior of the client may be simply to to treat this as a
network failure and connect
immediately, putting more burden on the server.</t>

<t>Therefore to avoid this reconnection implosion, a server SHOULD instead choose 
to shed client load by sending a Retry Delay request message, with an RCODE of 
SERVFAIL, to inform the client of the overload situation. After sending a Retry 
Delay request message, the server MUST NOT send any further messages on that 
DSO session.</t>

<t>After sending the Retry Delay request the server SHOULD allow the
client five seconds to close the connection, and if the client has not
closed the connection after five seconds then the server SHOULD abort
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>Upon receipt of a Retry Delay request from the server, the client MUST
make note of the reconnect delay for this server, and then immediately
close the connection. This is to place the burden of TCP’s TIME-WAIT state on 
the client.</t>

<t>A Retry Delay request message MUST NOT be initiated by a client.
If a server receives a Retry Delay request message this is an error
and the server MUST immediately terminate the connection with a TCP RST
(or equivalent for other protocols).</t>

<section anchor="outstanding-operations" title="Outstanding Operations">

<t>At the moment a server chooses to initiate a Retry Delay request message
there may be DNS requests already in flight from client to server on this 
DSO session, which will arrive at the server after its Retry Delay request message 
has been sent.
The server MUST silently ignore such incoming requests, and MUST NOT generate
any response messages for them. When the Retry Delay request message from the
server arrives at the client, the client will determine that any DNS requests
it previously sent on this DSO session, that have not yet received a response, now 
will certainly not be receiving any response. Such requests should be considered
failed, and should be retried at a later time, as appropriate.</t>

<t>In the case where some, but not all, of the existing operations on a DSO session 
have become invalid (perhaps because the server has been reconfigured and is no 
longer authoritative for some of the names),
but the server is terminating all DSO sessions en masse with a REFUSED (5) RCODE,
the RECONNECT DELAY MAY be zero, indicating that the clients SHOULD immediately
attempt to re-establish operations.
It is likely that some of the attempts will be successful and some will not.</t>

<t>In the case where a server is terminating a large number of DSO sessions at once
(e.g., if the system is restarting) and the server doesn’t want to be inundated 
with a flood of simultaneous retries, it SHOULD send different RECONNECT delay 
values to each client.
These adjustments MAY be selected randomly, pseudorandomly, or deterministically
(e.g., incrementing the time value by one tenth of a second for each successive
client, yielding a post-restart reconnection rate of ten clients per second).</t>

</section>
<section anchor="client-reconnection" title="Client Reconnection">

<t>After a DSO session is closed by the server, the client SHOULD try to reconnect,
to that server, or to another suitable server, if more than one is available.
If reconnecting to the same server, the client MUST respect the indicated delay
before attempting to reconnect.</t>

<t>If a particular server does not want a client to reconnect (it is being
de-commissioned), it SHOULD set the retry delay to the maximum value (which is
approximately 497 days). If the server will only be out of service for a maintenance
period, it should use a value closer to the expected maintenance window and
not default to a very large delay value or clients may not attempt to reconnect
after it resumes service.</t>

</section>
</section>
</section>
<section anchor="sharing" title="Connection Sharing">

<t>As in <xref target="RFC7766"/>, to mitigate the risk of unintentional server overload, DNS clients
MUST take care to minimize the number of concurrent TCP connections
made to any individual server.  It is RECOMMENDED that for any given
client/server interaction there SHOULD be no more than one connection
for regular queries, one for zone transfers, and one for each
protocol that is being used on top of TCP (for example, if the
resolver was using TLS).  However, it is noted that certain primary/
secondary configurations with many busy zones might need to use more
than one TCP connection for zone transfers for operational reasons
(for example, to support concurrent transfers of multiple zones).</t>

<t>A single server may support multiple services, including DNS Updates 
<xref target="RFC2136"/>, DNS Push Notifications <xref target="I-D.ietf-dnssd-push"/>,
and other services, for one or more DNS zones.
When a client discovers that the target server for several different operations
is the same target hostname and port, the client SHOULD use a single
shared DSO session for all those operations.
A client SHOULD NOT open multiple connections to the same target host and port
just because the names being operated on are different or
happen to fall within different zones.
This is to reduce unnecessary connection load on the DNS server.</t>

<t>However, server implementers and operators should be aware that connection
sharing may not be possible in all cases.
A single client device may be home to multiple independent client software
instances that don’t coordinate with each other.
Similarly, multiple independent client devices behind the same NAT gateway
will also typically appear to the DNS server as different source ports on
the same client IP address.
Because of these constraints, a DNS server MUST be prepared to accept
multiple connections from different source ports on the same client IP address.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="dso-opcode-registration" title="DSO OPCODE Registration">

<t>IANA are directed to assign a value (tentatively 6)
in the DNS OPCODEs Registry for the DSO OPCODE.</t>

</section>
<section anchor="dso-rcode-registration" title="DSO RCODE Registration">

<t>IANA are directed to assign a value (tentatively 11)
in the DNS RCODE Registry for the DSONOTIMP error code.</t>

</section>
<section anchor="dso-type-codes-registry" title="DSO Type Codes Registry">

<t>IANA are directed to create the DSO Type Codes
Registry, with initial values as follows:</t>

<texttable>
      <ttcol align='right'>Type</ttcol>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Status</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>0x0000</c>
      <c>RetryDelay</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0001</c>
      <c>KeepAlive</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0002</c>
      <c>Encryption Padding</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0003 - 0x003F</c>
      <c>Unassigned, reserved for DSO session management TLVs</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x0040 - 0xF7FF</c>
      <c>Unassigned</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0xF800 - 0xFBFF</c>
      <c>Reserved for local / experimental use</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0xFC00 - 0xFFFF</c>
      <c>Reserved for future expansion</c>
      <c>&#160;</c>
      <c>&#160;</c>
</texttable>

<t>Registration of additional DSO Type Codes requires publication
of an appropriate IETF “Standards Action” or “IESG Approval” document <xref target="RFC5226"/>.</t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>If this mechanism is to be used with DNS over TLS, then these messages
are subject to the same constraints as any other DNS over TLS messages
and MUST NOT be sent in the clear before the TLS session is established.</t>

<t>The data field of the “Encryption Padding” TLV could be used as a covert channel.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to
Tim Chown,
Ralph Droms,
Jan Komissar,
and Manju Shankar Rao
for their helpful contributions to this document.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC1035;
&RFC7766;
&RFC6891;
&RFC7828;
&RFC2119;
&RFC7830;
&RFC1034;
&RFC2136;
&RFC2132;
&RFC1918;
&RFC5226;


    </references>

    <references title='Informative References'>

<reference anchor="NagleDA" target="http://www.stuartcheshire.org/papers/nagledelayedack/">
  <front>
    <title>TCP Performance problems caused by interaction between Nagle's Algorithm and Delayed ACK</title>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization></organization>
    </author>
    <date year="2005" month="May" day="20"/>
  </front>
</reference>
&RFC7858;
&I-D.ietf-dnssd-push;
&RFC0768;
&I-D.ietf-dprive-padding-policy;


    </references>



  </back>

<!-- ##markdown-source:
H4sIAIKur1kAA+1963IbR5bm/3yKXOqHRQ8Ak7rZ1sbGNk1RbnZLopqk3NPz
Z6MAFMiygCp0VYEUWlLEPMjuy82T7LlmnqwqULTb29MxsXKrRQJVeT157ufL
8Xjs2qJd5s/9izcX/qLN2nyxWfqzdV5nbVGVjZtXszJbwQPzOlu04yJvF+N5
2VTrcZM3DTwyboqrMluOD564Obz+3D86OPx2fPA9flCs6+e+rTdN++jg4PuD
Ry6r8+y5Py3bvC7z1t1eUcdnb/2fq/p9UV75H+tqs3bvb+ND4xfYsZtl7XPf
tHO3WWM3zXN//vLYf/vts2cj+unw4PFT52bVHFp57jcwyu/cunjuvB/7tprR
v812VeeLhn+u6pZ+cdmmva5qehL+el+U2PjE/5Avl0VDH/EKnGdb+2FVX8VR
+ott0+arxh/DokHTxWY1gi9nE3o0m07r/Aaevjim3xvoOof5fP/0wB9fZzW0
AYuPn9HXs6LdQnf5/Laq5v4YfuOPqzmM4vjIf//k4Nlj+WhTtjU8/O7iiD5Y
X1clPPQvh/4ZtP3k0WN/CEtPX+WrrFg+93W2/V3RzCYw/HTKFxMYS95cF3Vu
Jn3RbmB86Tc086P1epnHKeqUDuGjRVEWbe5fVdXazOd4A1TVFmXVmczTg8Mn
X5rMk4Pv/PffPvGPHx18ayczk2H9LsPRTGbVKp3THyb+RTEDymqq0kzqD9V1
2fmC5nQBo5tvyrirl/nsuqyW1VWRN8lOypN26vTz2L/OrrJ5tsxLf5zDdHL5
+OzDoqrn/mJW5OUs92+z+r1ZG/7WLMzZvz7xT3486qwLLuvc/xFIfE4zDevw
czb/XcND6i/CxfAiXGR19l9qERqY0O5VOJrAqEqYrFmCIzzMVWm/4CWAoTcw
mFlu28/46cmKnv7dFX7a7+dy4t9uGmBRdWF6uqxW6cfUz7syWyyKZQEfzzsU
//3h9/67Z9/6w8ePk+O7lkZ+N83Kq5+pe1eUMNYVMOybHDfgTXa1zF8c8V60
WX2F5/K6bdfPv/nm9vZ20tCR1qODjOCbdQZns/mmxDfn+TLb5vNs9v4bboEF
xOXxW/82r6kn3Lx1XU2XyPFm2aaBDZluYf4wsmyGgsNP8/Y2h/2nwXzVwFJf
VXXRXq98Vs79C+7DHx3/kSkq8OC7Oc8OVqWC5+DpGP736MC58XgMZApECcNx
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
99Ns9t79X4/tKvR+6AAA

-->

</rfc>

