<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.1.1 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC7766 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7766.xml">
<!ENTITY RFC6891 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6891.xml">
<!ENTITY RFC7828 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7828.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC7830 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7830.xml">
<!ENTITY RFC1034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC2136 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2136.xml">
<!ENTITY RFC2132 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2132.xml">
<!ENTITY RFC1918 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1918.xml">
<!ENTITY RFC5226 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5226.xml">
<!ENTITY RFC7858 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7858.xml">
<!ENTITY I-D.ietf-dnssd-push SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dnssd-push.xml">
<!ENTITY RFC0768 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.0768.xml">
<!ENTITY I-D.ietf-dprive-padding-policy SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dprive-padding-policy.xml">
]>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-dnsop-session-signal-04" category="std" updates="RFC 7766, RFC 1035">

  <front>
    <title>DNS Stateful Operations</title>

    <author initials="R." surname="Bellis" fullname="Ray Bellis">
      <organization abbrev="ISC">Internet Systems Consortium, Inc.</organization>
      <address>
        <postal>
          <street>950 Charter Street</street>
          <city>Redwood City</city>
          <code>CA 94063</code>
          <country>USA</country>
        </postal>
        <phone>+1 650 423 1200</phone>
        <email>ray@isc.org</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>1 Infinite Loop</street>
          <city>Cupertino</city>
          <code>CA 95014</code>
          <country>USA</country>
        </postal>
        <phone>+1 408 974 3207</phone>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="J." surname="Dickinson" fullname="John Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>jad@sinodun.com</email>
      </address>
    </author>
    <author initials="S." surname="Dickinson" fullname="Sara Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>sara@sinodun.com</email>
      </address>
    </author>
    <author initials="A." surname="Mankin" fullname="Allison Mankin">
      <organization>Salesforce</organization>
      <address>
        <email>allison.mankin@gmail.com</email>
      </address>
    </author>
    <author initials="T." surname="Pusateri" fullname="Tom Pusateri">
      <organization>Unaffiliated</organization>
      <address>
        <phone>+1 919 867 1330</phone>
        <email>pusateri@bangj.com</email>
      </address>
    </author>

    <date year="2017" month="September" day="13"/>

    <area>Internet</area>
    <workgroup>DNSOP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document defines a new DNS Stateful Operation OPCODE used to communicate 
operations within persistent stateful sessions, expressed using type-length-value (TLV) 
syntax, and defines an initial set of TLVs used to manage session timeouts and 
termination. This mechanism is intended to reduce the overhead of existing 
“per-packet” signaling mechanisms with “per-message” semantics as well as 
defining new stateful operations not defined in EDNS(0).</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The use of transports for DNS other than UDP is being increasingly specified,
for example, DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> and DNS over TLS <xref target="RFC7858"/>.
Such transports can offer persistent, long-lived sessions and therefore when
using them for transporting DNS messages it is of benefit to have a mechanism
that can establish parameters associated with those sessions, such as timeouts.
In such situations it is also advantageous to support server initiated messages.</t>

<t>The existing EDNS(0) Extension Mechanism for DNS <xref target="RFC6891"/> is explicitly
defined to only have “per-message” semantics. Whilst EDNS(0) has been used to
signal at least one session related parameter (the EDNS(0) TCP Keepalive option
<xref target="RFC7828"/>) the result is less than optimal due to the restrictions
imposed by the EDNS(0) semantics and the lack of server-initiated signalling. 
For example, a server cannot arbitrarily 
instruct a client to close a connection because the server can only send EDNS(0) options 
in responses to queries that contained EDNS(0) options.</t>

<t>This document defines a new DNS Stateful Operation OPCODE used to carry
operations within persistent stateful connections, expressed using type-length-value (TLV)
syntax, and
defines an initial set of TLVs including ones used to manage session timeouts and termination.</t>

<t>This new format has distinct advantages over an RR based format because it
is more explicit and more compact. Each TLV definition is specific
to the use case, and as a result contains no redundant or overloaded fields.
Importantly, it completely avoids conflating DNS Stateful Operations in anyway 
with normal DNS operations or with existing EDNS(0) based functionality. A goal 
of this approach is to avoid the operational
issues that have befallen EDNS(0), particularly relating to middle-box 
behaviour.</t>

<t>With EDNS(0), multiple options may be packed into a single OPT pseudo-RR,
and there is no generalized mechanism for a client to be able to tell
whether a server has processed or otherwise acted upon each individual
option within the combined OPT RR.
The specifications for each individual option need to define how each
different option is to be acknowledged, if necessary.</t>

<t>With DNS Stateful Operations, in contrast, there is no compelling motivation
to pack multiple operations into a single message for efficiency reasons.
Each Stateful operation is communicated in its own separate
DNS message, and the transport protocol can take care of packing
separate DNS messages into a single IP packet if appropriate.
For example, TCP can pack multiple small DNS messages into a single TCP segment.
The RCODE in each response message indicates the success or failure of the operation in question.</t>

<t>It should be noted that the message format for DNS Stateful Operations
(see <xref target="format"/>) differs from the traditional DNS packet
format used for standard queries and responses.
The standard twelve-octet header is used, but the four count fields
(QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) are set to zero and their
corresponding sections are not present.
The actual data pertaining to DNS Stateful Operations is
appended to the end of the DNS message header.
When displayed using today’s packet analyzer tools that have not been updated
to recognize the DNS Stateful Operations format, this will result
in the Stateful Operations data being displayed as unknown additional
data after the end of the DNS message. It is likely that future updates
to these tools will add the ability to recognize, decode, and display the
Stateful Operations data.</t>

</section>
<section anchor="terminology" title="Terminology">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and
“OPTIONAL” in this document are to be interpreted as described in
“Key words for use in RFCs to Indicate Requirement Levels” <xref target="RFC2119"/>.</t>

<t>“DSO” is used to mean DNS Stateful Operation.</t>

<t>The term “connection” means a bidirectional byte stream of reliable,
in-order messages, such as provided by using
DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> or DNS over TLS <xref target="RFC7858"/>.</t>

<t>The unqualified term “session” in the context of this document means the exchange of
DNS messages over a connection where:</t>

<t><list style="symbols">
  <t>The connection between client and server is persistent and relatively
long-lived (i.e., minutes or hours, rather than seconds).</t>
  <t>Either end of the connection may initiate messages to the other.</t>
</list></t>

<t>A “DSO session” is established between two endpoints that
acknowledge persistent DNS state via the exchange of DSO messages
over the connection. This is distinct from, for example a DNS-over-TCP session
as described in RC7766.</t>

<t>A “DSO session” is terminated when the underlying connection is closed.</t>

<t>The term “server” means the software with a listening socket, awaiting
incoming connection requests.</t>

<t>The term “client” means the software which initiates a connection
to the server’s listening socket.</t>

<t>The terms “initiator” and “responder” correspond respectively to the
initial sender and subsequent receiver of a DSO request message,
regardless of which was the “client” and “server” in the usual DNS sense.</t>

<t>The term “sender” may apply to either an initiator
(when sending a DNS Stateful Operation request message)
or a responder (when sending a DNS Stateful Operation response message).</t>

<t>Likewise, the term “receiver” may apply to either a responder
(when receiving a DNS Stateful Operation request message)
or an initiator (when receiving a DNS Stateful Operation response message).</t>

<t>DNS Stateful Operations are expressed using type-length-value (TLV) syntax.</t>

<t>Two timers (elapsed time since an event) are defined in this document:</t>

<t><list style="symbols">
  <t>an inactivity timer (see <xref target="keepalive"/> and <xref target="inactivetimer"/>)</t>
  <t>a keepalive timer (see <xref target="keepalive"/> and <xref target="keepalivetimer"/>)</t>
</list></t>

<t>The timeouts associated with these timers are called the inactivity timeout and 
the keepalive interval respectively. 
The term “Session Timeouts” is used to refer to this pair of timeout values.</t>

<t>Reseting a timer means resetting the timer value to zero and starting the timer 
again. Clearing a timer means resetting the timer value to zero but NOT starting 
the time again.</t>

</section>
<section anchor="discussion" title="Discussion">

<t>There are several use cases for DNS Stateful operations that can 
be described here.</t>

<t>Firstly, establishing session parameters such as server defined timeouts is of 
great use in the 
general management of persistent connections. For example, using DSO sessions 
for stub to recursive DNS-over-TLS <xref target="RFC7858"/> is more flexible for both the 
client and the server than attempting to manage sessions using just the EDNS(0)
TCP Keepalive option
<xref target="RFC7828"/>. The simple set of TLVs defined in this document is
sufficient to greatly enhance connection management for this use case.</t>

<t>Secondly, DNS-SD has evolved into a naturally session based mechanism where, for 
example, long-lived subscriptions lend themselves to ‘push’ mechanisms as 
opposed to polling. Long-lived stateful connections and server initiated 
messages align with this use case as described in <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>A general use case is that DNS traffic is often bursty but session establishment 
can be expensive. One challenge with long-lived connections is to maintain 
sufficient traffic to maintain NAT and firewall state. To mitigate this issue 
this document introduces a 
new concept for the DNS, that is DSO “Keepalive traffic”. This traffic carries 
no DNS data and is not considered ‘activity’ in the classic DNS sense but serves 
to reset a keepalive timer in order to avoid re-cycling a DSO session.</t>

<t>There are a myriad of other potential use cases for DSO given the versatility 
and extensibility of this specification.</t>

<t><xref target="details"/> of this document first describes the protocol details of DNS Stateful
Operations including definitions of three TLVs for session management and 
encryption padding. <xref target="lifecycle"/> then presents a
detailed discussion of the DSO Session lifecycle including an
in-depth discussion of keepalive traffic and session termination.</t>

</section>
<section anchor="details" title="Protocol Details">

<section anchor="establishment" title="DSO Session Establishment">

<t>DSO messages MUST only be carried in protocols and in
environments where a session may be established according to the definition above.
Standard DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/>, and DNS over TLS <xref target="RFC7858"/>
are suitable protocols.</t>

<t>DNS over plain UDP <xref target="RFC0768"/> is not appropriate since it fails on the requirement for
in-order message delivery, and, in the presence of NAT gateways and firewalls
with short UDP timeouts, it fails to provide a persistent bi-directional
communication channel unless an excessive amount of keepalive traffic is used.</t>

<t>DSO messages relate only to the specific “DSO session” in which
they are being carried. A “DSO session” is established over a connection when
either side of the connection sends the first DSO
TLV and it is acknowledged by the other side. The DSO message format <xref target="dsodata"/> 
includes an option to specify that a DSO request does not require a 
response acknowledgement. Session establishment can only be performed using a 
DSO message that requires a response acknowledgement.</t>

<t>While this 
specification defines an initial set of three TLVs, additional TLVs may be 
defined in additional specifications. All three of the TLVs defined here are 
mandatory to implement.</t>

<t>A client MAY attempt to initiate DSO messages at any time
on a connection; receiving a NOTIMP response in reply indicates that the
server does not implement DSO, and the client SHOULD NOT
issue further DSO messages on that connection.</t>

<t>A server SHOULD NOT initiate DSO messages until a
client-initiated DSO message is received first,
unless in an environment where it is known in advance by other
means that the client supports DSO.
This requirement is to ensure that the clients that do not support
DSO do not receive unsolicited inbound DSO
messages that they would not know how to handle.</t>

<t>On a session between a client and server that support DSO,
once the client has sent at least one DSO message (or it is
known in advance by other means that the client supports DSO)
either end may unilaterally send DSO messages at any time,
and therefore either client or server may be the initiator of a message.</t>

<t>From this point on it is considered that a “DSO session” is in
progress. Clients and servers should behave as described in this specification
with regard to inactivity timeouts and connection close, not as prescribed in <xref target="RFC7766"/>.</t>

<section anchor="middle-box-considerations" title="Middle-box Considerations">

<t>Where an application-layer middle box (e.g., a DNS proxy, forwarder, or
session multiplexer) is in the path the middle box MUST NOT blindly
forward DSO messages in either direction, and MUST treat the inbound
and outbound connections as separate sessions.  This does not preclude
the use of DSO messages in the presence of an IP-layer middle box such
as a NAT that rewrites IP-layer and/or transport-layer headers, but
otherwise preserves the effect of a single session between the client
and the server.</t>

<t>To illustrate the above, consider a network where a middle box
terminates one or more TCP connections from clients and multiplexes the
queries therein over a single TCP connection to an upstream server.  The
DSO messages and any associated state are specific to the individual
TCP connections.  A DSO-aware middle box MAY in some circumstances be
able to retain associated state and pass it between the client and
server (or vice versa) but this would be highly TLV-specific.  For
example, the middle box may be able to maintain a list of which clients
have made Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/> and
make its own subscription(s) on their behalf, relaying any subsequent
notifications to the client (or clients) that have subscribed to that
particular notification.</t>

</section>
</section>
<section anchor="format" title="Message Format">

<t>A DSO message begins with
the standard twelve-octet DNS message header <xref target="RFC1035"/>
with the OPCODE field set to the DSO OPCODE (tentatively 6).
However, unlike standard DNS messages, the question section, answer section,
authority records section and additional records sections are not present.
The corresponding count fields (QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) MUST be
set to zero on transmission.</t>

<t>If a DSO message is received where any of the count fields are
not zero, then a FORMERR MUST be returned.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                          MESSAGE ID                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |QR |    OPCODE     |            Z              |     RCODE     |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     QDCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ANCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     NSCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ARCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                           DSO Data                            /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<section anchor="header" title="Header">

<t>In a request the MESSAGE ID field MUST be set to a unique value, that the
initiator is not currently using for any other active operation on this 
connection.
For the purposes here, a MESSAGE ID is in use in this DSO session if the
initiator has used it in a request for which it has not yet received a
response, or if the client has used it to setup state that it has not yet ready
to delete. For example, state could be a subscription as defined in 
<xref target="I-D.ietf-dnssd-push"/>.</t>

<t>In a response the MESSAGE ID field MUST contain a copy of the value of the
MESSAGE ID field in the request being responded to.</t>

<t>In a request the DNS Header QR bit MUST be zero (QR=0).
If the QR bit is not zero the message is not a request.</t>

<t>In a response the DNS Header QR bit MUST be one (QR=1).
If the QR bit is not one the message is not a response.</t>

<t>The DNS Header OPCODE field holds the DSO OPCODE value (tentatively 6).</t>

<t>The Z bits are currently unused, and in both requests and responses the
Z bits MUST be set to zero (0) on transmission and MUST be silently ignored
on reception, unless a future document specifies otherwise.</t>

<t>In a request message (QR=0) the RCODE is generally set to zero on transmission,
and silently ignored on reception, except where specified otherwise
(for example, the Retry Delay operation (see <xref target="delay"/>), where the RCODE indicates the reason
for termination).</t>

<t>The RCODE value in a response may be one of the following values:</t>

<texttable>
      <ttcol align='right'>Code</ttcol>
      <ttcol align='left'>Mnemonic</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>0</c>
      <c>NOERROR</c>
      <c>Operation processed successfully</c>
      <c>1</c>
      <c>FORMERR</c>
      <c>Format error</c>
      <c>2</c>
      <c>SERVFAIL</c>
      <c>Server failed to process request due to a problem with the server</c>
      <c>3</c>
      <c>NXDOMAIN</c>
      <c>TLV dependent</c>
      <c>4</c>
      <c>NOTIMP</c>
      <c>DSO not supported</c>
      <c>5</c>
      <c>REFUSED</c>
      <c>Operation declined for policy reasons</c>
      <c>9</c>
      <c>NOTAUTH</c>
      <c>Not Authoritative (TLV dependent)</c>
      <c>11</c>
      <c>DSONOTIMP</c>
      <c>DSO type code not supported</c>
</texttable>

<t>Use of the above RCODE’s is likely to be common in DSO but 
does not preclude the definition and use of other codes in future documents that 
make use of DSO.</t>

<t>If a document describing a DSO makes use of either NXDOMAIN 
or NOTAUTH then that document MUST explain the meaning.</t>

</section>
<section anchor="dsodata" title="DSO Data">

<t>The standard twelve-octet DNS message header is followed by the DSO Data.</t>

<t>The first TLV in a DSO request message is called the Operation 
TLV. Any subsequent TLVs after this initial Operation TLV are called Modifier TLVs.</t>

<t>Depending on the operation a DSO response can contain:</t>

<t><list style="symbols">
  <t>No TLVs</t>
  <t>Only an Operation TLV</t>
  <t>An Operation TLV followed by one or more Modifier TLVs</t>
  <t>Only Modifier TLVs</t>
</list></t>

<section anchor="tlv-format" title="TLV Format">

<t>Operation and modifier TLVs both use the same encoding format.</t>

<t>Operation TLVs SHOULD normally require a response and, therefore, set the TLV
Acknowledgement bit in a request. However, for some Operation TLVs, this may be
undesirable and the TLV Acknowledgement bit MAY be cleared in the request. Each
Operation TLV definition should stipulate whether an acknowledgement is
REQUIRED. If the TLV Acknowledgement bit is cleared in a request, a response
MUST NOT be sent. Modifier TLVs MUST NEVER set the Acknowledgement bit. The
Acknowledgement bit is NEVER set in the response to an Operation TLV.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   | A |                        DSO-TYPE                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                        DSO DATA LENGTH                        |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                      TYPE-DEPENDENT DATA                      /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='A:'>
  A 1 bit TLV Response flag indicating whether or not an Operation TLV requires
a response Acknowledgement.
DSO-TYPE:</t>
  <t>A 15 bit field in network order giving the type of the current DSO TLV per
the IANA DSO Type Codes Registry.</t>
  <t hangText='DSO DATA LENGTH:'>
  A 16 bit field in network order giving the size in octets of
the TYPE-DEPENDENT DATA.</t>
  <t hangText='TYPE-DEPENDENT DATA:'>
  Type-code specific format.</t>
</list></t>

<t>Where domain names appear within TYPE-DEPENDENT DATA, they MAY be compressed 
using standard DNS name compression. However, the compression MUST NOT point
outside of the TYPE-DEPENDENT DATA section and offsets MUST be from the start
of the TYPE-DEPENDENT DATA.</t>

</section>
<section anchor="operation-tlvs" title="Operation TLVs">

<t>An “Operation TLV” specifies the operation to be performed.</t>

<t>A DSO message MUST contain at most one Operation TLV.</t>

<t>In all cases a DSO request message MUST contain exactly one 
Operation TLV, indicating the operation to be performed.</t>

<t>Depending on the operation, a DSO response message MAY contain no 
Operation TLV, because it is simply a response to a previous request message,
and the MESSAGE ID in the header is sufficient to identify the request in 
question. Or it may contain a single corresponding response Operation TLV, with 
the same DSO-TYPE as in the request message. The specification for each DSO
type determines whether a response for that operation type 
is required to carry the Operation TLV.</t>

<t>If a DSO response is received for an operation which requires
that the response carry an Operation TLV, and the required Operation TLV is not
the first DSO TLV in the response message, then this is a fatal 
error and the recipient of the defective response message MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
<section anchor="modifier-tlvs" title="Modifier TLVs">

<t>A “Modifier TLV” specifies additional parameters
relating to the operation. Immediately following the Operation TLV, if present,
a DSO message MAY contain one or more Modifier TLVs.</t>

</section>
<section anchor="unrecognized-tlvs" title="Unrecognized TLVs">

<t>If a DSO request is received containing an unrecognized
Operation TLV, the receiver MUST send a response with matching
MESSAGE ID, and RCODE DSONOTIMP (tentatively 11). The response MUST NOT contain 
an Operation TLV.</t>

<t>If a DSO message (request or response) is received
containing one or more unrecognized Modifier TLVs, the unrecognized
Modifier TLVs MUST be silently ignored, and the remainder of the message
is interpreted and handled as if the unrecognized parts were not present.</t>

</section>
</section>
<section anchor="edns0-and-tsig" title="EDNS(0) and TSIG">

<t>Since the ARCOUNT field MUST be zero, a DSO message
MUST NOT contain an EDNS(0) option in the additional records section.
If functionality provided by current or future EDNS(0) options is desired
for DSO messages, an Operation TLV or
Modifier TLV needs to be defined to carry the necessary information.</t>

<t>For example, the EDNS(0) Padding Option <xref target="RFC7830"/> used for security purposes
is not permitted in a DSO message,
so if message padding is desired for DSO messages
then the Encryption Padding TLV described in <xref target="padding"/> MUST be used.</t>

<t>Similarly, a DSO message MUST NOT contain a TSIG record.
A TSIG record in a conventional DNS message is added as the last record
in the additional records section, and carries a signature computed over
the preceding message content. Since DSO data appears
after the additional records section, it would not be included in the
signature calculation. 
If use of signatures with DSO messages becomes necessary in the 
future, an explicit Modifier TLV needs to be defined to 
perform this function.</t>

<t>Note however that, while DSO <spanx style="emph">messages</spanx> cannot include
EDNS(0) or TSIG records, a DSO <spanx style="emph">session</spanx> is typically used to 
carry a whole series of DNS messages of different kinds, including DSO
messages, and other DNS message types like Query <xref target="RFC1034"/> 
<xref target="RFC1035"/> and Update <xref target="RFC2136"/>, and those messages can carry EDNS(0) and 
TSIG records.</t>

<t>This specification explicitly prohibits use of the
EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>
in <spanx style="emph">any</spanx> messages sent on a DSO session (because it duplicates
the functionality provided by the DSO Keepalive operation),
but messages may contain other EDNS(0) options as appropriate.</t>

</section>
</section>
<section anchor="message-handling" title="Message Handling">

<t>The initiator MUST set the value of the QR bit in the DNS header to zero
(0), and the responder MUST set it to one (1). Every DSO request 
message (QR=0) MUST elicit a response (QR=1), 
which MUST have the same MESSAGE ID in the DNS message header as in the 
corresponding request. DSO request messages sent by the client 
elicit a response from the server, and DSO request messages sent 
the server elicit a response from the client.</t>

<t>With most TCP implementations, the TCP data acknowledgement (generated because 
data has been received by TCP), the TCP window update (generated because TCP has 
delivered that data to the receiving software) and the DSO 
response (generated by the receiving software itself)
are all combined into a single packet, so in practice the requirement that every
DSO request message MUST elicit a 
DSO response incurs minimal extra cost on the network.
Requiring that every request elicit a corresponding response also avoids
performance problems caused by interaction between
Nagle’s Algorithm and Delayed Ack <xref target="NagleDA"/>.</t>

<t>The namespaces of 16-bit MESSAGE IDs are disjoint in each direction.
For example, it is <spanx style="emph">not</spanx> an error for both client and server to send a request
message with the same ID. In effect, the 16-bit MESSAGE ID combined with the 
identity of the initiator (client or server) serves as a 17-bit unique 
identifier for a particular operation on a DSO session.</t>

<t>As described in <xref target="header"/> An initiator MUST NOT reuse a MESSAGE ID that is 
already in use for an 
outstanding request, unless specified otherwise by the relevant specification 
for the DSO in question. At the very least, this means 
that a MESSAGE ID MUST NOT be reused in a particular direction
on a particular DSO session while the initiator is waiting for a response to a 
previous request on that DSO session, unless specified otherwise by the relevant 
specification for the DSO in question.
(For a long-lived state the MESSAGE ID for the operation
MUST NOT be reused whilst that state remains active.)</t>

<t>If a client or server receives a response (QR=1) where the MESSAGE ID does not
match any of its outstanding operations, this is a fatal error and it MUST 
immediately terminate the connection with a TCP RST (or equivalent for other 
protocols).</t>

</section>
</section>
<section anchor="keepalive" title="Keepalive Operation TLV">

<t>The Keepalive Operation TLV (DSO-TYPE=1) performs two functions: to reset the
keepalive timer for the DSO session and to establish the values for the Session Timeouts.</t>

<t>The Keepalive Operation TLV resets only the keepalive timer, not the inactivity 
timer. The reason for this is that periodic Keepalive Operation TLVs are sent 
for the sole purpose of keeping a DSO session alive because that DSO session has 
current or recent activity that warrants keeping the DSO session alive.
If sending keepalive traffic itself were to reset the inactivity timer, then 
that would create a circular livelock where keepalive traffic would be sent 
indefinitely to keep a DSO session alive, where the only activity on that DSO 
session would be keepalive traffic keeping the DSO session alive so that further 
keepalive traffic can be sent.</t>

<t>Sending keepalive traffic is considered a maintenance activity
that is performed in service of other client activities.
Sending keepalive traffic itself is not considered a client activity.
For a DSO session to be considered active, it must be carrying something more than just keepalive traffic.
This is why merely sending a Keepalive Operation TLV does not reset the inactivity timer.</t>

<t>When sent by a client, the Keepalive Operation TLV resets a DSO session’s keepalive timer,
and at the same time requests what the Session Timeout values should be from this point forward in the DSO session.</t>

<t>An acknowledgement is always required for a Keepalive Operation TLV and the TLV
Acknowledgement bit MUST be set in the request when originated by either the
client or the server.</t>

<t>Once a DSO session is in progress (see <xref target="details"/>)
the Keepalive TLV also MAY be initiated by a server.
When sent by a server, it resets a DSO session’s keepalive timer,
and unilaterally informs the client of the new Session Timeout values to use 
from this point forward in this DSO session.</t>

<t>It is not required that the Keepalive TLV be used in every DSO session.
While many DNS Stateful operations
will be used in conjunction with a long-lived session state,
not all DNS Stateful operations require long-lived session state,
and in some cases the default 15-second value for both the inactivity timeout
and keepalive interval may be perfectly appropriate. However, it can be noted 
that for clients that implement only the TLVs defined in this document it is
the only way for a client to initiate a DSO session.</t>

<t>The TYPE-DEPENDENT DATA for the the Keepalive TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 INACTIVITY TIMEOUT (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 KEEPALIVE INTERVAL (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='INACTIVITY TIMEOUT:'>
  the inactivity timeout for the current DSO session, specified as a 32
bit word in network (big endian) order in units of milliseconds.
This is the timeout at which the client MUST close an inactive DSO session.
If the client does not gracefully close an inactive DSO session then after
twice this interval the server will forcibly terminate the connection
with a TCP RST (or equivalent for other protocols).</t>
  <t hangText='KEEPALIVE INTERVAL:'>
  the keepalive interval for the current DSO session, specified as a 32-bit
word, in network (big endian) order, in units of milliseconds.
This is the interval at which a client MUST generate keepalive
traffic to maintain connection state.
If the client does not generate the necessary keepalive traffic then after
twice this interval the server will forcibly terminate the connection
with a TCP RST (or equivalent for other protocols).</t>
</list></t>

<t>In a client-initiated DSO Keepalive message,
the Session Timeouts contain the client’s requested values.
In a server response to a client-initiated message, the Session Timeouts contain 
the server’s chosen values, which the client MUST 
respect. This is modeled after the DHCP protocol, where the client
requests a certain lease lifetime using DHCP option 51 <xref target="RFC2132"/>,
but the server is the ultimate authority
for deciding what lease lifetime is actually granted.</t>

<t>In a server-initiated DSO Keepalive message, the Session Timeouts unilaterally 
inform the client of the new values from this 
point forward in this DSO session. The client MUST generate a response to the 
server-initiated DSO Keepalive message.
The MESSAGE ID in the response message MUST match the ID from the 
server-initiated DSO Keepalive message, and the response message 
MUST NOT contain any Operation TLV.</t>

<t>When a client is sending its second and subsequent Keepalive DSO 
requests to the server, the client SHOULD continue to request its preferred 
values each time. This allows flexibility, so that if conditions change during 
the lifetime of a DSO session, the server can adapt its responses to better fit 
the client’s needs.</t>

<section anchor="client-handling-of-received-session-timeout-values" title="Client handling of received Session Timeout values">

<t>When a client receives a response to its client-initiated DSO Keepalive message,
or receives a server-initiated DSO Keepalive message, the client has then 
received Session Timeout values dictated by the server. The two timeout values 
contained in the DSO Keepalive TLV from the server may each be higher, lower, or 
the same as the respective Session Timeout values the client previously had for 
this DSO session.</t>

<t>In the case of the keepalive timer, the handling of the received value is 
straightforward. The act of receiving the message containing the DSO Keepalive 
TLV itself resets the keepalive timer and updates the keepalive interval for the 
DSO session. The new keepalive interval indicates the 
maximum time that may elapse before another message must be sent
or received on this DSO session, if the DSO session is to remain alive.</t>

<t>In the case of the inactivity timeout, the handling of the received value 
superficially appears a little more subtle, though the meaning of the inactivity 
timeout is unchanged – it still indicates the maximum permissible time allowed 
without activity on a DSO session.
The act of receiving the message containing the DSO Keepalive TLV does not
itself reset the inactivity timer. The time elapsed since the last useful
activity on this DSO session is unaffected by exchange of DSO Keepalive messages.
The act of receiving the message containing the DSO Keepalive TLV does update 
the timeout associated with the running inactivity timer; that
becomes the new maximum permissible time without activity on a DSO session.</t>

<t><list style="symbols">
  <t>If the inactivity timer value is not greater than the new inactivity timeout, 
then the DSO session may remain open for now. When the inactivity timer value 
exceeds the new inactivity timeout, the client MUST then close the DSO session,
as described above.</t>
  <t>If the inactivity timer value is already greater than the new inactivity 
timeout, then this DSO session has already been inactive
for longer than the server permits, and the client MUST immediately close this DSO session.</t>
  <t>If the inactivity timer value is more than twice the new inactivity timeout, 
then this DSO session is eligible to be
forcibly terminated by the server and and the client MUST immediately close this 
DSO session. However if a server abruptly reduces the
inactivity timeout in this way the server SHOULD give the client a grace period
of one quarter of the new inactivity timeout, to give the client time to close
the connection gracefully before the server resorts to terminating it forcibly.</t>
</list></t>

</section>
<section anchor="relation-to-edns0-tcp-keepalive-option" title="Relation to EDNS(0) TCP Keepalive Option">

<t>The inactivity timeout value in the Keepalive TLV (DSO-TYPE=1) has similar
intent to the EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>.
A client/server pair that supports DSO MUST NOT use the
EDNS(0) TCP KeepAlive option within any message after a DSO 
session has been established.
Once a DSO session has been established, if either
client or server receives a DNS message over the DSO session that contains an
EDNS(0) TCP Keepalive option, this is an error and the receiver of the
EDNS(0) TCP Keepalive option MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="delay" title="Retry Delay TLV">

<t>The Retry Delay TLV (DSO-TYPE=0) can be used as an Operation TLV or as
a Modifier TLV.</t>

<t>The TYPE-DEPENDENT DATA for the the Retry Delay TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     RETRY DELAY (32 bits)                     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='RETRY DELAY:'>
  a time value, specified as a 32 bit word in network order in units of 
milliseconds, within which the client MUST NOT retry this operation, or retry 
connecting to this server.</t>
</list></t>

<t>The RECOMMENDED value is 10 seconds.</t>

<section anchor="use-as-an-operation-tlv" title="Use as an Operation TLV">

<t>When sent in a DSO request message, from server to client, the 
Retry Delay TLV (0) is considered an Operation TLV. It is used by a server 
to request that a client close the DSO session and underlying connection, and 
not to reconnect for the indicated time interval.</t>

<t>In this case it applies to the DSO session as a whole, and the client MUST close the 
DSO session, as described in section <xref target="retry"/>. The RCODE in the message header 
MUST indicate the reason for the termination:</t>

<t><list style="symbols">
  <t>NOERROR indicates a routine shutdown.</t>
  <t>SERVFAIL indicates that the server is overloaded due to resource exhaustion.</t>
  <t>REFUSED indicates that the server has been reconfigured and is no longer able 
to perform one or more of the functions 
currently being performed on this DSO session (for example, a DNS Push Notification 
server could be reconfigured such that is is no longer accepting DNS Push 
Notification requests for one or more of the currently subscribed names).</t>
</list></t>

<t>This document specifies only these three RCODE values for Retry Delay request.
Servers sending Retry Delay requests SHOULD use one of these three values.
However, future circumstances may create situations where other RCODE values
are appropriate in Retry Delay requests, so clients MUST be prepared
to accept Retry Delay requests with any RCODE value.</t>

<t>An acknowledgement is not desired for a Retry Delay Operation TLV and the TLV
Acknowledgement bit MUST be cleared in the request.</t>

</section>
<section anchor="use-as-a-modifier-tlv" title="Use as a Modifier TLV">

<t>When appended to a DSO response message for some client request,
the Retry Delay TLV (0) is considered a Modifier TLV.
The indicated time interval during which the client SHOULD NOT retry
applies only to the failed operation, not to the DSO session as a whole.</t>

<t>In the case of a client request that returns a nonzero RCODE value, the server 
MAY append a Retry Delay TLV (0) to the response, indicating the time interval
during which the client SHOULD NOT attempt this operation again.</t>

</section>
</section>
<section anchor="padding" title="Encryption Padding TLV">

<t>The Encryption Padding TLV (DSO-TYPE=2) can only be used as a Modifier TLV.
It is only applicable when the DSO Transport layer uses encryption
such as TLS.</t>

<t>The TYPE-DEPENDENT DATA for the the Padding TLV is optional and is a
variable length field containing non-specified values. A DATA LENGTH
of 0 essentially provides for 4 octets of padding (the minimum amount).</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   /                                                               /
   /                   VARIABLE NUMBER OF OCTETS                   /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t>As in <xref target="RFC7830"/> the PADDING octets SHOULD be set to 0x00.  Other values MAY be used,
for example, in cases where there is a concern that the padded
message could be subject to compression before encryption.
PADDING octets of any value MUST be accepted in the messages received.</t>

<t>The Encryption Padding TLV may be included in either a DSO
request, response, or both. As in <xref target="RFC7830"/> if a request is received with a Encryption
Padding TLV, then the response MUST also include an Encryption Padding TLV.</t>

<t>The length of padding is intentionally not specified in this document and
is a function of current best practices with respect to the type and length
of data in the preceding TLVs. See <xref target="I-D.ietf-dprive-padding-policy"/></t>

</section>
<section anchor="lifecycle" title="DSO Session Lifecycle and Timers">

<section anchor="dso-session-initiation" title="DSO Session Initiation">

<t>A session begins when a client makes a new connection to a server.</t>

<t>A DSO session begin as described in <xref target="establishment"/>.</t>

<t>The client may perform as many DNS operations as it wishes using the
newly created DSO session. Operations SHOULD be pipelined (i.e., the
client doesn’t need wait for a response before sending the next message).
The server MUST act on messages in the order they are transmitted, but
responses to those messages MAY be sent out of order, if appropriate.</t>

</section>
<section anchor="sessiontimeouts" title="DSO Session Timeouts">

<t>Two timeout values are associated with a DSO session: the inactivity timeout, and 
the keepalive interval.</t>

<t>The first timeout value, the inactivity timeout, is the maximum time for which
a client may speculatively keep a DSO session open in the expectation that
it may have future requests to send to that server.</t>

<t>The second timeout value, the keepalive interval, is the maximum permitted
interval between client messages to the server if the client wishes to keep
the DSO session alive.</t>

<t>The two timeout values are independent. The inactivity timeout may be lower, the 
same, or higher than the keepalive interval, though in most cases the inactivity 
timeout is expected to be shorter than the keepalive interval.</t>

<t>Only when the client has a very long-lived low-traffic state does the 
keepalive interval come into play, to ensure that a sufficient residual
amount of traffic is generated to maintain NAT and firewall state.</t>

<t>On a new DSO session, if no explicit DSO Keepalive message exchange has taken 
place, the default value for both timeouts is 15 seconds.
For both timeouts, lower values of the timeout result in higher network traffic
and higher CPU load on the server.</t>

</section>
<section anchor="inactivetimer" title="Inactive DSO Sessions">

<t>At both servers and clients, the generation or reception of any complete
DNS message, including DNS requests, responses, updates, or DSO
messages, resets both timers for that DSO session, with the exception
that a DSO Keepalive message resets only the keepalive timer, not the inactivity 
timeout timer.</t>

<t>In addition, for as long as the client has an outstanding operation in progress,
the inactivity timer remains cleared, and an inactivity 
timeout cannot occur.</t>

<t>For short-lived DNS operations like traditional queries and updates,
an operation is considered in progress for the time between request and 
response, typically a period of a few hundred milliseconds at most.
At the client, the inactivity timer is cleared upon transmission of a 
request and remains cleared until reception of the corresponding response.
At the server, the inactivity timer is cleared upon reception of a request
and remains cleared until transmission of the corresponding response.</t>

<t>For long-lived DNS Stateful operations, an operation is considered in progress
for as long as the state is active, until it is cancelled.
This means that a DSO session can exist, with a state 
active, with no messages flowing in either direction, for far longer than the 
inactivity timeout, and this is not an error. This is why there are two separate 
timers: the inactivity timeout, and the keepalive interval. Just because a DSO 
session has no traffic for an extended period of time
does not automatically make that DSO session “inactive”, if it has an active 
state that is awaiting for events.</t>

</section>
<section anchor="the-inactivity-timeout" title="The Inactivity Timeout">

<t>The purpose of the inactivity timeout is for the server to balance its trade off 
between the costs of setting up new DSO sessions and the costs of maintaining inactive 
DSO sessions. A server with abundant DSO session capacity can offer a high inactivity timeout, 
to permit clients to keep a speculative DSO session open for a long time, to save 
the cost of establishing a new DSO session for future communications with that 
server. A server with scarce memory resources can offer a low inactivity timeout,
to cause clients to promptly close DSO sessions whenever they have no outstanding
operations with that server, and then create a new DSO session later when needed.</t>

<section anchor="closing-inactive-dso-sessions" title="Closing Inactive DSO Sessions">

<t>A client is NOT required to wait until the inactivity timeout expires
before closing a DSO session.
A client MAY close a DSO session at any time, at the client’s discretion.
If a client determines that it has no current or reasonably anticipated
future need for an inactive DSO session, then the client SHOULD close that connection.</t>

<t>If, at any time during the life of the DSO session,
the inactivity timeout value (i.e., 15 seconds by default) elapses
without there being any operation active on the DSO session,
the client MUST gracefully close the connection with a TCP FIN
(or equivalent for other protocols).</t>

<t>If, at any time during the life of the DSO session, twice the inactivity timeout value
(i.e., 30 seconds by default) elapses without there being any operation
active on the DSO session, the server SHOULD consider the client delinquent,
and forcibly abort the DSO session.
For DSO sessions over TCP (or over TLS over TCP),
to avoid the burden of having a connection in TIME-WAIT state, instead of
closing the connection gracefully with a TCP FIN the server SHOULD abort
the connection with a TCP RST (or equivalent for other protocols).
(In the BSD Sockets API this is achieved by setting the
SO_LINGER option to zero before closing the socket.)</t>

<t>In this context, an operation being active on a DSO session includes
a query waiting for a response, an update waiting for a response,
or active state,
but not a DSO Keepalive message exchange itself.
A DSO Keepalive message exchange resets only the keepalive
interval timer, not the inactivity timeout timer.</t>

<t>If the client wishes to keep an inactive DSO session open for longer than
the default duration without having to send traffic every 15 seconds,
then it uses the DSO Keepalive message to request
longer timeout values, as described in <xref target="keepalive"/>.</t>

</section>
<section anchor="values-for-the-inactivity-timeout" title="Values for the Inactivity Timeout">

<t>For the inactivity timeout value, lower values result in more frequent DSO session 
teardown and re-establishment. Higher values result in lower traffic and CPU
load on the server, but a larger memory burden to maintain state for inactive 
DSO sessions.</t>

<t>A shorter inactivity timeout with a longer keepalive interval signals to the client 
that it should not speculatively keep inactive DSO sessions open for very long for no 
reason, but when it does have an active reason to keep a DSO session open, it 
doesn’t need to be sending an aggressive level of keepalive traffic.</t>

<t>A longer inactivity timeout with a shorter keepalive interval signals to the client
that it may speculatively keep inactive DSO sessions open for a long time, but it
should be sending a lot of keepalive traffic on those inactive DSO sessions.
This configuration is expected to be less common.</t>

<t>To avoid excessive traffic the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with an inactivity timeout value less than ten seconds.
If a client receives a Keepalive message specifying an inactivity timeout value
less than ten seconds this is an error and the client MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="keepalivetimer" title="The Keepalive Interval">

<t>The purpose of the keepalive interval is to manage the generation of
sufficient messages to maintain state in middle-boxes (such at NAT gateways
or firewalls) and for the client and server to periodically verify that they
still have connectivity to each other. This allows them to clean up state
when connectivity is lost, and attempt re-connection if appropriate.</t>

<section anchor="keepalive-interval-expiry" title="Keepalive Interval Expiry">

<t>If, at any time during the life of the DSO session,
the keepalive interval value (i.e., 15 seconds by default) elapses
without any DNS messages being sent or received on a DSO session,
the client MUST take action to keep the DSO session alive.
To keep the DSO session alive the client MUST send a
DSO Keepalive message (see <xref target="keepalive"/>).
A DSO Keepalive message exchange resets only the keepalive timer, 
not the inactivity timer.</t>

<t>If a client disconnects from the network abruptly,
without cleanly closing its DSO session,
leaving long-lived state uncanceled,
the server learns of this after failing to
receive the required keepalive traffic from that client.
If, at any time during the life of the DSO session,
twice the keepalive interval value (i.e., 30 seconds by default) elapses
without any DNS messages being sent or received on a DSO session,
the server SHOULD consider the client delinquent,
and forcibly abort the connection with a TCP RST (or equivalent for other 
protocols).</t>

</section>
<section anchor="values-for-the-keepalive-interval" title="Values for the Keepalive Interval">

<t>For the keepalive interval value, lower values result in higher volume keepalive 
traffic. Higher values of the keepalive interval reduce traffic and CPU load, 
but have minimal effect on the memory burden
at the server, because clients keep a DSO session open for the same length of time
(determined by the inactivity timeout) regardless of the level of keepalive traffic 
required.</t>

<t>It may be appropriate for clients and servers to select different keepalive 
interval values depending on the nature of the network they are on.</t>

<t>A corporate DNS server that knows it is serving only clients on the internal 
network, with no intervening NAT gateways or firewalls, can impose a higher 
keepalive interval, because frequent keepalive traffic is not required.</t>

<t>A public DNS server that is serving primarily residential consumer clients, 
where it is likely there will be a NAT gateway on the path, may impose a lower 
keepalive interval, to generate more frequent keepalive traffic.</t>

<t>A smart client may be adaptive to its environment. A client using
a private IPv4 address <xref target="RFC1918"/> to communicate with a DNS server
at an address that is not in the same IPv4 private address block,
may conclude that there is likely to be a NAT gateway on the path,
and accordingly request a lower keepalive interval.</t>

<t>For environments where there is a NAT gateway or firewalls on the path, it is
RECOMMENDED that clients request, and servers grant, a keepalive interval of 15
minutes. In other environments it is RECOMMENDED that clients request, and 
servers grant, a keepalive interval of 60 minutes.</t>

<t>Note that the lower the keepalive interval value, the higher the load on client
and server. For example, an keepalive interval value of 100ms would result in a
continuous stream of at least ten messages per second, in both directions,
to keep the DSO session alive. And, in this extreme example, a single packet loss and
retransmission over a long path could introduce a momentary pause in the stream of messages,
long enough to cause the server to overzealously abort the connection.</t>

<t>Because of this concern, the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with an keepalive interval value less than ten seconds.
If a client receives an Keepalive message specifying an keepalive interval value
less than ten seconds this is an error and the client MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="server-initiated-termination-on-error" title="Server-Initiated Termination on Error">

<t>After sending an error response to a client, the server MAY close the DSO session,
or may allow the DSO session to remain open. For error conditions
that only affect the single operation in question, the server SHOULD return an
error response to the client and leave the DSO session open for further operations.
For error conditions that are likely to make all operations unsuccessful in the
immediate future, the server SHOULD return an error response to the client and 
then close the DSO session by sending a Retry Delay request message, as described in 
<xref target="delay"/>.</t>

</section>
<section anchor="error" title="Client Behaviour in Receiving an Error">

<t>Upon receiving an error response from the server, a client SHOULD NOT
automatically close the DSO session. An error relating to one particular operation
on a DSO session does not necessarily imply that all other operations on that
DSO session have also failed, or that future operations will fail. The client
should assume that the server will make its own decision about whether or not to
close the DSO session, based on the server’s determination of whether the error
condition pertains to this particular operation, or would also apply to any
subsequent operations. If the server does not close the DSO session then the client
SHOULD continue to use that DSO session for subsequent operations.</t>

</section>
<section anchor="server-initiated-termination-on-overload" title="Server-Initiated Termination on Overload">

<t>Apart from the cases where:</t>

<t><list style="symbols">
  <t>Session Timeouts expire (see <xref target="sessiontimeouts"/>)</t>
  <t>On error (see {Section <xref target="error"/>)</t>
  <t>When under load (see below)</t>
</list></t>

<t>a server MUST NOT close a DSO session with a client, except in extraordinary error 
conditions. Closing the DSO session is the
client’s responsibility, to be done at the client’s discretion, when it so 
chooses. A server only closes a DSO session under exceptional circumstances, such as
when the server application software or underlying operating system is
restarting, the server application terminated unexpectedly (perhaps due to a
bug that makes it crash), or the server is undergoing maintenance procedures.
When possible, a server SHOULD send a Retry Delay message informing the
client of the reason for the DSO session being closed, and allow the client
five seconds to receive it before the server resorts to forcibly aborting the 
connection.</t>

</section>
<section anchor="retry" title="Retry Delay Operation TLV">

<t>There may be rare cases where a server is overloaded and wishes to shed load.
If a server is low on resources it MAY simply terminate a client connection with 
a TCP RST (or equivalent for other protocols).
However, the likely behavior of the client may be simply to to treat this as a
network failure and connect
immediately, putting more burden on the server.</t>

<t>Therefore to avoid this reconnection implosion, a server SHOULD instead choose 
to shed client load by sending a Retry Delay request message, with an RCODE of 
SERVFAIL, to inform the client of the overload situation. After sending a Retry 
Delay request message, the server MUST NOT send any further messages on that 
DSO session.</t>

<t>After sending the Retry Delay request the server SHOULD allow the
client five seconds to close the connection, and if the client has not
closed the connection after five seconds then the server SHOULD abort
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>Upon receipt of a Retry Delay request from the server, the client MUST
make note of the reconnect delay for this server, and then immediately
close the connection. This is to place the burden of TCP’s TIME-WAIT state on 
the client.</t>

<t>A Retry Delay request message MUST NOT be initiated by a client.
If a server receives a Retry Delay request message this is an error
and the server MUST immediately terminate the connection with a TCP RST
(or equivalent for other protocols).</t>

<section anchor="outstanding-operations" title="Outstanding Operations">

<t>At the moment a server chooses to initiate a Retry Delay request message
there may be DNS requests already in flight from client to server on this 
DSO session, which will arrive at the server after its Retry Delay request message 
has been sent.
The server MUST silently ignore such incoming requests, and MUST NOT generate
any response messages for them. When the Retry Delay request message from the
server arrives at the client, the client will determine that any DNS requests
it previously sent on this DSO session, that have not yet received a response, now 
will certainly not be receiving any response. Such requests should be considered
failed, and should be retried at a later time, as appropriate.</t>

<t>In the case where some, but not all, of the existing operations on a DSO session 
have become invalid (perhaps because the server has been reconfigured and is no 
longer authoritative for some of the names),
but the server is terminating all DSO sessions en masse with a REFUSED (5) RCODE,
the RECONNECT DELAY MAY be zero, indicating that the clients SHOULD immediately
attempt to re-establish operations.
It is likely that some of the attempts will be successful and some will not.</t>

<t>In the case where a server is terminating a large number of DSO sessions at once
(e.g., if the system is restarting) and the server doesn’t want to be inundated 
with a flood of simultaneous retries, it SHOULD send different RECONNECT delay 
values to each client.
These adjustments MAY be selected randomly, pseudorandomly, or deterministically
(e.g., incrementing the time value by one tenth of a second for each successive
client, yielding a post-restart reconnection rate of ten clients per second).</t>

</section>
<section anchor="client-reconnection" title="Client Reconnection">

<t>After a DSO session is closed by the server, the client SHOULD try to reconnect,
to that server, or to another suitable server, if more than one is available.
If reconnecting to the same server, the client MUST respect the indicated delay
before attempting to reconnect.</t>

<t>If a particular server does not want a client to reconnect (it is being
de-commissioned), it SHOULD set the retry delay to the maximum value (which is
approximately 497 days). If the server will only be out of service for a maintenance
period, it should use a value closer to the expected maintenance window and
not default to a very large delay value or clients may not attempt to reconnect
after it resumes service.</t>

</section>
</section>
</section>
<section anchor="sharing" title="Connection Sharing">

<t>As in <xref target="RFC7766"/>, to mitigate the risk of unintentional server overload, DNS clients
MUST take care to minimize the number of concurrent TCP connections
made to any individual server.  It is RECOMMENDED that for any given
client/server interaction there SHOULD be no more than one connection
for regular queries, one for zone transfers, and one for each
protocol that is being used on top of TCP (for example, if the
resolver was using TLS).  However, it is noted that certain primary/
secondary configurations with many busy zones might need to use more
than one TCP connection for zone transfers for operational reasons
(for example, to support concurrent transfers of multiple zones).</t>

<t>A single server may support multiple services, including DNS Updates 
<xref target="RFC2136"/>, DNS Push Notifications <xref target="I-D.ietf-dnssd-push"/>,
and other services, for one or more DNS zones.
When a client discovers that the target server for several different operations
is the same target hostname and port, the client SHOULD use a single
shared DSO session for all those operations.
A client SHOULD NOT open multiple connections to the same target host and port
just because the names being operated on are different or
happen to fall within different zones.
This is to reduce unnecessary connection load on the DNS server.</t>

<t>However, server implementers and operators should be aware that connection
sharing may not be possible in all cases.
A single client device may be home to multiple independent client software
instances that don’t coordinate with each other.
Similarly, multiple independent client devices behind the same NAT gateway
will also typically appear to the DNS server as different source ports on
the same client IP address.
Because of these constraints, a DNS server MUST be prepared to accept
multiple connections from different source ports on the same client IP address.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="dso-opcode-registration" title="DSO OPCODE Registration">

<t>IANA are directed to assign a value (tentatively 6)
in the DNS OPCODEs Registry for the DSO OPCODE.</t>

</section>
<section anchor="dso-rcode-registration" title="DSO RCODE Registration">

<t>IANA are directed to assign a value (tentatively 11)
in the DNS RCODE Registry for the DSONOTIMP error code.</t>

</section>
<section anchor="dso-type-codes-registry" title="DSO Type Codes Registry">

<t>IANA are directed to create the DSO Type Codes
Registry, with initial values as follows:</t>

<texttable>
      <ttcol align='right'>Type</ttcol>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Status</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>0x0000</c>
      <c>RetryDelay</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0001</c>
      <c>KeepAlive</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0002</c>
      <c>Encryption Padding</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0003 - 0x003F</c>
      <c>Unassigned, reserved for DSO session management TLVs</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x0040 - 0xF7FF</c>
      <c>Unassigned</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0xF800 - 0xFBFF</c>
      <c>Reserved for local / experimental use</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0xFC00 - 0xFFFF</c>
      <c>Reserved for future expansion</c>
      <c>&#160;</c>
      <c>&#160;</c>
</texttable>

<t>Registration of additional DSO Type Codes requires publication
of an appropriate IETF “Standards Action” or “IESG Approval” document <xref target="RFC5226"/>.</t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>If this mechanism is to be used with DNS over TLS, then these messages
are subject to the same constraints as any other DNS over TLS messages
and MUST NOT be sent in the clear before the TLS session is established.</t>

<t>The data field of the “Encryption Padding” TLV could be used as a covert channel.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to
Tim Chown,
Ralph Droms,
Jan Komissar,
and Manju Shankar Rao
for their helpful contributions to this document.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC1035;
&RFC7766;
&RFC6891;
&RFC7828;
&RFC2119;
&RFC7830;
&RFC1034;
&RFC2136;
&RFC2132;
&RFC1918;
&RFC5226;


    </references>

    <references title='Informative References'>

<reference anchor="NagleDA" target="http://www.stuartcheshire.org/papers/nagledelayedack/">
  <front>
    <title>TCP Performance problems caused by interaction between Nagle's Algorithm and Delayed ACK</title>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization></organization>
    </author>
    <date year="2005" month="May" day="20"/>
  </front>
</reference>
&RFC7858;
&I-D.ietf-dnssd-push;
&RFC0768;
&I-D.ietf-dprive-padding-policy;


    </references>



  </back>

<!-- ##markdown-source:
H4sIAHb5uFkAA+1963IbR5bm/3yKXOmHSQ8Ak7rZ1sTGNk1RbnZLopqk3NPz
Z6MAFMiygCp0VYEUWlLEPMjuy82T7LlmnqwqULTb29sxsXKrRQJVeT157ufL
8Xjs2qJd5s/9izcX/qLN2nyxWfqzdV5nbVGVjZtXszJbwQPzOlu04yJvF+N5
2VTrcZM3DTwyboqrMluOD564Obz+3D86OPx2fPD9+PCxK9b1c9/Wm6Z9dHDw
/cEjl9V59tyflm1el3nrbq+o47O3/s9V/b4or/yPdbVZu/e38aHxC+zYzbL2
uW/audussZvmuT9/eey//fbZsxH9dHjw+Klzs2oOrTz3Gxjld25dPHfej31b
zejfZruq80XDP1d1S7+4bNNeVzU9CX+9L0psfOJ/yJfLoqGPeAXOs639sKqv
4ij9xbZp81Xjj2HRoOlisxrBl7MJPZpNp3V+A09fHNPvDXSdw3y+f3rgj6+z
GtqAxcfP6OtZ0W6hu3x+W1Vzfwy/8cfVHEZxfOS/f3Lw7LF8tCnbGh5+d3FE
H6yvqxIe+pdD/wzafvLosT+Epaev8lVWLJ/7Otv+rmhmExh+OuWLCYwlb66L
OjeTvmg3ML70G5r50Xq9zOMUdUqH8NGiKIs296+qam3mc7wBqmqLsupM5unB
4ZMvTebJwXf++2+f+MePDr61k5nJsH6X4Wgms2qVzukPE/+imAFlNVVpJvWH
6rrsfEFzuoDRzTdl3NXLfHZdVsvqqsibZCflSTt1+nnsX2dX2Txb5qU/zmE6
uXx89mFR1XN/MSvycpb7t1n93qwNf2sW5uzfnvgnPx511gWXde7/CCQ+p5mG
dfg5m/+u4SH1F+FieBEusjr7L7UIDUxo9yocTWBUJUzWLMERHuaqtF/wEsDQ
GxjMLLftZ/z0ZEVP/+4KP+33cznxbzcNsKi6MD1dVqv0Y+rnXZktFsWygI/n
HYr//vB7/92zb/3h48fJ8V1LI7+bZuXVz9S9K0oY6woY9k2OG/Amu1rmL454
L9qsvsJzed226+fffHN7eztp6Ejr0UFG8M06g7PZfFPim/N8mW3zeTZ7/w23
wALi8vitf5vX1BNu3rqupkvkeLNs08CGTLcwfxhZNkPB4ad5e5vD/tNgvmpg
qa+qumivVz4r5/4F9+GPjv/IFBV48N2cZwerUsFz8HQM/3t04Nx4PAYyBaKE
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

-->

</rfc>

