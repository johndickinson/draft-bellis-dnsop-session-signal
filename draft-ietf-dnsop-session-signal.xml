<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.9 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC7766 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7766.xml">
<!ENTITY RFC6891 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6891.xml">
<!ENTITY RFC7828 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7828.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC8174 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY RFC1034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC2136 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2136.xml">
<!ENTITY RFC7830 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7830.xml">
<!ENTITY RFC1918 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1918.xml">
<!ENTITY RFC5382 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5382.xml">
<!ENTITY RFC2132 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2132.xml">
<!ENTITY RFC8126 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8126.xml">
<!ENTITY RFC7858 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7858.xml">
<!ENTITY RFC2782 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2782.xml">
<!ENTITY I-D.ietf-dnssd-push SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dnssd-push.xml">
<!ENTITY I-D.ietf-dnssd-mdns-relay SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dnssd-mdns-relay.xml">
<!ENTITY RFC6763 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6763.xml">
<!ENTITY RFC0768 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.0768.xml">
<!ENTITY RFC6335 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6335.xml">
<!ENTITY RFC7413 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7413.xml">
<!ENTITY I-D.ietf-tls-tls13 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-tls-tls13.xml">
<!ENTITY RFC6762 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6762.xml">
<!ENTITY RFC1122 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1122.xml">
<!ENTITY I-D.ietf-dprive-padding-policy SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dprive-padding-policy.xml">
]>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-dnsop-session-signal-10" category="std" updates="1035, 7766">

  <front>
    <title>DNS Stateful Operations</title>

    <author initials="R." surname="Bellis" fullname="Ray Bellis">
      <organization abbrev="ISC">Internet Systems Consortium, Inc.</organization>
      <address>
        <postal>
          <street>950 Charter Street</street>
          <city>Redwood City</city>
          <code>CA 94063</code>
          <country>USA</country>
        </postal>
        <phone>+1 (650) 423-1200</phone>
        <email>ray@isc.org</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino</city>
          <code>CA 95014</code>
          <country>USA</country>
        </postal>
        <phone>+1 (408) 996-1010</phone>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="J." surname="Dickinson" fullname="John Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>jad@sinodun.com</email>
      </address>
    </author>
    <author initials="S." surname="Dickinson" fullname="Sara Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>sara@sinodun.com</email>
      </address>
    </author>
    <author initials="T." surname="Lemon" fullname="Ted Lemon">
      <organization>Barefoot Consulting</organization>
      <address>
        <postal>
          <street>Brattleboro</street>
          <code>VT 05301</code>
          <country>USA</country>
        </postal>
        <email>mellon@fugue.com</email>
      </address>
    </author>
    <author initials="T." surname="Pusateri" fullname="Tom Pusateri">
      <organization>Unaffiliated</organization>
      <address>
        <postal>
          <street></street>
          <city>Raleigh</city>
          <code>NC 27608</code>
          <country>USA</country>
        </postal>
        <phone>+1 (919) 867-1330</phone>
        <email>pusateri@bangj.com</email>
      </address>
    </author>

    <date year="2018" month="June" day="07"/>

    <area>Internet</area>
    <workgroup>DNSOP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document defines a new DNS OPCODE for DNS Stateful Operations (DSO).
DSO messages communicate operations within persistent
stateful sessions, using type-length-value (TLV) syntax.
Three TLVs are defined that manage session timeouts,
termination, and encryption padding, and 
a framework is defined for extensions to enable new stateful operations.
This document updates RFC 1035 by adding a new DNS header opcode and result code which has different message semantics.  This document updates RFC 7766 by redefining a session, providing new guidance on connection re-use, and providing a new mechanism for handling session idle timeouts.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The use of transports for DNS other than UDP is being increasingly specified,
for example, DNS over TCP <xref target="RFC1035"/> <xref target="RFC7766"/> and DNS over TLS <xref target="RFC7858"/>.
Such transports can offer persistent, long-lived sessions and therefore when
using them for transporting DNS messages it is of benefit to have a mechanism
that can establish parameters associated with those sessions, such as timeouts.
In such situations it is also advantageous to support server-initiated messages.</t>

<t>The existing EDNS(0) Extension Mechanism for DNS <xref target="RFC6891"/> is explicitly
defined to only have “per-message” semantics. While EDNS(0) has been used to
signal at least one session-related parameter (the EDNS(0) TCP Keepalive option
<xref target="RFC7828"/>) the result is less than optimal due to the restrictions
imposed by the EDNS(0) semantics and the lack of server-initiated signalling. 
For example, a server cannot arbitrarily 
instruct a client to close a connection because the server can only send EDNS(0) options 
in responses to queries that contained EDNS(0) options.</t>

<t>This document defines a new DNS OPCODE, DSO ([TBA1], tentatively 6), for DNS Stateful Operations.
DSO messages are used to communicate operations within persistent
stateful sessions, expressed using type-length-value (TLV) syntax.
This document defines an initial set of three TLVs,
used to manage session timeouts, termination, and encryption padding.</t>

<t>The three TLVs defined here are all mandatory for all implementations of DSO.
Further TLVs may be defined in additional specifications.</t>

<t>The format for DSO messages
(<xref target="format"/>) differs somewhat from the traditional DNS message
format used for standard queries and responses.
The standard twelve-byte header is used, but the four count fields
(QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) are set to zero and accordingly their
corresponding sections are not present.
The actual data pertaining to DNS Stateful Operations
(expressed in TLV syntax) is appended to the end of the DNS message header.
When displayed using packet analyzer tools that have not been
updated to recognize the DSO format, this
will result in the DSO data being displayed
as unknown additional data after the end of the DNS message.
It is likely that future updates to these tools will add the ability
to recognize, decode, and display the DSO data.</t>

<t>This new format has distinct advantages over an RR-based format because it
is more explicit and more compact. Each TLV definition is specific
to its use case, and as a result contains no redundant or overloaded fields.
Importantly, it completely avoids conflating DNS Stateful Operations in any way 
with normal DNS operations or with existing EDNS(0)-based functionality.
A goal of this approach is to avoid the operational issues that have
befallen EDNS(0), particularly relating to middlebox behaviour.</t>

<t>With EDNS(0), multiple options may be packed into a single OPT pseudo-RR,
and there is no generalized mechanism for a client to be able to tell
whether a server has processed or otherwise acted upon each individual
option within the combined OPT pseudo-RR.
The specifications for each individual option need to define how each
different option is to be acknowledged, if necessary.</t>

<t>In contrast to EDNS(0), with DSO there is no
compelling motivation to pack multiple operations into a single
message for efficiency reasons, because DSO
always operates using a connection-oriented transport protocol.
Each DSO operation is communicated in its own separate
DNS message, and the transport protocol can take care of packing
several DNS messages into a single IP packet if appropriate.
For example, TCP can pack multiple small DNS messages into a single TCP segment.
This simplification allows for clearer semantics.
Each DSO request message communicates just one primary operation,
and the RCODE in the corresponding response message indicates the
success or failure of that operation.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="requirements-language" title="Requirements Language">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”,
and “OPTIONAL” in this document are to be interpreted as
described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

</section>
<section anchor="terminology" title="Terminology">

<t>“DSO” is used to mean DNS Stateful Operation.</t>

<t>The term “connection” means a bidirectional byte (or message) stream,
where the bytes (or messages) are delivered reliably and in-order,
such as provided by using
DNS over TCP <xref target="RFC1035"/> <xref target="RFC7766"/> or DNS over TLS <xref target="RFC7858"/>.</t>

<t>The unqualified term “session” in the context of this document means the exchange of
DNS messages over a connection where:</t>

<t><list style="symbols">
  <t>The connection between client and server is persistent and relatively
long-lived (i.e., minutes or hours, rather than seconds).</t>
  <t>Either end of the connection may initiate messages to the other.</t>
</list></t>

<t>In this document the term “session” is used exclusively as described above.
The term has no relationship to the “session layer” of the
OSI “seven-layer model”.</t>

<t>A “DSO Session” is established between two endpoints that acknowledge
persistent DNS state via the exchange of DSO messages over the connection.
This is distinct from a DNS-over-TCP session as described in
the previous specification for DNS over TCP <xref target="RFC7766"/>.</t>

<t>A “DSO Session” is terminated when the underlying connection is closed.
The underlying connection can be closed in two ways:</t>

<t>Where this specification says, “close gracefully,”
that means sending a TLS close_notify (if TLS is in use) followed by a TCP FIN,
or the equivalents for other protocols.
Where this specification requires a connection to be closed gracefully,
the requirement to initiate that graceful close is placed on the client,
to place the burden of TCP’s TIME-WAIT state on the client rather than the server.</t>

<t>Where this specification says, “forcibly abort,”
that means sending a TCP RST,
or the equivalent for other protocols.
In the BSD Sockets API this is achieved by setting the
SO_LINGER option to zero before closing the socket.</t>

<t>The term “server” means the software with a listening socket, awaiting
incoming connection requests.</t>

<t>The term “client” means the software which initiates a connection
to the server’s listening socket.</t>

<t>The terms “initiator” and “responder” correspond respectively to the
initial sender and subsequent receiver of a DSO request message or unacknowledged message,
regardless of which was the “client” and “server” in the usual DNS sense.</t>

<t>The term “sender” may apply to
either an initiator (when sending a DSO request message or unacknowledged message)
or a responder (when sending a DSO response message).</t>

<t>Likewise, the term “receiver” may apply to
either a responder (when receiving a DSO request message or unacknowledged message)
or an initiator (when receiving a DSO response message).</t>

<t>In protocol implementation there are generally two kinds of errors
that software writers have to deal with.
The first is situations that arise due to factors in the environment,
such as temporary loss of connectivity. While undesirable, these
situations do not indicate a flaw in the software, and they are
situations that software should generally be able to recover from.
The second is situations that should never happen when communicating
with a correctly-implemented peer.
If they do happen, they indicate a serious flaw in the protocol implementation,
beyond what it is reasonable to expect software to recover from.
This document describes this latter form of error condition as a
“fatal error” and specifies that an implementation encountering
a fatal error condition “MUST forcibly abort the connection immediately”.
Given that these fatal error conditions signify defective software,
and given that defective software is likely to remain defective for
some time until it is fixed, after forcibly aborting a connection,
a client SHOULD refrain from automatically reconnecting to that
same service instance for at least one hour.</t>

<t>This document uses the term “same service instance” as follows:</t>

<t><list style="symbols">
  <t>In cases where a server is specified or configured using
an IP address and TCP port number,
two different configurations are referring to the same service instance if they
contain the same IP address and TCP port number.</t>
  <t>In cases where a server is specified or configured using
a hostname and TCP port number,
such as in the content of a DNS SRV record <xref target="RFC2782"/>,
two different configurations (or DNS SRV records) are considered
to be referring to the same service instance if they
contain the same hostname (subject to the usual case insensitive
DNS name matching rules <xref target="RFC1034"/> <xref target="RFC1035"/>) and TCP port number.
In these cases, configurations with different hostnames are considered
to be referring to different service instances, even if those different hostnames
happen to be aliases, or happen to resolve to the same IP address(es).
Implementations SHOULD NOT resolve hostnames and then
perform matching of IP address(es) in order to evaluate whether
two entities should be determined to be the “same service instance”.</t>
</list></t>

<t>When an anycast service is configured on a particular IP address and port, it
must be the case that although there is more than one physical server
responding on that IP address, each such server can be treated as equivalent.
If a change in network topology causes packets in a particular TCP connection
to be sent to an anycast server instance that does not know about the
connection, the normal keepalive and TCP connection timeout process will allow
for recovery. If after the connection is re-established, the client’s assumption that it is
connected to the same service is violated in some way, that would be considered
to be incorrect behavior in this context. It is however out of the possible
scope for this specification to make specific recommendations in this regard;
that would be up to follow-on documents that describe specific uses of DNS
stateful operations.</t>

<t>The term “long-lived operations” refers to operations
such as Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/>,
Discovery Relay interface subscriptions <xref target="I-D.ietf-dnssd-mdns-relay"/>,
and other future long-lived DNS operations that choose to use
DSO as their basis. These operations establish state that persists beyond
the lifetime of a traditional brief request/response transaction.
This document, the base specification for DNS Stateful Operations,
defines a framework for supporting long-lived operations,
but does not itself define any long-lived operations.
Nonetheless, to appreciate the design rationale behind
DNS Stateful Operations, it is helpful to understand
the kind of long-lived operations that it is intended to support.</t>

<t>DNS Stateful Operations uses three kinds of message:
“DSO request messages”, “DSO response messages”, and
“DSO unacknowledged messages”.
A DSO request message elicits a DSO response message.
DSO unacknowledged messages are unidirectional messages and do not generate any response.</t>

<t>Both DSO request messages and DSO unacknowledged messages are formatted as DNS
request messages (the header QR bit is set to zero, as described in <xref target="format"/>).
One difference is that in DSO request messages the MESSAGE ID field is nonzero;
in DSO unacknowledged messages it is zero.</t>

<t>The content of DSO messages is expressed using type-length-value (TLV) syntax.</t>

<t>In a DSO request message or DSO unacknowledged message
the first TLV is referred to as the “Primary TLV”
and determines the nature of the operation being performed,
including whether it is an acknowledged or unacknowledged operation;
any other TLVs in a DSO request message or unacknowledged message are referred to as “Additional TLVs”
and serve additional non-primary purposes, which may be related to
the primary purpose, or not, as in the case of the encryption padding TLV.</t>

<t>A DSO response message may contain no TLVs, or it may contain one
or more TLVs as appropriate to the information being communicated.
In the context of DSO response messages,
one or more TLVs with the same DSO-TYPE as the Primary TLV in the
corresponding DSO request message are referred to as “Response Primary TLVs”.
Any other TLVs with different DSO-TYPEs are referred to as “Response Additional TLVs”.
The Response Primary TLV(s), if present, MUST occur first in the response message,
before any Response Additional TLVs.</t>

<t>Two timers (elapsed time since an event) are defined in this document:</t>

<t><list style="symbols">
  <t>an inactivity timer (see <xref target="inactivetimer"/> and <xref target="keepalive"/>)</t>
  <t>a keepalive timer (see <xref target="keepalivetimer"/> and <xref target="keepalive"/>)</t>
</list></t>

<t>The timeouts associated with these timers are called
the inactivity timeout and 
the keepalive interval, respectively. 
The term “Session Timeouts” is used to refer to this pair of timeout values.</t>

<t>Resetting a timer means resetting the timer value to zero and starting the timer again.
Clearing a timer means resetting the timer value to zero but NOT starting the timer again.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="discussion" title="Discussion">

<t>There are several use cases for DNS Stateful operations that can 
be described here.</t>

<t>Firstly, establishing session parameters such as server-defined timeouts is of 
great use in the 
general management of persistent connections. For example, using DSO sessions 
for stub-to-recursive DNS-over-TLS <xref target="RFC7858"/> is more flexible for both the 
client and the server than attempting to manage sessions using just the EDNS(0)
TCP Keepalive option <xref target="RFC7828"/>.
The simple set of TLVs defined in this document is
sufficient to greatly enhance connection management for this use case.</t>

<t>Secondly, DNS-SD <xref target="RFC6763"/> has evolved into a naturally session-based mechanism where,
for example, long-lived subscriptions lend themselves to ‘push’ mechanisms as 
opposed to polling. Long-lived stateful connections and server-initiated 
messages align with this use case <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>A general use case is that DNS traffic is often bursty but session establishment 
can be expensive. One challenge with long-lived connections is to maintain 
sufficient traffic to maintain NAT and firewall state.
To mitigate this issue this document introduces a
new concept for the DNS, that is DSO “Keepalive traffic”.
This traffic carries no DNS data and is not considered ‘activity’
in the classic DNS sense, but serves to maintain state in middleboxes,
and to assure client and server that they still have connectivity to each other.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="details" title="Protocol Details">

<section anchor="establishment" title="DSO Session Establishment">

<t>DSO messages MUST be carried in only protocols and in
environments where a session may be established according to the definition
given above in the Terminology section (<xref target="terminology"/>).</t>

<t>DNS over plain UDP <xref target="RFC0768"/> is not appropriate since it fails on the requirement for
in-order message delivery, and, in the presence of NAT gateways and firewalls
with short UDP timeouts, it fails to provide a persistent bi-directional
communication channel unless an excessive amount of keepalive traffic is used.</t>

<t>At the time of publication, DSO is specified only
for DNS over TCP <xref target="RFC1035"/> <xref target="RFC7766"/>, and
for DNS over TLS over TCP <xref target="RFC7858"/>.
Any use of DSO over some other connection technology needs to be
specified in an appropriate future document.</t>

<t>Determining whether a given connection is using DNS over TCP, or DNS
over TLS over TCP, is outside the scope of this specification, and
must be determined using some out-of-band configuration information.
There is no provision within the DSO specification to
turn TLS on or off during the lifetime of a connection.
For service types where the service instance is discovered
using a DNS SRV record <xref target="RFC2782"/>,
the specification for that service type SRV name <xref target="RFC6335"/>
will state whether the connection uses plain TCP, or TLS over TCP.
For example, the specification for the
“_dns‑push‑tls._tcp” service <xref target="I-D.ietf-dnssd-push"/>,
states that it uses TLS.
It is a common convention that protocols specified to run over TLS
are given IANA service type names ending in “‑tls”.</t>

<t>In some environments it may be known in advance by external means
that both client and server support DSO, and in these cases either
client or server may initiate DSO messages at any time.</t>

<t>However, in the typical case a server will not know in advance whether a
client supports DSO, so in general, unless it is known in advance by other means
that a client does support DSO, a server MUST NOT initiate DSO request messages
or DSO unacknowledged messages
until a DSO Session has been mutually established
by at least one successful DSO request/response exchange
initiated by the client, as described below.
Similarly, unless it is known in advance by other means that a server
does support DSO, a client MUST NOT initiate
DSO unacknowledged messages until after a DSO Session has been mutually established.</t>

<t>A DSO Session is established over a connection by the client
sending a DSO request message, such as a DSO Keepalive request message (<xref target="keepalive"/>),
and receiving a response, with matching MESSAGE ID, and RCODE
set to NOERROR (0), indicating that the DSO request was successful.</t>

<t>If the RCODE in the response is set to DSOTYPENI
(“DSO-TYPE Not Implemented”, [TBA2] tentatively RCODE 11)
this indicates that the server does support DSO, but does not implement
the DSO-TYPE of the primary TLV in this DSO request message.
A server implementing DSO MUST NOT return DSOTYPENI
for a DSO Keepalive request message, because the Keepalive TLV is mandatory to implement.
But in the future, if a client attempts to establish a DSO Session
using a response-requiring DSO request message using some newly-defined DSO-TYPE that the server
does not understand, that would result in a DSOTYPENI response.
If the server returns DSOTYPENI then a DSO Session is not
considered established, but the client is permitted to continue
sending DNS messages on the connection,
including other DSO messages such as the DSO Keepalive,
which may result in a successful NOERROR response,
yielding the establishment of a DSO Session.</t>

<t>If the RCODE is set to any value other than NOERROR (0) or DSOTYPENI
([TBA2] tentatively 11), then the client MUST assume that the server does
not implement DSO at all. In this case the client is permitted to continue
sending DNS messages on that connection, but the client SHOULD NOT
issue further DSO messages on that connection.</t>

<t>When the server receives a DSO request message
from a client, and transmits a successful NOERROR response to that
request, the server considers the DSO Session established.</t>

<t>When the client receives the server’s NOERROR response to its
DSO request message, the client considers the DSO Session established.</t>

<t>Once a DSO Session has been established,
either end may unilaterally send appropriate DSO messages at any time,
and therefore either client or server may be the initiator of a message.</t>

<t>Once a DSO Session has been established,
clients and servers should behave as described in this specification with
regard to inactivity timeouts and session termination, not as previously
prescribed in the earlier specification for DNS over TCP <xref target="RFC7766"/>.</t>

<t>Note that for clients that implement only the DSO-TYPEs defined in
this base specification, sending a DSO Keepalive TLV is the only
DSO request message they have available to initiate a DSO Session.
Even for clients that do implement other future DSO-TYPEs, for simplicity
they MAY elect to always send an initial DSO Keepalive
request message as their way of initiating a DSO Session.
A future definition of a new response-requiring DSO-TYPE
gives implementers the option of using that new DSO-TYPE if they wish,
but does not change the fact that sending a DSO Keepalive TLV
remains a valid way of initiating a DSO Session.</t>

<section anchor="sharing" title="Connection Sharing">

<t>As previously specified for DNS over TCP <xref target="RFC7766"/>:</t>

<figure><artwork><![CDATA[
   To mitigate the risk of unintentional server overload, DNS
   clients MUST take care to minimize the number of concurrent
   TCP connections made to any individual server.  It is RECOMMENDED
   that for any given client/server interaction there SHOULD be
   no more than one connection for regular queries, one for zone
   transfers, and one for each protocol that is being used on top
   of TCP (for example, if the resolver was using TLS). However,
   it is noted that certain primary/secondary configurations
   with many busy zones might need to use more than one TCP
   connection for zone transfers for operational reasons (for
   example, to support concurrent transfers of multiple zones).
]]></artwork></figure>

<t>A single server may support multiple services, including DNS Updates 
<xref target="RFC2136"/>, DNS Push Notifications <xref target="I-D.ietf-dnssd-push"/>,
and other services, for one or more DNS zones.
When a client discovers that the target server for several different operations
is the same target hostname and port, the client SHOULD use a single
shared DSO Session for all those operations.
A client SHOULD NOT open multiple connections to the same target host and port
just because the names being operated on are different or
happen to fall within different zones.
This requirement is to reduce unnecessary connection load on the DNS server.</t>

<t>However, server implementers and operators should be aware that connection
sharing may not be possible in all cases.
A single host device may be home to multiple independent client software
instances that don’t coordinate with each other.
Similarly, multiple independent client devices behind the same NAT gateway
will also typically appear to the DNS server as different source ports on
the same client IP address.
Because of these constraints, a DNS server MUST be prepared to accept
multiple connections from different source ports on the same client IP address.</t>

</section>
<section anchor="zero-round-trip-operation" title="Zero Round-Trip Operation">

<t>There is increased awareness today of the performance benefits
of eliminating round trips in session establishment.
Technologies like TCP Fast Open <xref target="RFC7413"/>
and TLS 1.3 <xref target="I-D.ietf-tls-tls13"/>
provide mechanisms to reduce or eliminate
round trips in session establishment.</t>

<t>Similarly, DSO supports zero round-trip operation.</t>

<t>Having initiated a connection to a server, possibly using
zero round-trip TCP Fast Open and/or
zero round-trip TLS 1.3, a client MAY send multiple
response-requiring DSO request messages to the server in succession
without having to wait for a response to the first request message
to confirm successful establishment of a DSO session.</t>

<t>However, a client MUST NOT send non-response-requiring DSO request
messages until after a DSO Session has been mutually established.</t>

<t>Similarly, a server MUST NOT send DSO request messages until it
has received a response-requiring DSO request message from a
client and transmitted a successful NOERROR response for that request.</t>

<t>Caution must be taken to ensure that DSO messages sent before the first
round-trip is completed are idempotent, or are otherwise immune to any problems
that could be result from the inadvertent replay that can occur with zero round-trip operation.</t>

</section>
<section anchor="middlebox-considerations" title="Middlebox Considerations">

<t>Where an application-layer middlebox (e.g., a DNS proxy, forwarder, or
session multiplexer) is in the path, the middlebox MUST NOT blindly
forward DSO messages in either direction, and MUST treat the inbound
and outbound connections as separate sessions.  This does not preclude
the use of DSO messages in the presence of an IP-layer middlebox, such
as a NAT that rewrites IP-layer and/or transport-layer headers but
otherwise preserves the effect of a single session between the client
and the server.</t>

<t>To illustrate the above, consider a network where a middlebox
terminates one or more TCP connections from clients and multiplexes the
queries therein over a single TCP connection to an upstream server.
The DSO messages and any associated state are specific to the individual
TCP connections.  A DSO-aware middlebox MAY in some circumstances be
able to retain associated state and pass it between the client and
server (or vice versa) but this would be highly TLV-specific.  For
example, the middlebox may be able to maintain a list of which clients
have made Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/> and
make its own subscription(s) on their behalf, relaying any subsequent
notifications to the client (or clients) that have subscribed to that
particular notification.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="format" title="Message Format">

<t>A DSO message begins with
the standard twelve-byte DNS message header <xref target="RFC1035"/>
with the OPCODE field set to the DSO OPCODE ([TBA1] tentatively 6).
However, unlike standard DNS messages, the question section, answer section,
authority records section and additional records sections are not present.
The corresponding count fields (QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) MUST be
set to zero on transmission.</t>

<t>If a DSO message is received where any of the count fields are
not zero, then a FORMERR MUST be returned,
unless a future IETF Standard specifies otherwise.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                          MESSAGE ID                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |QR |    OPCODE     |            Z              |     RCODE     |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     QDCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ANCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     NSCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ARCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                           DSO Data                            /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><vspace blankLines='999' /></t>

<section anchor="header" title="DNS Header Fields in DSO Messages">

<t>In an unacknowledged message the MESSAGE ID field MUST be set to zero.
In an acknowledged request message the MESSAGE ID field MUST
be set to a unique nonzero value, that the initiator is not
currently using for any other active operation on this connection.
For the purposes here, a MESSAGE ID is in use in this DSO Session if the
initiator has used it in a request for which it is still awaiting a response,
or if the client has used it to set up a long-lived operation that has not yet been cancelled.
For example, a long-lived operation could be
a Push Notification subscription <xref target="I-D.ietf-dnssd-push"/> or
a Discovery Relay interface subscription <xref target="I-D.ietf-dnssd-mdns-relay"/>.</t>

<t>Whether a message is acknowledged or unacknowledged is
determined only by the specification for the Primary TLV.
An acknowledgment cannot be requested by including a nonzero message ID
in a message the primary TLV of which is specified to be unacknowledged,
nor can an acknowledgment be prevented by sending a message ID of zero
in a message with a primary TLV that is specified to be acknowledged.
A responder that receives either such malformed message MUST treat it
as a fatal error and forcibly abort the connection immediately.</t>

<t>In a request or unacknowledged message the DNS Header QR bit MUST be zero (QR=0).
If the QR bit is not zero the message is not a request or unacknowledged message.</t>

<t>In a response message the DNS Header QR bit MUST be one (QR=1).<vspace />
If the QR bit is not one the message is not a response message.</t>

<t>In a response message (QR=1) the MESSAGE ID field MUST contain a copy of the value of
the MESSAGE ID field in the request message being responded to.
In a response message (QR=1) the MESSAGE ID field MUST NOT be zero.
If a response message (QR=1) is received where the MESSAGE ID is zero
this is a fatal error and the recipient MUST forcibly abort the connection immediately.</t>

<t>The DNS Header OPCODE field holds the DSO OPCODE value ([TBA1] tentatively 6).</t>

<t>The Z bits are currently unused in DSO messages,
and in both DSO requests and DSO responses the
Z bits MUST be set to zero (0) on transmission and MUST be silently ignored
on reception, unless a future IETF Standard specifies otherwise.</t>

<t><vspace blankLines='999' /></t>

<t>In a DNS request message (QR=0) the RCODE is set according to the definition of the request.
For example, in a Retry Delay message (<xref target="retry"/>) the RCODE indicates the reason for termination.
However, in most cases, except where clearly specified otherwise,
in a DNS request message (QR=0) the RCODE is set to zero on transmission,
and silently ignored on reception.</t>

<t>The RCODE value in a response message (QR=1) may be one of the following values:</t>

<texttable>
      <ttcol align='right'>Code</ttcol>
      <ttcol align='left'>Mnemonic</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>0</c>
      <c>NOERROR</c>
      <c>Operation processed successfully</c>
      <c>1</c>
      <c>FORMERR</c>
      <c>Format error</c>
      <c>2</c>
      <c>SERVFAIL</c>
      <c>Server failed to process request due to a problem with the server</c>
      <c>3</c>
      <c>NXDOMAIN</c>
      <c>Name Error — Named entity does not exist (TLV-dependent)</c>
      <c>4</c>
      <c>NOTIMP</c>
      <c>DSO not supported</c>
      <c>5</c>
      <c>REFUSED</c>
      <c>Operation declined for policy reasons</c>
      <c>9</c>
      <c>NOTAUTH</c>
      <c>Not Authoritative (TLV-dependent)</c>
      <c>[TBA2] 11</c>
      <c>DSOTYPENI</c>
      <c>Primary TLV’s DSO-Type is not implemented</c>
</texttable>

<t>Use of the above RCODEs is likely to be common in DSO but 
does not preclude the definition and use of other codes in future documents that 
make use of DSO.</t>

<t>If a document defining a new DSO-TYPE makes use of NXDOMAIN (Name Error)
or NOTAUTH (Not Authoritative) then that document MUST specify the specific
interpretation of these RCODE values in the context of that new DSO TLV.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="dsodata" title="DSO Data">

<t>The standard twelve-byte DNS message header with its
zero-valued count fields is followed by the DSO Data,
expressed using TLV syntax, as described below <xref target="tlvsyntax"/>.</t>

<t>A DSO message may be a request message, a response message, or an unacknowledged message.</t>

<t>A DSO request message or DSO unacknowledged message MUST contain at least one TLV.
The first TLV in a DSO request message or DSO unacknowledged message is referred to as the “Primary TLV”
and determines the nature of the operation being performed,
including whether it is an acknowledged or unacknowledged operation.
In some cases it may be appropriate to include other TLVs in a request message or unacknowledged message,
such as the Encryption Padding TLV (<xref target="padding"/>),
and these extra TLVs are referred to as the “Additional TLVs”.</t>

<t>A DSO response message may contain no TLVs,
or it may be specified to contain one or more TLVs
appropriate to the information being communicated.</t>

<t>A DSO response message may contain one or more TLVs with
DSO-TYPE the same as the Primary TLV from the corresponding DSO request message,
in which case those TLV(s) are referred to as “Response Primary TLVs”.
A DSO response message is not required to carry Response Primary TLVs.
The MESSAGE ID field in the DNS message header is sufficient to identify
the DSO request message to which this response message relates.</t>

<t>A DSO response message may contain one or more TLVs with
DSO-TYPEs different from the Primary TLV from the corresponding DSO request message,
in which case those TLV(s) are referred to as “Response Additional TLVs”.</t>

<t>Response Primary TLV(s), if present, MUST occur first in the response message,
before any Response Additional TLVs.</t>

<t>It is anticipated that most DSO operations will be specified
to use request messages, which generate corresponding responses.
In some specialized high-traffic use cases,
it may be appropriate to specify unacknowledged messages.
Unacknowledged messages can be more efficient on the network,
because they don’t generate a stream of corresponding reply messages.
Using unacknowledged messages can also simplify software
in some cases, by removing need for an initiator to maintain
state while it waits to receive replies it doesn’t care about.
When the specification for a particular TLV states that,
when used as a Primary TLV (i.e., first) in an outgoing DNS request message (i.e., QR=0),
that message is to be unacknowledged,
the MESSAGE ID field MUST be set to zero and
the receiver MUST NOT generate any response message
corresponding to this unacknowledged message.</t>

<t>The previous point, that the receiver MUST NOT generate responses to
unacknowledged messages, applies even in the case of errors.
When a DSO message is received where both the QR bit and the MESSAGE ID field
are zero, the receiver MUST NOT generate any response.
For example, if the DSO-TYPE in the Primary TLV is unrecognized,
then a DSOTYPENI error MUST NOT be returned; instead the receiver
MUST forcibly abort the connection immediately.</t>

<t>Unacknowledged messages MUST NOT be used “speculatively”
in cases where the sender doesn’t know if the receiver supports
the Primary TLV in the message, because there is no way to receive
any response to indicate success or failure of the request message
(the request message does not contain a unique MESSAGE ID with
which to associate a response with its corresponding request).
Unacknowledged messages are only appropriate in cases
where the sender already knows that the receiver supports,
and wishes to receive, these messages.</t>

<t>For example, after a client has subscribed for Push Notifications
<xref target="I-D.ietf-dnssd-push"/>, the subsequent event notifications are
then sent as unacknowledged messages, and this is appropriate
because the client initiated the message stream by virtue of its
Push Notification subscription, thereby indicating its support of
Push Notifications, and its desire to receive those notifications.</t>

<t>Similarly, after an Discovery Relay client has subscribed to receive
inbound mDNS (multicast DNS, <xref target="RFC6762"/>) traffic from an Discovery
Relay, the subsequent stream of received
packets is then sent using unacknowledged messages, and this
is appropriate because the client initiated the message stream
by virtue of its Discovery Relay link subscription, thereby indicating
its support of Discovery Relay, and its desire to receive inbound mDNS
packets over that DSO session <xref target="I-D.ietf-dnssd-mdns-relay"/>.</t>

<t><vspace blankLines='999' /></t>

<section anchor="tlvsyntax" title="TLV Syntax">

<t>All TLVs, whether used as “Primary”, “Additional”, “Response Primary”,
or “Response Additional”, use the same encoding syntax.</t>

<t>The specification for a TLV states whether that DSO-TYPE may be used in
“Primary”, “Additional”, “Response Primary”, or “Response Additional” TLVs.
The specification for a TLV also states whether,
when used as the Primary (i.e., first) TLV in a DNS request message (i.e., QR=0),
that DSO message is to be acknowledged.
If the DSO message is to be acknowledged, the specification
also states which TLVs, if any, are to be included in the response.
The Primary TLV may or may not be contained in the response,
depending on what is stated in the specification for that TLV.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                           DSO-TYPE                            |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                          DSO-LENGTH                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                           DSO-DATA                            /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='DSO-TYPE:'>
  A 16-bit unsigned integer, in network (big endian) byte order,
giving the DSO-TYPE of the current DSO TLV per the IANA DSO Type Code Registry.</t>
  <t hangText='DSO-LENGTH:'>
  A 16-bit unsigned integer, in network (big endian) byte order,
giving the size in bytes of the DSO-DATA.</t>
  <t hangText='DSO-DATA:'>
  Type-code specific format. The generic DSO machinery treats the
DSO-DATA as an opaque “blob” without attempting to interpret it.
Interpretation of the meaning of the DSO-DATA for a particular
DSO-TYPE is the responsibility of the software that implements that DSO-TYPE.</t>
</list></t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="request-tlvs" title="Request TLVs">

<t>The first TLV in a DSO request message or unacknowledged message is the “Primary TLV”
and indicates the operation to be performed.
A DSO request message or unacknowledged message MUST contain at at least one TLV, the Primary TLV.</t>

<t>Immediately following the Primary TLV, a DSO request message or unacknowledged message
MAY contain one or more “Additional TLVs”, which specify
additional parameters relating to the operation.</t>

</section>
<section anchor="response-tlvs" title="Response TLVs">

<t>Depending on the operation, a DSO response message MAY contain no TLVs,
because it is simply a response to a previous request message, and the
MESSAGE ID in the header is sufficient to identify the request in question.
Or it may contain a single response TLV, with the same DSO-TYPE as the
Primary TLV in the request message.
Alternatively it may contain one or more TLVs of other
types, or a combination of the above, as appropriate
for the information that needs to be communicated.
The specification for each DSO TLV determines
what TLVs are required in a response to a request using that TLV.</t>

<t>If a DSO response is received for an operation where the specification
requires that the response carry a particular TLV or TLVs,
and the required TLV(s) are not present, then this is a fatal
error and the recipient of the defective response message MUST
forcibly abort the connection immediately.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="unrecognized-tlvs" title="Unrecognized TLVs">

<t>If DSO request message is received containing an unrecognized Primary TLV,
with a nonzero MESSAGE ID (indicating that a response is expected),
then the receiver MUST send an error response with matching MESSAGE ID,
and RCODE DSOTYPENI ([TBA2] tentatively 11).
The error response MUST NOT contain a copy of the unrecognized Primary TLV.</t>

<t>If DSO unacknowledged message is received containing an unrecognized Primary TLV,
with a zero MESSAGE ID (indicating that no response is expected),
then this is a fatal error and the recipient
MUST forcibly abort the connection immediately.</t>

<t>If a DSO request message or unacknowledged message is received where the Primary TLV is recognized,
containing one or more unrecognized Additional TLVs, the unrecognized
Additional TLVs MUST be silently ignored, and the remainder of the message
is interpreted and handled as if the unrecognized parts were not present.</t>

<t>Similarly, if a DSO response message is received containing one
or more unrecognized TLVs, the unrecognized TLVs MUST be silently
ignored, and the remainder of the message is interpreted and
handled as if the unrecognized parts were not present.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="edns0-and-tsig" title="EDNS(0) and TSIG">

<t>Since the ARCOUNT field MUST be zero, a DSO message
MUST NOT contain an EDNS(0) option in the additional records section.
If functionality provided by current or future EDNS(0) options
is desired for DSO messages, one or more new DSO TLVs
need to be defined to carry the necessary information.</t>

<t>For example, the EDNS(0) Padding Option <xref target="RFC7830"/> used for security purposes
is not permitted in a DSO message,
so if message padding is desired for DSO messages
then the Encryption Padding TLV described in <xref target="padding"/> MUST be used.</t>

<t>Similarly, a DSO message MUST NOT contain a TSIG record.
A TSIG record in a conventional DNS message is added as the last record in
the additional records section, and carries a signature computed over the
preceding message content. Since DSO data appears <spanx style="strong">after</spanx> the additional
records section, it would not be included in the signature calculation. 
If use of signatures with DSO messages becomes necessary in the 
future, a new DSO TLV needs to be defined to perform this function.</t>

<t>Note however that, while DSO <spanx style="strong">messages</spanx> cannot include
EDNS(0) or TSIG records, a DSO <spanx style="strong">session</spanx> is typically used to 
carry a whole series of DNS messages of different kinds, including DSO
messages, and other DNS message types like Query <xref target="RFC1034"/> <xref target="RFC1035"/>
and Update <xref target="RFC2136"/>, and those messages can carry EDNS(0) and TSIG records.</t>

<t>Although messages may contain other EDNS(0) options as appropriate,
this specification explicitly prohibits use of the
EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>
in <spanx style="strong">any</spanx> messages sent on a DSO Session (because it is obsoleted by
the functionality provided by the DSO Keepalive operation).
If any message sent on a DSO Session contains an EDNS(0) TCP Keepalive Option
this is a fatal error and the recipient of the defective message MUST
forcibly abort the connection immediately.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="message-handling" title="Message Handling">

<t>The initiator MUST set the value of the QR bit in the DNS header to zero (0),
and the responder MUST set it to one (1).</t>

<t>As described above in <xref target="header"/> whether an outgoing message with QR=0
is unacknowledged or acknowledged is determined by the specification
for the Primary TLV, which in turn determines whether the MESSAGE ID field
in that outgoing message will be zero or nonzero.</t>

<t>A DSO unacknowledged message has both the QR bit and the MESSAGE ID field set to zero,
and MUST NOT elicit a response.</t>

<t>Every DSO request message (QR=0) with a nonzero MESSAGE ID field
is an acknowledged DSO request, and MUST elicit a corresponding response (QR=1),
which MUST have the same MESSAGE ID in the DNS message header as in the corresponding request.</t>

<t>Valid DSO request messages sent by the client with a nonzero MESSAGE ID field
elicit a response from the server, and
Valid DSO request messages sent by the server with a nonzero MESSAGE ID field
elicit a response from the client.</t>

<t>The namespaces of 16-bit MESSAGE IDs are independent in each direction.
This means it is <spanx style="strong">not</spanx> an error for both client and server to send request
messages at the same time as each other, using the same MESSAGE ID, in different directions.
This simplification is necessary in order for the protocol to be implementable.
It would be infeasible to require the client and server
to coordinate with each other regarding allocation of new unique MESSAGE IDs.
It is also not necessary to require the client and server
to coordinate with each other regarding allocation of new unique MESSAGE IDs.
The value of the 16-bit MESSAGE ID combined with the
identity of the initiator (client or server) is sufficient
to unambiguously identify the operation in question.
This can be thought of as a 17-bit message identifier space, using
message identifiers 0x00001-0x0FFFF for client-to-server DSO request messages, and
message identifiers 0x10001-0x1FFFF for server-to-client DSO request messages.
The least-significant 16 bits are stored explicitly in the
MESSAGE ID field of the DSO message, and the most-significant
bit is implicit from the direction of the message.</t>

<t>As described above in <xref target="header"/>, an initiator MUST NOT reuse a
MESSAGE ID that it already has in use for an outstanding request
(unless specified otherwise by the relevant specification for the DSO-TYPE in question).
At the very least, this means that a MESSAGE ID MUST NOT
be reused in a particular direction on a particular DSO
Session while the initiator is waiting for a response to a
previous request using that MESSAGE ID on that DSO Session
(unless specified otherwise by the relevant specification for the DSO-TYPE in question),
and for a long-lived operation the MESSAGE ID for the operation
MUST NOT be reused while that operation remains active.</t>

<t>If a client or server receives a response (QR=1) where the MESSAGE ID is zero, or is
any other value that does not match the MESSAGE ID of any of its outstanding operations,
this is a fatal error and the recipient MUST forcibly abort the connection immediately.</t>

<section anchor="error-responses" title="Error Responses">

<t>When a DSO unacknowledged message is unsuccessful for some reason,
the responder immediately aborts the connection.</t>

<t>When a DSO request message is unsuccessful for some reason,
the responder returns an error code to the initiator.</t>

<t>In the case of a server returning an error code to a client
in response to an unsuccessful DSO request message, the server MAY choose
to end the DSO Session, or MAY choose to allow the DSO Session to remain open.
For error conditions that only affect the single operation in question, the server SHOULD
return an error response to the client and leave the DSO Session open for further operations.</t>

<t>For error conditions that are likely to make all operations unsuccessful in the
immediate future, the server SHOULD return an error response to the client and then
end the DSO Session by sending a Retry Delay message, as described in <xref target="retry"/>.</t>

<t>Upon receiving an error response from the server, a client SHOULD NOT
automatically close the DSO Session. An error relating to one particular operation
on a DSO Session does not necessarily imply that all other operations on that
DSO Session have also failed, or that future operations will fail. The client
should assume that the server will make its own decision about whether or not to
end the DSO Session, based on the server’s determination of whether the error
condition pertains to this particular operation, or would also apply to any
subsequent operations. If the server does not end the DSO Session by
sending the client a Retry Delay message (<xref target="retry"/>) then the client
SHOULD continue to use that DSO Session for subsequent operations.</t>

</section>
</section>
<section anchor="dso-response-generation" title="DSO Response Generation">

<t>With most TCP implementations, for DSO requests that generate a response,
the TCP data acknowledgement (generated because data has been received by TCP),
the TCP window update (generated because TCP has delivered that data to the receiving software),
and the DSO response (generated by the receiving application-layer software itself)
are all combined into a single IP packet.
Combining these three elements into a single IP packet
can give a significant improvement in network efficiency.</t>

<t>For DSO requests that do not generate a response,
the TCP implementation generally doesn’t have any way to know
that no response will be forthcoming, so it waits fruitlessly
for the application-layer software to generate a response,
until the Delayed ACK timer fires <xref target="RFC1122"/> (typically 200 milliseconds)
and only then does it send the TCP ACK and window update.
In conjunction with Nagle’s Algorithm at the sender,
this can delay the sender’s transmission of its next
(non-full-sized) TCP segment, while the sender is waiting for
its previous (non-full-sized) TCP segment to be acknowledged,
which won’t happen until the Delayed ACK timer fires.
Nagle’s Algorithm exists to combine multiple small
application writes into more-efficient large TCP segments,
to guard against wasteful use of the network by applications
that would otherwise transmit a stream of small TCP segments,
but in this case Nagle’s Algorithm (created to improve network efficiency)
can interact badly with TCP’s Delayed ACK feature
(also created to improve network efficiency) <xref target="NagleDA"/>
with the result of delaying some messages by up to 200 milliseconds.</t>

<t>Possible mitigations for this problem include:</t>

<t><list style="symbols">
  <t>Disable Nagle’s Algorithm at the sender. This is not great,<vspace />
because it results in less efficient use of the network.</t>
  <t>Disable Delayed ACK at the receiver. This is not great,<vspace />
because it results in less efficient use of the network.</t>
  <t>Adding padding data to fill the segment. This is not great,
because it uses additional bandwidth.</t>
  <t>Use a networking API that lets the receiver signal to the TCP
implementation that the receiver has received and processed a client
request for which it will not be generating any immediate response.
This allows the TCP implementation to operate efficiently in both cases;
for requests that generate a response, the TCP ACK, window update, and
DSO response are transmitted together in a single TCP segment,
and for requests that do not generate a response,
the application-layer software informs the TCP implementation
that it should go ahead and send the TCP ACK and window update
immediately, without waiting for the Delayed ACK timer.
Unfortunately it is not known at this time which (if any) of the
widely-available networking APIs currently include this capability.</t>
</list></t>

</section>
<section anchor="cancellation" title="Responder-Initiated Operation Cancellation">

<t>This document, the base specification for DNS Stateful Operations,
does not itself define any long-lived operations,
but it defines a framework for supporting long-lived operations,
such as Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/> and
Discovery Relay interface subscriptions <xref target="I-D.ietf-dnssd-mdns-relay"/>.</t>

<t>Generally speaking, a long-lived operation is initiated by the initiator,
and, if successful, remains active until the initiator terminates the operation.</t>

<t>However, it is possible that a long-lived operation may be valid
at the time it was initiated, but then a later change of circumstances
may render that previously valid operation invalid.</t>

<t>For example, a long-lived client operation may pertain to a name
that the server is authoritative for, but then the server configuration
is changed such that it is no longer authoritative for that name.</t>

<t>In such cases, instead of terminating the entire session
it may be desirable for the responder to be able to cancel
selectively only those operations that have become invalid.</t>

<t>The responder performs this selective cancellation by sending
a new response message, with the MESSAGE ID field containing the
MESSAGE ID of the long-lived operation that is to be terminated
(that it had previously acknowledged with a NOERROR RCODE), and the
RCODE field of the new response message giving the reason for cancellation.</t>

<t>After a response message with nonzero RCODE has been sent,
that operation has been terminated from the responder’s point of view,
and the responder sends no more messages relating to that operation.</t>

<t>After a response message with nonzero RCODE has been received by the initiator,
that operation has been terminated from the initiator’s point of view,
and the cancelled operation’s MESSAGE ID is now free for reuse.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="lifecycle" title="DSO Session Lifecycle and Timers">

<section anchor="dso-session-initiation" title="DSO Session Initiation">

<t>A DSO Session begins as described in <xref target="establishment"/>.</t>

<t>The client may perform as many DNS operations as it wishes using the
newly created DSO Session. Operations SHOULD be pipelined (i.e., the
client doesn’t need wait for a response before sending the next message).
The server MUST act on messages in the order they are transmitted, but
responses to those messages SHOULD be sent out of order when appropriate.</t>

</section>
<section anchor="sessiontimeouts" title="DSO Session Timeouts">

<t>Two timeout values are associated with a DSO Session:
the inactivity timeout, and the keepalive interval. 
Both values are communicated in the same TLV, the DSO Keepalive TLV (<xref target="keepalive"/>).</t>

<t>The first timeout value, the inactivity timeout, is the maximum time for which
a client may speculatively keep a DSO Session open in the expectation that
it may have future requests to send to that server.</t>

<t>The second timeout value, the keepalive interval, is the maximum permitted
interval between messages if the client wishes to keep the DSO Session alive.</t>

<t>The two timeout values are independent. The inactivity timeout may be lower,
the same, or higher than the keepalive interval, though in most cases the
inactivity timeout is expected to be shorter than the keepalive interval.</t>

<t>A shorter inactivity timeout with a longer keepalive interval signals
to the client that it should not speculatively keep an inactive DSO
Session open for very long without reason, but when it does have an
active reason to keep a DSO Session open, it doesn’t need to be sending
an aggressive level of keepalive traffic to maintain that session.</t>

<t>A longer inactivity timeout with a shorter keepalive interval
signals to the client that it may speculatively keep an inactive
DSO Session open for a long time, but to maintain that inactive
DSO Session it should be sending a lot of keepalive traffic.
This configuration is expected to be less common.</t>

<t>In the usual case where the inactivity timeout is shorter than the keepalive
interval, it is only when a client has a very long-lived, low-traffic, operation
that the keepalive interval comes into play, to ensure that a sufficient
residual amount of traffic is generated to maintain NAT and firewall state
and to assure client and server that they still have connectivity to each other.</t>

<t>On a new DSO Session, if no explicit DSO Keepalive message exchange has taken 
place, the default value for both timeouts is 15 seconds.</t>

<t>For both timeouts, lower values of the timeout result in higher network traffic
and higher CPU load on the server.</t>

</section>
<section anchor="inactive-dso-sessions" title="Inactive DSO Sessions">

<t>At both servers and clients, the generation or reception of any complete
DNS message, including DNS requests, responses, updates, or DSO
messages, resets both timers for that DSO Session, with the exception
that a DSO Keepalive message resets only the keepalive timer,
not the inactivity timeout timer.</t>

<t>In addition, for as long as the client has an outstanding operation in progress,
the inactivity timer remains cleared, and an inactivity timeout cannot occur.</t>

<t>For short-lived DNS operations like traditional queries and updates,
an operation is considered in progress for the time between request and 
response, typically a period of a few hundred milliseconds at most.
At the client, the inactivity timer is cleared upon transmission of a 
request and remains cleared until reception of the corresponding response.
At the server, the inactivity timer is cleared upon reception of a request
and remains cleared until transmission of the corresponding response.</t>

<t>For long-lived DNS Stateful operations (such as
a Push Notification subscription <xref target="I-D.ietf-dnssd-push"/> or
a Discovery Relay interface subscription <xref target="I-D.ietf-dnssd-mdns-relay"/>),
an operation is considered in progress
for as long as the operation is active, until it is cancelled.
This means that a DSO Session can exist, with active operations,
with no messages flowing in either direction, for far longer than the 
inactivity timeout, and this is not an error.
This is why there are two separate timers:
the inactivity timeout, and the keepalive interval.
Just because a DSO Session has no traffic for an extended period of time
does not automatically make that DSO Session “inactive”,
if it has an active operation that is awaiting events.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="inactivetimer" title="The Inactivity Timeout">

<t>The purpose of the inactivity timeout is for the server to balance its trade off 
between the costs of setting up new DSO Sessions and the costs of maintaining inactive 
DSO Sessions. A server with abundant DSO Session capacity can offer a high inactivity timeout, 
to permit clients to keep a speculative DSO Session open for a long time, to save 
the cost of establishing a new DSO Session for future communications with that 
server. A server with scarce memory resources can offer a low inactivity timeout,
to cause clients to promptly close DSO Sessions whenever they have no outstanding
operations with that server, and then create a new DSO Session later when needed.</t>

<section anchor="closing-inactive-dso-sessions" title="Closing Inactive DSO Sessions">

<t>When a connection’s inactivity timeout is reached the client MUST
begin closing the idle connection, but a client is not required to
keep an idle connection open until the inactivity timeout is reached.
A client MAY close a DSO Session at any time, at the client’s discretion.
If a client determines that it has no current or reasonably
anticipated future need for a currently inactive DSO Session,
then the client SHOULD gracefully close that connection.</t>

<t>If, at any time during the life of the DSO Session,
the inactivity timeout value (i.e., 15 seconds by default) elapses
without there being any operation active on the DSO Session,
the client MUST close the connection gracefully.</t>

<t>If, at any time during the life of the DSO Session,
twice the inactivity timeout value (i.e., 30 seconds by default),
or five seconds, if twice the inactivity timeout value is less than five seconds,
elapses without there being any operation active on the DSO Session,
the server SHOULD consider the client delinquent,
and SHOULD forcibly abort the DSO Session.</t>

<t>In this context, an operation being active on a DSO Session includes
a query waiting for a response, an update waiting for a response,
or an active long-lived operation, but not a DSO Keepalive message exchange itself.
A DSO Keepalive message exchange resets only the keepalive
interval timer, not the inactivity timeout timer.</t>

<t>If the client wishes to keep an inactive DSO Session open for longer
than the default duration then it uses the DSO Keepalive message
to request longer timeout values, as described in <xref target="keepalive"/>.</t>

</section>
<section anchor="values-for-the-inactivity-timeout" title="Values for the Inactivity Timeout">

<t>For the inactivity timeout value, lower values result in
more frequent DSO Session teardown and re-establishment.
Higher values result in lower traffic and lower CPU load on the server,
but higher memory burden to maintain state for inactive DSO Sessions.</t>

<t>A server may dictate any value it chooses for the inactivity timeout
(either in a response to a client-initiated request, or in a server-initiated message)
including values under one second, or even zero.</t>

<t>An inactivity timeout of zero informs the client that it
should not speculatively maintain idle connections at all, and
as soon as the client has completed the operation or operations relating
to this server, the client should immediately begin closing this session.</t>

<t>A server will abort an idle client session after twice the
inactivity timeout value, or five seconds, whichever is greater.
In the case of a zero inactivity timeout value, this means that
if a client fails to close an idle client session then the server
will forcibly abort the idle session after five seconds.</t>

<t>An inactivity timeout of 0xFFFFFFFF represents “infinity” and
informs the client that it may keep an idle connection open as long as it wishes.
Note that after granting an unlimited inactivity timeout in this way,
at any point the server may revise that inactivity timeout by sending
a new Keepalive message dictating new Session Timeout values to the client.</t>

<t>The largest <spanx style="strong">finite</spanx> inactivity timeout
supported by the current DSO Keepalive TLV is
0xFFFFFFFE (2^32-2 milliseconds, approximately 49.7 days).</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="keepalivetimer" title="The Keepalive Interval">

<t>The purpose of the keepalive interval is to manage the generation of
sufficient messages to maintain state in middleboxes (such at NAT gateways
or firewalls) and for the client and server to periodically verify that they
still have connectivity to each other. This allows them to clean up state
when connectivity is lost, and to establish a new session if appropriate.</t>

<section anchor="keepalive-interval-expiry" title="Keepalive Interval Expiry">

<t>If, at any time during the life of the DSO Session,
the keepalive interval value (i.e., 15 seconds by default) elapses
without any DNS messages being sent or received on a DSO Session,
the client MUST take action to keep the DSO Session alive,
by sending a DSO Keepalive message (<xref target="keepalive"/>).
A DSO Keepalive message exchange resets only the keepalive timer, 
not the inactivity timer.</t>

<t>If a client disconnects from the network abruptly,
without cleanly closing its DSO Session,
perhaps leaving a long-lived operation uncancelled,
the server learns of this after failing to
receive the required keepalive traffic from that client.
If, at any time during the life of the DSO Session,
twice the keepalive interval value (i.e., 30 seconds by default) elapses
without any DNS messages being sent or received on a DSO Session,
the server SHOULD consider the client delinquent,
and SHOULD forcibly abort the DSO Session.</t>

</section>
<section anchor="values-for-the-keepalive-interval" title="Values for the Keepalive Interval">

<t>For the keepalive interval value, lower values result in a higher volume of keepalive 
traffic. Higher values of the keepalive interval reduce traffic and CPU load, 
but have minimal effect on the memory burden
at the server, because clients keep a DSO Session open for the same length of time
(determined by the inactivity timeout) regardless of the level of keepalive traffic 
required.</t>

<t>It may be appropriate for clients and servers to select different keepalive 
interval values depending on the nature of the network they are on.</t>

<t>A corporate DNS server that knows it is serving only clients on the internal 
network, with no intervening NAT gateways or firewalls, can impose a higher 
keepalive interval, because frequent keepalive traffic is not required.</t>

<t>A public DNS server that is serving primarily residential consumer clients, 
where it is likely there will be a NAT gateway on the path, may impose a lower 
keepalive interval, to generate more frequent keepalive traffic.</t>

<t>A smart client may be adaptive to its environment. A client using
a private IPv4 address <xref target="RFC1918"/> to communicate with a DNS server
at an address outside that IPv4 private address block,
may conclude that there is likely to be a NAT gateway on the path,
and accordingly request a lower keepalive interval.</t>

<t>By default it is RECOMMENDED that clients request,
and servers grant, a keepalive interval of 60 minutes.
This keepalive interval provides for reasonably timely detection if
a client abruptly disconnects without cleanly closing the session,
and is sufficient to maintain state in firewalls and NAT gateways
that follow the IETF recommended Best Current Practice that the
“established connection idle-timeout” used by middleboxes
be at least 2 hours 4 minutes <xref target="RFC5382"/>.</t>

<t>Note that the lower the keepalive interval value, the higher the load on client
and server. For example, a hypothetical keepalive interval value of 100ms would result
in a continuous stream of at least ten messages per second, in both directions,
to keep the DSO Session alive. And, in this extreme example, a single packet loss and
retransmission over a long path could introduce a momentary pause in the stream of messages,
long enough to cause the server to overzealously abort the connection.</t>

<t>Because of this concern, the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with a keepalive interval value less than ten seconds.
If a client receives a Keepalive message specifying a keepalive interval value
less than ten seconds this is a fatal error and the client MUST
forcibly abort the connection immediately.</t>

<t>A keepalive interval value of 0xFFFFFFFF represents “infinity” and
informs the client that it should generate no keepalive traffic.
Note that after signaling that the client should generate no keepalive traffic in this way,
at any point the server may revise that keepalive traffic requirement by sending
a new Keepalive message dictating new Session Timeout values to the client.</t>

<t>The largest <spanx style="strong">finite</spanx> keepalive interval
supported by the current DSO Keepalive TLV is
0xFFFFFFFE (2^32-2 milliseconds, approximately 49.7 days).</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="server-initiated-session-termination" title="Server-Initiated Session Termination">

<t>In addition to cancelling individual long-lived operations selectively (<xref target="cancellation"/>)
there are also occasions where a server may need to terminate one or more entire sessions.
An entire session may need to be terminated if the client is defective in some way,
or departs from the network without closing its session.
Sessions may also need to be terminated if the server becomes overloaded,
or if the server is reconfigured and lacks the ability to be selective about
which operations need to be cancelled.</t>

<t>This section discusses various reasons a session may be terminated,
and the mechanisms for doing so.</t>

<t>Normally a server MUST NOT close a DSO Session with a client.
A server only causes a DSO Session to be ended in the exceptional circumstances outlined below.
In normal operation, closing a DSO Session is the client’s responsibility.
The client makes the determination of when to close a DSO
Session based on an evaluation of both its own needs,
and the inactivity timeout value dictated by the server.</t>

<t>Some of the exceptional situations in which a server may terminate a DSO Session include:</t>

<t><list style="symbols">
  <t>The server application software or underlying operating system
is shutting down or restarting.</t>
  <t>The server application software terminates unexpectedly
(perhaps due to a bug that makes it crash).</t>
  <t>The server is undergoing a reconfiguration or maintenance
procedure, that, due to the way the server software is
implemented, requires clients to be disconnected.
For example, some software is implemented such that it reads
a configuration file at startup, and changing the server’s
configuration entails modifying the configuration file
and then killing and restarting the server software,
which generally entails a loss of network connections.</t>
  <t>The client fails to meets its obligation to generate the required
keepalive traffic, or to close an inactive session by the prescribed time
(twice the time interval dictated by the server, or five seconds,
whichever is greater, as described in <xref target="sessiontimeouts"/>).</t>
  <t>The client sends a grossly invalid or malformed request that
is indicative of a seriously defective client implementation.</t>
  <t>The server is over capacity and needs to shed some load.</t>
</list></t>

<section anchor="retry" title="Server-Initiated Retry Delay Message">

<t>In the cases described above where a server elects to terminate a
DSO Session, it could do so simply by forcibly aborting the connection.
However, if it did this the likely behavior of the client might be simply to to treat
this as a network failure and reconnect immediately, putting more burden on the server.</t>

<t>Therefore, to avoid this reconnection implosion, a server SHOULD instead choose
to shed client load by sending a Retry Delay message, with an appropriate RCODE
value informing the client of the reason the DSO Session needs to be terminated.
The format of the Retry Delay TLV, and the interpretations of the various RCODE values,
are described in <xref target="delay"/>.
After sending a Retry Delay message,
the server MUST NOT send any further messages on that DSO Session.</t>

<t>Upon receipt of a Retry Delay message from the server,
the client MUST make note of the reconnect delay for this server,
and then immediately close the connection gracefully.</t>

<t>After sending a Retry Delay message the server SHOULD allow the
client five seconds to close the connection, and if the client has not
closed the connection after five seconds then the server SHOULD
forcibly abort the connection.</t>

<t>A Retry Delay message MUST NOT be initiated by a client.
If a server receives a Retry Delay message this is a fatal error
and the server MUST forcibly abort the connection immediately.</t>

<t><vspace blankLines='999' /></t>

<section anchor="outstanding-operations" title="Outstanding Operations">

<t>At the instant a server chooses to initiate a Retry Delay message
there may be DNS requests already in flight from client to server on this 
DSO Session, which will arrive at the server after its Retry Delay message 
has been sent.
The server MUST silently ignore such incoming requests, and MUST NOT generate
any response messages for them. When the Retry Delay message from the
server arrives at the client, the client will determine that any DNS requests
it previously sent on this DSO Session, that have not yet received a response, now 
will certainly not be receiving any response. Such requests should be considered
failed, and should be retried at a later time, as appropriate.</t>

<t>In the case where some, but not all, of the existing operations on a DSO Session 
have become invalid (perhaps because the server has been reconfigured and is no 
longer authoritative for some of the names),
but the server is terminating all affected DSO Sessions en masse
by sending them all a Retry Delay message,
the RECONNECT DELAY MAY be zero, indicating that the clients SHOULD immediately
attempt to re-establish operations.</t>

<t>It is likely that some of the attempts will be successful and some will not,
depending on the nature of the reconfiguration.</t>

<t>In the case where a server is terminating a large number of DSO Sessions at once
(e.g., if the system is restarting) and the server doesn’t want to be inundated 
with a flood of simultaneous retries, it SHOULD send different RECONNECT delay 
values to each client.
These adjustments MAY be selected randomly, pseudorandomly, or deterministically
(e.g., incrementing the time value by one tenth of a second for each successive
client, yielding a post-restart reconnection rate of ten clients per second).</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="client-reconnection" title="Client Reconnection">

<t>After a DSO Session is ended by the server
(either by sending the client a Retry Delay message,
or by forcibly aborting the underlying transport connection)
the client SHOULD try to reconnect,
to that service instance, or to another suitable service instance, if more than one is available.
If reconnecting to the same service instance, the client MUST respect the indicated delay,
if available, before attempting to reconnect.</t>

<t>If the service instance will only be out of service for a short maintenance period,
it should use a value a little longer that the expected maintenance window.
It should not default to a very large delay value, or clients may
not attempt to reconnect after it resumes service.</t>

<t>If a particular service instance does not want a client to reconnect ever
(perhaps the service instance is being de-commissioned),
it SHOULD set the retry delay to the maximum value
0xFFFFFFFF (2^32-1 milliseconds, approximately 49.7 days).
It is not possible to instruct a client to stay away for longer than 49.7 days.
If, after 49.7 days, the DNS or other configuration information
still indicates that this is the valid service instance for a
particular service, then clients MAY attempt to reconnect.
In reality, if a client is rebooted or otherwise lose state, it
may well attempt to reconnect before 49.7 days elapses, for as
long as the DNS or other configuration information continues to
indicate that this is the service instance the client should use.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
</section>
</section>
<section anchor="base-tlvs-for-dns-stateful-operations" title="Base TLVs for DNS Stateful Operations">

<t>This section describes the three base TLVs for DNS Stateful Operations:
Keepalive, Retry Delay, and Encryption Padding.</t>

<section anchor="keepalive" title="Keepalive TLV">

<t>The Keepalive TLV (DSO-TYPE=1) performs two functions:
to reset the keepalive timer for the DSO Session,
and to establish the values for the Session Timeouts.</t>

<t>The DSO-DATA for the the Keepalive TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 INACTIVITY TIMEOUT (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 KEEPALIVE INTERVAL (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='INACTIVITY TIMEOUT:'>
  The inactivity timeout for the current DSO Session, specified as
a 32-bit unsigned integer, in network (big endian) byte order, in units of milliseconds.
This is the timeout at which the client MUST begin closing an inactive DSO Session.
The inactivity timeout can be any value of the server’s choosing.
If the client does not gracefully close an inactive DSO
Session, then after twice this interval, or five seconds,
whichever is greater, the server will forcibly abort the connection.</t>
  <t hangText='KEEPALIVE INTERVAL:'>
  The keepalive interval for the current DSO Session, specified as
a 32-bit unsigned integer, in network (big endian) byte order, in units of milliseconds.
This is the interval at which a client MUST generate keepalive
traffic to maintain connection state.
The keepalive interval MUST NOT be less than ten seconds.
If the client does not generate the mandated keepalive traffic,
then after twice this interval the server will forcibly abort the connection.
Since the minimum allowed keepalive interval is ten seconds, the
minimum time at which a server will forcibly disconnect a client for
failing to generate the mandated keepalive traffic is twenty seconds.</t>
</list></t>

<t>The transmission or reception of DSO Keepalive messages
(i.e., messages where the Keepalive TLV is the first TLV)
reset only the keepalive timer, not the inactivity timer.
The reason for this is that periodic Keepalive messages are sent for the sole
purpose of keeping a DSO Session alive, when that DSO Session has current
or recent non-maintenance activity that warrants keeping that DSO Session alive.
Sending keepalive traffic itself is not considered a client activity;
it is considered a maintenance activity that is performed
in service of other client activities.
If keepalive traffic itself were to reset the inactivity timer,
then that would create a circular livelock where keepalive traffic
would be sent indefinitely to keep a DSO Session alive, where the only
activity on that DSO Session would be the keepalive traffic keeping
the DSO Session alive so that further keepalive traffic can be sent.
For a DSO Session to be considered active, it must be carrying
something more than just keepalive traffic.
This is why merely sending or receiving a Keepalive message
does not reset the inactivity timer.</t>

<t>When sent by a client, the Keepalive request message MUST
be sent as an acknowledged request, with a nonzero MESSAGE ID.
If a server receives a Keepalive DSO message with a zero MESSAGE ID then
this is a fatal error and the server MUST forcibly abort the connection immediately.
The Keepalive request message resets a DSO Session’s keepalive timer,
and at the same time communicates to the server the the client’s
requested Session Timeout values.
In a server response to a client-initiated Keepalive request message,
the Session Timeouts contain the server’s chosen values from
this point forward in the DSO Session, which the client MUST respect.
This is modeled after the DHCP protocol, where the client requests a certain
lease lifetime using DHCP option 51 <xref target="RFC2132"/>, but the server is the
ultimate authority for deciding what lease lifetime is actually granted.</t>

<t>When a client is sending its second and subsequent Keepalive DSO requests to
the server, the client SHOULD continue to request its preferred values each time.
This allows flexibility, so that if conditions change during the lifetime of a
DSO Session, the server can adapt its responses to better fit the client’s needs.</t>

<t>Once a DSO Session is in progress (<xref target="establishment"/>)
a Keepalive message MAY be initiated by a server.
When sent by a server, the Keepalive message MUST be
sent as an unacknowledged message, with the MESSAGE ID set to zero.
The client MUST NOT generate a response to a server-initiated DSO Keepalive message.
If a client receives a Keepalive request message with a nonzero MESSAGE ID then
this is a fatal error and the client MUST forcibly abort the connection immediately.
The Keepalive unacknowledged message from the server resets a DSO Session’s keepalive timer,
and at the same time unilaterally informs the client of the new
Session Timeout values to use from this point forward in this DSO Session.
No client DSO response message to this unilateral declaration is required or allowed.</t>

<t>The Keepalive TLV is not used as an Additional TLV.</t>

<t>In response messages the Keepalive TLV is used only as a Response Primary TLV,
replying to a Keepalive request message from the client.
A Keepalive TLV MUST NOT be added as to other responses a Response Additional TLV.
If the server wishes to update a client’s Session Timeout values
other than in response to a Keepalive request message from the client,
then it does so by sending an unacknowledged Keepalive message
of its own, as described above.</t>

<t>It is not required that the Keepalive TLV be used in every DSO Session.
While many DNS Stateful operations
will be used in conjunction with a long-lived session state,
not all DNS Stateful operations require long-lived session state,
and in some cases the default 15-second value for both the inactivity timeout
and keepalive interval may be perfectly appropriate.
However, note that for clients that implement only the DSO-TYPEs defined in this document,
a Keepalive request message is the only way for a client to initiate a DSO Session.</t>

<section anchor="client-handling-of-received-session-timeout-values" title="Client handling of received Session Timeout values">

<t>When a client receives a response to its client-initiated DSO Keepalive message,
or receives a server-initiated DSO Keepalive message, the client has then 
received Session Timeout values dictated by the server. The two timeout values 
contained in the DSO Keepalive TLV from the server may each be higher, lower, or 
the same as the respective Session Timeout values the client previously had for 
this DSO Session.</t>

<t>In the case of the keepalive timer, the handling of the received value is 
straightforward. The act of receiving the message containing the DSO Keepalive 
TLV itself resets the keepalive timer and updates the keepalive interval for the 
DSO Session. The new keepalive interval indicates the 
maximum time that may elapse before another message must be sent
or received on this DSO Session, if the DSO Session is to remain alive.</t>

<t><vspace blankLines='999' /></t>

<t>In the case of the inactivity timeout, the handling of the received
value is a little more subtle, though the meaning of the inactivity
timeout remains as specified — it still indicates the maximum
permissible time allowed without useful activity on a DSO Session.
The act of receiving the message containing the DSO Keepalive TLV does not
itself reset the inactivity timer. The time elapsed since the last useful
activity on this DSO Session is unaffected by exchange of DSO Keepalive messages.
The new inactivity timeout value in the DSO Keepalive TLV in the received message
does update the timeout associated with the running inactivity timer;
that becomes the new maximum permissible time without activity on a DSO Session.</t>

<t><list style="symbols">
  <t>If the current inactivity timer value is less than the
new inactivity timeout, then the DSO Session may remain open for now.
When the inactivity timer value reaches the new inactivity timeout,
the client MUST then begin closing the DSO Session, as described above.</t>
  <t>If the current inactivity timer value is equal to the
new inactivity timeout, then this DSO Session has been
inactive for exactly as long as the server will permit,
and now the client MUST immediately begin closing this DSO Session.</t>
  <t>If the current inactivity timer value is already greater
than the new inactivity timeout, then this DSO Session has
already been inactive for longer than the server permits,
and the client MUST immediately begin closing this DSO Session.</t>
  <t>If the current inactivity timer value is already more than twice the
new inactivity timeout, then the client is immediately considered delinquent
(this DSO Session is immediately eligible to be forcibly terminated by the server)
and the client MUST immediately begin closing this DSO Session.
However if a server abruptly reduces the inactivity timeout in this
way, then, to give the client time to close the connection gracefully
before the server resorts to forcibly aborting it, the server
SHOULD give the client an additional grace period of one quarter
of the new inactivity timeout, or five seconds, whichever is greater.</t>
</list></t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="relation-to-edns0-tcp-keepalive-option" title="Relation to EDNS(0) TCP Keepalive Option">

<t>The inactivity timeout value in the Keepalive TLV (DSO-TYPE=1) has similar
intent to the EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>.
A client/server pair that supports DSO MUST NOT use the
EDNS(0) TCP KeepAlive option within any message after a DSO 
Session has been established.
Once a DSO Session has been established, if either
client or server receives a DNS message over the DSO Session that contains an
EDNS(0) TCP Keepalive option, this is a fatal error and the receiver of the
EDNS(0) TCP Keepalive option MUST forcibly abort the connection immediately.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="delay" title="Retry Delay TLV">

<t>The Retry Delay TLV (DSO-TYPE=2) can be used as
a Primary TLV (unacknowledged) in a server-to-client message,
or as a Response Additional TLV in either direction.</t>

<t>The DSO-DATA for the the Retry Delay TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     RETRY DELAY (32 bits)                     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='RETRY DELAY:'>
  A time value, specified as
a 32-bit unsigned integer, in network (big endian) byte order, in units of milliseconds,
within which the initiator MUST NOT retry this operation, or retry connecting to this server.
Recommendations for the RETRY DELAY value are given in <xref target="retry"/>.</t>
</list></t>

<section anchor="retry-delay-tlv-used-as-a-primary-tlv" title="Retry Delay TLV used as a Primary TLV">

<t>When sent from server to client, the
Retry Delay TLV is used as the Primary TLV in an unacknowledged message.
It is used by a server
to instruct a client to close the DSO Session and underlying connection,
and not to reconnect for the indicated time interval.</t>

<t>In this case it applies to the DSO Session as a whole, and the client MUST begin closing the 
DSO Session, as described in <xref target="retry"/>. The RCODE in the message header 
SHOULD indicate the principal reason for the termination:</t>

<t><list style="symbols">
  <t>NOERROR indicates a routine shutdown or restart.</t>
  <t>FORMERR indicates that the client requests are too badly malformed for the session to continue.</t>
  <t>SERVFAIL indicates that the server is overloaded due to resource exhaustion and needs to shed load.</t>
  <t>REFUSED indicates that the server has been reconfigured,
and at this time it is now unable to perform one or more
of the long-lived client operations that were previously being performed on this DSO Session.</t>
  <t>NOTAUTH indicates that the server has been reconfigured
and at this time it is now unable to perform one or more
of the long-lived client operations that were previously being performed on this DSO Session
because it does not have authority over the names in question
(for example, a DNS Push Notification server could be reconfigured
such that is is no longer accepting DNS Push Notification
requests for one or more of the currently subscribed names).</t>
</list></t>

<t>This document specifies only these RCODE values for Retry Delay message.
Servers sending Retry Delay messages SHOULD use one of these values.
However, future circumstances may create situations where other RCODE values
are appropriate in Retry Delay messages, so clients MUST be prepared
to accept Retry Delay messages with any RCODE value.</t>

<t>In some cases, when a server sends a Retry Delay message to a client,
there may be more than one reason for the server wanting to end the session.
Possibly the configuration could have been changed such that some
long-lived client operations can no longer be continued due to policy (REFUSED), and other
long-lived client operations can no longer be performed due to
the server no longer being authoritative for those names (NOTAUTH).
In such cases the server MAY use any of the applicable RCODE values,
or RCODE=NOERROR (routine shutdown or restart).</t>

<t>Note that the selection of RCODE value in a Retry Delay message
is not critical, since the RCODE value is generally used only for
information purposes, such as writing to a log file for future
human analysis regarding the nature of the disconnection.
Generally clients do not modify their behavior depending on the RCODE value.
The RETRY DELAY in the message tells the client how long it should
wait before attempting a new connection to this service instance.</t>

<t>For clients that do in some way modify their behavior depending on the RCODE value,
they should treat unknown RCODE values the same as RCODE=NOERROR (routine shutdown or restart).</t>

<t>A Retry Delay message from server to client is an unacknowledged message;
the MESSAGE ID MUST be set to zero in the outgoing message
and the client MUST NOT send a response.</t>

<t>A client MUST NOT send a Retry Delay DSO request message or DSO unacknowledged message to a server.
If a server receives a DNS request message (i.e., QR=0) where the Primary TLV is the Retry Delay TLV,
this is a fatal error and the server MUST forcibly abort the connection immediately.</t>

</section>
<section anchor="retry-delay-tlv-used-as-a-response-additional-tlv" title="Retry Delay TLV used as a Response Additional TLV">

<t>In the case of a request that returns a nonzero RCODE value,
the responder MAY append a Retry Delay TLV to the response,
indicating the time interval during which the initiator
SHOULD NOT attempt this operation again.</t>

<t>The indicated time interval during which the initiator SHOULD NOT retry
applies only to the failed operation, not to the DSO Session as a whole.</t>

</section>
</section>
<section anchor="padding" title="Encryption Padding TLV">

<t>The Encryption Padding TLV (DSO-TYPE=3) can only be used as
an Additional or Response Additional TLV.
It is only applicable when the DSO Transport layer uses encryption
such as TLS.</t>

<t>The DSO-DATA for the the Padding TLV is optional and is a
variable length field containing non-specified values. A DSO-LENGTH
of 0 essentially provides for 4 bytes of padding (the minimum amount).</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   /                                                               /
   /                   VARIABLE NUMBER OF BYTES                    /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t>As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
the PADDING bytes SHOULD be set to 0x00.  Other values MAY be used,
for example, in cases where there is a concern that the padded
message could be subject to compression before encryption.
PADDING bytes of any value MUST be accepted in the messages received.</t>

<t>The Encryption Padding TLV may be included in either a DSO request, response, or both.
As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
if a request is received with an Encryption Padding TLV,
then the response MUST also include an Encryption Padding TLV.</t>

<t>The length of padding is intentionally not specified in this document and
is a function of current best practices with respect to the type and length
of data in the preceding TLVs <xref target="I-D.ietf-dprive-padding-policy"/>.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="summary-highlights" title="Summary Highlights">

<t>This section summarizes some noteworthy highlights about
various components of the DSO protocol.</t>

<section anchor="qr-bit-and-message-id" title="QR bit and MESSAGE ID">

<t>In DSO Request Messages the QR bit is 0 and the MESSAGE ID is nonzero.</t>

<t>In DSO Response Messages the QR bit is 1 and the MESSAGE ID is nonzero.</t>

<t>In DSO Unacknowledged Messages the QR bit is 0 and the MESSAGE ID is zero.</t>

<t>The table below illustrates which combinations are legal and how they are interpreted:</t>

<figure><artwork><![CDATA[
            +--------------------------+------------------------+
            |     MESSAGE ID zero      |   MESSAGE ID nonzero   |
   +--------+--------------------------+------------------------+
   |  QR=0  |  Unacknowledged Message  |    Request Message     |
   +--------+--------------------------+------------------------+
   |  QR=1  |  Invalid - Fatal Error   |    Response Message    |
   +--------+--------------------------+------------------------+
]]></artwork></figure>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="tlv-usage" title="TLV Usage">

<t>The table below indicates, for each of the three TLVs defined in this
document, whether they are valid in each of ten different contexts.</t>

<t>The first five contexts are requests or unacknowledged messages from client to server,
and the corresponding responses from server back to client:</t>

<t><list style="symbols">
  <t>C-P - Primary TLV, sent in DSO Request message, from client to server,
with nonzero MESSAGE ID indicating that this request MUST generate response message.</t>
  <t>C-U - Primary TLV, sent in DSO Unacknowledged message, from client to server,
with zero MESSAGE ID indicating that this request MUST NOT generate response message.</t>
  <t>C-A - Additional TLV, optionally added to request message or unacknowledged message from client to server.</t>
  <t>CRP - Response Primary TLV, included in response message sent back to the client
(in response to a client “C-P” request with nonzero MESSAGE ID indicating that a response is required)
where the DSO-TYPE of the Response TLV matches the DSO-TYPE of the Primary TLV in the request.</t>
  <t>CRA - Response Additional TLV, included in response message sent back to the client
(in response to a client “C-P” request with nonzero MESSAGE ID indicating that a response is required)
where the DSO-TYPE of the Response TLV does not match the DSO-TYPE of the Primary TLV in the request.</t>
</list></t>

<t>The second five contexts are their counterparts in the opposite direction:
requests or unacknowledged messages from server to client, and the corresponding responses from client back to server.</t>

<figure><artwork><![CDATA[
              +-------------------------+-------------------------+
              | C-P  C-U  C-A  CRP  CRA | S-P  S-U  S-A  SRP  SRA |
 +------------+-------------------------+-------------------------+
 | KeepAlive  |  X              X       |       X                 |
 +------------+-------------------------+-------------------------+
 | RetryDelay |                      X  |       X                 |
 +------------+-------------------------+-------------------------+
 | Padding    |            X         X  |            X         X  |
 +------------+-------------------------+-------------------------+
]]></artwork></figure>

<t>Note that some of the columns in this table are currently empty.
The table provides a template for future TLV definitions to follow.
It is recommended that definitions of future TLVs include a
similar table summarizing the contexts where the new TLV is valid.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="dso-opcode-registration" title="DSO OPCODE Registration">

<t>The IANA is requested to record the value ([TBA1] tentatively) 6 for the DSO OPCODE
in the DNS OPCODE Registry. DSO stands for DNS Stateful Operations.</t>

</section>
<section anchor="dso-rcode-registration" title="DSO RCODE Registration">

<t>The IANA is requested to record the value ([TBA2] tentatively) 11 for the
DSOTYPENI error code in the DNS RCODE Registry.
The DSOTYPENI error code (“DSO-TYPE Not Implemented”) indicates that
the receiver does implement DNS Stateful Operations, but does not implement
the specific DSO-TYPE of the primary TLV in the DSO request message.</t>

</section>
<section anchor="dso-type-code-registry" title="DSO Type Code Registry">

<t>The IANA is requested to create the 16-bit DSO Type Code Registry,
with initial (hexadecimal) values as shown below:</t>

<texttable>
      <ttcol align='left'>Type</ttcol>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Status</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>0000</c>
      <c>Reserved</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0001</c>
      <c>KeepAlive</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0002</c>
      <c>RetryDelay</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0003</c>
      <c>EncryptionPadding</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0004-003F</c>
      <c>Unassigned, reserved for    DSO session-management TLVs</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0040-F7FF</c>
      <c>Unassigned</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>F800-FBFF</c>
      <c>Reserved for experimental/local use</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>FC00-FFFF</c>
      <c>Reserved for future expansion</c>
      <c>&#160;</c>
      <c>&#160;</c>
</texttable>

<t>DSO Type Code zero is reserved and is not currently intended for allocation.</t>

<t>Registrations of new DSO Type Codes in
the “Reserved for DSO session-management” range 0004-003F
and the “Reserved for future expansion” range FC00-FFFF
require publication of an IETF Standards Action document <xref target="RFC8126"/>.</t>

<t>Requests to register additional new DSO Type Codes
in the “Unassigned” range 0040-F7FF
are to be recorded by IANA after Expert Review <xref target="RFC8126"/>.
At the time of publication of this document, the Designated Expert
for the newly created DSO Type Code registry is [<spanx style="strong">TBD</spanx>].</t>

<t>DSO Type Codes in the “experimental/local” range F800-FBFF
may be used as Experimental Use or Private Use values <xref target="RFC8126"/>
and may be used freely for development purposes,
or for other purposes within a single site.
No attempt is made to prevent multiple sites from using
the same value in different (and incompatible) ways.
There is no need for IANA to review such assignments
(since IANA does not record them) and assignments
are not generally useful for broad interoperability.
It is the responsibility of the sites making use of
“experimental/local” values to ensure that no
conflicts occur within the intended scope of use.</t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>If this mechanism is to be used with DNS over TLS, then these messages
are subject to the same constraints as any other DNS-over-TLS messages
and MUST NOT be sent in the clear before the TLS session is established.</t>

<t>The data field of the “Encryption Padding” TLV could be used as a covert channel.</t>

<t>When designing new DSO TLVs, the potential for data in the
TLV to be used as a tracking identifier should be taken
into consideration, and should be avoided when not required.</t>

<t>When used without TLS or similar cryptographic protection, a malicious
entity maybe able to inject a malicious Retry Delay Unacknowledged Message
into the data stream, specifying an unreasonably large RETRY DELAY, causing
a denial-of-service attack against the client.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to
Stephane Bortzmeyer,
Tim Chown,
Ralph Droms,
Paul Hoffman,
Jan Komissar,
Edward Lewis,
Allison Mankin,
Rui Paulo,
David Schinazi,
Manju Shankar Rao,
and Bernie Volz
for their helpful contributions to this document.</t>

<t><vspace blankLines='999' /></t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC1035;
&RFC7766;
&RFC6891;
&RFC7828;
&RFC2119;
&RFC8174;
&RFC1034;
&RFC2136;
&RFC7830;
&RFC1918;
&RFC5382;
&RFC2132;
&RFC8126;


    </references>

    <references title='Informative References'>

<reference anchor="NagleDA" target="http://www.stuartcheshire.org/papers/nagledelayedack/">
  <front>
    <title>TCP Performance problems caused by interaction between Nagle's Algorithm and Delayed ACK</title>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization></organization>
    </author>
    <date year="2005" month="May" day="20"/>
  </front>
</reference>
&RFC7858;
&RFC2782;
&I-D.ietf-dnssd-push;
&I-D.ietf-dnssd-mdns-relay;
&RFC6763;
&RFC0768;
&RFC6335;
&RFC7413;
&I-D.ietf-tls-tls13;
&RFC6762;
&RFC1122;
&I-D.ietf-dprive-padding-policy;


    </references>



  </back>

<!-- ##markdown-source:
H4sIALh5GVsAA+2963YbR5Yu+D+eIof6YVINwKRky7Zq9ZqmJMpml25FUnZV
9+nplQASRFpAJjozIQqWtda8wrzBeZbzKPMks68RO/ICUbLLU9NrVK02RSQi
47Jj3/e3x+Oxa/JmlT1Mnry4TC6btMkW21XycpNVaZOXRe3m5axI1/DAvEoX
zTjPmsV4XtTlZlxndQ2PjOv8ukhX45NjN4evP0zuHZ98O34w/sblm+ph0lTb
url3fPzd8T2XVln6MDkvmqwqssbdXNNrX75KfiqrN3lxnXxflduNe3MTHho/
wde6Wdo8TOpm7rYbfEn9MDk5vv/1KPnmmwcPnJuVc/j2w2QLc/vWbfKHLknG
SVPO6L/1bl1li5p/LquG/uHSbbMsK3oS/iZJXsCgF5PkUbZa5TX9itd9ke7s
L8vqOswuudzVTbauk8ewVTB0vl2P4MPZhB5Np9MqewtPXz6mf9fw6gzW8d3X
x8njZVrBGLDl+Dv6eJY3O3hdNr8py3nyGP7Fvy7nMIvHp8l3Xx0/uC+/2hZN
BQ+/vjylX2yWZQEP/dNJcvjg6+Oj5Kt798cnsOn0YbZO89XDpEp3/5LXswks
IF705QRmk9XLvMrMsi+bLcww/oTWfrrZrLKwSF3UyyKTj16l1Zvkp3RnFvV4
CwTV5EXZWtHXxydffXRFXx1/e5R8990DoLCTaEUzmdu/pPjeyaxcxwv710ny
JJ8BYdVlYVb2r+WyaH1AC7uE+c23RTjcq2y2LMpVeZ1ndXSg8qRdP/08Tp6n
1+k8XWVF8jiDBWXy65fvFmU1Ty5neVbMeIfM7vCnZmte/vWr5KvvT1s7U+RN
Nk/+DJQ+p5X6ffg5nf9LzVPqbsJl/yZcplX632oTaljQ8C5cTZJn2TragSsY
J/yOFv8IGNSiLBu6ztsVEOx1ROOPgCkCs5yWlSXkH6+S46/vH5/0E7JMbw0c
pCz+ZbG93vZQKkzv1bYGxlbldoblOv41TfJ1kS4W+SqHX8+j2R0cWDYC+59f
L800XzxO7n3z4Pjbj963706+O0q+ffDN+OT+/ei+bWQu/zJNi+ufaRUuL+DY
1iAr3mZ4/C/S61X25JQpoUmra5zYsmk2D7/88ubmZlITV9GLi7zoy00KvKH+
ssBvzrNVusvm6ezNlzwCy6arx6+SV1lFb0LS2VTldIVsd5ZuazjG6Q62EWaW
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
+s/W8btIMWu3sb790kR1VoR24KM2Oa3DJ7r6m7Y8vylaiZiUaujj1TH4nkaB
4k2dZnyKCEVKcZ6ILH+itpO+GUcPJqzTmLeO0mmXGQEMaLYq+/GdJDsMAs7K
7PeMQCkLUlThuwD48NXJ12MRoG107V7fFo3W4wWQtCC0sIBJrXZxOodPtix8
UZIt9mYZqampwXJWL3kt7cECZ/Bdytw+ohLTnPHbJUhkw0cm4akLJvBYc8+K
ObkhykXInxkg/ZaeYkSGvQZIlx31slcCjVwZqfe3k1uRVrNMJRvOfWTyQyUJ
5NPr6WLhRMHNIn01vjltqYNEQmrTVOtMBW6B3JS+xYUGnUS7xdGG5EhYqEmJ
wi5PCx6wLUTayFG9/hn8pT12novsnkczdDUYmpjsJlKLd4p62SilqHqn9Bi3
tWptmCOJwb4FEc99gR+DIt76vONutYokzw6L6PpceCa2CV+LGr1IDcZOwoM+
ii95B7o0NdRr4y5SHJBualreQSoRBCMG6vYdVCj+13NkfdC7+07N+VPzkf81
JwNOm1Xme6XwWaWFGSG8yYV2AdKErza+6/F4TKWZnVixD4w7wgXWgDY5RsWp
qoVsIB8oH8q4atJuvOHzKQwJTP0azlJav3uDbz5OlI9+jrXR4hdeYVk2z7fl
WoqPmstzfGobsBYP/zPoeeVlIqkOg4kOcRz5wFNf5M4RFSYKALW6NtGXt4UF
jfYb8icu/NcaQVFx4zZC9ng9Ys7webq7iXr+JTTSQbnvQU9tuKXX0C3o5thz
WS7dLA/9UmBGi09fHXgtwwmHtfaCP7dMF5pBFwc5uv+9Gtkn7AXIed++92Nb
0SJITet0Ppy24Eot1lpiDHwbr2BYb1anCkF+sOv+CHDiZ5+7JldLqC6An37y
up0ORWmt0frbSPqycF6zKWj8IxccHLwBOfKjZB9cRFGFQ3AuB3wpbAvZ5Vb2
a/DoteYfTbNglJv64UhZOvrN+ySKMqf7aNq4Qp0wZlTdd2ENHqO7oS5CS+xT
haGz/G3k72Oh3l97YcLOTuR87DMoKy7I6iY85o11VTmF6m69PC1s/256m2l2
gLmJcLGxLZMzLTb7zvuWOKE+PZS6aGhB4RnYUofHR9QGOoiPl9zeZiimHwme
Pdk8yF/qfJ2v0oqQqdjSwC/te634U7/59t63VIgkG/al3sM0lyRFQSxgsvHm
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
tZp0kRhT0wr0SHKBuP8HdeUiKf52AQA=

-->

</rfc>

