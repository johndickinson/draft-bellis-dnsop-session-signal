<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.7 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC7766 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7766.xml">
<!ENTITY RFC6891 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6891.xml">
<!ENTITY RFC7828 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7828.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2136 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2136.xml">
<!ENTITY RFC7830 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7830.xml">
<!ENTITY RFC1034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC1918 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1918.xml">
<!ENTITY RFC5382 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5382.xml">
<!ENTITY RFC2132 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2132.xml">
<!ENTITY RFC5226 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5226.xml">
<!ENTITY RFC7858 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7858.xml">
<!ENTITY I-D.ietf-dnssd-push SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dnssd-push.xml">
<!ENTITY I-D.sctl-dnssd-mdns-relay SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.sctl-dnssd-mdns-relay.xml">
<!ENTITY RFC6763 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6763.xml">
<!ENTITY RFC0768 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.0768.xml">
<!ENTITY RFC7413 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7413.xml">
<!ENTITY I-D.ietf-tls-tls13 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-tls-tls13.xml">
<!ENTITY RFC1122 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1122.xml">
<!ENTITY I-D.ietf-dprive-padding-policy SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dprive-padding-policy.xml">
]>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-dnsop-session-signal-06" category="std" updates="RFC 7766, RFC 1035">

  <front>
    <title>DNS Stateful Operations</title>

    <author initials="R." surname="Bellis" fullname="Ray Bellis">
      <organization abbrev="ISC">Internet Systems Consortium, Inc.</organization>
      <address>
        <postal>
          <street>950 Charter Street</street>
          <city>Redwood City</city>
          <code>CA 94063</code>
          <country>USA</country>
        </postal>
        <phone>+1 650 423 1200</phone>
        <email>ray@isc.org</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>1 Infinite Loop</street>
          <city>Cupertino</city>
          <code>CA 95014</code>
          <country>USA</country>
        </postal>
        <phone>+1 408 974 3207</phone>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="J." surname="Dickinson" fullname="John Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>jad@sinodun.com</email>
      </address>
    </author>
    <author initials="S." surname="Dickinson" fullname="Sara Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>sara@sinodun.com</email>
      </address>
    </author>
    <author initials="A." surname="Mankin" fullname="Allison Mankin">
      <organization>Salesforce</organization>
      <address>
        <email>allison.mankin@gmail.com</email>
      </address>
    </author>
    <author initials="T." surname="Pusateri" fullname="Tom Pusateri">
      <organization>Unaffiliated</organization>
      <address>
        <postal>
          <street></street>
          <city>Raleigh</city>
          <code>NC 27608</code>
          <country>USA</country>
        </postal>
        <phone>+1 919 867 1330</phone>
        <email>pusateri@bangj.com</email>
      </address>
    </author>

    <date year="2018" month="January" day="26"/>

    <area>Internet</area>
    <workgroup>DNSOP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document defines a new DNS OPCODE for DNS Stateful Operations (DSO).
DSO messages communicate operations within persistent
stateful sessions, using type-length-value (TLV) syntax.
Three TLVs are defined that manage session timeouts,
termination, and encryption padding, and 
a framework is defined for extensions to enable new stateful operations.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The use of transports for DNS other than UDP is being increasingly specified,
for example, DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> and DNS over TLS <xref target="RFC7858"/>.
Such transports can offer persistent, long-lived sessions and therefore when
using them for transporting DNS messages it is of benefit to have a mechanism
that can establish parameters associated with those sessions, such as timeouts.
In such situations it is also advantageous to support server-initiated messages.</t>

<t>The existing EDNS(0) Extension Mechanism for DNS <xref target="RFC6891"/> is explicitly
defined to only have “per-message” semantics. While EDNS(0) has been used to
signal at least one session-related parameter (the EDNS(0) TCP Keepalive option
<xref target="RFC7828"/>) the result is less than optimal due to the restrictions
imposed by the EDNS(0) semantics and the lack of server-initiated signalling. 
For example, a server cannot arbitrarily 
instruct a client to close a connection because the server can only send EDNS(0) options 
in responses to queries that contained EDNS(0) options.</t>

<t>This document defines a new DNS OPCODE, DSO (tentatively 6), for DNS Stateful Operations.
DSO messages are used to communicate operations within persistent
stateful sessions, expressed using type-length-value (TLV) syntax.
This document defines an initial set of three TLVs,
used to manage session timeouts, termination, and encryption padding.</t>

<t>All three of the TLVs defined here are mandatory for all implementations of DSO.
Further TLVs may be defined in additional specifications.</t>

<t>The format for DSO messages
(<xref target="format"/>) differs somewhat from the traditional DNS message
format used for standard queries and responses.
The standard twelve-byte header is used, but the four count fields
(QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) are set to zero and accordingly their
corresponding sections are not present.
The actual data pertaining to DNS Stateful Operations
(expressed in TLV syntax) is appended to the end of the DNS message header.
When displayed using packet analyzer tools that have not been
updated to recognize the DSO format, this
will result in the DSO data being displayed
as unknown additional data after the end of the DNS message.
It is likely that future updates to these tools will add the ability
to recognize, decode, and display the DSO data.</t>

<t>This new format has distinct advantages over an RR-based format because it
is more explicit and more compact. Each TLV definition is specific
to its use case, and as a result contains no redundant or overloaded fields.
Importantly, it completely avoids conflating DNS Stateful Operations in any way 
with normal DNS operations or with existing EDNS(0)-based functionality.
A goal of this approach is to avoid the operational issues that have
befallen EDNS(0), particularly relating to middlebox behaviour.</t>

<t>With EDNS(0), multiple options may be packed into a single OPT pseudo-RR,
and there is no generalized mechanism for a client to be able to tell
whether a server has processed or otherwise acted upon each individual
option within the combined OPT pseudo-RR.
The specifications for each individual option need to define how each
different option is to be acknowledged, if necessary.</t>

<t>In contrast to EDNS(0), with DSO there is no
compelling motivation to pack multiple operations into a single
message for efficiency reasons, because DSO
always operates using a connection-oriented transport protocol.
Each DSO operation is communicated in its own separate
DNS message, and the transport protocol can take care of packing
several DNS messages into a single IP packet if appropriate.
For example, TCP can pack multiple small DNS messages into a single TCP segment.
This simplification allows for clearer semantics.
Each DSO request message communicates just one primary operation,
and the RCODE in the corresponding response message indicates the
success or failure of that operation.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="terminology" title="Terminology">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and
“OPTIONAL” in this document are to be interpreted as described in
“Key words for use in RFCs to Indicate Requirement Levels” <xref target="RFC2119"/>.</t>

<t>“DSO” is used to mean DNS Stateful Operation.</t>

<t>The term “connection” means a bidirectional byte (or message) stream,
where the bytes (or messages) are delivered reliably and in-order,
such as provided by using
DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> or DNS over TLS <xref target="RFC7858"/>.</t>

<t>The unqualified term “session” in the context of this document means the exchange of
DNS messages over a connection where:</t>

<t><list style="symbols">
  <t>The connection between client and server is persistent and relatively
long-lived (i.e., minutes or hours, rather than seconds).</t>
  <t>Either end of the connection may initiate messages to the other.</t>
</list></t>

<t>A “DSO Session” is established between two endpoints that acknowledge
persistent DNS state via the exchange of DSO messages over the connection.
This is distinct from a DNS-over-TCP session as described in
the previous specification for DNS over TCP <xref target="RFC7766"/>.</t>

<t>A “DSO Session” is terminated when the underlying connection is closed.
The underlying connection can be closed in two ways:</t>

<t>Where this specification says, “close gracefully,”
that means sending a TLS close_notify followed by a TCP FIN,
or the equivalents for other protocols.
Where this specification requires a connection to be closed gracefully,
the requirement to initiate that graceful close is placed on the client,
to place the burden of TCP’s TIME-WAIT state on the client rather than the server.</t>

<t>Where this specification says, “forcibly abort,”
that means sending a TCP RST,
or the equivalent for other protocols.
In the BSD Sockets API this is achieved by setting the
SO_LINGER option to zero before closing the socket.</t>

<t>The term “server” means the software with a listening socket, awaiting
incoming connection requests.</t>

<t>The term “client” means the software which initiates a connection
to the server’s listening socket.</t>

<t>The terms “initiator” and “responder” correspond respectively to the
initial sender and subsequent receiver of a DSO request message,
regardless of which was the “client” and “server” in the usual DNS sense.</t>

<t>The term “sender” may apply to
either an initiator (when sending a DSO request message)
or a responder (when sending a DSO response message).</t>

<t>Likewise, the term “receiver” may apply to
either a responder (when receiving a DSO request message)
or an initiator (when receiving a DSO response message).</t>

<t>The term “long-lived operations” refers to operations
such as Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/>,
Discovery Relay interface subscriptions <xref target="I-D.sctl-dnssd-mdns-relay"/>,
and other future long-lived DNS operations that choose to use
DSO as their basis, that establish state that persists beyond
the lifetime of a traditional brief request/response transaction.
This document, the base specification for DNS Stateful Operations,
defines a framework for supporting long-lived operations,
but does not itself define any long-lived operations.
Nonetheless, to appreciate the design rationale behind
DNS Stateful Operations, it is helpful to understand
the kind of long-lived operations that it is intended to support.</t>

<t>DNS Stateful Operations uses “DSO request messages” and “DSO response messages”.
DSO request messages are further subdivided into two variants,
“acknowledged request messages”
(which generate a corresponding response message) and
“unacknowledged request messages”
(which do not generate any corresponding response message).</t>

<t>The content of DSO messages is expressed using type-length-value (TLV) syntax.</t>

<t>In a DSO request message the first TLV is referred to as the “Primary TLV”
and determines the nature of the operation being performed,
including whether it is an acknowledged or unacknowledged operation;
any other TLVs in a DSO request message are referred to as “Additional TLVs”
and serve additional non-primary purposes, which may be related to
the primary purpose, or not, as in the case of the encryption padding TLV.</t>

<t>A DSO response message may contain no TLVs, or it may contain one
or more TLVs as appropriate to the information being communicated.
In the context of DSO response messages,
one or more TLVs with the same DSO-TYPE as the Primary TLV in the
corresponding DSO request message are referred to as “Response Primary TLVs”.
Any other TLVs with different DSO-TYPEs are referred to as “Response Additional TLVs”.
The Response Primary TLV(s), if present, MUST occur first in the response message,
before any Response Additional TLVs.</t>

<t>Two timers (elapsed time since an event) are defined in this document:</t>

<t><list style="symbols">
  <t>an inactivity timer (see <xref target="inactivetimer"/> and <xref target="keepalive"/>)</t>
  <t>a keepalive timer (see <xref target="keepalivetimer"/> and <xref target="keepalive"/>)</t>
</list></t>

<t>The timeouts associated with these timers are called
the inactivity timeout and 
the keepalive interval, respectively. 
The term “Session Timeouts” is used to refer to this pair of timeout values.</t>

<t>Resetting a timer means resetting the timer value to zero and starting the timer again.
Clearing a timer means resetting the timer value to zero but NOT starting the timer again.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="discussion" title="Discussion">

<t>There are several use cases for DNS Stateful operations that can 
be described here.</t>

<t>Firstly, establishing session parameters such as server-defined timeouts is of 
great use in the 
general management of persistent connections. For example, using DSO sessions 
for stub-to-recursive DNS-over-TLS <xref target="RFC7858"/> is more flexible for both the 
client and the server than attempting to manage sessions using just the EDNS(0)
TCP Keepalive option <xref target="RFC7828"/>.
The simple set of TLVs defined in this document is
sufficient to greatly enhance connection management for this use case.</t>

<t>Secondly, DNS-SD <xref target="RFC6763"/> has evolved into a naturally session-based mechanism where,
for example, long-lived subscriptions lend themselves to ‘push’ mechanisms as 
opposed to polling. Long-lived stateful connections and server-initiated 
messages align with this use case <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>A general use case is that DNS traffic is often bursty but session establishment 
can be expensive. One challenge with long-lived connections is to maintain 
sufficient traffic to maintain NAT and firewall state.
To mitigate this issue this document introduces a
new concept for the DNS, that is DSO “Keepalive traffic”.
This traffic carries no DNS data and is not considered ‘activity’
in the classic DNS sense, but serves to maintain state in middleboxes,
and to assure client and server that they still have connectivity to each other.</t>

<t>There are a myriad of other potential use cases for DSO given the versatility 
and extensibility of this specification.</t>

<t><xref target="details"/> of this document describes the protocol details of DNS Stateful Operations
including definitions of three TLVs for session management and encryption padding.
<xref target="lifecycle"/> presents a detailed discussion of the DSO Session lifecycle
including an in-depth discussion of keepalive traffic and session termination.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="details" title="Protocol Details">

<section anchor="establishment" title="DSO Session Establishment">

<t>DSO messages MUST be carried in only protocols and in
environments where a session may be established according to the definition
given above in the Terminology section (<xref target="terminology"/>).
Standard DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/>, and DNS over TLS <xref target="RFC7858"/>
are suitable protocols.</t>

<t>DNS over plain UDP <xref target="RFC0768"/> is not appropriate since it fails on the requirement for
in-order message delivery, and, in the presence of NAT gateways and firewalls
with short UDP timeouts, it fails to provide a persistent bi-directional
communication channel unless an excessive amount of keepalive traffic is used.</t>

<t>In some environments it may be known in advance by external means
that both client and server support DSO, and in these cases either
client or server may initiate DSO messages at any time.</t>

<t>However, in the typical case a server will not know in advance whether a
client supports DSO, so in general, unless it is known in advance by other means
that a client does support DSO, a server MUST NOT initiate DSO request messages
until a DSO Session has been mutually established, as described below.
Similarly, unless it is known in advance by other means that a server
does support DSO, a client MUST NOT initiate non-response-requiring
DSO request messages until after a DSO Session has been mutually established.</t>

<t>Whether or not a given DSO request message elicits a response is
determined by whether or not the first DSO TLV (<xref target="tlvsyntax"/>)
in the message (the Primary TLV) is one that is specified to generate a response.
Whether a Primary TLV will be specified to elicit a response will depend
on the intended use pattern for that particular TLV.</t>

<t>A DSO Session is established over a connection by the client
sending a DSO request message of a kind that requires a response,
such as the DSO Keepalive TLV (<xref target="keepalive"/>),
and receiving a response, with matching MESSAGE ID, and RCODE
set to NOERROR (0), indicating that the DSO request was successful.</t>

<t>If the RCODE is set to DSONOTIMP (tentatively 11) this indicates
that the server does support DSO, but does not support the particular
operation the client requested.
A server MUST NOT return DSONOTIMP for the DSO Keepalive TLV,
but in the future if a client attempts to establish a DSO Session
using a newly-defined response-requiring DSO TLV that the server
does not understand, that would result in a DSONOTIMP response.
If the server returns DSONOTIMP then a DSO Session is not
considered established, but the client is permitted to continue
sending DNS messages on the connection,
including other response-requiring DSO messages such as the DSO Keepalive,
which may result in a successful NOERROR response,
yielding the establishment of a DSO Session.</t>

<t>If the RCODE is set to any value other than NOERROR (0) or DSONOTIMP
(tentatively 11), then the client should assume that the server does
not support DSO. In this case the client is permitted to continue
sending DNS messages on that connection, but the client SHOULD NOT
issue further DSO messages on that connection.</t>

<t>When the server receives a response-requiring DSO request message
from a client, and transmits a successful NOERROR response to that
request, the server considers the DSO Session established.</t>

<t>When the client receives the server’s NOERROR response to its
DSO request message, the client considers the DSO Session established.</t>

<t>Once a DSO Session has been established,
either end may unilaterally send DSO messages at any time,
and therefore either client or server may be the initiator of a message.</t>

<t>Once a DSO Session has been established,
clients and servers should behave as described in this specification with
regard to inactivity timeouts and session termination, not as previously
prescribed in the earlier specification for DNS over TCP <xref target="RFC7766"/>.</t>

<t>Note that for clients that implement only the TLVs defined in this base specification,
sending a DSO Keepalive TLV is the only response-requiring
DSO request message they have available to initiate a DSO Session.
Even for clients that do implement other DSO TLVs, for simplicity
they MAY elect to always send an initial DSO Keepalive
request message as their way of initiating a DSO Session.</t>

<t><vspace blankLines='999' /></t>

<section anchor="sharing" title="Connection Sharing">

<t>As previously specified for DNS over TCP <xref target="RFC7766"/>,
to mitigate the risk of unintentional server overload, DNS clients
MUST take care to minimize the number of concurrent TCP connections
made to any individual server.  It is RECOMMENDED that for any given
client/server interaction there SHOULD be no more than one connection
for regular queries, one for zone transfers, and one for each
protocol that is being used on top of TCP (for example, if the
resolver was using TLS).
However, it is noted that certain primary/secondary configurations
with many busy zones might need to use more than one TCP
connection for zone transfers for operational reasons
(for example, to support concurrent transfers of multiple zones).</t>

<t>A single server may support multiple services, including DNS Updates 
<xref target="RFC2136"/>, DNS Push Notifications <xref target="I-D.ietf-dnssd-push"/>,
and other services, for one or more DNS zones.
When a client discovers that the target server for several different operations
is the same target hostname and port, the client SHOULD use a single
shared DSO Session for all those operations.
A client SHOULD NOT open multiple connections to the same target host and port
just because the names being operated on are different or
happen to fall within different zones.
This requirement is to reduce unnecessary connection load on the DNS server.</t>

<t>However, server implementers and operators should be aware that connection
sharing may not be possible in all cases.
A single host device may be home to multiple independent client software
instances that don’t coordinate with each other.
Similarly, multiple independent client devices behind the same NAT gateway
will also typically appear to the DNS server as different source ports on
the same client IP address.
Because of these constraints, a DNS server MUST be prepared to accept
multiple connections from different source ports on the same client IP address.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="zero-round-trip-operation" title="Zero Round-Trip Operation">

<t>There is increased awareness today of the performance benefits
of eliminating round trips in session establishment.
Technologies like TCP Fast Open <xref target="RFC7413"/>
and TLS 1.3 <xref target="I-D.ietf-tls-tls13"/>
provide mechanisms to reduce or eliminate
round trips in session establishment.</t>

<t>Similarly, DSO supports zero round-trip operation.</t>

<t>Having initiated a connection to a server, possibly using
zero round-trip TCP Fast Open and/or
zero round-trip TLS 1.3, a client MAY send multiple
response-requiring DSO request messages to the server in succession
without having to wait for a response to the first request message
to confirm successful establishment of a DSO session.</t>

<t>However, a client MUST NOT send non-response-requiring DSO request
messages until after a DSO Session has been mutually established.</t>

<t>Similarly, a server MUST NOT send DSO request messages until it
has received a response-requiring DSO request message from a
client and transmitted a successful NOERROR response for that request.</t>

</section>
<section anchor="middlebox-considerations" title="Middlebox Considerations">

<t>Where an application-layer middlebox (e.g., a DNS proxy, forwarder, or
session multiplexer) is in the path, the middlebox MUST NOT blindly
forward DSO messages in either direction, and MUST treat the inbound
and outbound connections as separate sessions.  This does not preclude
the use of DSO messages in the presence of an IP-layer middlebox, such
as a NAT that rewrites IP-layer and/or transport-layer headers but
otherwise preserves the effect of a single session between the client
and the server.</t>

<t>To illustrate the above, consider a network where a middlebox
terminates one or more TCP connections from clients and multiplexes the
queries therein over a single TCP connection to an upstream server.
The DSO messages and any associated state are specific to the individual
TCP connections.  A DSO-aware middlebox MAY in some circumstances be
able to retain associated state and pass it between the client and
server (or vice versa) but this would be highly TLV-specific.  For
example, the middlebox may be able to maintain a list of which clients
have made Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/> and
make its own subscription(s) on their behalf, relaying any subsequent
notifications to the client (or clients) that have subscribed to that
particular notification.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="format" title="Message Format">

<t>A DSO message begins with
the standard twelve-byte DNS message header <xref target="RFC1035"/>
with the OPCODE field set to the DSO OPCODE (tentatively 6).
However, unlike standard DNS messages, the question section, answer section,
authority records section and additional records sections are not present.
The corresponding count fields (QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) MUST be
set to zero on transmission.</t>

<t>If a DSO message is received where any of the count fields are
not zero, then a FORMERR MUST be returned,
unless a future IETF Standard specifies otherwise.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                          MESSAGE ID                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |QR |    OPCODE     |            Z              |     RCODE     |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     QDCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ANCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     NSCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ARCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                           DSO Data                            /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><vspace blankLines='999' /></t>

<section anchor="header" title="DNS Header Fields in DSO Messages">

<t>In an unacknowledged request message the MESSAGE ID field MUST be set to zero.
In an acknowledged request message the MESSAGE ID field MUST
be set to a unique nonzero value, that the initiator is not
currently using for any other active operation on this connection.
For the purposes here, a MESSAGE ID is in use in this DSO Session if the
initiator has used it in a request for which it is still awaiting a response,
or if the client has used it to setup a long-lived operation that has not yet been cancelled.
For example, a long-lived operation could be
a Push Notification subscription <xref target="I-D.ietf-dnssd-push"/> or
a Discovery Relay interface subscription <xref target="I-D.sctl-dnssd-mdns-relay"/>.</t>

<t>Whether a message is acknowledged or unacknowledged is
determined only by the specification for the Primary TLV.
An acknowledgment cannot be requested by including a nonzero message ID
in a message the primary TLV of which is specified to be unacknowledged,
nor can an acknowledgment be prevented by sending a message ID of zero
in a message with a primary TLV that is specified to be acknowledged.
A responder that receives either such malformed message MUST treat it
as a programming error and forcibly abort the connection immediately.</t>

<t>In a request message the DNS Header QR bit MUST be zero (QR=0).<vspace />
If the QR bit is not zero the message is not a request message.</t>

<t>In a response message the DNS Header QR bit MUST be one (QR=1).<vspace />
If the QR bit is not one the message is not a response message.</t>

<t>In a response message (QR=1) the MESSAGE ID field MUST contain a copy of the value of
the MESSAGE ID field in the acknowledged request message being responded to.
In a response message (QR=1) the MESSAGE ID field MUST NOT be zero.
If a response message (QR=1) is received where the MESSAGE ID is zero
this is a fatal error and the receiver MUST forcibly abort the connection immediately.</t>

<t>The DNS Header OPCODE field holds the DSO OPCODE value (tentatively 6).</t>

<t>The Z bits are currently unused in DSO messages,
and in both DSO requests and DSO responses the
Z bits MUST be set to zero (0) on transmission and MUST be silently ignored
on reception, unless a future IETF Standard specifies otherwise.</t>

<t><vspace blankLines='999' /></t>

<t>In a request message (QR=0) the RCODE is generally set to zero on transmission,
and silently ignored on reception, except where specified otherwise
(for example, the Retry Delay request message (<xref target="retry"/>),
where the RCODE indicates the reason for termination).</t>

<t>The RCODE value in a response message (QR=1) may be one of the following values:</t>

<texttable>
      <ttcol align='right'>Code</ttcol>
      <ttcol align='left'>Mnemonic</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>0</c>
      <c>NOERROR</c>
      <c>Operation processed successfully</c>
      <c>1</c>
      <c>FORMERR</c>
      <c>Format error</c>
      <c>2</c>
      <c>SERVFAIL</c>
      <c>Server failed to process request due to a problem with the server</c>
      <c>3</c>
      <c>NXDOMAIN</c>
      <c>Name Error — Named entity does not exist (TLV-dependent)</c>
      <c>4</c>
      <c>NOTIMP</c>
      <c>DSO not supported</c>
      <c>5</c>
      <c>REFUSED</c>
      <c>Operation declined for policy reasons</c>
      <c>9</c>
      <c>NOTAUTH</c>
      <c>Not Authoritative (TLV-dependent)</c>
      <c>11</c>
      <c>DSONOTIMP</c>
      <c>DSO type code not supported</c>
</texttable>

<t>Use of the above RCODEs is likely to be common in DSO but 
does not preclude the definition and use of other codes in future documents that 
make use of DSO.</t>

<t>If a document defining a new DSO TLV makes use of NXDOMAIN (Name Error)
or NOTAUTH (Not Authoritative) then that document MUST specify the specific
interpretation of these RCODE values in the context of that new DSO TLV.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="dsodata" title="DSO Data">

<t>The standard twelve-byte DNS message header with its
zero-valued count fields is followed by the DSO Data,
expressed using TLV syntax, as described below <xref target="tlvsyntax"/>.</t>

<t>A DSO message may be either a request message or a response message,
as indicated by the QR bit in the DNS message header.
DSO request messages are further subdivided into two variants,
acknowledged request messages
(which generate a corresponding response message)
and unacknowledged request messages
(which do not generate any corresponding response message).</t>

<t>A DSO request message MUST contain at least one TLV.
The first TLV in a DSO request message is referred to as the “Primary TLV”
and determines the nature of the operation being performed,
including whether it is an acknowledged or unacknowledged operation.
In some cases it may be appropriate to include other TLVs in a request message,
such as the Encryption Padding TLV (<xref target="padding"/>),
and these extra TLVs are referred to as the “Additional TLVs”.</t>

<t>A DSO response message may contain no TLVs,
or it may be specified to contain one or more TLVs
appropriate to the information being communicated.</t>

<t>A DSO response message may contain one or more TLVs with
DSO-TYPE the same as the Primary TLV from the corresponding DSO request message,
in which case those TLV(s) are referred to as “Response Primary TLVs”.
A DSO response message is not required to carry Response Primary TLVs.
The MESSAGE ID field in the DNS message header is sufficient to identify
to which DSO request message this response message relates.</t>

<t>A DSO response message may contain one or more TLVs with
DSO-TYPEs different from the Primary TLV from the corresponding DSO request message,
in which case those TLV(s) are referred to as “Response Additional TLVs”.</t>

<t>Response Primary TLV(s), if present, MUST occur first in the response message,
before any Response Additional TLVs.</t>

<t>It is anticipated that by default most DSO request messages will be specified
to be acknowledged request messages, which generate corresponding responses.
In some specialized high-traffic use cases,
it may be appropriate to specify unacknowledged request messages.
Unacknowledged request messages can be more efficient on the network,
because they don’t generate a stream of corresponding reply messages.
Using unacknowledged request messages can also simplify software
in some cases, by removing need for an initiator to maintain
state while it waits to receive replies it doesn’t care about.
When the specification for a particular TLV states that,
when used as a Primary TLV (i.e., first) in a request message,
that request message is to be unacknowledged,
the MESSAGE ID field MUST be set to zero and
the receiver MUST NOT generate any response message
corresponding to this unacknowledged request message.</t>

<t>The previous point, that the receiver MUST NOT generate responses to
unacknowledged request messages, applies even in the case of errors.
When a DSO request message is received with the MESSAGE ID field
set to zero, the receiver MUST NOT generate any response.
For example, if the DSO-TYPE in the Primary TLV is unrecognized,
then a DSONOTIMP error MUST NOT be returned; instead the receiver
MUST forcibly abort the connection immediately.</t>

<t>Unacknowledged request messages MUST NOT be used “speculatively”
in cases where the sender doesn’t know if the receiver supports
the Primary TLV in the message, because there is no way to receive
any response to indicate success or failure of the request message
(the request message does not contain a unique MESSAGE ID with
which to associate a response with its corresponding request).
Unacknowledged request messages are only appropriate in cases
where the sender already knows that the receiver supports,
and wishes to receive, these messages.</t>

<t>For example, after a client has subscribed for Push Notifications
<xref target="I-D.ietf-dnssd-push"/>, the subsequent event notifications are
then sent as unacknowledged messages, and this is appropriate
because the client initiated the message stream by virtue of its
Push Notification subscription, thereby indicating its support of
Push Notifications, and its desire to receive those notifications.</t>

<t>Similarly, after an mDNS Relay client has subscribed to receive inbound
mDNS traffic from an mDNS Relay, the subsequent stream of received
packets is then sent using unacknowledged messages, and this
is appropriate because the client initiated the message stream
by virtue of its mDNS Relay link subscription, thereby indicating
its support of mDNS Relay, and its desire to receive inbound mDNS
packets over that DSO session <xref target="I-D.sctl-dnssd-mdns-relay"/>.</t>

<t><vspace blankLines='999' /></t>

<section anchor="tlvsyntax" title="TLV Syntax">

<t>All TLVs, whether used as “Primary”, “Additional”, “Response Primary”,
or “Response Additional”, use the same encoding syntax.</t>

<t>The specification for a TLV states whether that DSO-TYPE may be used in
“Primary”, “Additional”, “Response Primary”, or “Response Additional” TLVs.
The specification for a TLV also states whether,
when used as the Primary (i.e., first) TLV in a request message,
that request message is to be acknowledged.
If the request message is to be acknowledged, the specification
also states which TLVs, if any, are to be included in the response.
The Primary TLV may or may not be contained in the response,
depending on what is stated in the specification for that TLV.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                            DSO-TYPE                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                        DSO DATA LENGTH                        |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                      TYPE-DEPENDENT DATA                      /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='DSO-TYPE:'>
  A 16-bit unsigned integer in network (big endian) byte order
giving the type of the current DSO TLV per the IANA DSO Type Code Registry.</t>
  <t hangText='DSO DATA LENGTH:'>
  A 16-bit unsigned integer in network (big endian) byte order
giving the size in bytes of the TYPE-DEPENDENT DATA.</t>
  <t hangText='TYPE-DEPENDENT DATA:'>
  Type-code specific format.</t>
</list></t>

<t>Where domain names appear within TYPE-DEPENDENT DATA, they MAY<vspace />
be compressed using standard DNS name compression <xref target="RFC1035"/>.<vspace />
However, the compression offsets MUST be relative to
the start of the TYPE-DEPENDENT DATA and MUST NOT
extend beyond the end of the TYPE-DEPENDENT DATA.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="request-tlvs" title="Request TLVs">

<t>The first TLV in a DSO request message is the “Primary TLV”
and indicates the operation to be performed.
A DSO request message MUST contain at at least one TLV, the Primary TLV.</t>

<t>Immediately following the Primary TLV, a DSO request message
MAY contain one or more “Additional TLVs”, which specify
additional parameters relating to the operation.</t>

</section>
<section anchor="response-tlvs" title="Response TLVs">

<t>Depending on the operation, a DSO response message MAY contain no TLVs,
because it is simply a response to a previous request message, and the
MESSAGE ID in the header is sufficient to identify the request in question.
Or it may contain a single response TLV, with the same DSO-TYPE as the
Primary TLV in the request message.
Alternatively it may contain one or more TLVs of other
types, or a combination of the above, as appropriate
for the information that needs to be communicated.
The specification for each DSO TLV determines
what TLVs are required in a response to a request using that TLV.</t>

<t>If a DSO response is received for an operation where the specification
requires that the response carry a particular TLV or TLVs,
and the required TLV(s) are not present, then this is a fatal
error and the recipient of the defective response message MUST
forcibly abort the connection immediately.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="unrecognized-tlvs" title="Unrecognized TLVs">

<t>If DSO request is received containing an unrecognized Primary TLV,
with a nonzero MESSAGE ID (indicating that a response is expected),
then the receiver MUST send a response with matching MESSAGE ID,
and RCODE DSONOTIMP (tentatively 11).
The response MUST NOT contain a copy of the unrecognized Primary TLV.</t>

<t>If DSO request is received containing an unrecognized Primary TLV,
with a zero MESSAGE ID (indicating that no response is expected),
then this is a fatal error and the receiver
MUST forcibly abort the connection immediately.</t>

<t>If a DSO request message is received where the Primary TLV is recognized,
containing one or more unrecognized Additional TLVs, the unrecognized
Additional TLVs MUST be silently ignored, and the remainder of the message
is interpreted and handled as if the unrecognized parts were not present.</t>

<t>Similarly, if a DSO response message is received containing one
or more unrecognized TLVs, the unrecognized TLVs MUST be silently
ignored, and the remainder of the message is interpreted and
handled as if the unrecognized parts were not present.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="edns0-and-tsig" title="EDNS(0) and TSIG">

<t>Since the ARCOUNT field MUST be zero, a DSO message
MUST NOT contain an EDNS(0) option in the additional records section.
If functionality provided by current or future EDNS(0) options
is desired for DSO messages, one or more new DSO TLVs
need to be defined to carry the necessary information.</t>

<t>For example, the EDNS(0) Padding Option <xref target="RFC7830"/> used for security purposes
is not permitted in a DSO message,
so if message padding is desired for DSO messages
then the Encryption Padding TLV described in <xref target="padding"/> MUST be used.</t>

<t>Similarly, a DSO message MUST NOT contain a TSIG record.
A TSIG record in a conventional DNS message is added as the last record in
the additional records section, and carries a signature computed over the
preceding message content. Since DSO data appears <spanx style="strong">after</spanx> the additional
records section, it would not be included in the signature calculation. 
If use of signatures with DSO messages becomes necessary in the 
future, a new DSO TLV needs to be defined to perform this function.</t>

<t>Note however that, while DSO <spanx style="strong">messages</spanx> cannot include
EDNS(0) or TSIG records, a DSO <spanx style="strong">session</spanx> is typically used to 
carry a whole series of DNS messages of different kinds, including DSO
messages, and other DNS message types like Query <xref target="RFC1034"/> 
<xref target="RFC1035"/> and Update <xref target="RFC2136"/>, and those messages can carry EDNS(0) and 
TSIG records.</t>

<t>This specification explicitly prohibits use of the
EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>
in <spanx style="strong">any</spanx> messages sent on a DSO Session (because it is obsoleted by
the functionality provided by the DSO Keepalive operation),
but messages may contain other EDNS(0) options as appropriate.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="message-handling" title="Message Handling">

<t>The initiator MUST set the value of the QR bit in the DNS header to
zero (0), and the responder MUST set it to one (1).
Every DSO request message (QR=0) with a nonzero MESSAGE ID field
MUST elicit a corresponding response (QR=1), which MUST have the same
MESSAGE ID in the DNS message header as in the corresponding request.
DSO request messages sent by the client with a nonzero MESSAGE ID field
elicit a response from the server, and
DSO request messages sent by the server with a nonzero MESSAGE ID field
elicit a response from the client.</t>

<t>A DSO request message (QR=0) with a zero MESSAGE ID field MUST NOT elicit a response.</t>

<t>The namespaces of 16-bit MESSAGE IDs are disjoint in each direction.
For example, it is <spanx style="strong">not</spanx> an error for both client and server to send a request
message with the same ID. In effect, the 16-bit MESSAGE ID combined with the 
identity of the initiator (client or server) serves as a 17-bit unique 
identifier for a particular operation on a DSO Session.</t>

<t>As described in <xref target="header"/>, an initiator MUST NOT reuse a
MESSAGE ID that is already in use for an outstanding request
(unless specified otherwise by the relevant specification for the DSO in question).
At the very least, this means that a MESSAGE ID MUST NOT
be reused in a particular direction on a particular DSO
Session while the initiator is waiting for a response to a
previous request using that MESSAGE ID on that DSO Session
(unless specified otherwise by the relevant specification for the DSO in question),
and for a long-lived operation the MESSAGE ID for the operation
MUST NOT be reused while that operation remains active.</t>

<t>If a client or server receives a response (QR=1) where the MESSAGE ID is zero, or is
any other value that does not match the MESSAGE ID of any of its outstanding operations,
this is a fatal error and the recipient MUST forcibly abort the connection immediately.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="dso-response-generation" title="DSO Response Generation">

<t>With most TCP implementations, for DSO requests that generate a response,
the TCP data acknowledgement (generated because data has been received by TCP),
the TCP window update (generated because TCP has delivered that data to the receiving software),
and the DSO response (generated by the receiving application-layer software itself)
are all combined into a single IP packet.
Combining these three elements into a single IP packet gives a
potentially significant improvement in network efficiency.</t>

<t>For DSO requests that do not generate a response,
the TCP implementation generally doesn’t have any way to know
that no response will be forthcoming, so it waits fruitlessly
for the application-layer software to generate a response,
until the Delayed ACK timer fires <xref target="RFC1122"/> (typically 200 milliseconds)
and only then does it send the TCP ack and window update.
In conjunction with Nagle’s Algorithm at the sender,
this can delay the sender’s transmission of its next
(non-full-sized) TCP segment, while the sender is waiting for
its previous (non-full-sized) TCP segment to be acknowledged,
which won’t happen until the Delayed ACK timer fires.
Nagle’s Algorithm exists to combine multiple small
application writes into more efficient large TCP segments,
to guard against wasteful use of the network by applications
that would otherwise transmit a stream of small TCP segments,
but in this case Nagle’s Algorithm (created to improve network efficiency)
can interact badly with TCP’s Delayed ACK feature
(also created to improve network efficiency) <xref target="NagleDA"/>
with the result of delaying some messages by up to 200 milliseconds.</t>

<t>Possible mitigations for this problem include:</t>

<t><list style="symbols">
  <t>Disabling Nagle’s Algorithm at the sender.<vspace />
This is not great, because it results<vspace />
in less efficient use of the network.</t>
  <t>Disabling Delayed ACK at the receiver.<vspace />
This is not great, because it results<vspace />
in less efficient use of the network.</t>
  <t>Using a networking API that lets the receiver signal to the TCP
implementation that the receiver has received and processed a client
request for which it will not be generating any immediate response.
This allows the TCP implementation to operate efficiently in both cases;
for requests that generate a response, the TCP ack, window update, and
DSO response are transmitted together in a single TCP segment,
and for requests that do not generate a response,
the application-layer software informs the TCP implementation
that it should go ahead and send the TCP ack and window update
immediately, without waiting for the Delayed ACK timer.
Unfortunately it is not known at this time which (if any) of the
widely-available networking APIs currently include this capability.</t>
</list></t>

</section>
<section anchor="cancellation" title="Responder-Initiated Operation Cancellation">

<t>This document, the base specification for DNS Stateful Operations,
does not itself define any long-lived operations,
but it defines a framework for supporting long-lived operations
such as Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/> and
Discovery Relay interface subscriptions <xref target="I-D.sctl-dnssd-mdns-relay"/>.</t>

<t>Generally speaking, a long-lived operation is initiated by the initiator,
and, if successful, remains active until the initiator terminates the operation.</t>

<t>However, it is possible that a long-lived operation may be valid
at the time it was initiated, but then a later change of circumstances
may render that previously valid operation invalid.</t>

<t>For example, a long-lived client operation may pertain to a name
that the server is authoritative for, but then the server configuration
is changed such that it is no longer authoritative for that name.</t>

<t>In such cases, instead of terminating the entire session
it may be desirable for the responder to be able to cancel
selectively only those operations that have become invalid.</t>

<t>The responder performs this selective cancellation by sending
a new response message, with the MESSAGE ID field containing the
MESSAGE ID of the long-lived operation that is to be terminated
(that it had previously acknowledged with a NOERROR RCODE), and the
RCODE field of the new response message giving the reason for cancellation.</t>

<t>After a response message with nonzero RCODE has been sent,
that operation has been terminated from the responder’s point of view,
and the responder sends no more messages relating to that operation.</t>

<t>After a response message with nonzero RCODE has been received by the initiator,
that operation has been terminated from the initiator’s point of view,
and its MESSAGE ID is now free for reuse.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="lifecycle" title="DSO Session Lifecycle and Timers">

<section anchor="dso-session-initiation" title="DSO Session Initiation">

<t>A DSO Session begins as described in <xref target="establishment"/>.</t>

<t>The client may perform as many DNS operations as it wishes using the
newly created DSO Session. Operations SHOULD be pipelined (i.e., the
client doesn’t need wait for a response before sending the next message).
The server MUST act on messages in the order they are transmitted, but
responses to those messages SHOULD be sent out of order when appropriate.</t>

</section>
<section anchor="sessiontimeouts" title="DSO Session Timeouts">

<t>Two timeout values are associated with a DSO Session: the inactivity timeout, and 
the keepalive interval. 
Both values are communicated in the same TLV, the DSO Keepalive TLV (<xref target="keepalive"/>).</t>

<t>The first timeout value, the inactivity timeout, is the maximum time for which
a client may speculatively keep a DSO Session open in the expectation that
it may have future requests to send to that server.</t>

<t>The second timeout value, the keepalive interval, is the maximum permitted
interval between client messages to the server if the client wishes to keep
the DSO Session alive.</t>

<t>The two timeout values are independent. The inactivity timeout may be lower, the 
same, or higher than the keepalive interval, though in most cases the inactivity 
timeout is expected to be shorter than the keepalive interval.</t>

<t>Only when the client has a very long-lived low-traffic operation does the 
keepalive interval come into play, to ensure that a sufficient residual
amount of traffic is generated to maintain NAT and firewall state
and to assure client and server that they still have connectivity to each other.</t>

<t>On a new DSO Session, if no explicit DSO Keepalive message exchange has taken 
place, the default value for both timeouts is 15 seconds.
For both timeouts, lower values of the timeout result in higher network traffic
and higher CPU load on the server.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="inactive-dso-sessions" title="Inactive DSO Sessions">

<t>At both servers and clients, the generation or reception of any complete
DNS message, including DNS requests, responses, updates, or DSO
messages, resets both timers for that DSO Session, with the exception
that a DSO Keepalive message resets only the keepalive timer,
not the inactivity timeout timer.</t>

<t>In addition, for as long as the client has an outstanding operation in progress,
the inactivity timer remains cleared, and an inactivity timeout cannot occur.</t>

<t>For short-lived DNS operations like traditional queries and updates,
an operation is considered in progress for the time between request and 
response, typically a period of a few hundred milliseconds at most.
At the client, the inactivity timer is cleared upon transmission of a 
request and remains cleared until reception of the corresponding response.
At the server, the inactivity timer is cleared upon reception of a request
and remains cleared until transmission of the corresponding response.</t>

<t>For long-lived DNS Stateful operations (such as
a Push Notification subscription <xref target="I-D.ietf-dnssd-push"/> or
a Discovery Relay interface subscription <xref target="I-D.sctl-dnssd-mdns-relay"/>),
an operation is considered in progress
for as long as the operation is active, until it is cancelled.
This means that a DSO Session can exist, with active operations,
with no messages flowing in either direction, for far longer than the 
inactivity timeout, and this is not an error.
This is why there are two separate timers:
the inactivity timeout, and the keepalive interval.
Just because a DSO Session has no traffic for an extended period of time
does not automatically make that DSO Session “inactive”,
if it has an active operation that is awaiting events.</t>

</section>
<section anchor="inactivetimer" title="The Inactivity Timeout">

<t>The purpose of the inactivity timeout is for the server to balance its trade off 
between the costs of setting up new DSO Sessions and the costs of maintaining inactive 
DSO Sessions. A server with abundant DSO Session capacity can offer a high inactivity timeout, 
to permit clients to keep a speculative DSO Session open for a long time, to save 
the cost of establishing a new DSO Session for future communications with that 
server. A server with scarce memory resources can offer a low inactivity timeout,
to cause clients to promptly close DSO Sessions whenever they have no outstanding
operations with that server, and then create a new DSO Session later when needed.</t>

<section anchor="closing-inactive-dso-sessions" title="Closing Inactive DSO Sessions">

<t>A client is NOT required to wait until the inactivity timeout expires
before closing a DSO Session.
A client MAY close a DSO Session at any time, at the client’s discretion.
If a client determines that it has no current or reasonably anticipated
future need for an inactive DSO Session, then the client SHOULD close that connection.</t>

<t>If, at any time during the life of the DSO Session,
the inactivity timeout value (i.e., 15 seconds by default) elapses
without there being any operation active on the DSO Session,
the client MUST close the connection gracefully.</t>

<t>If, at any time during the life of the DSO Session,
twice the inactivity timeout value (i.e., 30 seconds by default),
or five seconds, if twice the inactivity timeout value is less than five seconds,
elapses without there being any operation active on the DSO Session,
the server SHOULD consider the client delinquent,
and SHOULD forcibly abort the DSO Session.</t>

<t>In this context, an operation being active on a DSO Session includes
a query waiting for a response, an update waiting for a response,
or an active long-lived operation, but not a DSO Keepalive message exchange itself.
A DSO Keepalive message exchange resets only the keepalive
interval timer, not the inactivity timeout timer.</t>

<t>If the client wishes to keep an inactive DSO Session open for longer than
the default duration without having to send traffic every 15 seconds,
then it uses the DSO Keepalive message to request
longer timeout values, as described in <xref target="keepalive"/>.</t>

</section>
<section anchor="values-for-the-inactivity-timeout" title="Values for the Inactivity Timeout">

<t>For the inactivity timeout value, lower values result in
more frequent DSO Session teardown and re-establishment.
Higher values result in lower traffic and lower CPU load on the server,
but higher memory burden to maintain state for inactive DSO Sessions.</t>

<t>A server may dictate (in a server-initiated Keepalive message,
or in a response to a client-initiated Keepalive request message)
any value it chooses for the inactivity timeout.
When a connection’s inactivity timeout is reached the client MUST
begin closing the idle connection, but a client is NOT REQUIRED
to keep an idle connection open until the inactivity timeout is
reached — a client SHOULD begin closing the connection sooner
if it has no reason to expect future operations with that server
before the inactivity timeout is reached.</t>

<t>A shorter inactivity timeout with a longer keepalive interval signals
to the client that it should not speculatively keep an inactive DSO
Session open for very long without reason, but when it does have an
active reason to keep a DSO Session open, it doesn’t need to be sending
an aggressive level of keepalive traffic to maintain that session.</t>

<t>A longer inactivity timeout with a shorter keepalive interval
signals to the client that it may speculatively keep an inactive
DSO Session open for a long time, but to maintain that inactive
DSO Session it should be sending a lot of keepalive traffic.
This configuration is expected to be less common.</t>

<t>A server may dictate any value it chooses for the inactivity timeout
(either in a response to a client-initiated request, or in a server-initiated message)
including values under one second, or even zero.</t>

<t>An inactivity timeout of zero informs the client that it
should not speculatively maintain idle connections at all, and
as soon as the client has completed the operation or operations relating
to this server, the client should immediately begin closing this session.</t>

<t>An inactivity timeout of 0xFFFFFFFF (2^32-1 milliseconds, approximately 49.7 days)
informs the client that it may keep an idle connection open as long as it wishes.
Note that after granting an unlimited inactivity timeout in this way,
at any point the server may revise that inactivity timeout by sending
a new Keepalive TLV dictating new Session Timeout values to the client.</t>

<t>A server will abort an idle client session after twice the
inactivity timeout value, or five seconds, whichever is greater.
In the case of a zero inactivity timeout value, this means that
if a client fails to close an idle client session then the server
will forcibly abort the idle session after five seconds.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="keepalivetimer" title="The Keepalive Interval">

<t>The purpose of the keepalive interval is to manage the generation of
sufficient messages to maintain state in middleboxes (such at NAT gateways
or firewalls) and for the client and server to periodically verify that they
still have connectivity to each other. This allows them to clean up state
when connectivity is lost, and attempt re-connection if appropriate.</t>

<section anchor="keepalive-interval-expiry" title="Keepalive Interval Expiry">

<t>If, at any time during the life of the DSO Session,
the keepalive interval value (i.e., 15 seconds by default) elapses
without any DNS messages being sent or received on a DSO Session,
the client MUST take action to keep the DSO Session alive,
by sending a DSO Keepalive message (<xref target="keepalive"/>).
A DSO Keepalive message exchange resets only the keepalive timer, 
not the inactivity timer.</t>

<t>If a client disconnects from the network abruptly,
without cleanly closing its DSO Session,
leaving a long-lived operation uncanceled,
the server learns of this after failing to
receive the required keepalive traffic from that client.
If, at any time during the life of the DSO Session,
twice the keepalive interval value (i.e., 30 seconds by default) elapses
without any DNS messages being sent or received on a DSO Session,
the server SHOULD consider the client delinquent,
and SHOULD forcibly abort the DSO Session.</t>

</section>
<section anchor="values-for-the-keepalive-interval" title="Values for the Keepalive Interval">

<t>For the keepalive interval value, lower values result in a higher volume of keepalive 
traffic. Higher values of the keepalive interval reduce traffic and CPU load, 
but have minimal effect on the memory burden
at the server, because clients keep a DSO Session open for the same length of time
(determined by the inactivity timeout) regardless of the level of keepalive traffic 
required.</t>

<t>It may be appropriate for clients and servers to select different keepalive 
interval values depending on the nature of the network they are on.</t>

<t>A corporate DNS server that knows it is serving only clients on the internal 
network, with no intervening NAT gateways or firewalls, can impose a higher 
keepalive interval, because frequent keepalive traffic is not required.</t>

<t>A public DNS server that is serving primarily residential consumer clients, 
where it is likely there will be a NAT gateway on the path, may impose a lower 
keepalive interval, to generate more frequent keepalive traffic.</t>

<t>A smart client may be adaptive to its environment. A client using
a private IPv4 address <xref target="RFC1918"/> to communicate with a DNS server
at an address outside that IPv4 private address block,
may conclude that there is likely to be a NAT gateway on the path,
and accordingly request a lower keepalive interval.</t>

<t>By default it is RECOMMENDED that clients request,
and servers grant, a keepalive interval of 60 minutes.
This keepalive interval provides for reasonably timely detection if
a client abruptly disconnects without cleanly closing the session,
and is sufficient to maintain state in firewalls and NAT gateways
that follow the IETF recommended Best Current Practice that the
“established connection idle-timeout” used by middleboxes
be at least 2 hours 4 minutes <xref target="RFC5382"/>.</t>

<t>Note that the lower the keepalive interval value, the higher the load on client
and server. For example, a hypothetical keepalive interval value of 100ms would result
in a continuous stream of at least ten messages per second, in both directions,
to keep the DSO Session alive. And, in this extreme example, a single packet loss and
retransmission over a long path could introduce a momentary pause in the stream of messages,
long enough to cause the server to overzealously abort the connection.</t>

<t>Because of this concern, the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with a keepalive interval value less than ten seconds.
If a client receives a Keepalive message specifying a keepalive interval value
less than ten seconds this is a fatal error and the client MUST
forcibly abort the connection immediately.</t>

<t>A keepalive interval value of 0xFFFFFFFF (2^32-1 milliseconds, approximately 49.7 days)
informs the client that it should generate no keepalive traffic.
Note that after signaling that the client should generate no keepalive traffic in this way,
at any point the server may revise that keepalive traffic requirement by sending
a new Keepalive TLV dictating new Session Timeout values to the client.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="server-initiated-session-termination" title="Server-Initiated Session Termination">

<t>In addition to cancelling individual operations selectively (<xref target="cancellation"/>)
there are also occasions where a server may need to terminate
one or more entire sessions wholesale.
An entire session may need to be terminated if the client is defective in some way,
or departs from the network without closing its session.
Sessions may also need to be terminated if the server becomes overloaded,
or if the server is reconfigured and lacks the ability to be selective about
which operations need to be cancelled.</t>

<t>This section discusses various reasons a session may be terminated,
and the mechanisms for doing so.</t>

<section anchor="error" title="Server-Initiated Session Termination on Error">

<t>After sending an error response to a client, the server MAY end the DSO Session,
or may allow the DSO Session to remain open. For error conditions
that only affect the single operation in question, the server SHOULD return an
error response to the client and leave the DSO Session open for further operations.
For error conditions that are likely to make all operations unsuccessful in the
immediate future, the server SHOULD return an error response to the client and 
then end the DSO Session by sending a Retry Delay request message, as described in 
<xref target="retry"/>.</t>

<t>Upon receiving an error response from the server, a client SHOULD NOT
automatically close the DSO Session. An error relating to one particular operation
on a DSO Session does not necessarily imply that all other operations on that
DSO Session have also failed, or that future operations will fail. The client
should assume that the server will make its own decision about whether or not to
end the DSO Session, based on the server’s determination of whether the error
condition pertains to this particular operation, or would also apply to any
subsequent operations. If the server does not end the DSO Session by
sending the client a Retry Delay message (<xref target="retry"/>) then the client
SHOULD continue to use that DSO Session for subsequent operations.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="server-initiated-session-termination-on-overload" title="Server-Initiated Session Termination on Overload">

<t>A server MUST NOT close a DSO Session with a client,
except in certain exceptional circumstances, as outlined below.
In normal operation, closing a DSO Session is the client’s responsibility.
The client makes the determination of when to close a DSO
Session based on an evaluation of both its own needs,
and the inactivity timeout value dictated by the server.</t>

<t>Some exceptional situations where a server may terminate a DSO Session include:</t>

<t><list style="symbols">
  <t>The server application software or underlying operating system
is shutting down or restarting.</t>
  <t>The server application software terminates unexpectedly
(perhaps due to a bug that makes it crash).</t>
  <t>The server is undergoing a reconfiguration or maintenance
procedure, that, due to the way the server software is
implemented, requires clients to be disconnected.
For example, some software is implemented such that it reads
a configuration file at startup, and changing the server’s
configuration entails modifying the configuration file
and then killing and restarting the server software,
which generally entails a loss of network connections.</t>
  <t>The client fails to meets its obligation to generate keepalive
traffic or close an inactive session by the prescribed time
(twice the time interval dictated by the server, or five seconds,
whichever is greater, as described in <xref target="sessiontimeouts"/>).</t>
  <t>The client sends a grossly invalid or malformed request that is
indicative of a seriously defective client implementation (<xref target="error"/>).</t>
  <t>The server is over capacity and needs to shed some load (<xref target="retry"/>).</t>
</list></t>

<t>When a server has to close a DSO Session with a client
(because of exceptional circumstances such as those outlined above)
the server SHOULD, whenever possible, send a Retry Delay request message
(see below) informing the client of the reason for the DSO Session
being closed, and allow the client five seconds to receive it
before the server resorts to forcibly aborting the connection.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="retry" title="Server-Initiated Retry Delay Request Message">

<t>There may be rare cases where a server is overloaded and wishes to shed load.
If a server is low on resources it MAY simply terminate a client connection
by forcibly aborting it.
However, the likely behavior of the client may be simply to to treat this as
a network failure and reconnect immediately, putting more burden on the server.</t>

<t>Therefore to avoid this reconnection implosion, a server SHOULD instead choose 
to shed client load by sending a Retry Delay request message, with an RCODE of 
SERVFAIL, to inform the client of the overload situation.
The format of the Retry Delay TLV is described in <xref target="delay"/>.
After sending a Retry Delay request message,
the server MUST NOT send any further messages on that DSO Session.</t>

<t>Upon receipt of a Retry Delay request from the server, the client MUST
make note of the reconnect delay for this server, and then immediately
close the connection gracefully.</t>

<t>After sending a Retry Delay request message the server SHOULD allow the
client five seconds to close the connection, and if the client has not
closed the connection after five seconds then the server SHOULD
forcibly abort the connection.</t>

<t>A Retry Delay request message MUST NOT be initiated by a client.
If a server receives a Retry Delay request message this is a fatal error
and the server MUST forcibly abort the connection immediately.</t>

<section anchor="outstanding-operations" title="Outstanding Operations">

<t>At the moment a server chooses to initiate a Retry Delay request message
there may be DNS requests already in flight from client to server on this 
DSO Session, which will arrive at the server after its Retry Delay request message 
has been sent.
The server MUST silently ignore such incoming requests, and MUST NOT generate
any response messages for them. When the Retry Delay request message from the
server arrives at the client, the client will determine that any DNS requests
it previously sent on this DSO Session, that have not yet received a response, now 
will certainly not be receiving any response. Such requests should be considered
failed, and should be retried at a later time, as appropriate.</t>

<t>In the case where some, but not all, of the existing operations on a DSO Session 
have become invalid (perhaps because the server has been reconfigured and is no 
longer authoritative for some of the names),
but the server is terminating all DSO Sessions en masse with a REFUSED (5) RCODE,
the RECONNECT DELAY MAY be zero, indicating that the clients SHOULD immediately
attempt to re-establish operations.</t>

<t>It is likely that some of the attempts will be successful and some will not,
depending on the nature of the reconfiguration.</t>

<t>In the case where a server is terminating a large number of DSO Sessions at once
(e.g., if the system is restarting) and the server doesn’t want to be inundated 
with a flood of simultaneous retries, it SHOULD send different RECONNECT delay 
values to each client.
These adjustments MAY be selected randomly, pseudorandomly, or deterministically
(e.g., incrementing the time value by one tenth of a second for each successive
client, yielding a post-restart reconnection rate of ten clients per second).</t>

</section>
<section anchor="client-reconnection" title="Client Reconnection">

<t>After a DSO Session is closed by the server, the client SHOULD try to reconnect,
to that server, or to another suitable server, if more than one is available.
If reconnecting to the same server, the client MUST respect the indicated delay
before attempting to reconnect.</t>

<t>If a particular server does not want a client to reconnect (the server is being
de-commissioned), it SHOULD set the retry delay to the maximum value (which is
approximately 49.7 days). If the server will only be out of service for a maintenance
period, it should use a value closer to the expected maintenance window and
not default to a very large delay value or clients may not attempt to reconnect
after it resumes service.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
</section>
</section>
<section anchor="base-tlvs-for-dns-stateful-operations" title="Base TLVs for DNS Stateful Operations">

<t>This section describes the three base TLVs for DNS Stateful Operations:
Keepalive, Retry Delay, and Encryption Padding.</t>

<section anchor="keepalive" title="Keepalive TLV">

<t>The Keepalive TLV (DSO-TYPE=1) performs two functions:
to reset the keepalive timer for the DSO Session,
and to establish the values for the Session Timeouts.</t>

<t>The TYPE-DEPENDENT DATA for the the Keepalive TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 INACTIVITY TIMEOUT (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 KEEPALIVE INTERVAL (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='INACTIVITY TIMEOUT:'>
  The inactivity timeout for the current DSO Session, specified as
a 32-bit unsigned integer in network (big endian) byte order in units of milliseconds.
This is the timeout at which the client MUST begin closing an inactive DSO Session.
The inactivity timeout can be any value of the server’s choosing.
If the client does not gracefully close an inactive DSO
Session, then after twice this interval, or five seconds,
whichever is greater, the server will forcibly abort the connection.</t>
  <t hangText='KEEPALIVE INTERVAL:'>
  The keepalive interval for the current DSO Session, specified as
a 32-bit unsigned integer in network (big endian) byte order in units of milliseconds.
This is the interval at which a client MUST generate keepalive
traffic to maintain connection state.
The keepalive interval MUST NOT be less than ten seconds.
If the client does not generate the mandated keepalive traffic,
then after twice this interval the server will forcibly abort the connection.
Since the minimum allowed keepalive interval is ten seconds, the
minimum time at which a server will forcibly disconnect a client for
failing to generate the mandated keepalive traffic is twenty seconds.</t>
</list></t>

<t>The transmission or reception of DSO Keepalive messages
(i.e., messages where the Keepalive TLV is the first TLV)
reset only the keepalive timer, not the inactivity timer.
The reason for this is that periodic Keepalive messages are sent for the sole
purpose of keeping a DSO Session alive, when that DSO Session has current
or recent non-maintenance activity that warrants keeping that DSO Session alive.
Sending keepalive traffic itself is not considered a client activity;
it is considered a maintenance activity that is performed
in service of other client activities.
If keepalive traffic itself were to reset the inactivity timer,
then that would create a circular livelock where keepalive traffic
would be sent indefinitely to keep a DSO Session alive, where the only
activity on that DSO Session would be the keepalive traffic keeping
the DSO Session alive so that further keepalive traffic can be sent.
For a DSO Session to be considered active, it must be carrying
something more than just keepalive traffic.
This is why merely sending or receiving a Keepalive message
does not reset the inactivity timer.</t>

<t>When sent by a client, the Keepalive request message MUST
be sent as an acknowledged request, with a nonzero MESSAGE ID.
If a server receives a Keepalive request message with a zero MESSAGE ID then
this is a fatal error and the server MUST forcibly abort the connection immediately.
The Keepalive request message resets a DSO Session’s keepalive timer,
and at the same time communicates to the server the the client’s
requested Session Timeout values.
In a server response to a client-initiated Keepalive request message,
the Session Timeouts contain the server’s chosen values from
this point forward in the DSO Session, which the client MUST respect.
This is modeled after the DHCP protocol, where the client requests a certain
lease lifetime using DHCP option 51 <xref target="RFC2132"/>, but the server is the
ultimate authority for deciding what lease lifetime is actually granted.</t>

<t>When a client is sending its second and subsequent Keepalive DSO requests to
the server, the client SHOULD continue to request its preferred values each time.
This allows flexibility, so that if conditions change during the lifetime of a
DSO Session, the server can adapt its responses to better fit the client’s needs.</t>

<t>Once a DSO Session is in progress (<xref target="details"/>)
a Keepalive request message MAY be initiated by a server.
When sent by a server, the Keepalive request message MUST be
sent as an unacknowledged request, with the MESSAGE ID set to zero.
The client MUST NOT generate a response to a server-initiated DSO Keepalive message.
If a client receives a Keepalive request message with a nonzero MESSAGE ID then
this is a fatal error and the client MUST forcibly abort the connection immediately.
The Keepalive request message from the server resets a DSO Session’s keepalive timer,
and at the same time unilaterally informs the client of the new
Session Timeout values to use from this point forward in this DSO Session.
No client DSO response message to this unilateral declaration is required or allowed.</t>

<t>The Keepalive TLV is not used as a request message Additional TLV.</t>

<t>In response messages the Keepalive TLV is used only as a Response Primary TLV,
replying to a Keepalive request message from the client.
A Keepalive TLV MUST NOT be added as to other responses a Response Additional TLV.
If the server wishes to update a client’s Session Timeout values
other than in response to a Keepalive request message from the client,
then it does so by sending an unacknowledged Keepalive request message
of its own, as described above.</t>

<t>It is not required that the Keepalive TLV be used in every DSO Session.
While many DNS Stateful operations
will be used in conjunction with a long-lived session state,
not all DNS Stateful operations require long-lived session state,
and in some cases the default 15-second value for both the inactivity timeout
and keepalive interval may be perfectly appropriate.
However, note that for clients that implement only the TLVs defined in
this document it is the only way for a client to initiate a DSO Session.</t>

<section anchor="client-handling-of-received-session-timeout-values" title="Client handling of received Session Timeout values">

<t>When a client receives a response to its client-initiated DSO Keepalive message,
or receives a server-initiated DSO Keepalive message, the client has then 
received Session Timeout values dictated by the server. The two timeout values 
contained in the DSO Keepalive TLV from the server may each be higher, lower, or 
the same as the respective Session Timeout values the client previously had for 
this DSO Session.</t>

<t>In the case of the keepalive timer, the handling of the received value is 
straightforward. The act of receiving the message containing the DSO Keepalive 
TLV itself resets the keepalive timer and updates the keepalive interval for the 
DSO Session. The new keepalive interval indicates the 
maximum time that may elapse before another message must be sent
or received on this DSO Session, if the DSO Session is to remain alive.</t>

<t><vspace blankLines='999' /></t>

<t>In the case of the inactivity timeout, the handling of the received value 
is a little more subtle, though the meaning of the inactivity 
timeout is unchanged — it still indicates the maximum permissible time allowed 
without useful activity on a DSO Session.
The act of receiving the message containing the DSO Keepalive TLV does not
itself reset the inactivity timer. The time elapsed since the last useful
activity on this DSO Session is unaffected by exchange of DSO Keepalive messages.
The new inactivity timeout value in the DSO Keepalive TLV in the received message
does update the timeout associated with the running inactivity timer;
that becomes the new maximum permissible time without activity on a DSO Session.</t>

<t><list style="symbols">
  <t>If the current inactivity timer value is not greater than the
new inactivity timeout, then the DSO Session may remain open for now.
When the inactivity timer value exceeds the new inactivity timeout,
the client MUST then begin closing the DSO Session, as described above.</t>
  <t>If the current inactivity timer value is already greater
than the new inactivity timeout, then this DSO Session has
already been inactive for longer than the server permits,
and the client MUST immediately begin closing this DSO Session.</t>
  <t>If the current inactivity timer value is already more than twice the
new inactivity timeout, then the client is immediately considered delinquent
(this DSO Session is immediately eligible to be forcibly terminated by the server)
and the client MUST immediately begin closing this DSO Session.
However if a server abruptly reduces the inactivity timeout in this
way, then, to give the client time to close the connection gracefully
before the server resorts to forcibly aborting it, the server
SHOULD give the client an additional grace period of one quarter
of the new inactivity timeout, or five seconds, whichever is greater.</t>
</list></t>

</section>
<section anchor="relation-to-edns0-tcp-keepalive-option" title="Relation to EDNS(0) TCP Keepalive Option">

<t>The inactivity timeout value in the Keepalive TLV (DSO-TYPE=1) has similar
intent to the EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>.
A client/server pair that supports DSO MUST NOT use the
EDNS(0) TCP KeepAlive option within any message after a DSO 
Session has been established.
Once a DSO Session has been established, if either
client or server receives a DNS message over the DSO Session that contains an
EDNS(0) TCP Keepalive option, this is a fatal error and the receiver of the
EDNS(0) TCP Keepalive option MUST forcibly abort the connection immediately.</t>

</section>
</section>
<section anchor="delay" title="Retry Delay TLV">

<t>The Retry Delay TLV (DSO-TYPE=2) can be used as
a Primary TLV (unacknowledged) in a server-to-client message,
or as a Response Additional TLV in a server-to-client response to a client-to-server request message.</t>

<t>The TYPE-DEPENDENT DATA for the the Retry Delay TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     RETRY DELAY (32 bits)                     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='RETRY DELAY:'>
  A time value, specified as
a 32-bit unsigned integer in network (big endian) byte order in units of milliseconds,
within which the client MUST NOT retry this operation, or retry connecting to this server.</t>
</list></t>

<t>The RECOMMENDED value is 10 seconds.</t>

<section anchor="retry-delay-tlv-used-as-a-primary-tlv" title="Retry Delay TLV used as a Primary TLV">

<t>When sent in a DSO request message, from server to client, the 
Retry Delay TLV (0) is used as a Primary TLV. It is used by a server
to instruct a client to close the DSO Session and underlying connection,
and not to reconnect for the indicated time interval.</t>

<t>In this case it applies to the DSO Session as a whole, and the client MUST begin closing the 
DSO Session, as described in <xref target="retry"/>. The RCODE in the message header 
MUST indicate the reason for the termination:</t>

<t><list style="symbols">
  <t>NOERROR indicates a routine shutdown.</t>
  <t>SERVFAIL indicates that the server is overloaded due to resource exhaustion.</t>
  <t>REFUSED indicates that the server has been reconfigured and is no longer able 
to perform one or more of the functions 
currently being performed on this DSO Session (for example, a DNS Push Notification 
server could be reconfigured such that is is no longer accepting DNS Push 
Notification requests for one or more of the currently subscribed names).</t>
</list></t>

<t>This document specifies only these three RCODE values for Retry Delay request.
Servers sending Retry Delay requests SHOULD use one of these three values.
However, future circumstances may create situations where other RCODE values
are appropriate in Retry Delay requests, so clients MUST be prepared
to accept Retry Delay requests with any RCODE value.</t>

<t>A Retry Delay request is an unacknowledged request message;
the MESSAGE ID MUST be set to zero in the request
and the client MUST NOT send a response.</t>

</section>
<section anchor="retry-delay-tlv-used-as-a-response-additional-tlv" title="Retry Delay TLV used as a Response Additional TLV">

<t>In the case of a client request that returns a nonzero RCODE value,
the server MAY append a Retry Delay TLV (0) to the response,
indicating the time interval during which the client
SHOULD NOT attempt this operation again.</t>

<t>The indicated time interval during which the client SHOULD NOT retry
applies only to the failed operation, not to the DSO Session as a whole.</t>

</section>
<section anchor="retry-delay-tlv-is-used-by-server-only" title="Retry Delay TLV is used by server only">

<t>A client MUST NOT send a Retry Delay TLV to a server,
either in a DSO request message, or in a DSO response message.
If a server receives a DSO message containing a Retry Delay TLV,
this is a fatal error and the server MUST forcibly abort the connection immediately.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="padding" title="Encryption Padding TLV">

<t>The Encryption Padding TLV (DSO-TYPE=3) can only be used as
an Additional or Response Additional TLV.
It is only applicable when the DSO Transport layer uses encryption
such as TLS.</t>

<t>The TYPE-DEPENDENT DATA for the the Padding TLV is optional and is a
variable length field containing non-specified values. A DATA LENGTH
of 0 essentially provides for 4 bytes of padding (the minimum amount).</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   /                                                               /
   /                   VARIABLE NUMBER OF BYTES                    /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t>As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
the PADDING bytes SHOULD be set to 0x00.  Other values MAY be used,
for example, in cases where there is a concern that the padded
message could be subject to compression before encryption.
PADDING bytes of any value MUST be accepted in the messages received.</t>

<t>The Encryption Padding TLV may be included in either a DSO request, response, or both.
As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
if a request is received with an Encryption Padding TLV,
then the response MUST also include an Encryption Padding TLV.</t>

<t>The length of padding is intentionally not specified in this document and
is a function of current best practices with respect to the type and length
of data in the preceding TLVs <xref target="I-D.ietf-dprive-padding-policy"/>.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="summary" title="Summary">

<t>This section summarizes some noteworthy highlights about
various components of the DSO protocol.</t>

<section anchor="message-id" title="MESSAGE ID">

<t>In DSO Request Messages the MESSAGE ID may be either
nonzero (signaling that the responder MUST generate a response)
or zero (signaling that the responder MUST NOT generate a response).</t>

<t>In DSO Response Messages the MESSAGE ID MUST NOT be zero
(since this would be a response to a request that had
indicated that a response is not allowed).</t>

<t>The table below illustrates the legal combinations:</t>

<figure><artwork><![CDATA[
                          +--------------------+-------------------+
                          | Nonzero MESSAGE ID |  Zero MESSAGE ID  |
   +----------------------+--------------------+-------------------+
   | DSO Request Message  |         X          |         X         |
   +----------------------+--------------------+-------------------+
   | DSO Response Message |         X          |                   |
   +----------------------+--------------------+-------------------+
]]></artwork></figure>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="tlv-usage" title="TLV Usage">

<t>The table below indicates, for each of the three TLVs defined in this
document, whether they are valid in each of ten different contexts.</t>

<t>The first five contexts are requests from client to server,
and the corresponding responses from server back to client:</t>

<t><list style="symbols">
  <t>C-P - Primary TLV,
sent in DSO Request message,
from client to server,
with nonzero MESSAGE ID indicating that this request MUST generate response message.</t>
  <t>C-U - Primary TLV (unacknowledged),
sent in DSO Request message,
from client to server,
with zero MESSAGE ID indicating that this request MUST NOT generate response message.</t>
  <t>C-A - Additional TLV, optionally added to request message from client to server.</t>
  <t>CRP - Response Primary TLV, included in response message sent to back the client
(in response to a client “C-P” request with nonzero MESSAGE ID indicating that a response is required)
where the DSO-TYPE of the Response TLV matches the DSO-TYPE of the Primary TLV in the request.</t>
  <t>CRA - Response Additional TLV, included in response message sent to back the client
(in response to a client “C-P” request with nonzero MESSAGE ID indicating that a response is required)
where the DSO-TYPE of the Response TLV does not match the DSO-TYPE of the Primary TLV in the request.</t>
</list></t>

<t>The second five contexts are the reverse: requests from server to client,
and the corresponding responses from client back to server.</t>

<figure><artwork><![CDATA[
              +-------------------------+-------------------------+
              | C-P  C-U  C-A  CRP  CRA | S-P  S-U  S-A  SRP  SRA |
 +------------+-------------------------+-------------------------+
 | KeepAlive  |  X              X       |       X                 |
 +------------+-------------------------+-------------------------+
 | RetryDelay |                      X  |       X                 |
 +------------+-------------------------+-------------------------+
 | Padding    |            X         X  |            X         X  |
 +------------+-------------------------+-------------------------+
]]></artwork></figure>

<t>It is recommended that definitions of future TLVs include a
similar table summarizing the contexts where the new TLV is valid.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="inactivity-timeout" title="Inactivity Timeout">

<t>The Inactivity Timeout may have any 32-bit unsigned integer value.</t>

<t>The value zero informs the client that it
should not speculatively maintain idle connections at all, and
as soon as the client has completed the operation or operations relating
to this server, the client should immediately begin closing this session.</t>

<t>The maximum possible value,
0xFFFFFFFF (2^32-1 milliseconds, approximately 49.7 days),
informs the client that it may keep an idle connection open as long as it wishes.</t>

<t>The Inactivity timer is reset by any message <spanx style="strong">except</spanx> the Keepalive TLV,
and remains cleared any time that an operation is outstanding.</t>

</section>
<section anchor="keepalive-interval" title="Keepalive Interval">

<t>The Keepalive Interval is a 32-bit unsigned integer value,
with a minimum value of 10,000 milliseconds (10 seconds).</t>

<t>The maximum possible value,
0xFFFFFFFF (2^32-1 milliseconds, approximately 49.7 days),
informs the client that it should generate no keepalive traffic.</t>

<t>Any message exchange (including the Keepalive TLV) resets the Keepalive timer.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="dso-opcode-registration" title="DSO OPCODE Registration">

<t>The IANA is directed to record the value (tentatively) 6 for the DSO OPCODE
in the DNS OPCODE Registry.</t>

</section>
<section anchor="dso-rcode-registration" title="DSO RCODE Registration">

<t>The IANA is directed to record the value (tentatively) 11 for the DSONOTIMP error code
in the DNS RCODE Registry.</t>

</section>
<section anchor="dso-type-code-registry" title="DSO Type Code Registry">

<t>The IANA is directed to create the 16-bit DSO Type Code Registry,
with initial (hexadecimal) values as shown below:</t>

<texttable>
      <ttcol align='left'>Type</ttcol>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Status</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>0000</c>
      <c>Reserved</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0001</c>
      <c>KeepAlive</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0002</c>
      <c>RetryDelay</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0003</c>
      <c>EncryptionPadding</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0004-003F</c>
      <c>Unassigned, reserved for    DSO session-management TLVs</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0040-F7FF</c>
      <c>Unassigned</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>F800-FBFF</c>
      <c>Reserved for experimental/local use</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>FC00-FFFF</c>
      <c>Reserved for future expansion</c>
      <c>&#160;</c>
      <c>&#160;</c>
</texttable>

<t>DSO Type Code zero is reserved and is not currently intended for allocation.</t>

<t>Registrations of new DSO Type Codes in
the “Reserved for DSO session-management” range 0004-003F
and the “Reserved for future expansion” range FC00-FFFF
require publication of an IETF Standards Action document <xref target="RFC5226"/>.</t>

<t>Requests to register additional new DSO Type Codes
in the “Unassigned” range 0040-F7FF
are to be recorded by IANA after consultation with the
registry’s Designated Expert <xref target="RFC5226"/> at that time.
At the time of publication of this document, the Designated Expert
for the newly created DSO Type Code registry is [<spanx style="strong">TBD</spanx>].</t>

<t>DSO Type Codes in the “experimental/local” range F800-FBFF
may be used as Experimental Use or Private Use values <xref target="RFC5226"/>
and may be used freely for development purposes,
or for other purposes within a single site.
No attempt is made to prevent multiple sites from using
the same value in different (and incompatible) ways.
There is no need for IANA to review such assignments
(since IANA does not record them) and assignments
are not generally useful for broad interoperability.
It is the responsibility of the sites making use of
“experimental/local” values to ensure that no
conflicts occur within the intended scope of use.</t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>If this mechanism is to be used with DNS over TLS, then these messages
are subject to the same constraints as any other DNS-over-TLS messages
and MUST NOT be sent in the clear before the TLS session is established.</t>

<t>The data field of the “Encryption Padding” TLV could be used as a covert channel.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to
Tim Chown,
Ralph Droms,
Jan Komissar,
Manju Shankar Rao,
and Ted Lemon
for their helpful contributions to this document.</t>

<t><vspace blankLines='999' /></t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC1035;
&RFC7766;
&RFC6891;
&RFC7828;
&RFC2119;
&RFC2136;
&RFC7830;
&RFC1034;
&RFC1918;
&RFC5382;
&RFC2132;
&RFC5226;


    </references>

    <references title='Informative References'>

<reference anchor="NagleDA" target="http://www.stuartcheshire.org/papers/nagledelayedack/">
  <front>
    <title>TCP Performance problems caused by interaction between Nagle's Algorithm and Delayed ACK</title>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization></organization>
    </author>
    <date year="2005" month="May" day="20"/>
  </front>
</reference>
&RFC7858;
&I-D.ietf-dnssd-push;
&I-D.sctl-dnssd-mdns-relay;
&RFC6763;
&RFC0768;
&RFC7413;
&I-D.ietf-tls-tls13;
&RFC1122;
&I-D.ietf-dprive-padding-policy;


    </references>



  </back>

<!-- ##markdown-source:
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
suYSKDcgS5Y7CqRToYlaishqFVgkTtDAi8a3vkByUBQou+mC+km6Hz7QKk7E
jnWjpgq9iUtTNcDDnjLNfMRzFfA9+Lsj9M/d9fcDGL6jiZm60tTA3C0QCl/r
DjWumdcBBN/GB0bK7zKdO6NBUhWK8LwE6yS+e6TZJySEqa5Vkq9WW0QOaIx4
lV1R94r1VIzy21yBzJA7//V9+C+3DPQRjNgONPFjkvxb6yPreuv97/Nn9LGP
1qyP8M92mt0P/34ziknothmZz367GYWua8Df31EUu0tH6jUZhSIDcs3Z0m6h
ozgKphxwZAu1co8ZrvqB0kOHygpTfkH6U2tCFWc7UbRJv6FRgr+ir+qNCZmW
lVxvLjmjEETrRpyC+Rx8ieSsejZ+m4xjlKT6JS09eff/wCyk502H9rtlQXLf
VKTFxLq2Es7uXTy7TrjiV0z38+caMcz++Z7AfGNbZuTtCLRlCCxqQPARLrM9
URryHA+oF88aqSgd3G4tQ/GhB9v+sIMWldceAC0c+Ind9URjXq3YziMXUiLU
KAxV1eR5Vraa2TL0844etOce+214Y07sxrQ3/T/A3viMKdqkz94iqVLFZVM6
fIUfRe9j9rTFZDpBh7sxGdkqZTI+etLl7AMMfYinx2IlErfIvohL0NWjy0KE
8TG5wG8u8JsL/OYCv7nAb1x3Cr9iPh9NFByl2J/jGf7Zz7Qj8mIp99vNhzxG
7DDqDxDiJP6B81FzI2lJ+T/bv+355jebj/iUbNMmuqWS/8mVvBbqPydp7w0o
J4AL0RjUejAlS/lmhZuNkBLxI5EiYJxsZwH7IfBbvqvdz8k2kAbku8G4qbrO
cQw2hv8/7AR9aeGhUiJXHehf3Hxn9HfoBt0+aoalcR2wjPO7DH7m/n2uIXz/
fhcWxHyZUYg1NUDjaN7OAI3Twrbi4N50UsixXW0nNMy8XPb2JiYDfy8RjrQm
mXorTROw0fHxcbTtyWEInx/9XznBu/VPcifmPDzk9jA0bu8czJHFm/8hxpsH
x8TZyeuT5JlABrXwEpwIKrJv3lIA6BwonmxbjxujH6HnhbqfqS6J/f/oZVIC
Cz03cqWPkie2wtH//l88tFPY7+sL/eh//y95nSCOSKH+7abx4IGdB6jSZ6/e
+t4s8yya0PnQfC7RT/QMHtc57YbnI/FOHPTBEyLa/hGEaDkJZJUcLrP3KWbT
rtPVkfo/U6o8eVOwrQiW00ceCAx+zK/4SKlC25rEL9l3M/jQfWTRE/8/8xf8
O4x0jDcDf0lscM6jFXNM2INPXzwbX/7wPJEHH0Qax74nH7Z1geFHH8FHwUGo
AnvfLx6P4Vcv4PN3RVozJyB/KC8Azxn+w+0WBj3mxuTkKyTJ+hH/h8Z6fDx+
8e2LeCz/9YvvjuHrH+jrczs8VlYD3RcJbPX1qsQehBgg9797hr970f2dSHf4
eVqQl5l/4WLSYPlZhxV5iERjAALkIZ3LwOihmmntSHthpF/ATUx9NedXZclB
NL3+LTvACovAc/zGe4X8YO/i9Hd+N7QfrzSF9R0+QEpQQ0s98Do5kdJv6uCV
PpMPHz4h3+p5yPyGTcLFons8mGDd9er9PginHJYlNEC4AwZBMzPhqC1dbgaS
UlPalZT91ywDV8lN/qpOnmfk90QWcIokEs+cU27TRjLMpXqx5oi3NiXycLNu
0hndKUuDBa8UYjFvMRqdHlLQf/uv9+/DPbp//7/990mL6mq14A66xO1PUu+D
E6+xQhBOzU+SdzXBWt5K11n8p/AxuxlERHaYRZWh8ORqAlhEZUNHL0VvasJ+
EmqG/Fz6sUf9auuvOscUxNelhw5gBYV0TieLSWUEJ8UqBht5WOxH7sdLUezU
FwLNrcvskFMrUcmEUwL14AizEDnJpRJfMXd4w2kS2RB9XudAjhIOxgOkKqbq
qqbHTHESFWJrrsZqf4HkGYpIoT9H0owoibPCevIEfiCNSzvznPm0ybhnjy9g
RjuwTn9Bnst9I1wvBZjyrHAJKlHwipJaowDhYlhiBtxJD4TRd8Ki6hlMCl+5
ZTRLcgFqPxWPaGsgZ0L5vo2dZJIpldCtQ3AVgaovX16EtAiTpU17ZQJ7/ljx
BmOeHzX8rklbZXqCIcc45BiGNMPYitmhZo9oc6DxJiaDAH+pybgw6QhdTmoC
xZQ4aC+7f9ANjB2Q3eajkwHkM8PpNVRoosgo3gNs0vsimUTgNWnxC1XEABsu
eYZKw8idp6sNbBpQOdyifwVu+4cS85vSauRepcVft8kF/goWc56WrNVfwktf
ZmvQt4TD5FWyzFYbpDa0Nqt8upVudmXMqVTBBOWCfDHu/wDNxSlmoFQBAA==

-->

</rfc>

