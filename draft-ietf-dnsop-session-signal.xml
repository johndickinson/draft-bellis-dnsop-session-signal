<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.1.2 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC7766 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7766.xml">
<!ENTITY RFC6891 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6891.xml">
<!ENTITY RFC7828 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7828.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC7830 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7830.xml">
<!ENTITY RFC1034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC2136 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2136.xml">
<!ENTITY RFC2132 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2132.xml">
<!ENTITY RFC1918 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1918.xml">
<!ENTITY RFC5226 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5226.xml">
<!ENTITY RFC7858 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7858.xml">
<!ENTITY I-D.ietf-dnssd-push SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dnssd-push.xml">
<!ENTITY RFC0768 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.0768.xml">
<!ENTITY I-D.ietf-dprive-padding-policy SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dprive-padding-policy.xml">
]>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-dnsop-session-signal-05" category="std" updates="RFC 7766, RFC 1035">

  <front>
    <title>DNS Stateful Operations</title>

    <author initials="R." surname="Bellis" fullname="Ray Bellis">
      <organization abbrev="ISC">Internet Systems Consortium, Inc.</organization>
      <address>
        <postal>
          <street>950 Charter Street</street>
          <city>Redwood City</city>
          <code>CA 94063</code>
          <country>USA</country>
        </postal>
        <phone>+1 650 423 1200</phone>
        <email>ray@isc.org</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>1 Infinite Loop</street>
          <city>Cupertino</city>
          <code>CA 95014</code>
          <country>USA</country>
        </postal>
        <phone>+1 408 974 3207</phone>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="J." surname="Dickinson" fullname="John Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>jad@sinodun.com</email>
      </address>
    </author>
    <author initials="S." surname="Dickinson" fullname="Sara Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>sara@sinodun.com</email>
      </address>
    </author>
    <author initials="A." surname="Mankin" fullname="Allison Mankin">
      <organization>Salesforce</organization>
      <address>
        <email>allison.mankin@gmail.com</email>
      </address>
    </author>
    <author initials="T." surname="Pusateri" fullname="Tom Pusateri">
      <organization>Unaffiliated</organization>
      <address>
        <postal>
          <street></street>
          <city>Raleigh</city>
          <code>NC 27608</code>
          <country>USA</country>
        </postal>
        <phone>+1 919 867 1330</phone>
        <email>pusateri@bangj.com</email>
      </address>
    </author>

    <date year="2017"/>

    <area>Internet</area>
    <workgroup>DNSOP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document defines a new DNS Stateful Operation OPCODE used to communicate 
operations within persistent stateful sessions, expressed using type-length-value (TLV) 
syntax, and defines an initial set of TLVs used to manage session timeouts and 
termination. This mechanism is intended to reduce the overhead of existing 
“per-packet” signaling mechanisms with “per-message” semantics as well as 
defining new stateful operations not defined in EDNS(0).</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The use of transports for DNS other than UDP is being increasingly specified,
for example, DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> and DNS over TLS <xref target="RFC7858"/>.
Such transports can offer persistent, long-lived sessions and therefore when
using them for transporting DNS messages it is of benefit to have a mechanism
that can establish parameters associated with those sessions, such as timeouts.
In such situations it is also advantageous to support server initiated messages.</t>

<t>The existing EDNS(0) Extension Mechanism for DNS <xref target="RFC6891"/> is explicitly
defined to only have “per-message” semantics. Whilst EDNS(0) has been used to
signal at least one session related parameter (the EDNS(0) TCP Keepalive option
<xref target="RFC7828"/>) the result is less than optimal due to the restrictions
imposed by the EDNS(0) semantics and the lack of server-initiated signalling. 
For example, a server cannot arbitrarily 
instruct a client to close a connection because the server can only send EDNS(0) options 
in responses to queries that contained EDNS(0) options.</t>

<t>This document defines a new DNS Stateful Operation OPCODE used to carry
operations within persistent stateful connections, expressed using type-length-value (TLV)
syntax, and
defines an initial set of TLVs including ones used to manage session timeouts and termination.</t>

<t>This new format has distinct advantages over an RR based format because it
is more explicit and more compact. Each TLV definition is specific
to the use case, and as a result contains no redundant or overloaded fields.
Importantly, it completely avoids conflating DNS Stateful Operations in anyway 
with normal DNS operations or with existing EDNS(0) based functionality. A goal 
of this approach is to avoid the operational
issues that have befallen EDNS(0), particularly relating to middle-box 
behaviour.</t>

<t>With EDNS(0), multiple options may be packed into a single OPT pseudo-RR,
and there is no generalized mechanism for a client to be able to tell
whether a server has processed or otherwise acted upon each individual
option within the combined OPT RR.
The specifications for each individual option need to define how each
different option is to be acknowledged, if necessary.</t>

<t>With DNS Stateful Operations, in contrast, there is no compelling motivation
to pack multiple operations into a single message for efficiency reasons.
Each Stateful operation is communicated in its own separate
DNS message, and the transport protocol can take care of packing
separate DNS messages into a single IP packet if appropriate.
For example, TCP can pack multiple small DNS messages into a single TCP segment.
The RCODE in each response message indicates the success or failure of the operation in question.</t>

<t>It should be noted that the message format for DNS Stateful Operations
(see <xref target="format"/>) differs from the traditional DNS packet
format used for standard queries and responses.
The standard twelve-octet header is used, but the four count fields
(QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) are set to zero and their
corresponding sections are not present.
The actual data pertaining to DNS Stateful Operations is
appended to the end of the DNS message header.
When displayed using today’s packet analyzer tools that have not been updated
to recognize the DNS Stateful Operations format, this will result
in the Stateful Operations data being displayed as unknown additional
data after the end of the DNS message. It is likely that future updates
to these tools will add the ability to recognize, decode, and display the
Stateful Operations data.</t>

</section>
<section anchor="terminology" title="Terminology">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and
“OPTIONAL” in this document are to be interpreted as described in
“Key words for use in RFCs to Indicate Requirement Levels” <xref target="RFC2119"/>.</t>

<t>“DSO” is used to mean DNS Stateful Operation.</t>

<t>The term “connection” means a bidirectional byte stream of reliable,
in-order messages, such as provided by using
DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> or DNS over TLS <xref target="RFC7858"/>.</t>

<t>The unqualified term “session” in the context of this document means the exchange of
DNS messages over a connection where:</t>

<t><list style="symbols">
  <t>The connection between client and server is persistent and relatively
long-lived (i.e., minutes or hours, rather than seconds).</t>
  <t>Either end of the connection may initiate messages to the other.</t>
</list></t>

<t>A “DSO session” is established between two endpoints that
acknowledge persistent DNS state via the exchange of DSO messages
over the connection. This is distinct from, for example a DNS-over-TCP session
as described in RC7766.</t>

<t>A “DSO session” is terminated when the underlying connection is closed.</t>

<t>The term “server” means the software with a listening socket, awaiting
incoming connection requests.</t>

<t>The term “client” means the software which initiates a connection
to the server’s listening socket.</t>

<t>The terms “initiator” and “responder” correspond respectively to the
initial sender and subsequent receiver of a DSO request message,
regardless of which was the “client” and “server” in the usual DNS sense.</t>

<t>The term “sender” may apply to either an initiator
(when sending a DNS Stateful Operation request message)
or a responder (when sending a DNS Stateful Operation response message).</t>

<t>Likewise, the term “receiver” may apply to either a responder
(when receiving a DNS Stateful Operation request message)
or an initiator (when receiving a DNS Stateful Operation response message).</t>

<t>DNS Stateful Operations are expressed using type-length-value (TLV) syntax.</t>

<t>Two timers (elapsed time since an event) are defined in this document:</t>

<t><list style="symbols">
  <t>an inactivity timer (see <xref target="keepalive"/> and <xref target="inactivetimer"/>)</t>
  <t>a keepalive timer (see <xref target="keepalive"/> and <xref target="keepalivetimer"/>)</t>
</list></t>

<t>The timeouts associated with these timers are called the inactivity timeout and 
the keepalive interval respectively. 
The term “Session Timeouts” is used to refer to this pair of timeout values.</t>

<t>Reseting a timer means resetting the timer value to zero and starting the timer 
again. Clearing a timer means resetting the timer value to zero but NOT starting 
the time again.</t>

</section>
<section anchor="discussion" title="Discussion">

<t>There are several use cases for DNS Stateful operations that can 
be described here.</t>

<t>Firstly, establishing session parameters such as server defined timeouts is of 
great use in the 
general management of persistent connections. For example, using DSO sessions 
for stub to recursive DNS-over-TLS <xref target="RFC7858"/> is more flexible for both the 
client and the server than attempting to manage sessions using just the EDNS(0)
TCP Keepalive option
<xref target="RFC7828"/>. The simple set of TLVs defined in this document is
sufficient to greatly enhance connection management for this use case.</t>

<t>Secondly, DNS-SD has evolved into a naturally session based mechanism where, for 
example, long-lived subscriptions lend themselves to ‘push’ mechanisms as 
opposed to polling. Long-lived stateful connections and server initiated 
messages align with this use case as described in <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>A general use case is that DNS traffic is often bursty but session establishment 
can be expensive. One challenge with long-lived connections is to maintain 
sufficient traffic to maintain NAT and firewall state. To mitigate this issue 
this document introduces a 
new concept for the DNS, that is DSO “Keepalive traffic”. This traffic carries 
no DNS data and is not considered ‘activity’ in the classic DNS sense but serves 
to reset a keepalive timer in order to avoid re-cycling a DSO session.</t>

<t>There are a myriad of other potential use cases for DSO given the versatility 
and extensibility of this specification.</t>

<t><xref target="details"/> of this document first describes the protocol details of DNS Stateful
Operations including definitions of three TLVs for session management and 
encryption padding. <xref target="lifecycle"/> then presents a
detailed discussion of the DSO Session lifecycle including an
in-depth discussion of keepalive traffic and session termination.</t>

</section>
<section anchor="details" title="Protocol Details">

<section anchor="establishment" title="DSO Session Establishment">

<t>DSO messages MUST only be carried in protocols and in
environments where a session may be established according to the definition above.
Standard DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/>, and DNS over TLS <xref target="RFC7858"/>
are suitable protocols.</t>

<t>DNS over plain UDP <xref target="RFC0768"/> is not appropriate since it fails on the requirement for
in-order message delivery, and, in the presence of NAT gateways and firewalls
with short UDP timeouts, it fails to provide a persistent bi-directional
communication channel unless an excessive amount of keepalive traffic is used.</t>

<t>DSO messages relate only to the specific “DSO session” in which
they are being carried. A “DSO session” is established over a connection when
either side of the connection sends the first DSO
TLV and it is acknowledged by the other side. The DSO message format <xref target="dsodata"/> 
includes an option to specify that a DSO request does not require a 
response acknowledgement. Session establishment can only be performed using a 
DSO message that requires a response acknowledgement.</t>

<t>While this 
specification defines an initial set of three TLVs, additional TLVs may be 
defined in additional specifications. All three of the TLVs defined here are 
mandatory to implement.</t>

<t>A client MAY attempt to initiate DSO messages at any time
on a connection; receiving a NOTIMP response in reply indicates that the
server does not implement DSO, and the client SHOULD NOT
issue further DSO messages on that connection.</t>

<t>A server SHOULD NOT initiate DSO messages until a
client-initiated DSO message is received first,
unless in an environment where it is known in advance by other
means that the client supports DSO.
This requirement is to ensure that the clients that do not support
DSO do not receive unsolicited inbound DSO
messages that they would not know how to handle.</t>

<t>On a session between a client and server that support DSO,
once the client has sent at least one DSO message (or it is
known in advance by other means that the client supports DSO)
either end may unilaterally send DSO messages at any time,
and therefore either client or server may be the initiator of a message.</t>

<t>From this point on it is considered that a “DSO session” is in
progress. Clients and servers should behave as described in this specification
with regard to inactivity timeouts and connection close, not as prescribed in <xref target="RFC7766"/>.</t>

<section anchor="middle-box-considerations" title="Middle-box Considerations">

<t>Where an application-layer middle box (e.g., a DNS proxy, forwarder, or
session multiplexer) is in the path the middle box MUST NOT blindly
forward DSO messages in either direction, and MUST treat the inbound
and outbound connections as separate sessions.  This does not preclude
the use of DSO messages in the presence of an IP-layer middle box such
as a NAT that rewrites IP-layer and/or transport-layer headers, but
otherwise preserves the effect of a single session between the client
and the server.</t>

<t>To illustrate the above, consider a network where a middle box
terminates one or more TCP connections from clients and multiplexes the
queries therein over a single TCP connection to an upstream server.  The
DSO messages and any associated state are specific to the individual
TCP connections.  A DSO-aware middle box MAY in some circumstances be
able to retain associated state and pass it between the client and
server (or vice versa) but this would be highly TLV-specific.  For
example, the middle box may be able to maintain a list of which clients
have made Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/> and
make its own subscription(s) on their behalf, relaying any subsequent
notifications to the client (or clients) that have subscribed to that
particular notification.</t>

</section>
</section>
<section anchor="format" title="Message Format">

<t>A DSO message begins with
the standard twelve-octet DNS message header <xref target="RFC1035"/>
with the OPCODE field set to the DSO OPCODE (tentatively 6).
However, unlike standard DNS messages, the question section, answer section,
authority records section and additional records sections are not present.
The corresponding count fields (QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) MUST be
set to zero on transmission.</t>

<t>If a DSO message is received where any of the count fields are
not zero, then a FORMERR MUST be returned.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                          MESSAGE ID                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |QR |    OPCODE     |            Z              |     RCODE     |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     QDCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ANCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     NSCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ARCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                           DSO Data                            /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<section anchor="header" title="Header">

<t>In a request the MESSAGE ID field MUST be set to a unique value, that the
initiator is not currently using for any other active operation on this 
connection.
For the purposes here, a MESSAGE ID is in use in this DSO session if the
initiator has used it in a request for which it has not yet received a
response, or if the client has used it to setup state that it has not yet ready
to delete. For example, state could be a subscription as defined in 
<xref target="I-D.ietf-dnssd-push"/>.</t>

<t>In a response the MESSAGE ID field MUST contain a copy of the value of the
MESSAGE ID field in the request being responded to.</t>

<t>In a request the DNS Header QR bit MUST be zero (QR=0).
If the QR bit is not zero the message is not a request.</t>

<t>In a response the DNS Header QR bit MUST be one (QR=1).
If the QR bit is not one the message is not a response.</t>

<t>The DNS Header OPCODE field holds the DSO OPCODE value (tentatively 6).</t>

<t>The Z bits are currently unused, and in both requests and responses the
Z bits MUST be set to zero (0) on transmission and MUST be silently ignored
on reception, unless a future document specifies otherwise.</t>

<t>In a request message (QR=0) the RCODE is generally set to zero on transmission,
and silently ignored on reception, except where specified otherwise
(for example, the Retry Delay operation (see <xref target="delay"/>), where the RCODE indicates the reason
for termination).</t>

<t>The RCODE value in a response may be one of the following values:</t>

<texttable>
      <ttcol align='right'>Code</ttcol>
      <ttcol align='left'>Mnemonic</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>0</c>
      <c>NOERROR</c>
      <c>Operation processed successfully</c>
      <c>1</c>
      <c>FORMERR</c>
      <c>Format error</c>
      <c>2</c>
      <c>SERVFAIL</c>
      <c>Server failed to process request due to a problem with the server</c>
      <c>3</c>
      <c>NXDOMAIN</c>
      <c>TLV dependent</c>
      <c>4</c>
      <c>NOTIMP</c>
      <c>DSO not supported</c>
      <c>5</c>
      <c>REFUSED</c>
      <c>Operation declined for policy reasons</c>
      <c>9</c>
      <c>NOTAUTH</c>
      <c>Not Authoritative (TLV dependent)</c>
      <c>11</c>
      <c>DSONOTIMP</c>
      <c>DSO type code not supported</c>
</texttable>

<t>Use of the above RCODE’s is likely to be common in DSO but 
does not preclude the definition and use of other codes in future documents that 
make use of DSO.</t>

<t>If a document describing a DSO makes use of either NXDOMAIN 
or NOTAUTH then that document MUST explain the meaning.</t>

</section>
<section anchor="dsodata" title="DSO Data">

<t>The standard twelve-octet DNS message header is followed by the DSO Data.</t>

<t>The first TLV in a DSO request message is called the Operation 
TLV. Any subsequent TLVs after this initial Operation TLV are called Modifier TLVs.</t>

<t>Depending on the operation a DSO response can contain:</t>

<t><list style="symbols">
  <t>No TLVs</t>
  <t>Only an Operation TLV</t>
  <t>An Operation TLV followed by one or more Modifier TLVs</t>
  <t>Only Modifier TLVs</t>
</list></t>

<section anchor="tlv-format" title="TLV Format">

<t>Operation and modifier TLVs both use the same encoding format.</t>

<t>Operation TLVs SHOULD normally require a response and, therefore, set the TLV
Acknowledgement bit in a request. However, for some Operation TLVs, this may be
undesirable and the TLV Acknowledgement bit MAY be cleared in the request. Each
Operation TLV definition should stipulate whether an acknowledgement is
REQUIRED. If the TLV Acknowledgement bit is cleared in a request, a response
MUST NOT be sent. Modifier TLVs MUST NEVER set the Acknowledgement bit. The
Acknowledgement bit is NEVER set in the response to an Operation TLV.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   | A |                        DSO-TYPE                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                        DSO DATA LENGTH                        |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                      TYPE-DEPENDENT DATA                      /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='A:'>
  A 1 bit TLV Response flag indicating whether or not an Operation TLV requires
a response Acknowledgement.
DSO-TYPE:</t>
  <t>A 15 bit field in network order giving the type of the current DSO TLV per
the IANA DSO Type Codes Registry.</t>
  <t hangText='DSO DATA LENGTH:'>
  A 16 bit field in network order giving the size in octets of
the TYPE-DEPENDENT DATA.</t>
  <t hangText='TYPE-DEPENDENT DATA:'>
  Type-code specific format.</t>
</list></t>

<t>Where domain names appear within TYPE-DEPENDENT DATA, they MAY be compressed 
using standard DNS name compression. However, the compression MUST NOT point
outside of the TYPE-DEPENDENT DATA section and offsets MUST be from the start
of the TYPE-DEPENDENT DATA.</t>

</section>
<section anchor="operation-tlvs" title="Operation TLVs">

<t>An “Operation TLV” specifies the operation to be performed.</t>

<t>A DSO message MUST contain at most one Operation TLV.</t>

<t>In all cases a DSO request message MUST contain exactly one 
Operation TLV, indicating the operation to be performed.</t>

<t>Depending on the operation, a DSO response message MAY contain no 
Operation TLV, because it is simply a response to a previous request message,
and the MESSAGE ID in the header is sufficient to identify the request in 
question. Or it may contain a single corresponding response Operation TLV, with 
the same DSO-TYPE as in the request message. The specification for each DSO
type determines whether a response for that operation type 
is required to carry the Operation TLV.</t>

<t>If a DSO response is received for an operation which requires
that the response carry an Operation TLV, and the required Operation TLV is not
the first DSO TLV in the response message, then this is a fatal 
error and the recipient of the defective response message MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
<section anchor="modifier-tlvs" title="Modifier TLVs">

<t>A “Modifier TLV” specifies additional parameters
relating to the operation. Immediately following the Operation TLV, if present,
a DSO message MAY contain one or more Modifier TLVs.</t>

</section>
<section anchor="unrecognized-tlvs" title="Unrecognized TLVs">

<t>If a DSO request is received containing an unrecognized
Operation TLV, the receiver MUST send a response with matching
MESSAGE ID, and RCODE DSONOTIMP (tentatively 11). The response MUST NOT contain 
an Operation TLV.</t>

<t>If a DSO message (request or response) is received
containing one or more unrecognized Modifier TLVs, the unrecognized
Modifier TLVs MUST be silently ignored, and the remainder of the message
is interpreted and handled as if the unrecognized parts were not present.</t>

</section>
</section>
<section anchor="edns0-and-tsig" title="EDNS(0) and TSIG">

<t>Since the ARCOUNT field MUST be zero, a DSO message
MUST NOT contain an EDNS(0) option in the additional records section.
If functionality provided by current or future EDNS(0) options is desired
for DSO messages, an Operation TLV or
Modifier TLV needs to be defined to carry the necessary information.</t>

<t>For example, the EDNS(0) Padding Option <xref target="RFC7830"/> used for security purposes
is not permitted in a DSO message,
so if message padding is desired for DSO messages
then the Encryption Padding TLV described in <xref target="padding"/> MUST be used.</t>

<t>Similarly, a DSO message MUST NOT contain a TSIG record.
A TSIG record in a conventional DNS message is added as the last record
in the additional records section, and carries a signature computed over
the preceding message content. Since DSO data appears
after the additional records section, it would not be included in the
signature calculation. 
If use of signatures with DSO messages becomes necessary in the 
future, an explicit Modifier TLV needs to be defined to 
perform this function.</t>

<t>Note however that, while DSO <spanx style="emph">messages</spanx> cannot include
EDNS(0) or TSIG records, a DSO <spanx style="emph">session</spanx> is typically used to 
carry a whole series of DNS messages of different kinds, including DSO
messages, and other DNS message types like Query <xref target="RFC1034"/> 
<xref target="RFC1035"/> and Update <xref target="RFC2136"/>, and those messages can carry EDNS(0) and 
TSIG records.</t>

<t>This specification explicitly prohibits use of the
EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>
in <spanx style="emph">any</spanx> messages sent on a DSO session (because it duplicates
the functionality provided by the DSO Keepalive operation),
but messages may contain other EDNS(0) options as appropriate.</t>

</section>
</section>
<section anchor="message-handling" title="Message Handling">

<t>The initiator MUST set the value of the QR bit in the DNS header to zero
(0), and the responder MUST set it to one (1).
If the Acknowledgement bit is set in the DSO request 
message (QR=0), the receiver MUST elicit a DSO response (QR=1), 
which MUST have the same MESSAGE ID in the DNS message header as in the 
corresponding request. DSO request messages sent by the client 
elicit a response from the server, and DSO request messages sent by
the server elicit a response from the client.</t>

<t>With most TCP implementations, the TCP data acknowledgement (generated because 
data has been received by TCP), the TCP window update (generated because TCP has 
delivered that data to the receiving software) and the DSO 
response (generated by the receiving software itself)
are all combined into a single packet, so in practice the requirement that every
DSO request message MUST elicit a 
DSO response incurs minimal extra cost on the network.
Requiring that every request elicit a corresponding response also avoids
performance problems caused by interaction between
Nagle’s Algorithm and Delayed Ack <xref target="NagleDA"/>.</t>

<t>The namespaces of 16-bit MESSAGE IDs are disjoint in each direction.
For example, it is <spanx style="emph">not</spanx> an error for both client and server to send a request
message with the same ID. In effect, the 16-bit MESSAGE ID combined with the 
identity of the initiator (client or server) serves as a 17-bit unique 
identifier for a particular operation on a DSO session.</t>

<t>As described in <xref target="header"/> An initiator MUST NOT reuse a MESSAGE ID that is 
already in use for an 
outstanding request, unless specified otherwise by the relevant specification 
for the DSO in question. At the very least, this means 
that a MESSAGE ID MUST NOT be reused in a particular direction
on a particular DSO session while the initiator is waiting for a response to a 
previous request on that DSO session, unless specified otherwise by the relevant 
specification for the DSO in question.
(For a long-lived state the MESSAGE ID for the operation
MUST NOT be reused whilst that state remains active.)</t>

<t>If a client or server receives a response (QR=1) where the MESSAGE ID does not
match any of its outstanding operations, this is a fatal error and it MUST 
immediately terminate the connection with a TCP RST (or equivalent for other 
protocols).</t>

</section>
</section>
<section anchor="keepalive" title="Keepalive Operation TLV">

<t>The Keepalive Operation TLV (DSO-TYPE=1) performs two functions: to reset the
keepalive timer for the DSO session and to establish the values for the Session Timeouts.</t>

<t>The Keepalive Operation TLV resets only the keepalive timer, not the inactivity 
timer. The reason for this is that periodic Keepalive Operation TLVs are sent 
for the sole purpose of keeping a DSO session alive because that DSO session has 
current or recent activity that warrants keeping the DSO session alive.
If sending keepalive traffic itself were to reset the inactivity timer, then 
that would create a circular livelock where keepalive traffic would be sent 
indefinitely to keep a DSO session alive, where the only activity on that DSO 
session would be keepalive traffic keeping the DSO session alive so that further 
keepalive traffic can be sent.</t>

<t>Sending keepalive traffic is considered a maintenance activity
that is performed in service of other client activities.
Sending keepalive traffic itself is not considered a client activity.
For a DSO session to be considered active, it must be carrying something more than just keepalive traffic.
This is why merely sending a Keepalive Operation TLV does not reset the inactivity timer.</t>

<t>When sent by a client, the Keepalive Operation TLV resets a DSO session’s keepalive timer,
and at the same time requests what the Session Timeout values should be from this point forward in the DSO session.</t>

<t>An acknowledgement is always required for a Keepalive Operation TLV and the TLV
Acknowledgement bit MUST be set in the request when originated by either the
client or the server.</t>

<t>Once a DSO session is in progress (see <xref target="details"/>)
the Keepalive TLV also MAY be initiated by a server.
When sent by a server, it resets a DSO session’s keepalive timer,
and unilaterally informs the client of the new Session Timeout values to use 
from this point forward in this DSO session.</t>

<t>It is not required that the Keepalive TLV be used in every DSO session.
While many DNS Stateful operations
will be used in conjunction with a long-lived session state,
not all DNS Stateful operations require long-lived session state,
and in some cases the default 15-second value for both the inactivity timeout
and keepalive interval may be perfectly appropriate. However, it can be noted 
that for clients that implement only the TLVs defined in this document it is
the only way for a client to initiate a DSO session.</t>

<t>The TYPE-DEPENDENT DATA for the the Keepalive TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 INACTIVITY TIMEOUT (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 KEEPALIVE INTERVAL (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='INACTIVITY TIMEOUT:'>
  the inactivity timeout for the current DSO session, specified as a 32
bit word in network (big endian) order in units of milliseconds.
This is the timeout at which the client MUST close an inactive DSO session.
If the client does not gracefully close an inactive DSO session then after
twice this interval the server will forcibly terminate the connection
with a TCP RST (or equivalent for other protocols).</t>
  <t hangText='KEEPALIVE INTERVAL:'>
  the keepalive interval for the current DSO session, specified as a 32-bit
word, in network (big endian) order, in units of milliseconds.
This is the interval at which a client MUST generate keepalive
traffic to maintain connection state.
If the client does not generate the necessary keepalive traffic then after
twice this interval the server will forcibly terminate the connection
with a TCP RST (or equivalent for other protocols).</t>
</list></t>

<t>In a client-initiated DSO Keepalive message,
the Session Timeouts contain the client’s requested values.
In a server response to a client-initiated message, the Session Timeouts contain 
the server’s chosen values, which the client MUST 
respect. This is modeled after the DHCP protocol, where the client
requests a certain lease lifetime using DHCP option 51 <xref target="RFC2132"/>,
but the server is the ultimate authority
for deciding what lease lifetime is actually granted.</t>

<t>In a server-initiated DSO Keepalive message, the Session Timeouts unilaterally 
inform the client of the new values from this 
point forward in this DSO session. The client MUST generate a response to the 
server-initiated DSO Keepalive message.
The MESSAGE ID in the response message MUST match the ID from the 
server-initiated DSO Keepalive message, and the response message 
MUST NOT contain any Operation TLV.</t>

<t>When a client is sending its second and subsequent Keepalive DSO 
requests to the server, the client SHOULD continue to request its preferred 
values each time. This allows flexibility, so that if conditions change during 
the lifetime of a DSO session, the server can adapt its responses to better fit 
the client’s needs.</t>

<section anchor="client-handling-of-received-session-timeout-values" title="Client handling of received Session Timeout values">

<t>When a client receives a response to its client-initiated DSO Keepalive message,
or receives a server-initiated DSO Keepalive message, the client has then 
received Session Timeout values dictated by the server. The two timeout values 
contained in the DSO Keepalive TLV from the server may each be higher, lower, or 
the same as the respective Session Timeout values the client previously had for 
this DSO session.</t>

<t>In the case of the keepalive timer, the handling of the received value is 
straightforward. The act of receiving the message containing the DSO Keepalive 
TLV itself resets the keepalive timer and updates the keepalive interval for the 
DSO session. The new keepalive interval indicates the 
maximum time that may elapse before another message must be sent
or received on this DSO session, if the DSO session is to remain alive.</t>

<t>In the case of the inactivity timeout, the handling of the received value 
superficially appears a little more subtle, though the meaning of the inactivity 
timeout is unchanged – it still indicates the maximum permissible time allowed 
without activity on a DSO session.
The act of receiving the message containing the DSO Keepalive TLV does not
itself reset the inactivity timer. The time elapsed since the last useful
activity on this DSO session is unaffected by exchange of DSO Keepalive messages.
The act of receiving the message containing the DSO Keepalive TLV does update 
the timeout associated with the running inactivity timer; that
becomes the new maximum permissible time without activity on a DSO session.</t>

<t><list style="symbols">
  <t>If the inactivity timer value is not greater than the new inactivity timeout, 
then the DSO session may remain open for now. When the inactivity timer value 
exceeds the new inactivity timeout, the client MUST then close the DSO session,
as described above.</t>
  <t>If the inactivity timer value is already greater than the new inactivity 
timeout, then this DSO session has already been inactive
for longer than the server permits, and the client MUST immediately close this DSO session.</t>
  <t>If the inactivity timer value is more than twice the new inactivity timeout, 
then this DSO session is eligible to be
forcibly terminated by the server and and the client MUST immediately close this 
DSO session. However if a server abruptly reduces the
inactivity timeout in this way the server SHOULD give the client a grace period
of one quarter of the new inactivity timeout, to give the client time to close
the connection gracefully before the server resorts to terminating it forcibly.</t>
</list></t>

</section>
<section anchor="relation-to-edns0-tcp-keepalive-option" title="Relation to EDNS(0) TCP Keepalive Option">

<t>The inactivity timeout value in the Keepalive TLV (DSO-TYPE=1) has similar
intent to the EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>.
A client/server pair that supports DSO MUST NOT use the
EDNS(0) TCP KeepAlive option within any message after a DSO 
session has been established.
Once a DSO session has been established, if either
client or server receives a DNS message over the DSO session that contains an
EDNS(0) TCP Keepalive option, this is an error and the receiver of the
EDNS(0) TCP Keepalive option MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="delay" title="Retry Delay TLV">

<t>The Retry Delay TLV (DSO-TYPE=0) can be used as an Operation TLV or as
a Modifier TLV.</t>

<t>The TYPE-DEPENDENT DATA for the the Retry Delay TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     RETRY DELAY (32 bits)                     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='RETRY DELAY:'>
  a time value, specified as a 32 bit word in network order in units of 
milliseconds, within which the client MUST NOT retry this operation, or retry 
connecting to this server.</t>
</list></t>

<t>The RECOMMENDED value is 10 seconds.</t>

<section anchor="use-as-an-operation-tlv" title="Use as an Operation TLV">

<t>When sent in a DSO request message, from server to client, the 
Retry Delay TLV (0) is considered an Operation TLV. It is used by a server 
to request that a client close the DSO session and underlying connection, and 
not to reconnect for the indicated time interval.</t>

<t>In this case it applies to the DSO session as a whole, and the client MUST close the 
DSO session, as described in section <xref target="retry"/>. The RCODE in the message header 
MUST indicate the reason for the termination:</t>

<t><list style="symbols">
  <t>NOERROR indicates a routine shutdown.</t>
  <t>SERVFAIL indicates that the server is overloaded due to resource exhaustion.</t>
  <t>REFUSED indicates that the server has been reconfigured and is no longer able 
to perform one or more of the functions 
currently being performed on this DSO session (for example, a DNS Push Notification 
server could be reconfigured such that is is no longer accepting DNS Push 
Notification requests for one or more of the currently subscribed names).</t>
</list></t>

<t>This document specifies only these three RCODE values for Retry Delay request.
Servers sending Retry Delay requests SHOULD use one of these three values.
However, future circumstances may create situations where other RCODE values
are appropriate in Retry Delay requests, so clients MUST be prepared
to accept Retry Delay requests with any RCODE value.</t>

<t>An acknowledgement is not desired for a Retry Delay Operation TLV and the TLV
Acknowledgement bit MUST be cleared in the request.</t>

</section>
<section anchor="use-as-a-modifier-tlv" title="Use as a Modifier TLV">

<t>When appended to a DSO response message for some client request,
the Retry Delay TLV (0) is considered a Modifier TLV.
The indicated time interval during which the client SHOULD NOT retry
applies only to the failed operation, not to the DSO session as a whole.</t>

<t>In the case of a client request that returns a nonzero RCODE value, the server 
MAY append a Retry Delay TLV (0) to the response, indicating the time interval
during which the client SHOULD NOT attempt this operation again.</t>

</section>
</section>
<section anchor="padding" title="Encryption Padding TLV">

<t>The Encryption Padding TLV (DSO-TYPE=2) can only be used as a Modifier TLV.
It is only applicable when the DSO Transport layer uses encryption
such as TLS.</t>

<t>The TYPE-DEPENDENT DATA for the the Padding TLV is optional and is a
variable length field containing non-specified values. A DATA LENGTH
of 0 essentially provides for 4 octets of padding (the minimum amount).</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   /                                                               /
   /                   VARIABLE NUMBER OF OCTETS                   /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t>As in <xref target="RFC7830"/> the PADDING octets SHOULD be set to 0x00.  Other values MAY be used,
for example, in cases where there is a concern that the padded
message could be subject to compression before encryption.
PADDING octets of any value MUST be accepted in the messages received.</t>

<t>The Encryption Padding TLV may be included in either a DSO
request, response, or both. As in <xref target="RFC7830"/> if a request is received with a Encryption
Padding TLV, then the response MUST also include an Encryption Padding TLV.</t>

<t>The length of padding is intentionally not specified in this document and
is a function of current best practices with respect to the type and length
of data in the preceding TLVs. See <xref target="I-D.ietf-dprive-padding-policy"/></t>

</section>
<section anchor="lifecycle" title="DSO Session Lifecycle and Timers">

<section anchor="dso-session-initiation" title="DSO Session Initiation">

<t>A session begins when a client makes a new connection to a server.</t>

<t>A DSO session begin as described in <xref target="establishment"/>.</t>

<t>The client may perform as many DNS operations as it wishes using the
newly created DSO session. Operations SHOULD be pipelined (i.e., the
client doesn’t need wait for a response before sending the next message).
The server MUST act on messages in the order they are transmitted, but
responses to those messages MAY be sent out of order, if appropriate.</t>

</section>
<section anchor="sessiontimeouts" title="DSO Session Timeouts">

<t>Two timeout values are associated with a DSO session: the inactivity timeout, and 
the keepalive interval.</t>

<t>The first timeout value, the inactivity timeout, is the maximum time for which
a client may speculatively keep a DSO session open in the expectation that
it may have future requests to send to that server.</t>

<t>The second timeout value, the keepalive interval, is the maximum permitted
interval between client messages to the server if the client wishes to keep
the DSO session alive.</t>

<t>The two timeout values are independent. The inactivity timeout may be lower, the 
same, or higher than the keepalive interval, though in most cases the inactivity 
timeout is expected to be shorter than the keepalive interval.</t>

<t>Only when the client has a very long-lived low-traffic state does the 
keepalive interval come into play, to ensure that a sufficient residual
amount of traffic is generated to maintain NAT and firewall state.</t>

<t>On a new DSO session, if no explicit DSO Keepalive message exchange has taken 
place, the default value for both timeouts is 15 seconds.
For both timeouts, lower values of the timeout result in higher network traffic
and higher CPU load on the server.</t>

</section>
<section anchor="inactivetimer" title="Inactive DSO Sessions">

<t>At both servers and clients, the generation or reception of any complete
DNS message, including DNS requests, responses, updates, or DSO
messages, resets both timers for that DSO session, with the exception
that a DSO Keepalive message resets only the keepalive timer, not the inactivity 
timeout timer.</t>

<t>In addition, for as long as the client has an outstanding operation in progress,
the inactivity timer remains cleared, and an inactivity 
timeout cannot occur.</t>

<t>For short-lived DNS operations like traditional queries and updates,
an operation is considered in progress for the time between request and 
response, typically a period of a few hundred milliseconds at most.
At the client, the inactivity timer is cleared upon transmission of a 
request and remains cleared until reception of the corresponding response.
At the server, the inactivity timer is cleared upon reception of a request
and remains cleared until transmission of the corresponding response.</t>

<t>For long-lived DNS Stateful operations, an operation is considered in progress
for as long as the state is active, until it is cancelled.
This means that a DSO session can exist, with a state 
active, with no messages flowing in either direction, for far longer than the 
inactivity timeout, and this is not an error. This is why there are two separate 
timers: the inactivity timeout, and the keepalive interval. Just because a DSO 
session has no traffic for an extended period of time
does not automatically make that DSO session “inactive”, if it has an active 
state that is awaiting for events.</t>

</section>
<section anchor="the-inactivity-timeout" title="The Inactivity Timeout">

<t>The purpose of the inactivity timeout is for the server to balance its trade off 
between the costs of setting up new DSO sessions and the costs of maintaining inactive 
DSO sessions. A server with abundant DSO session capacity can offer a high inactivity timeout, 
to permit clients to keep a speculative DSO session open for a long time, to save 
the cost of establishing a new DSO session for future communications with that 
server. A server with scarce memory resources can offer a low inactivity timeout,
to cause clients to promptly close DSO sessions whenever they have no outstanding
operations with that server, and then create a new DSO session later when needed.</t>

<section anchor="closing-inactive-dso-sessions" title="Closing Inactive DSO Sessions">

<t>A client is NOT required to wait until the inactivity timeout expires
before closing a DSO session.
A client MAY close a DSO session at any time, at the client’s discretion.
If a client determines that it has no current or reasonably anticipated
future need for an inactive DSO session, then the client SHOULD close that connection.</t>

<t>If, at any time during the life of the DSO session,
the inactivity timeout value (i.e., 15 seconds by default) elapses
without there being any operation active on the DSO session,
the client MUST gracefully close the connection with a TCP FIN
(or equivalent for other protocols).</t>

<t>If, at any time during the life of the DSO session, twice the inactivity timeout value
(i.e., 30 seconds by default) elapses without there being any operation
active on the DSO session, the server SHOULD consider the client delinquent,
and forcibly abort the DSO session.
For DSO sessions over TCP (or over TLS over TCP),
to avoid the burden of having a connection in TIME-WAIT state, instead of
closing the connection gracefully with a TCP FIN the server SHOULD abort
the connection with a TCP RST (or equivalent for other protocols).
(In the BSD Sockets API this is achieved by setting the
SO_LINGER option to zero before closing the socket.)</t>

<t>In this context, an operation being active on a DSO session includes
a query waiting for a response, an update waiting for a response,
or active state,
but not a DSO Keepalive message exchange itself.
A DSO Keepalive message exchange resets only the keepalive
interval timer, not the inactivity timeout timer.</t>

<t>If the client wishes to keep an inactive DSO session open for longer than
the default duration without having to send traffic every 15 seconds,
then it uses the DSO Keepalive message to request
longer timeout values, as described in <xref target="keepalive"/>.</t>

</section>
<section anchor="values-for-the-inactivity-timeout" title="Values for the Inactivity Timeout">

<t>For the inactivity timeout value, lower values result in more frequent DSO session 
teardown and re-establishment. Higher values result in lower traffic and CPU
load on the server, but a larger memory burden to maintain state for inactive 
DSO sessions.</t>

<t>A shorter inactivity timeout with a longer keepalive interval signals to the client 
that it should not speculatively keep inactive DSO sessions open for very long for no 
reason, but when it does have an active reason to keep a DSO session open, it 
doesn’t need to be sending an aggressive level of keepalive traffic.</t>

<t>A longer inactivity timeout with a shorter keepalive interval signals to the client
that it may speculatively keep inactive DSO sessions open for a long time, but it
should be sending a lot of keepalive traffic on those inactive DSO sessions.
This configuration is expected to be less common.</t>

<t>To avoid excessive traffic the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with an inactivity timeout value less than ten seconds.
If a client receives a Keepalive message specifying an inactivity timeout value
less than ten seconds this is an error and the client MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="keepalivetimer" title="The Keepalive Interval">

<t>The purpose of the keepalive interval is to manage the generation of
sufficient messages to maintain state in middle-boxes (such at NAT gateways
or firewalls) and for the client and server to periodically verify that they
still have connectivity to each other. This allows them to clean up state
when connectivity is lost, and attempt re-connection if appropriate.</t>

<section anchor="keepalive-interval-expiry" title="Keepalive Interval Expiry">

<t>If, at any time during the life of the DSO session,
the keepalive interval value (i.e., 15 seconds by default) elapses
without any DNS messages being sent or received on a DSO session,
the client MUST take action to keep the DSO session alive.
To keep the DSO session alive the client MUST send a
DSO Keepalive message (see <xref target="keepalive"/>).
A DSO Keepalive message exchange resets only the keepalive timer, 
not the inactivity timer.</t>

<t>If a client disconnects from the network abruptly,
without cleanly closing its DSO session,
leaving long-lived state uncanceled,
the server learns of this after failing to
receive the required keepalive traffic from that client.
If, at any time during the life of the DSO session,
twice the keepalive interval value (i.e., 30 seconds by default) elapses
without any DNS messages being sent or received on a DSO session,
the server SHOULD consider the client delinquent,
and forcibly abort the connection with a TCP RST (or equivalent for other 
protocols).</t>

</section>
<section anchor="values-for-the-keepalive-interval" title="Values for the Keepalive Interval">

<t>For the keepalive interval value, lower values result in higher volume keepalive 
traffic. Higher values of the keepalive interval reduce traffic and CPU load, 
but have minimal effect on the memory burden
at the server, because clients keep a DSO session open for the same length of time
(determined by the inactivity timeout) regardless of the level of keepalive traffic 
required.</t>

<t>It may be appropriate for clients and servers to select different keepalive 
interval values depending on the nature of the network they are on.</t>

<t>A corporate DNS server that knows it is serving only clients on the internal 
network, with no intervening NAT gateways or firewalls, can impose a higher 
keepalive interval, because frequent keepalive traffic is not required.</t>

<t>A public DNS server that is serving primarily residential consumer clients, 
where it is likely there will be a NAT gateway on the path, may impose a lower 
keepalive interval, to generate more frequent keepalive traffic.</t>

<t>A smart client may be adaptive to its environment. A client using
a private IPv4 address <xref target="RFC1918"/> to communicate with a DNS server
at an address that is not in the same IPv4 private address block,
may conclude that there is likely to be a NAT gateway on the path,
and accordingly request a lower keepalive interval.</t>

<t>For environments where there is a NAT gateway or firewalls on the path, it is
RECOMMENDED that clients request, and servers grant, a keepalive interval of 15
minutes. In other environments it is RECOMMENDED that clients request, and 
servers grant, a keepalive interval of 60 minutes.</t>

<t>Note that the lower the keepalive interval value, the higher the load on client
and server. For example, an keepalive interval value of 100ms would result in a
continuous stream of at least ten messages per second, in both directions,
to keep the DSO session alive. And, in this extreme example, a single packet loss and
retransmission over a long path could introduce a momentary pause in the stream of messages,
long enough to cause the server to overzealously abort the connection.</t>

<t>Because of this concern, the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with an keepalive interval value less than ten seconds.
If a client receives an Keepalive message specifying an keepalive interval value
less than ten seconds this is an error and the client MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="server-initiated-termination-on-error" title="Server-Initiated Termination on Error">

<t>After sending an error response to a client, the server MAY close the DSO session,
or may allow the DSO session to remain open. For error conditions
that only affect the single operation in question, the server SHOULD return an
error response to the client and leave the DSO session open for further operations.
For error conditions that are likely to make all operations unsuccessful in the
immediate future, the server SHOULD return an error response to the client and 
then close the DSO session by sending a Retry Delay request message, as described in 
<xref target="delay"/>.</t>

</section>
<section anchor="error" title="Client Behaviour in Receiving an Error">

<t>Upon receiving an error response from the server, a client SHOULD NOT
automatically close the DSO session. An error relating to one particular operation
on a DSO session does not necessarily imply that all other operations on that
DSO session have also failed, or that future operations will fail. The client
should assume that the server will make its own decision about whether or not to
close the DSO session, based on the server’s determination of whether the error
condition pertains to this particular operation, or would also apply to any
subsequent operations. If the server does not close the DSO session then the client
SHOULD continue to use that DSO session for subsequent operations.</t>

</section>
<section anchor="server-initiated-termination-on-overload" title="Server-Initiated Termination on Overload">

<t>Apart from the cases where:</t>

<t><list style="symbols">
  <t>Session Timeouts expire (see <xref target="sessiontimeouts"/>)</t>
  <t>On error (see {Section <xref target="error"/>)</t>
  <t>When under load (see below)</t>
</list></t>

<t>a server MUST NOT close a DSO session with a client, except in extraordinary error 
conditions. Closing the DSO session is the
client’s responsibility, to be done at the client’s discretion, when it so 
chooses. A server only closes a DSO session under exceptional circumstances, such as
when the server application software or underlying operating system is
restarting, the server application terminated unexpectedly (perhaps due to a
bug that makes it crash), or the server is undergoing maintenance procedures.
When possible, a server SHOULD send a Retry Delay message informing the
client of the reason for the DSO session being closed, and allow the client
five seconds to receive it before the server resorts to forcibly aborting the 
connection.</t>

</section>
<section anchor="retry" title="Retry Delay Operation TLV">

<t>There may be rare cases where a server is overloaded and wishes to shed load.
If a server is low on resources it MAY simply terminate a client connection with 
a TCP RST (or equivalent for other protocols).
However, the likely behavior of the client may be simply to to treat this as a
network failure and connect
immediately, putting more burden on the server.</t>

<t>Therefore to avoid this reconnection implosion, a server SHOULD instead choose 
to shed client load by sending a Retry Delay request message, with an RCODE of 
SERVFAIL, to inform the client of the overload situation. After sending a Retry 
Delay request message, the server MUST NOT send any further messages on that 
DSO session.</t>

<t>After sending the Retry Delay request the server SHOULD allow the
client five seconds to close the connection, and if the client has not
closed the connection after five seconds then the server SHOULD abort
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>Upon receipt of a Retry Delay request from the server, the client MUST
make note of the reconnect delay for this server, and then immediately
close the connection. This is to place the burden of TCP’s TIME-WAIT state on 
the client.</t>

<t>A Retry Delay request message MUST NOT be initiated by a client.
If a server receives a Retry Delay request message this is an error
and the server MUST immediately terminate the connection with a TCP RST
(or equivalent for other protocols).</t>

<section anchor="outstanding-operations" title="Outstanding Operations">

<t>At the moment a server chooses to initiate a Retry Delay request message
there may be DNS requests already in flight from client to server on this 
DSO session, which will arrive at the server after its Retry Delay request message 
has been sent.
The server MUST silently ignore such incoming requests, and MUST NOT generate
any response messages for them. When the Retry Delay request message from the
server arrives at the client, the client will determine that any DNS requests
it previously sent on this DSO session, that have not yet received a response, now 
will certainly not be receiving any response. Such requests should be considered
failed, and should be retried at a later time, as appropriate.</t>

<t>In the case where some, but not all, of the existing operations on a DSO session 
have become invalid (perhaps because the server has been reconfigured and is no 
longer authoritative for some of the names),
but the server is terminating all DSO sessions en masse with a REFUSED (5) RCODE,
the RECONNECT DELAY MAY be zero, indicating that the clients SHOULD immediately
attempt to re-establish operations.
It is likely that some of the attempts will be successful and some will not.</t>

<t>In the case where a server is terminating a large number of DSO sessions at once
(e.g., if the system is restarting) and the server doesn’t want to be inundated 
with a flood of simultaneous retries, it SHOULD send different RECONNECT delay 
values to each client.
These adjustments MAY be selected randomly, pseudorandomly, or deterministically
(e.g., incrementing the time value by one tenth of a second for each successive
client, yielding a post-restart reconnection rate of ten clients per second).</t>

</section>
<section anchor="client-reconnection" title="Client Reconnection">

<t>After a DSO session is closed by the server, the client SHOULD try to reconnect,
to that server, or to another suitable server, if more than one is available.
If reconnecting to the same server, the client MUST respect the indicated delay
before attempting to reconnect.</t>

<t>If a particular server does not want a client to reconnect (it is being
de-commissioned), it SHOULD set the retry delay to the maximum value (which is
approximately 497 days). If the server will only be out of service for a maintenance
period, it should use a value closer to the expected maintenance window and
not default to a very large delay value or clients may not attempt to reconnect
after it resumes service.</t>

</section>
</section>
</section>
<section anchor="sharing" title="Connection Sharing">

<t>As in <xref target="RFC7766"/>, to mitigate the risk of unintentional server overload, DNS clients
MUST take care to minimize the number of concurrent TCP connections
made to any individual server.  It is RECOMMENDED that for any given
client/server interaction there SHOULD be no more than one connection
for regular queries, one for zone transfers, and one for each
protocol that is being used on top of TCP (for example, if the
resolver was using TLS).  However, it is noted that certain primary/
secondary configurations with many busy zones might need to use more
than one TCP connection for zone transfers for operational reasons
(for example, to support concurrent transfers of multiple zones).</t>

<t>A single server may support multiple services, including DNS Updates 
<xref target="RFC2136"/>, DNS Push Notifications <xref target="I-D.ietf-dnssd-push"/>,
and other services, for one or more DNS zones.
When a client discovers that the target server for several different operations
is the same target hostname and port, the client SHOULD use a single
shared DSO session for all those operations.
A client SHOULD NOT open multiple connections to the same target host and port
just because the names being operated on are different or
happen to fall within different zones.
This is to reduce unnecessary connection load on the DNS server.</t>

<t>However, server implementers and operators should be aware that connection
sharing may not be possible in all cases.
A single client device may be home to multiple independent client software
instances that don’t coordinate with each other.
Similarly, multiple independent client devices behind the same NAT gateway
will also typically appear to the DNS server as different source ports on
the same client IP address.
Because of these constraints, a DNS server MUST be prepared to accept
multiple connections from different source ports on the same client IP address.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="dso-opcode-registration" title="DSO OPCODE Registration">

<t>IANA are directed to assign a value (tentatively 6)
in the DNS OPCODEs Registry for the DSO OPCODE.</t>

</section>
<section anchor="dso-rcode-registration" title="DSO RCODE Registration">

<t>IANA are directed to assign a value (tentatively 11)
in the DNS RCODE Registry for the DSONOTIMP error code.</t>

</section>
<section anchor="dso-type-codes-registry" title="DSO Type Codes Registry">

<t>IANA are directed to create the 15-bit DSO Type Codes
Registry, with initial values as follows:</t>

<texttable>
      <ttcol align='right'>Type</ttcol>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Status</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>0x0000</c>
      <c>RetryDelay</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0001</c>
      <c>KeepAlive</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0002</c>
      <c>Encryption Padding</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0003 - 0x003F</c>
      <c>Unassigned, reserved for DSO session management TLVs</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x0040 - 0x77FF</c>
      <c>Unassigned</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x7800 - 0x7BFF</c>
      <c>Reserved for local / experimental use</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x7C00 - 0x7FFF</c>
      <c>Reserved for future expansion</c>
      <c>&#160;</c>
      <c>&#160;</c>
</texttable>

<t>Registration of additional DSO Type Codes requires publication
of an appropriate IETF “Standards Action” or “IESG Approval” document <xref target="RFC5226"/>.</t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>If this mechanism is to be used with DNS over TLS, then these messages
are subject to the same constraints as any other DNS over TLS messages
and MUST NOT be sent in the clear before the TLS session is established.</t>

<t>The data field of the “Encryption Padding” TLV could be used as a covert channel.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to
Tim Chown,
Ralph Droms,
Jan Komissar,
Manju Shankar Rao,
and Ted Lemon
for their helpful contributions to this document.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC1035;
&RFC7766;
&RFC6891;
&RFC7828;
&RFC2119;
&RFC7830;
&RFC1034;
&RFC2136;
&RFC2132;
&RFC1918;
&RFC5226;


    </references>

    <references title='Informative References'>

<reference anchor="NagleDA" target="http://www.stuartcheshire.org/papers/nagledelayedack/">
  <front>
    <title>TCP Performance problems caused by interaction between Nagle's Algorithm and Delayed ACK</title>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization></organization>
    </author>
    <date year="2005" month="May" day="20"/>
  </front>
</reference>
&RFC7858;
&I-D.ietf-dnssd-push;
&RFC0768;
&I-D.ietf-dprive-padding-policy;


    </references>



  </back>

<!-- ##markdown-source:
H4sIAJBDCloAA+197XIbR5Lg/3qKOuqHRS8Ak5Il2dq4uKEpysMZSdSQlGdn
/1w0gAbZFtCN6W6QwkiK2Ae5e7l9ksvPqqzuBkV7fHMTGyePRiTQXZWVlZXf
mTUej11btMv8uX/x5sJftFmbLzZLf7bO66wtqrJx82pWZit4YF5ni3Zc5O1i
PC+baj1u8qaBR8ZNcVVmy/HBEzeH15/7RweHz1yxrp/7tt407aODg+8PHrms
zrPn/rRs87rMW3d7RVOevfV/rur3RXnlf6yrzdq9v40PjV/glG6Wtc99087d
Zo0TNM/9+ctj/+zZ06cj+unw4PET52bVHEZ57jcA33duXTx33o99W83o32a7
qvNFwz9XdUu/uGzTXlc1PQl/vS9KHHzif8iXy6Khj3jt59nWfljVVxFKf7Ft
2nzV+GNAFwxdbFYj+HI2oUez6bTOb+Dpi2P6vYGpc1jP908O/PF1VsMYgHb8
jL6eFe0Wpsvnt1U198fwG39czQGK4yP//bcHTx/LR5uyreHhdxdH9MH6uirh
oX859E9h7G8fPfaHgHr6Kl9lxfK5r7Pt74pmNgHw0yVfTACWvLku6tws+qLd
AHzpN7Tyo/V6mccl6pIO4aNFURZt7l9V1dqs53gD9NQWZdVZzJODw2+/tJhv
D77z3z/71j9+dPDMLmYmYP0uQ2gms2qVrukPE/+imAFlNVVpFvWH6rrsfEFr
ugDo5psy7uplPrsuq2V1VeRNspPypF06/Tz2r7OrbJ4t89If57CcXD4++7Co
6rm/mBV5Ocv926x+b3DD3xrEnP3bt/7bH486eEG0zv0fgcTntNKAh5+z+e8a
BqmPhIthJFxkdfZfCgkNLGg3Fo4mAFUJizUoOMLDXJX2C0YBgN4AMLPcjp/x
05MVPf27K/y0P8/lxL/dNMCi6sLMdFmt0o9pnndltlgUywI+nienaG/PMgKA
pri6Noh5c+wfPXt68N2Xjs33h9/7754+84ePHyc8YC2Q/G6alVc/0xpcUcKC
V8Dvb3LcxTfZ1TJ/ccQb2mb1FYJ13bbr5998c3t7O2mIL+j5Q27yzTqDA958
U+Kb83yZbfN5Nnv/DY/A8uXy+K1/m9c0E1LAuq6mS2Sbs2zTwK5Ot4BEgCyb
odzx07y9zYGICJivGtivq6ou2uuVz8q5f8Fz+KPjPzJZBkZ+N/vawe9Ubh08
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
i+nGKC+mqyTABSfeT7PZe/d/AERY1VGg6wAA

-->

</rfc>

