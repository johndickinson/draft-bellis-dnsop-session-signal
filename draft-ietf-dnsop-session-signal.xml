<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.7 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC7766 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7766.xml">
<!ENTITY RFC6891 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6891.xml">
<!ENTITY RFC7828 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7828.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC7830 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7830.xml">
<!ENTITY RFC1034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC2136 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2136.xml">
<!ENTITY RFC2132 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2132.xml">
<!ENTITY RFC1918 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1918.xml">
<!ENTITY RFC5226 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5226.xml">
<!ENTITY RFC7858 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7858.xml">
<!ENTITY RFC6763 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6763.xml">
<!ENTITY I-D.ietf-dnssd-push SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dnssd-push.xml">
<!ENTITY RFC0768 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.0768.xml">
<!ENTITY I-D.ietf-dprive-padding-policy SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dprive-padding-policy.xml">
]>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-dnsop-session-signal-05" category="std" updates="RFC 7766, RFC 1035">

  <front>
    <title>DNS Stateful Operations</title>

    <author initials="R." surname="Bellis" fullname="Ray Bellis">
      <organization abbrev="ISC">Internet Systems Consortium, Inc.</organization>
      <address>
        <postal>
          <street>950 Charter Street</street>
          <city>Redwood City</city>
          <code>CA 94063</code>
          <country>USA</country>
        </postal>
        <phone>+1 650 423 1200</phone>
        <email>ray@isc.org</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>1 Infinite Loop</street>
          <city>Cupertino</city>
          <code>CA 95014</code>
          <country>USA</country>
        </postal>
        <phone>+1 408 974 3207</phone>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="J." surname="Dickinson" fullname="John Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>jad@sinodun.com</email>
      </address>
    </author>
    <author initials="S." surname="Dickinson" fullname="Sara Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>sara@sinodun.com</email>
      </address>
    </author>
    <author initials="A." surname="Mankin" fullname="Allison Mankin">
      <organization>Salesforce</organization>
      <address>
        <email>allison.mankin@gmail.com</email>
      </address>
    </author>
    <author initials="T." surname="Pusateri" fullname="Tom Pusateri">
      <organization>Unaffiliated</organization>
      <address>
        <postal>
          <street></street>
          <city>Raleigh</city>
          <code>NC 27608</code>
          <country>USA</country>
        </postal>
        <phone>+1 919 867 1330</phone>
        <email>pusateri@bangj.com</email>
      </address>
    </author>

    <date year="2017" month="November" day="19"/>

    <area>Internet</area>
    <workgroup>DNSOP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document defines a new DNS Stateful Operation OPCODE used to communicate 
operations within persistent stateful sessions, expressed using type-length-value (TLV) 
syntax, and defines an initial set of TLVs used to manage session timeouts and 
termination. This mechanism is intended to reduce the overhead of existing 
“per-packet” signaling mechanisms with “per-message” semantics as well as 
defining new stateful operations not defined in EDNS(0).</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The use of transports for DNS other than UDP is being increasingly specified,
for example, DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> and DNS over TLS <xref target="RFC7858"/>.
Such transports can offer persistent, long-lived sessions and therefore when
using them for transporting DNS messages it is of benefit to have a mechanism
that can establish parameters associated with those sessions, such as timeouts.
In such situations it is also advantageous to support server initiated messages.</t>

<t>The existing EDNS(0) Extension Mechanism for DNS <xref target="RFC6891"/> is explicitly
defined to only have “per-message” semantics. Whilst EDNS(0) has been used to
signal at least one session-related parameter (the EDNS(0) TCP Keepalive option
<xref target="RFC7828"/>) the result is less than optimal due to the restrictions
imposed by the EDNS(0) semantics and the lack of server-initiated signalling. 
For example, a server cannot arbitrarily 
instruct a client to close a connection because the server can only send EDNS(0) options 
in responses to queries that contained EDNS(0) options.</t>

<t>This document defines a new DNS Stateful Operation OPCODE used to carry
operations within persistent stateful connections, expressed using type-length-value (TLV)
syntax, and
defines an initial set of TLVs including ones used to manage session timeouts and termination.</t>

<t>This new format has distinct advantages over an RR-based format because it
is more explicit and more compact. Each TLV definition is specific
to the use case, and as a result contains no redundant or overloaded fields.
Importantly, it completely avoids conflating DNS Stateful Operations in anyway 
with normal DNS operations or with existing EDNS(0) based functionality. A goal 
of this approach is to avoid the operational
issues that have befallen EDNS(0), particularly relating to middle-box 
behaviour.</t>

<t>With EDNS(0), multiple options may be packed into a single OPT pseudo-RR,
and there is no generalized mechanism for a client to be able to tell
whether a server has processed or otherwise acted upon each individual
option within the combined OPT RR.
The specifications for each individual option need to define how each
different option is to be acknowledged, if necessary.</t>

<t>With DNS Stateful Operations, in contrast, there is no compelling motivation
to pack multiple operations into a single message for efficiency reasons.
Each Stateful operation is communicated in its own separate
DNS message, and the transport protocol can take care of packing
separate DNS messages into a single IP packet if appropriate.
For example, TCP can pack multiple small DNS messages into a single TCP segment.
The RCODE in each response message indicates the success or failure of the operation in question.</t>

<t>It should be noted that the message format for DNS Stateful Operations
(see <xref target="format"/>) differs from the traditional DNS packet
format used for standard queries and responses.
The standard twelve-octet header is used, but the four count fields
(QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) are set to zero and their
corresponding sections are not present.
The actual data pertaining to DNS Stateful Operations is
appended to the end of the DNS message header.
When displayed using today’s packet analyzer tools that have not been updated
to recognize the DNS Stateful Operations format, this will result
in the Stateful Operations data being displayed as unknown additional
data after the end of the DNS message. It is likely that future updates
to these tools will add the ability to recognize, decode, and display the
Stateful Operations data.</t>

</section>
<section anchor="terminology" title="Terminology">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and
“OPTIONAL” in this document are to be interpreted as described in
“Key words for use in RFCs to Indicate Requirement Levels” <xref target="RFC2119"/>.</t>

<t>“DSO” is used to mean DNS Stateful Operation.</t>

<t>The term “connection” means a bidirectional byte stream of reliable,
in-order messages, such as provided by using
DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> or DNS over TLS <xref target="RFC7858"/>.</t>

<t>The unqualified term “session” in the context of this document means the exchange of
DNS messages over a connection where:</t>

<t><list style="symbols">
  <t>The connection between client and server is persistent and relatively
long-lived (i.e., minutes or hours, rather than seconds).</t>
  <t>Either end of the connection may initiate messages to the other.</t>
</list></t>

<t>A “DSO session” is established between two endpoints that
acknowledge persistent DNS state via the exchange of DSO messages
over the connection. This is distinct from, for example a DNS-over-TCP session
as described in RC7766.</t>

<t>A “DSO session” is terminated when the underlying connection is closed.</t>

<t>The term “server” means the software with a listening socket, awaiting
incoming connection requests.</t>

<t>The term “client” means the software which initiates a connection
to the server’s listening socket.</t>

<t>The terms “initiator” and “responder” correspond respectively to the
initial sender and subsequent receiver of a DSO request message,
regardless of which was the “client” and “server” in the usual DNS sense.</t>

<t>The term “sender” may apply to either an initiator
(when sending a DNS Stateful Operation request message)
or a responder (when sending a DNS Stateful Operation response message).</t>

<t>Likewise, the term “receiver” may apply to either a responder
(when receiving a DNS Stateful Operation request message)
or an initiator (when receiving a DNS Stateful Operation response message).</t>

<t>DNS Stateful Operations are expressed using type-length-value (TLV) syntax.</t>

<t>Two timers (elapsed time since an event) are defined in this document:</t>

<t><list style="symbols">
  <t>an inactivity timer (see <xref target="keepalive"/> and <xref target="inactivetimer"/>)</t>
  <t>a keepalive timer (see <xref target="keepalive"/> and <xref target="keepalivetimer"/>)</t>
</list></t>

<t>The timeouts associated with these timers are called the inactivity timeout and 
the keepalive interval respectively. 
The term “Session Timeouts” is used to refer to this pair of timeout values.</t>

<t>Reseting a timer means resetting the timer value to zero and starting the timer 
again. Clearing a timer means resetting the timer value to zero but NOT starting 
the time again.</t>

</section>
<section anchor="discussion" title="Discussion">

<t>There are several use cases for DNS Stateful operations that can 
be described here.</t>

<t>Firstly, establishing session parameters such as server defined timeouts is of 
great use in the 
general management of persistent connections. For example, using DSO sessions 
for stub to recursive DNS-over-TLS <xref target="RFC7858"/> is more flexible for both the 
client and the server than attempting to manage sessions using just the EDNS(0)
TCP Keepalive option
<xref target="RFC7828"/>. The simple set of TLVs defined in this document is
sufficient to greatly enhance connection management for this use case.</t>

<t>Secondly, DNS-SD <xref target="RFC6763"/> has evolved into a naturally session based mechanism where,
for example, long-lived subscriptions lend themselves to ‘push’ mechanisms as 
opposed to polling. Long-lived stateful connections and server initiated 
messages align with this use case <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>A general use case is that DNS traffic is often bursty but session establishment 
can be expensive. One challenge with long-lived connections is to maintain 
sufficient traffic to maintain NAT and firewall state.
To mitigate this issue this document introduces a
new concept for the DNS, that is DSO “Keepalive traffic”.
This traffic carries no DNS data and is not considered ‘activity’
in the classic DNS sense, but serves to maintain state in middle boxes,
and to assure client and server that they still have connectivity to each other.</t>

<t>There are a myriad of other potential use cases for DSO given the versatility 
and extensibility of this specification.</t>

<t><xref target="details"/> of this document describes the protocol details of DNS Stateful
Operations including definitions of three TLVs for session management and 
encryption padding. <xref target="lifecycle"/> presents a
detailed discussion of the DSO Session lifecycle including an
in-depth discussion of keepalive traffic and session termination.</t>

</section>
<section anchor="details" title="Protocol Details">

<section anchor="establishment" title="DSO Session Establishment">

<t>DSO messages MUST only be carried in protocols and in
environments where a session may be established according to the definition above.
Standard DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/>, and DNS over TLS <xref target="RFC7858"/>
are suitable protocols.</t>

<t>DNS over plain UDP <xref target="RFC0768"/> is not appropriate since it fails on the requirement for
in-order message delivery, and, in the presence of NAT gateways and firewalls
with short UDP timeouts, it fails to provide a persistent bi-directional
communication channel unless an excessive amount of keepalive traffic is used.</t>

<t>DSO messages relate only to the specific “DSO session” in which
they are being carried. A “DSO session” is established over a connection when
either side of the connection sends the first DSO
TLV and it is acknowledged by the other side. The DSO message format <xref target="dsodata"/> 
includes an option to specify that a DSO request does not require a 
response acknowledgement. Session establishment can only be performed using a 
DSO message that requires a response acknowledgement.</t>

<t>While this 
specification defines an initial set of three TLVs, additional TLVs may be 
defined in additional specifications. All three of the TLVs defined here are 
mandatory to implement.</t>

<t>A client MAY attempt to initiate DSO messages at any time
on a connection; receiving a NOTIMP response in reply indicates that the
server does not implement DSO, and the client SHOULD NOT
issue further DSO messages on that connection.</t>

<t>A server SHOULD NOT initiate DSO messages until a
client-initiated DSO message is received first,
unless in an environment where it is known in advance by other
means that the client supports DSO.
This requirement is to ensure that the clients that do not support
DSO do not receive unsolicited inbound DSO
messages that they would not know how to handle.</t>

<t>On a session between a client and server that support DSO,
once the client has sent at least one DSO message (or it is
known in advance by other means that the client supports DSO)
either end may unilaterally send DSO messages at any time,
and therefore either client or server may be the initiator of a message.</t>

<t>From this point on it is considered that a “DSO session” is in progress.
Clients and servers should behave as described in this specification with
regard to inactivity timeouts and connection close, not as prescribed in
the previous specification for DNS over TCP <xref target="RFC7766"/>.</t>

<section anchor="middle-box-considerations" title="Middle-box Considerations">

<t>Where an application-layer middle box (e.g., a DNS proxy, forwarder, or
session multiplexer) is in the path the middle box MUST NOT blindly
forward DSO messages in either direction, and MUST treat the inbound
and outbound connections as separate sessions.  This does not preclude
the use of DSO messages in the presence of an IP-layer middle box such
as a NAT that rewrites IP-layer and/or transport-layer headers, but
otherwise preserves the effect of a single session between the client
and the server.</t>

<t>To illustrate the above, consider a network where a middle box
terminates one or more TCP connections from clients and multiplexes the
queries therein over a single TCP connection to an upstream server.  The
DSO messages and any associated state are specific to the individual
TCP connections.  A DSO-aware middle box MAY in some circumstances be
able to retain associated state and pass it between the client and
server (or vice versa) but this would be highly TLV-specific.  For
example, the middle box may be able to maintain a list of which clients
have made Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/> and
make its own subscription(s) on their behalf, relaying any subsequent
notifications to the client (or clients) that have subscribed to that
particular notification.</t>

</section>
</section>
<section anchor="format" title="Message Format">

<t>A DSO message begins with
the standard twelve-octet DNS message header <xref target="RFC1035"/>
with the OPCODE field set to the DSO OPCODE (tentatively 6).
However, unlike standard DNS messages, the question section, answer section,
authority records section and additional records sections are not present.
The corresponding count fields (QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) MUST be
set to zero on transmission.</t>

<t>If a DSO message is received where any of the count fields are
not zero, then a FORMERR MUST be returned,
unless a future document specifies otherwise.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                          MESSAGE ID                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |QR |    OPCODE     |            Z              |     RCODE     |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     QDCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ANCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     NSCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ARCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                           DSO Data                            /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<section anchor="header" title="Header">

<t>In a request the MESSAGE ID field MUST be set to a unique value, that the
initiator is not currently using for any other active operation on this 
connection.
For the purposes here, a MESSAGE ID is in use in this DSO session if the
initiator has used it in a request for which it has not yet received a
response, or if the client has used it to setup state that it has not yet
deleted. For example, state could be a subscription <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>In a response the MESSAGE ID field MUST contain a copy of the value of the
MESSAGE ID field in the request being responded to.</t>

<t>In a request the DNS Header QR bit MUST be zero (QR=0).
If the QR bit is not zero the message is not a request.</t>

<t>In a response the DNS Header QR bit MUST be one (QR=1).
If the QR bit is not one the message is not a response.</t>

<t>The DNS Header OPCODE field holds the DSO OPCODE value (tentatively 6).</t>

<t>The Z bits are currently unused in DSO messages,
and in both DSO requests and DSO responses the
Z bits MUST be set to zero (0) on transmission and MUST be silently ignored
on reception, unless a future document specifies otherwise.</t>

<t>In a request message (QR=0) the RCODE is generally set to zero on transmission,
and silently ignored on reception, except where specified otherwise
(for example, the Retry Delay operation (see <xref target="delay"/>), where the RCODE indicates the reason
for termination).</t>

<t>The RCODE value in a response may be one of the following values:</t>

<texttable>
      <ttcol align='right'>Code</ttcol>
      <ttcol align='left'>Mnemonic</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>0</c>
      <c>NOERROR</c>
      <c>Operation processed successfully</c>
      <c>1</c>
      <c>FORMERR</c>
      <c>Format error</c>
      <c>2</c>
      <c>SERVFAIL</c>
      <c>Server failed to process request due to a problem with the server</c>
      <c>3</c>
      <c>NXDOMAIN</c>
      <c>Name Error — Named entity does not exist (TLV-dependent)</c>
      <c>4</c>
      <c>NOTIMP</c>
      <c>DSO not supported</c>
      <c>5</c>
      <c>REFUSED</c>
      <c>Operation declined for policy reasons</c>
      <c>9</c>
      <c>NOTAUTH</c>
      <c>Not Authoritative (TLV dependent)</c>
      <c>11</c>
      <c>DSONOTIMP</c>
      <c>DSO type code not supported</c>
</texttable>

<t>Use of the above RCODEs is likely to be common in DSO but 
does not preclude the definition and use of other codes in future documents that 
make use of DSO.</t>

<t>If a document describing a DSO makes use of either NXDOMAIN (Name Error)
or NOTAUTH then that document MUST explain the meaning.</t>

</section>
<section anchor="dsodata" title="DSO Data">

<t>The standard twelve-octet DNS message header is followed by the DSO Data.</t>

<t>The first TLV in a DSO request message is called the Operation 
TLV. Any subsequent TLVs after this initial Operation TLV are called Modifier TLVs.</t>

<t>Depending on the operation a DSO response can contain:</t>

<t><list style="symbols">
  <t>No TLVs</t>
  <t>Only an Operation TLV</t>
  <t>An Operation TLV followed by one or more Modifier TLVs</t>
  <t>Only Modifier TLVs</t>
</list></t>

<section anchor="tlv-format" title="TLV Format">

<t>Operation and modifier TLVs both use the same encoding format.</t>

<t>Operation TLVs SHOULD normally require a response and, therefore, set the TLV
Acknowledgement bit in a request. However, for some Operation TLVs, this may be
undesirable and the TLV Acknowledgement bit MAY be cleared in the request. Each
Operation TLV definition should stipulate whether an acknowledgement is
REQUIRED. If the TLV Acknowledgement bit is cleared in a request, a response
MUST NOT be sent. Modifier TLVs MUST NEVER set the Acknowledgement bit. The
Acknowledgement bit is NEVER set in the response to an Operation TLV.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   | A |                        DSO-TYPE                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                        DSO DATA LENGTH                        |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                      TYPE-DEPENDENT DATA                      /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='A:'>
  A 1-bit TLV Response flag indicating whether or not an Operation TLV requires
a response Acknowledgement.</t>
  <t hangText='DSO-TYPE:'>
  A 15-bit field in network order giving the type of the current DSO TLV per
the IANA DSO Type Codes Registry.</t>
  <t hangText='DSO DATA LENGTH:'>
  A 16-bit field in network order giving the size in octets of
the TYPE-DEPENDENT DATA.</t>
  <t hangText='TYPE-DEPENDENT DATA:'>
  Type-code specific format.</t>
</list></t>

<t>Where domain names appear within TYPE-DEPENDENT DATA, they MAY be compressed 
using standard DNS name compression. However, the compression MUST NOT point
outside of the TYPE-DEPENDENT DATA section and offsets MUST be from the start
of the TYPE-DEPENDENT DATA.</t>

</section>
<section anchor="operation-tlvs" title="Operation TLVs">

<t>An “Operation TLV” specifies the operation to be performed.</t>

<t>A DSO message MUST contain at most one Operation TLV.</t>

<t>In all cases a DSO request message MUST contain exactly one 
Operation TLV, indicating the operation to be performed.</t>

<t>Depending on the operation, a DSO response message MAY contain no 
Operation TLV, because it is simply a response to a previous request message,
and the MESSAGE ID in the header is sufficient to identify the request in 
question. Or it may contain a single corresponding response Operation TLV, with 
the same DSO-TYPE as in the request message. The specification for each DSO
type determines whether a response for that operation type 
is required to carry the Operation TLV.</t>

<t>If a DSO response is received for an operation which requires
that the response carry an Operation TLV, and the required Operation TLV is not
the first DSO TLV in the response message, then this is a fatal 
error and the recipient of the defective response message MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
<section anchor="modifier-tlvs" title="Modifier TLVs">

<t>A “Modifier TLV” specifies additional parameters
relating to the operation. Immediately following the Operation TLV, if present,
a DSO message MAY contain one or more Modifier TLVs.</t>

</section>
<section anchor="unrecognized-tlvs" title="Unrecognized TLVs">

<t>If a DSO request is received containing an unrecognized
Operation TLV, the receiver MUST send a response with matching
MESSAGE ID, and RCODE DSONOTIMP (tentatively 11). The response MUST NOT contain 
an Operation TLV.</t>

<t>If a DSO message (request or response) is received
containing one or more unrecognized Modifier TLVs, the unrecognized
Modifier TLVs MUST be silently ignored, and the remainder of the message
is interpreted and handled as if the unrecognized parts were not present.</t>

</section>
</section>
<section anchor="edns0-and-tsig" title="EDNS(0) and TSIG">

<t>Since the ARCOUNT field MUST be zero, a DSO message
MUST NOT contain an EDNS(0) option in the additional records section.
If functionality provided by current or future EDNS(0) options is desired
for DSO messages, an Operation TLV or
Modifier TLV needs to be defined to carry the necessary information.</t>

<t>For example, the EDNS(0) Padding Option <xref target="RFC7830"/> used for security purposes
is not permitted in a DSO message,
so if message padding is desired for DSO messages
then the Encryption Padding TLV described in <xref target="padding"/> MUST be used.</t>

<t>Similarly, a DSO message MUST NOT contain a TSIG record.
A TSIG record in a conventional DNS message is added as the last record
in the additional records section, and carries a signature computed over
the preceding message content. Since DSO data appears
after the additional records section, it would not be included in the
signature calculation. 
If use of signatures with DSO messages becomes necessary in the 
future, an explicit Modifier TLV needs to be defined to 
perform this function.</t>

<t>Note however that, while DSO <spanx style="emph">messages</spanx> cannot include
EDNS(0) or TSIG records, a DSO <spanx style="emph">session</spanx> is typically used to 
carry a whole series of DNS messages of different kinds, including DSO
messages, and other DNS message types like Query <xref target="RFC1034"/> 
<xref target="RFC1035"/> and Update <xref target="RFC2136"/>, and those messages can carry EDNS(0) and 
TSIG records.</t>

<t>This specification explicitly prohibits use of the
EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>
in <spanx style="emph">any</spanx> messages sent on a DSO session (because it duplicates
the functionality provided by the DSO Keepalive operation),
but messages may contain other EDNS(0) options as appropriate.</t>

</section>
</section>
<section anchor="message-handling" title="Message Handling">

<t>The initiator MUST set the value of the QR bit in the DNS header to
zero (0), and the responder MUST set it to one (1).
Every DSO request message (QR=0) with the Acknowledgement bit set in the
operation TLV MUST elicit a response (QR=1), which MUST have the same
MESSAGE ID in the DNS message header as in the corresponding request.
DSO request messages sent by the client with the Acknowledgement
bit set in the operation TLV elicit a response from the server, and
DSO request messages sent by the server with the Acknowledgement
bit set in the operation TLV elicit a response from the client.</t>

<t>With most TCP implementations, the TCP data acknowledgement (generated because 
data has been received by TCP), the TCP window update (generated because TCP has 
delivered that data to the receiving software) and the DSO 
response (generated by the receiving software itself)
are all combined into a single packet, so in practice the requirement that every
DSO request message MUST elicit a 
DSO response incurs minimal extra cost on the network.
Requiring that every request elicit a corresponding response also avoids
performance problems caused by interaction between
Nagle’s Algorithm and Delayed Ack <xref target="NagleDA"/>.</t>

<t>The namespaces of 16-bit MESSAGE IDs are disjoint in each direction.
For example, it is <spanx style="emph">not</spanx> an error for both client and server to send a request
message with the same ID. In effect, the 16-bit MESSAGE ID combined with the 
identity of the initiator (client or server) serves as a 17-bit unique 
identifier for a particular operation on a DSO session.</t>

<t>As described in <xref target="header"/> An initiator MUST NOT reuse a MESSAGE ID that is 
already in use for an 
outstanding request, unless specified otherwise by the relevant specification 
for the DSO in question. At the very least, this means 
that a MESSAGE ID MUST NOT be reused in a particular direction
on a particular DSO session while the initiator is waiting for a response to a 
previous request using that MESSAGE ID on that DSO session,
unless specified otherwise by the relevant 
specification for the DSO in question.
(For a long-lived state the MESSAGE ID for the operation
MUST NOT be reused whilst that state remains active.)</t>

<t>If a client or server receives a response (QR=1) where the MESSAGE ID does not
match any of its outstanding operations, this is a fatal error and it MUST 
immediately terminate the connection with a TCP RST (or equivalent for other 
protocols).</t>

</section>
</section>
<section anchor="keepalive" title="Keepalive Operation TLV">

<t>The Keepalive Operation TLV (DSO-TYPE=1) performs two functions: to reset the
keepalive timer for the DSO session and to establish the values for the Session Timeouts.</t>

<t>The Keepalive Operation TLV resets only the keepalive timer, not the inactivity timer.
The reason for this is that periodic Keepalive Operation TLVs are sent for the
sole purpose of keeping a DSO session alive, because that DSO session has current
or recent non-maintenance activity that warrants keeping the DSO session alive.
If sending keepalive traffic itself were to reset the inactivity timer, then 
that would create a circular livelock where keepalive traffic would be sent 
indefinitely to keep a DSO session alive, where the only activity on that DSO 
session would be the keepalive traffic keeping the DSO session alive so that further 
keepalive traffic can be sent.</t>

<t>Sending keepalive traffic is considered a maintenance activity
that is performed in service of other client activities.
Sending keepalive traffic itself is not considered a client activity.
For a DSO session to be considered active, it must be carrying something more than just keepalive traffic.
This is why merely sending a Keepalive Operation TLV does not reset the inactivity timer.</t>

<t>When sent by a client, the Keepalive Operation TLV MUST have the Acknowledgement bit set.
It resets a DSO session’s keepalive timer, and at the same time requests what the
Session Timeout values should be from this point forward in the DSO session.
If a server receives a Keepalive Operation TLV without the Acknowledgement bit set
then this is a fatal error and the server MUST immediately terminate
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>Once a DSO session is in progress (see <xref target="details"/>) the Keepalive TLV also MAY be initiated by a server.
When sent by a server, the Keepalive Operation TLV MUST NOT have the Acknowledgement bit set.
It resets a DSO session’s keepalive timer, and unilaterally informs the client of
the new Session Timeout values to use from this point forward in this DSO session.
No client response to this unilateral declaration is required.
If a client receives a Keepalive Operation TLV with the Acknowledgement bit set
then this is a fatal error and the client MUST immediately terminate
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>It is not required that the Keepalive TLV be used in every DSO session.
While many DNS Stateful operations
will be used in conjunction with a long-lived session state,
not all DNS Stateful operations require long-lived session state,
and in some cases the default 15-second value for both the inactivity timeout
and keepalive interval may be perfectly appropriate. However, it can be noted 
that for clients that implement only the TLVs defined in this document it is
the only way for a client to initiate a DSO session.</t>

<t>The TYPE-DEPENDENT DATA for the the Keepalive TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 INACTIVITY TIMEOUT (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 KEEPALIVE INTERVAL (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='INACTIVITY TIMEOUT:'>
  the inactivity timeout for the current DSO session, specified as a
32-bit word in network (big endian) order in units of milliseconds.
This is the timeout at which the client MUST close an inactive DSO session.
If the client does not gracefully close an inactive DSO session,
then after twice this interval the server will forcibly terminate
the connection with a TCP RST (or equivalent for other protocols).</t>
  <t hangText='KEEPALIVE INTERVAL:'>
  the keepalive interval for the current DSO session, specified as a
32-bit word in network (big endian) order in units of milliseconds.
This is the interval at which a client MUST generate keepalive
traffic to maintain connection state.
If the client does not generate the necessary keepalive traffic,
then after twice this interval the server will forcibly terminate
the connection with a TCP RST (or equivalent for other protocols).</t>
</list></t>

<t>In a client-initiated DSO Keepalive message,
the Session Timeouts contain the client’s requested values.
In a server response to a client-initiated message, the Session Timeouts contain 
the server’s chosen values, which the client MUST respect.
This is modeled after the DHCP protocol, where the client
requests a certain lease lifetime using DHCP option 51 <xref target="RFC2132"/>,
but the server is the ultimate authority
for deciding what lease lifetime is actually granted.</t>

<t>In a server-initiated DSO Keepalive message, the Session Timeouts
unilaterally inform the client of the new values from this point
forward in this DSO session. The client MUST NOT generate a
response to the server-initiated DSO Keepalive message.</t>

<t>When a client is sending its second and subsequent Keepalive DSO 
requests to the server, the client SHOULD continue to request its preferred 
values each time. This allows flexibility, so that if conditions change during 
the lifetime of a DSO session, the server can adapt its responses to better fit 
the client’s needs.</t>

<section anchor="client-handling-of-received-session-timeout-values" title="Client handling of received Session Timeout values">

<t>When a client receives a response to its client-initiated DSO Keepalive message,
or receives a server-initiated DSO Keepalive message, the client has then 
received Session Timeout values dictated by the server. The two timeout values 
contained in the DSO Keepalive TLV from the server may each be higher, lower, or 
the same as the respective Session Timeout values the client previously had for 
this DSO session.</t>

<t>In the case of the keepalive timer, the handling of the received value is 
straightforward. The act of receiving the message containing the DSO Keepalive 
TLV itself resets the keepalive timer and updates the keepalive interval for the 
DSO session. The new keepalive interval indicates the 
maximum time that may elapse before another message must be sent
or received on this DSO session, if the DSO session is to remain alive.</t>

<t>In the case of the inactivity timeout, the handling of the received value 
is a little more subtle, though the meaning of the inactivity 
timeout is unchanged – it still indicates the maximum permissible time allowed 
without activity on a DSO session.
The act of receiving the message containing the DSO Keepalive TLV does not
itself reset the inactivity timer. The time elapsed since the last useful
activity on this DSO session is unaffected by exchange of DSO Keepalive messages.
The act of receiving the message containing the DSO Keepalive TLV does update 
the timeout associated with the running inactivity timer; that
becomes the new maximum permissible time without activity on a DSO session.</t>

<t><list style="symbols">
  <t>If the current inactivity timer value is not greater than the new inactivity timeout, 
then the DSO session may remain open for now. When the inactivity timer value 
exceeds the new inactivity timeout, the client MUST then close the DSO session,
as described above.</t>
  <t>If the current inactivity timer value is already greater than the new inactivity 
timeout, then this DSO session has already been inactive
for longer than the server permits, and the client MUST immediately close this DSO session.</t>
  <t>If the current inactivity timer value is more than twice the new inactivity timeout, 
then this DSO session is eligible to be
forcibly terminated by the server and and the client MUST immediately close this 
DSO session. However if a server abruptly reduces the
inactivity timeout in this way the server SHOULD give the client a grace period
of one quarter of the new inactivity timeout, to give the client time to close
the connection gracefully before the server resorts to terminating it forcibly.</t>
</list></t>

</section>
<section anchor="relation-to-edns0-tcp-keepalive-option" title="Relation to EDNS(0) TCP Keepalive Option">

<t>The inactivity timeout value in the Keepalive TLV (DSO-TYPE=1) has similar
intent to the EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>.
A client/server pair that supports DSO MUST NOT use the
EDNS(0) TCP KeepAlive option within any message after a DSO 
session has been established.
Once a DSO session has been established, if either
client or server receives a DNS message over the DSO session that contains an
EDNS(0) TCP Keepalive option, this is an error and the receiver of the
EDNS(0) TCP Keepalive option MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="delay" title="Retry Delay TLV">

<t>The Retry Delay TLV (DSO-TYPE=0) can be used as an Operation TLV or as
a Modifier TLV.</t>

<t>The TYPE-DEPENDENT DATA for the the Retry Delay TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     RETRY DELAY (32 bits)                     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='RETRY DELAY:'>
  a time value, specified as a 32-bit word in network order in units of 
milliseconds, within which the client MUST NOT retry this operation, or retry 
connecting to this server.</t>
</list></t>

<t>The RECOMMENDED value is 10 seconds.</t>

<section anchor="use-as-an-operation-tlv" title="Use as an Operation TLV">

<t>When sent in a DSO request message, from server to client, the 
Retry Delay TLV (0) is considered an Operation TLV. It is used by a server 
to request that a client close the DSO session and underlying connection, and 
not to reconnect for the indicated time interval.</t>

<t>In this case it applies to the DSO session as a whole, and the client MUST close the 
DSO session, as described in section <xref target="retry"/>. The RCODE in the message header 
MUST indicate the reason for the termination:</t>

<t><list style="symbols">
  <t>NOERROR indicates a routine shutdown.</t>
  <t>SERVFAIL indicates that the server is overloaded due to resource exhaustion.</t>
  <t>REFUSED indicates that the server has been reconfigured and is no longer able 
to perform one or more of the functions 
currently being performed on this DSO session (for example, a DNS Push Notification 
server could be reconfigured such that is is no longer accepting DNS Push 
Notification requests for one or more of the currently subscribed names).</t>
</list></t>

<t>This document specifies only these three RCODE values for Retry Delay request.
Servers sending Retry Delay requests SHOULD use one of these three values.
However, future circumstances may create situations where other RCODE values
are appropriate in Retry Delay requests, so clients MUST be prepared
to accept Retry Delay requests with any RCODE value.</t>

<t>An acknowledgement is not desired for a Retry Delay Operation TLV and the TLV
Acknowledgement bit MUST be cleared in the request.</t>

</section>
<section anchor="use-as-a-modifier-tlv" title="Use as a Modifier TLV">

<t>When appended to a DSO response message for some client request,
the Retry Delay TLV (0) is considered a Modifier TLV.
The indicated time interval during which the client SHOULD NOT retry
applies only to the failed operation, not to the DSO session as a whole.</t>

<t>In the case of a client request that returns a nonzero RCODE value, the server 
MAY append a Retry Delay TLV (0) to the response, indicating the time interval
during which the client SHOULD NOT attempt this operation again.</t>

</section>
</section>
<section anchor="padding" title="Encryption Padding TLV">

<t>The Encryption Padding TLV (DSO-TYPE=2) can only be used as a Modifier TLV.
It is only applicable when the DSO Transport layer uses encryption
such as TLS.</t>

<t>The TYPE-DEPENDENT DATA for the the Padding TLV is optional and is a
variable length field containing non-specified values. A DATA LENGTH
of 0 essentially provides for 4 octets of padding (the minimum amount).</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   /                                                               /
   /                   VARIABLE NUMBER OF OCTETS                   /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t>As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
the PADDING octets SHOULD be set to 0x00.  Other values MAY be used,
for example, in cases where there is a concern that the padded
message could be subject to compression before encryption.
PADDING octets of any value MUST be accepted in the messages received.</t>

<t>The Encryption Padding TLV may be included in either a DSO request, response, or both.
As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
if a request is received with a Encryption Padding TLV,
then the response MUST also include an Encryption Padding TLV.</t>

<t>The length of padding is intentionally not specified in this document and
is a function of current best practices with respect to the type and length
of data in the preceding TLVs <xref target="I-D.ietf-dprive-padding-policy"/>.</t>

</section>
<section anchor="lifecycle" title="DSO Session Lifecycle and Timers">

<section anchor="dso-session-initiation" title="DSO Session Initiation">

<t>A session begins when a client makes a new connection to a server.</t>

<t>A DSO session begin as described in <xref target="establishment"/>.</t>

<t>The client may perform as many DNS operations as it wishes using the
newly created DSO session. Operations SHOULD be pipelined (i.e., the
client doesn’t need wait for a response before sending the next message).
The server MUST act on messages in the order they are transmitted, but
responses to those messages MAY be sent out of order, if appropriate.</t>

</section>
<section anchor="sessiontimeouts" title="DSO Session Timeouts">

<t>Two timeout values are associated with a DSO session: the inactivity timeout, and 
the keepalive interval.</t>

<t>The first timeout value, the inactivity timeout, is the maximum time for which
a client may speculatively keep a DSO session open in the expectation that
it may have future requests to send to that server.</t>

<t>The second timeout value, the keepalive interval, is the maximum permitted
interval between client messages to the server if the client wishes to keep
the DSO session alive.</t>

<t>The two timeout values are independent. The inactivity timeout may be lower, the 
same, or higher than the keepalive interval, though in most cases the inactivity 
timeout is expected to be shorter than the keepalive interval.</t>

<t>Only when the client has a very long-lived low-traffic state does the 
keepalive interval come into play, to ensure that a sufficient residual
amount of traffic is generated to maintain NAT and firewall state
and to assure client and server that they still have connectivity to each other.</t>

<t>On a new DSO session, if no explicit DSO Keepalive message exchange has taken 
place, the default value for both timeouts is 15 seconds.
For both timeouts, lower values of the timeout result in higher network traffic
and higher CPU load on the server.</t>

</section>
<section anchor="inactivetimer" title="Inactive DSO Sessions">

<t>At both servers and clients, the generation or reception of any complete
DNS message, including DNS requests, responses, updates, or DSO
messages, resets both timers for that DSO session, with the exception
that a DSO Keepalive message resets only the keepalive timer, not the inactivity 
timeout timer.</t>

<t>In addition, for as long as the client has an outstanding operation in progress,
the inactivity timer remains cleared, and an inactivity 
timeout cannot occur.</t>

<t>For short-lived DNS operations like traditional queries and updates,
an operation is considered in progress for the time between request and 
response, typically a period of a few hundred milliseconds at most.
At the client, the inactivity timer is cleared upon transmission of a 
request and remains cleared until reception of the corresponding response.
At the server, the inactivity timer is cleared upon reception of a request
and remains cleared until transmission of the corresponding response.</t>

<t>For long-lived DNS Stateful operations, an operation is considered in progress
for as long as the state is active, until it is cancelled.
This means that a DSO session can exist, with a state 
active, with no messages flowing in either direction, for far longer than the 
inactivity timeout, and this is not an error. This is why there are two separate 
timers: the inactivity timeout, and the keepalive interval. Just because a DSO 
session has no traffic for an extended period of time
does not automatically make that DSO session “inactive”,
if it has an active state that is awaiting events.</t>

</section>
<section anchor="the-inactivity-timeout" title="The Inactivity Timeout">

<t>The purpose of the inactivity timeout is for the server to balance its trade off 
between the costs of setting up new DSO sessions and the costs of maintaining inactive 
DSO sessions. A server with abundant DSO session capacity can offer a high inactivity timeout, 
to permit clients to keep a speculative DSO session open for a long time, to save 
the cost of establishing a new DSO session for future communications with that 
server. A server with scarce memory resources can offer a low inactivity timeout,
to cause clients to promptly close DSO sessions whenever they have no outstanding
operations with that server, and then create a new DSO session later when needed.</t>

<section anchor="closing-inactive-dso-sessions" title="Closing Inactive DSO Sessions">

<t>A client is NOT required to wait until the inactivity timeout expires
before closing a DSO session.
A client MAY close a DSO session at any time, at the client’s discretion.
If a client determines that it has no current or reasonably anticipated
future need for an inactive DSO session, then the client SHOULD close that connection.</t>

<t>If, at any time during the life of the DSO session,
the inactivity timeout value (i.e., 15 seconds by default) elapses
without there being any operation active on the DSO session,
the client MUST gracefully close the connection with a
TLS close_notify followed by a TCP FIN (or equivalent for other protocols).</t>

<t>If, at any time during the life of the DSO session, twice the inactivity timeout value
(i.e., 30 seconds by default) elapses without there being any operation
active on the DSO session, the server SHOULD consider the client delinquent,
and forcibly abort the DSO session.
For DSO sessions over TCP (or over TLS over TCP),
to avoid the burden of having a connection in TIME-WAIT state, instead of
closing the connection gracefully the server SHOULD abort
the connection with a TCP RST (or equivalent for other protocols).
(In the BSD Sockets API this is achieved by setting the
SO_LINGER option to zero before closing the socket.)</t>

<t>In this context, an operation being active on a DSO session includes
a query waiting for a response, an update waiting for a response,
or active state,
but not a DSO Keepalive message exchange itself.
A DSO Keepalive message exchange resets only the keepalive
interval timer, not the inactivity timeout timer.</t>

<t>If the client wishes to keep an inactive DSO session open for longer than
the default duration without having to send traffic every 15 seconds,
then it uses the DSO Keepalive message to request
longer timeout values, as described in <xref target="keepalive"/>.</t>

</section>
<section anchor="values-for-the-inactivity-timeout" title="Values for the Inactivity Timeout">

<t>For the inactivity timeout value, lower values result in more frequent DSO session 
teardown and re-establishment. Higher values result in lower traffic and CPU
load on the server, but a larger memory burden to maintain state for inactive 
DSO sessions.</t>

<t>A shorter inactivity timeout with a longer keepalive interval signals to the client 
that it should not speculatively keep inactive DSO sessions open for very long without
reason, but when it does have an active reason to keep a DSO session open, it 
doesn’t need to be sending an aggressive level of keepalive traffic.</t>

<t>A longer inactivity timeout with a shorter keepalive interval signals to the client
that it may speculatively keep inactive DSO sessions open for a long time, but it
should be sending a lot of keepalive traffic on those inactive DSO sessions.
This configuration is expected to be less common.</t>

<t>To avoid repeated teardown and re-establishment of sessions,
the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with an inactivity timeout value less than ten seconds.
If a client receives a Keepalive message specifying an inactivity timeout value
less than ten seconds this is an error and the client MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

<t>This does not mean that a client is forced to keep an idle connection open for
ten seconds if it doesn’t need that — a client is free to close an idle connection whenever it chooses —
it means that servers cannot <spanx style="emph">require</spanx> a client to close an idle connection in under ten seconds.</t>

<t>[Do we really want this restriction? How soon does the client reconnect after tearing down the connection? –SC]</t>

</section>
</section>
<section anchor="keepalivetimer" title="The Keepalive Interval">

<t>The purpose of the keepalive interval is to manage the generation of
sufficient messages to maintain state in middle boxes (such at NAT gateways
or firewalls) and for the client and server to periodically verify that they
still have connectivity to each other. This allows them to clean up state
when connectivity is lost, and attempt re-connection if appropriate.</t>

<section anchor="keepalive-interval-expiry" title="Keepalive Interval Expiry">

<t>If, at any time during the life of the DSO session,
the keepalive interval value (i.e., 15 seconds by default) elapses
without any DNS messages being sent or received on a DSO session,
the client MUST take action to keep the DSO session alive,
by sending a DSO Keepalive message (see <xref target="keepalive"/>).
A DSO Keepalive message exchange resets only the keepalive timer, 
not the inactivity timer.</t>

<t>If a client disconnects from the network abruptly,
without cleanly closing its DSO session,
leaving long-lived state uncanceled,
the server learns of this after failing to
receive the required keepalive traffic from that client.
If, at any time during the life of the DSO session,
twice the keepalive interval value (i.e., 30 seconds by default) elapses
without any DNS messages being sent or received on a DSO session,
the server SHOULD consider the client delinquent,
and forcibly abort the connection with a TCP RST (or equivalent for other 
protocols).</t>

</section>
<section anchor="values-for-the-keepalive-interval" title="Values for the Keepalive Interval">

<t>For the keepalive interval value, lower values result in higher volume keepalive 
traffic. Higher values of the keepalive interval reduce traffic and CPU load, 
but have minimal effect on the memory burden
at the server, because clients keep a DSO session open for the same length of time
(determined by the inactivity timeout) regardless of the level of keepalive traffic 
required.</t>

<t>It may be appropriate for clients and servers to select different keepalive 
interval values depending on the nature of the network they are on.</t>

<t>A corporate DNS server that knows it is serving only clients on the internal 
network, with no intervening NAT gateways or firewalls, can impose a higher 
keepalive interval, because frequent keepalive traffic is not required.</t>

<t>A public DNS server that is serving primarily residential consumer clients, 
where it is likely there will be a NAT gateway on the path, may impose a lower 
keepalive interval, to generate more frequent keepalive traffic.</t>

<t>A smart client may be adaptive to its environment. A client using
a private IPv4 address <xref target="RFC1918"/> to communicate with a DNS server
at an address outside that IPv4 private address block,
may conclude that there is likely to be a NAT gateway on the path,
and accordingly request a lower keepalive interval.</t>

<t>For environments where there is a NAT gateway or firewalls on the path, it is
RECOMMENDED that clients request, and servers grant, a keepalive interval of 15
minutes. In other environments it is RECOMMENDED that clients request, and 
servers grant, a keepalive interval of 60 minutes.</t>

<t>Note that the lower the keepalive interval value, the higher the load on client
and server. For example, an keepalive interval value of 100ms would result in a
continuous stream of at least ten messages per second, in both directions,
to keep the DSO session alive. And, in this extreme example, a single packet loss and
retransmission over a long path could introduce a momentary pause in the stream of messages,
long enough to cause the server to overzealously abort the connection.</t>

<t>Because of this concern, the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with an keepalive interval value less than ten seconds.
If a client receives an Keepalive message specifying an keepalive interval value
less than ten seconds this is an error and the client MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="server-initiated-termination-on-error" title="Server-Initiated Termination on Error">

<t>After sending an error response to a client, the server MAY close the DSO session,
or may allow the DSO session to remain open. For error conditions
that only affect the single operation in question, the server SHOULD return an
error response to the client and leave the DSO session open for further operations.
For error conditions that are likely to make all operations unsuccessful in the
immediate future, the server SHOULD return an error response to the client and 
then close the DSO session by sending a Retry Delay request message, as described in 
<xref target="delay"/>.</t>

</section>
<section anchor="error" title="Client Behaviour in Receiving an Error">

<t>Upon receiving an error response from the server, a client SHOULD NOT
automatically close the DSO session. An error relating to one particular operation
on a DSO session does not necessarily imply that all other operations on that
DSO session have also failed, or that future operations will fail. The client
should assume that the server will make its own decision about whether or not to
close the DSO session, based on the server’s determination of whether the error
condition pertains to this particular operation, or would also apply to any
subsequent operations. If the server does not close the DSO session then the client
SHOULD continue to use that DSO session for subsequent operations.</t>

</section>
<section anchor="server-initiated-termination-on-overload" title="Server-Initiated Termination on Overload">

<t>Apart from the cases where:</t>

<t><list style="symbols">
  <t>Session Timeouts expire (see <xref target="sessiontimeouts"/>)</t>
  <t>On error (see <xref target="error"/>)</t>
  <t>When under load (see below)</t>
</list></t>

<t>a server MUST NOT close a DSO session with a client, except in extraordinary error 
conditions. Closing the DSO session is the
client’s responsibility, to be done at the client’s discretion, when it so 
chooses. A server only closes a DSO session under exceptional circumstances, such as
when the server application software or underlying operating system is
restarting, the server application terminated unexpectedly (perhaps due to a
bug that makes it crash), or the server is undergoing maintenance procedures.
When possible, a server SHOULD send a Retry Delay message informing the
client of the reason for the DSO session being closed, and allow the client
five seconds to receive it before the server resorts to forcibly aborting the 
connection.</t>

</section>
<section anchor="retry" title="Retry Delay Operation TLV">

<t>There may be rare cases where a server is overloaded and wishes to shed load.
If a server is low on resources it MAY simply terminate a client connection with 
a TCP RST (or equivalent for other protocols).
However, the likely behavior of the client may be simply to to treat this as a
network failure and connect
immediately, putting more burden on the server.</t>

<t>Therefore to avoid this reconnection implosion, a server SHOULD instead choose 
to shed client load by sending a Retry Delay request message, with an RCODE of 
SERVFAIL, to inform the client of the overload situation. After sending a Retry 
Delay request message, the server MUST NOT send any further messages on that 
DSO session.</t>

<t>After sending the Retry Delay request the server SHOULD allow the
client five seconds to close the connection, and if the client has not
closed the connection after five seconds then the server SHOULD abort
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>Upon receipt of a Retry Delay request from the server, the client MUST
make note of the reconnect delay for this server, and then immediately
close the connection. This is to place the burden of TCP’s TIME-WAIT state on 
the client.</t>

<t>A Retry Delay request message MUST NOT be initiated by a client.
If a server receives a Retry Delay request message this is an error
and the server MUST immediately terminate the connection with a TCP RST
(or equivalent for other protocols).</t>

<section anchor="outstanding-operations" title="Outstanding Operations">

<t>At the moment a server chooses to initiate a Retry Delay request message
there may be DNS requests already in flight from client to server on this 
DSO session, which will arrive at the server after its Retry Delay request message 
has been sent.
The server MUST silently ignore such incoming requests, and MUST NOT generate
any response messages for them. When the Retry Delay request message from the
server arrives at the client, the client will determine that any DNS requests
it previously sent on this DSO session, that have not yet received a response, now 
will certainly not be receiving any response. Such requests should be considered
failed, and should be retried at a later time, as appropriate.</t>

<t>In the case where some, but not all, of the existing operations on a DSO session 
have become invalid (perhaps because the server has been reconfigured and is no 
longer authoritative for some of the names),
but the server is terminating all DSO sessions en masse with a REFUSED (5) RCODE,
the RECONNECT DELAY MAY be zero, indicating that the clients SHOULD immediately
attempt to re-establish operations.
It is likely that some of the attempts will be successful and some will not.</t>

<t>In the case where a server is terminating a large number of DSO sessions at once
(e.g., if the system is restarting) and the server doesn’t want to be inundated 
with a flood of simultaneous retries, it SHOULD send different RECONNECT delay 
values to each client.
These adjustments MAY be selected randomly, pseudorandomly, or deterministically
(e.g., incrementing the time value by one tenth of a second for each successive
client, yielding a post-restart reconnection rate of ten clients per second).</t>

</section>
<section anchor="client-reconnection" title="Client Reconnection">

<t>After a DSO session is closed by the server, the client SHOULD try to reconnect,
to that server, or to another suitable server, if more than one is available.
If reconnecting to the same server, the client MUST respect the indicated delay
before attempting to reconnect.</t>

<t>If a particular server does not want a client to reconnect (it is being
de-commissioned), it SHOULD set the retry delay to the maximum value (which is
approximately 497 days). If the server will only be out of service for a maintenance
period, it should use a value closer to the expected maintenance window and
not default to a very large delay value or clients may not attempt to reconnect
after it resumes service.</t>

</section>
</section>
</section>
<section anchor="sharing" title="Connection Sharing">

<t>As previously specified for DNS over TCP <xref target="RFC7766"/>,
to mitigate the risk of unintentional server overload, DNS clients
MUST take care to minimize the number of concurrent TCP connections
made to any individual server.  It is RECOMMENDED that for any given
client/server interaction there SHOULD be no more than one connection
for regular queries, one for zone transfers, and one for each
protocol that is being used on top of TCP (for example, if the
resolver was using TLS).
However, it is noted that certain primary/secondary configurations
with many busy zones might need to use more than one TCP
connection for zone transfers for operational reasons
(for example, to support concurrent transfers of multiple zones).</t>

<t>A single server may support multiple services, including DNS Updates 
<xref target="RFC2136"/>, DNS Push Notifications <xref target="I-D.ietf-dnssd-push"/>,
and other services, for one or more DNS zones.
When a client discovers that the target server for several different operations
is the same target hostname and port, the client SHOULD use a single
shared DSO session for all those operations.
A client SHOULD NOT open multiple connections to the same target host and port
just because the names being operated on are different or
happen to fall within different zones.
This is to reduce unnecessary connection load on the DNS server.</t>

<t>However, server implementers and operators should be aware that connection
sharing may not be possible in all cases.
A single client device may be home to multiple independent client software
instances that don’t coordinate with each other.
Similarly, multiple independent client devices behind the same NAT gateway
will also typically appear to the DNS server as different source ports on
the same client IP address.
Because of these constraints, a DNS server MUST be prepared to accept
multiple connections from different source ports on the same client IP address.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="dso-opcode-registration" title="DSO OPCODE Registration">

<t>IANA are directed to assign a value (tentatively 6)
in the DNS OPCODEs Registry for the DSO OPCODE.</t>

</section>
<section anchor="dso-rcode-registration" title="DSO RCODE Registration">

<t>IANA are directed to assign a value (tentatively 11)
in the DNS RCODE Registry for the DSONOTIMP error code.</t>

</section>
<section anchor="dso-type-codes-registry" title="DSO Type Codes Registry">

<t>IANA are directed to create the 15-bit DSO Type Codes
Registry, with initial values as follows:</t>

<texttable>
      <ttcol align='right'>Type</ttcol>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Status</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>0x0000</c>
      <c>RetryDelay</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0001</c>
      <c>KeepAlive</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0002</c>
      <c>Encryption Padding</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0003 - 0x003F</c>
      <c>Unassigned, reserved for DSO session management TLVs</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x0040 - 0x77FF</c>
      <c>Unassigned</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x7800 - 0x7BFF</c>
      <c>Reserved for local / experimental use</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x7C00 - 0x7FFF</c>
      <c>Reserved for future expansion</c>
      <c>&#160;</c>
      <c>&#160;</c>
</texttable>

<t>Registration of additional DSO Type Codes requires publication
of an appropriate IETF “Standards Action” or “IESG Approval” document <xref target="RFC5226"/>.</t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>If this mechanism is to be used with DNS over TLS, then these messages
are subject to the same constraints as any other DNS over TLS messages
and MUST NOT be sent in the clear before the TLS session is established.</t>

<t>The data field of the “Encryption Padding” TLV could be used as a covert channel.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to
Tim Chown,
Ralph Droms,
Jan Komissar,
Manju Shankar Rao,
and Ted Lemon
for their helpful contributions to this document.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC1035;
&RFC7766;
&RFC6891;
&RFC7828;
&RFC2119;
&RFC7830;
&RFC1034;
&RFC2136;
&RFC2132;
&RFC1918;
&RFC5226;


    </references>

    <references title='Informative References'>

<reference anchor="NagleDA" target="http://www.stuartcheshire.org/papers/nagledelayedack/">
  <front>
    <title>TCP Performance problems caused by interaction between Nagle's Algorithm and Delayed ACK</title>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization></organization>
    </author>
    <date year="2005" month="May" day="20"/>
  </front>
</reference>
&RFC7858;
&RFC6763;
&I-D.ietf-dnssd-push;
&RFC0768;
&I-D.ietf-dprive-padding-policy;


    </references>



  </back>

<!-- ##markdown-source:
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
e/d/AUxdS7Qq8AAA

-->

</rfc>

