<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.7 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC7766 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7766.xml">
<!ENTITY RFC6891 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6891.xml">
<!ENTITY RFC7828 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7828.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2136 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2136.xml">
<!ENTITY RFC7830 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7830.xml">
<!ENTITY RFC1034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC1918 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1918.xml">
<!ENTITY RFC5382 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5382.xml">
<!ENTITY RFC2132 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2132.xml">
<!ENTITY RFC5226 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5226.xml">
<!ENTITY RFC7858 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7858.xml">
<!ENTITY I-D.ietf-dnssd-push SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dnssd-push.xml">
<!ENTITY I-D.sctl-dnssd-mdns-relay SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.sctl-dnssd-mdns-relay.xml">
<!ENTITY RFC6763 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6763.xml">
<!ENTITY RFC0768 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.0768.xml">
<!ENTITY RFC7413 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7413.xml">
<!ENTITY I-D.ietf-tls-tls13 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-tls-tls13.xml">
<!ENTITY RFC1122 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1122.xml">
<!ENTITY I-D.ietf-dprive-padding-policy SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dprive-padding-policy.xml">
]>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-dnsop-session-signal-06" category="std" updates="RFC 7766, RFC 1035">

  <front>
    <title>DNS Stateful Operations</title>

    <author initials="R." surname="Bellis" fullname="Ray Bellis">
      <organization abbrev="ISC">Internet Systems Consortium, Inc.</organization>
      <address>
        <postal>
          <street>950 Charter Street</street>
          <city>Redwood City</city>
          <code>CA 94063</code>
          <country>USA</country>
        </postal>
        <phone>+1 650 423 1200</phone>
        <email>ray@isc.org</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>1 Infinite Loop</street>
          <city>Cupertino</city>
          <code>CA 95014</code>
          <country>USA</country>
        </postal>
        <phone>+1 408 974 3207</phone>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="J." surname="Dickinson" fullname="John Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>jad@sinodun.com</email>
      </address>
    </author>
    <author initials="S." surname="Dickinson" fullname="Sara Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>sara@sinodun.com</email>
      </address>
    </author>
    <author initials="A." surname="Mankin" fullname="Allison Mankin">
      <organization>Salesforce</organization>
      <address>
        <email>allison.mankin@gmail.com</email>
      </address>
    </author>
    <author initials="T." surname="Pusateri" fullname="Tom Pusateri">
      <organization>Unaffiliated</organization>
      <address>
        <postal>
          <street></street>
          <city>Raleigh</city>
          <code>NC 27608</code>
          <country>USA</country>
        </postal>
        <phone>+1 919 867 1330</phone>
        <email>pusateri@bangj.com</email>
      </address>
    </author>

    <date year="2018" month="January" day="26"/>

    <area>Internet</area>
    <workgroup>DNSOP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document defines a new DNS OPCODE for DNS Stateful Operations (DSO).
DSO messages communicate operations within persistent
stateful sessions, using type-length-value (TLV) syntax.
Three TLVs are defined that manage session timeouts,
termination, and encryption padding, and 
a framework is defined for extensions to enable new stateful operations.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The use of transports for DNS other than UDP is being increasingly specified,
for example, DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> and DNS over TLS <xref target="RFC7858"/>.
Such transports can offer persistent, long-lived sessions and therefore when
using them for transporting DNS messages it is of benefit to have a mechanism
that can establish parameters associated with those sessions, such as timeouts.
In such situations it is also advantageous to support server initiated messages.</t>

<t>The existing EDNS(0) Extension Mechanism for DNS <xref target="RFC6891"/> is explicitly
defined to only have “per-message” semantics. Whilst EDNS(0) has been used to
signal at least one session-related parameter (the EDNS(0) TCP Keepalive option
<xref target="RFC7828"/>) the result is less than optimal due to the restrictions
imposed by the EDNS(0) semantics and the lack of server-initiated signalling. 
For example, a server cannot arbitrarily 
instruct a client to close a connection because the server can only send EDNS(0) options 
in responses to queries that contained EDNS(0) options.</t>

<t>This document defines a new DNS OPCODE, DSO (tentatively 6), for DNS Stateful Operations.
DSO messages are used to communicate operations within persistent
stateful sessions, expressed using type-length-value (TLV) syntax.
This document defines an initial set of three TLVs,
used to manage session timeouts, termination, and encryption padding.</t>

<t>All three of the TLVs defined here are mandatory for all implementations of DSO.
Further TLVs may be defined in additional specifications.</t>

<t>The format for DSO messages
(see <xref target="format"/>) differs somewhat from the traditional DNS message
format used for standard queries and responses.
The standard twelve-octet header is used, but the four count fields
(QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) are set to zero and accordingly their
corresponding sections are not present.
The actual data pertaining to DNS Stateful Operations
(expressed in TLV syntax) is appended to the end of the DNS message header.
When displayed using packet analyzer tools that have not been
updated to recognize the DSO format, this
will result in the DSO data being displayed
as unknown additional data after the end of the DNS message.
It is likely that future updates to these tools will add the ability
to recognize, decode, and display the DSO data.</t>

<t>This new format has distinct advantages over an RR-based format because it
is more explicit and more compact. Each TLV definition is specific
to its use case, and as a result contains no redundant or overloaded fields.
Importantly, it completely avoids conflating DNS Stateful Operations in any way 
with normal DNS operations or with existing EDNS(0)-based functionality.
A goal of this approach is to avoid the operational issues that have
befallen EDNS(0), particularly relating to middlebox behaviour.</t>

<t>With EDNS(0), multiple options may be packed into a single OPT pseudo-RR,
and there is no generalized mechanism for a client to be able to tell
whether a server has processed or otherwise acted upon each individual
option within the combined OPT RR.
The specifications for each individual option need to define how each
different option is to be acknowledged, if necessary.</t>

<t>In contrast to EDNS(0), with DSO there is no
compelling motivation to pack multiple operations into a single
message for efficiency reasons, because DSO
always operates using a connection-oriented transport protocol.
Each Stateful operation is communicated in its own separate
DNS message, and the transport protocol can take care of packing
separate DNS messages into a single IP packet if appropriate.
For example, TCP can pack multiple small DNS messages into a single TCP segment.
This simplification allows for clearer semantics.
Each DSO request message communicates just one primary operation,
and the RCODE in the corresponding response message indicates the
success or failure of that operation.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="terminology" title="Terminology">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and
“OPTIONAL” in this document are to be interpreted as described in
“Key words for use in RFCs to Indicate Requirement Levels” <xref target="RFC2119"/>.</t>

<t>“DSO” is used to mean DNS Stateful Operation.</t>

<t>The term “connection” means a bidirectional byte stream of reliable,
in-order messages, such as provided by using
DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> or DNS over TLS <xref target="RFC7858"/>.</t>

<t>The unqualified term “session” in the context of this document means the exchange of
DNS messages over a connection where:</t>

<t><list style="symbols">
  <t>The connection between client and server is persistent and relatively
long-lived (i.e., minutes or hours, rather than seconds).</t>
  <t>Either end of the connection may initiate messages to the other.</t>
</list></t>

<t>A “DSO Session” is established between two endpoints that acknowledge
persistent DNS state via the exchange of DSO messages over the connection.
This is distinct from a DNS-over-TCP session as described in
the previous specification for DNS over TCP <xref target="RFC7766"/>.</t>

<t>A “DSO Session” is terminated when the underlying connection is closed.
The underlying connection can be closed in two ways.</t>

<t>Where this specification says, “close gracefully,”
that means sending a TLS close_notify followed by a TCP FIN,
or the equivalents for other protocols.
Where this specification requires a connection to be closed gracefully,
the requirement to initiate that graceful close is placed on the client,
to place the burden of TCP’s TIME-WAIT state on the client rather than the server.</t>

<t>Where this specification says, “forcibly abort,”
that means sending a TCP RST,
or the equivalent for other protocols.
In the BSD Sockets API this is achieved by setting the
SO_LINGER option to zero before closing the socket.</t>

<t>The term “server” means the software with a listening socket, awaiting
incoming connection requests.</t>

<t>The term “client” means the software which initiates a connection
to the server’s listening socket.</t>

<t>The terms “initiator” and “responder” correspond respectively to the
initial sender and subsequent receiver of a DSO request message,
regardless of which was the “client” and “server” in the usual DNS sense.</t>

<t>The term “sender” may apply to
either an initiator (when sending a DSO request message)
or a responder (when sending a DSO response message).</t>

<t>Likewise, the term “receiver” may apply to
either a responder (when receiving a DSO request message)
or an initiator (when receiving a DSO response message).</t>

<t>The term “long-lived operations” refers to operations
such as Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/>,
Discovery Relay interface subscriptions <xref target="I-D.sctl-dnssd-mdns-relay"/>,
and other future long-lived DNS operations that choose to use
DSO as their basis, that establish state that persists beyond
the lifetime of a traditional brief request/response transaction.
This document, the base specification for DNS Stateful Operations,
defines a framework for supporting long-lived operations,
but does not itself define any long-lived operations.
Nonetheless, to appreciate the design rationale behind
DNS Stateful Operations, it is helpful to understand
the long-lived operations that it is intended to support.</t>

<t>DNS Stateful Operations uses “DSO request messages” and “DSO response messages”.
DSO request messages are further subdivided into two variants,
“acknowledged request messages”
(which generate a corresponding response message) and
“unacknowledged request messages”
(which do not generate any corresponding response message).</t>

<t>The content of DSO messages is expressed using type-length-value (TLV) syntax.</t>

<t>In a DSO request message the first TLV is referred to as the “Primary TLV”
and determines the nature of the operation being performed,
including whether it is an acknowledged or unacknowledged operation;
any other TLVs in a DSO request message are referred to as “Additional TLVs”
and serve additional non-primary purposes, which may be related to
the primary purpose, or not, as in the case of the encryption padding TLV.</t>

<t>A DSO response message may contain no TLVs, or it may contain one
or more TLVs as appropriate to the information being communicated.
In the context of DSO response messages,
one or more TLVs with the same DSO-TYPE as the Primary TLV in the
corresponding DSO request message are referred to as “Response Primary TLVs”.
Any other TLVs with different DSO-TYPEs are referred to as “Response Additional TLVs”.
The Response Primary TLV(s), if present, MUST occur first in the response message,
before any Response Additional TLVs.</t>

<t>Two timers (elapsed time since an event) are defined in this document:</t>

<t><list style="symbols">
  <t>an inactivity timer (see <xref target="keepalive"/> and <xref target="inactivetimer"/>)</t>
  <t>a keepalive timer (see <xref target="keepalive"/> and <xref target="keepalivetimer"/>)</t>
</list></t>

<t>The timeouts associated with these timers are called
the inactivity timeout and 
the keepalive interval, respectively. 
The term “Session Timeouts” is used to refer to this pair of timeout values.</t>

<t>Resetting a timer means resetting the timer value to zero and starting the timer again.
Clearing a timer means resetting the timer value to zero but NOT starting the timer again.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="discussion" title="Discussion">

<t>There are several use cases for DNS Stateful operations that can 
be described here.</t>

<t>Firstly, establishing session parameters such as server-defined timeouts is of 
great use in the 
general management of persistent connections. For example, using DSO sessions 
for stub to recursive DNS-over-TLS <xref target="RFC7858"/> is more flexible for both the 
client and the server than attempting to manage sessions using just the EDNS(0)
TCP Keepalive option <xref target="RFC7828"/>.
The simple set of TLVs defined in this document is
sufficient to greatly enhance connection management for this use case.</t>

<t>Secondly, DNS-SD <xref target="RFC6763"/> has evolved into a naturally session based mechanism where,
for example, long-lived subscriptions lend themselves to ‘push’ mechanisms as 
opposed to polling. Long-lived stateful connections and server initiated 
messages align with this use case <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>A general use case is that DNS traffic is often bursty but session establishment 
can be expensive. One challenge with long-lived connections is to maintain 
sufficient traffic to maintain NAT and firewall state.
To mitigate this issue this document introduces a
new concept for the DNS, that is DSO “Keepalive traffic”.
This traffic carries no DNS data and is not considered ‘activity’
in the classic DNS sense, but serves to maintain state in middleboxes,
and to assure client and server that they still have connectivity to each other.</t>

<t>There are a myriad of other potential use cases for DSO given the versatility 
and extensibility of this specification.</t>

<t><xref target="details"/> of this document describes the protocol details of DNS Stateful Operations
including definitions of three TLVs for session management and encryption padding.
<xref target="lifecycle"/> presents a detailed discussion of the DSO Session lifecycle
including an in-depth discussion of keepalive traffic and session termination.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="details" title="Protocol Details">

<section anchor="establishment" title="DSO Session Establishment">

<t>DSO messages MUST only be carried in protocols and in
environments where a session may be established according to the definition above.
Standard DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/>, and DNS over TLS <xref target="RFC7858"/>
are suitable protocols.</t>

<t>DNS over plain UDP <xref target="RFC0768"/> is not appropriate since it fails on the requirement for
in-order message delivery, and, in the presence of NAT gateways and firewalls
with short UDP timeouts, it fails to provide a persistent bi-directional
communication channel unless an excessive amount of keepalive traffic is used.</t>

<t>In some environments it may be known in advance by external means
that both client and server support DSO, and in these cases either
client or server may initiate DSO messages at any time.</t>

<t>However, in the typical case a server will not know in advance whether a
client supports DSO, so in general, unless it is known in advance by other means
that a client does support DSO, a server MUST NOT initiate DSO request messages
until a DSO Session has been mutually established, as described below.
Similarly, unless it is known in advance by other means that a server
does support DSO, a client MUST NOT initiate non-response-requiring
DSO request messages until after a DSO Session has been mutually established.</t>

<t>Whether or not a given DSO request message elicits a response is
determined by whether or not the first DSO TLV (see <xref target="tlvsyntax"/>)
in the message (the Primary TLV) is one that is specified to generate a response.
Whether a Primary TLV will be specified to elicit a response will depend
on the intended use pattern for that particular TLV.</t>

<t>A DSO Session is established over a connection by the client
sending a DSO request message of a kind that requires a response,
such as the DSO Keepalive TLV (see <xref target="keepalive"/>),
and receiving a response, with matching MESSAGE ID, and RCODE
set to NOERROR (0), indicating that the DSO request was successful.</t>

<t>If the RCODE is set to DSONOTIMP (tentatively 11) this indicates
that the server does support DSO, but does not support the particular
operation the client requested.
A server MUST NOT return DSONOTIMP for the DSO Keepalive TLV,
but in the future if a client attempts to establish a DSO Session
using a newly-defined response-requiring DSO TLV that the server
does not understand, that would result in a DSONOTIMP response.
If the server returns DSONOTIMP then a DSO Session is not
considered established, but the client is permitted to continue
sending DNS messages on the connection,
including other response-requiring DSO messages such as the DSO Keepalive,
which may result in a successful NOERROR response,
yielding the establishment of a DSO Session.</t>

<t>If the RCODE is set to any value other than NOERROR (0) or DSONOTIMP
(tentatively 11), then the client should assume that the server does
not support DSO. In this case the client is permitted to continue
sending DNS messages on that connection, but the client SHOULD NOT
issue further DSO messages on that connection.</t>

<t>When the server receives a response-requiring DSO request message
from a client, and transmits a successful NOERROR response to that
request, the server considers the DSO Session established.</t>

<t>When the client receives the server’s NOERROR response to its
DSO request message, the client considers the DSO Session established.</t>

<t>Once a DSO Session has been established,
either end may unilaterally send DSO messages at any time,
and therefore either client or server may be the initiator of a message.</t>

<t>Once a DSO Session has been established,
clients and servers should behave as described in this specification with
regard to inactivity timeouts and session termination, not as previously
prescribed in the earlier specification for DNS over TCP <xref target="RFC7766"/>.</t>

<t><vspace blankLines='999' /></t>

<section anchor="sharing" title="Connection Sharing">

<t>As previously specified for DNS over TCP <xref target="RFC7766"/>,
to mitigate the risk of unintentional server overload, DNS clients
MUST take care to minimize the number of concurrent TCP connections
made to any individual server.  It is RECOMMENDED that for any given
client/server interaction there SHOULD be no more than one connection
for regular queries, one for zone transfers, and one for each
protocol that is being used on top of TCP (for example, if the
resolver was using TLS).
However, it is noted that certain primary/secondary configurations
with many busy zones might need to use more than one TCP
connection for zone transfers for operational reasons
(for example, to support concurrent transfers of multiple zones).</t>

<t>A single server may support multiple services, including DNS Updates 
<xref target="RFC2136"/>, DNS Push Notifications <xref target="I-D.ietf-dnssd-push"/>,
and other services, for one or more DNS zones.
When a client discovers that the target server for several different operations
is the same target hostname and port, the client SHOULD use a single
shared DSO Session for all those operations.
A client SHOULD NOT open multiple connections to the same target host and port
just because the names being operated on are different or
happen to fall within different zones.
This is to reduce unnecessary connection load on the DNS server.</t>

<t>However, server implementers and operators should be aware that connection
sharing may not be possible in all cases.
A single host device may be home to multiple independent client software
instances that don’t coordinate with each other.
Similarly, multiple independent client devices behind the same NAT gateway
will also typically appear to the DNS server as different source ports on
the same client IP address.
Because of these constraints, a DNS server MUST be prepared to accept
multiple connections from different source ports on the same client IP address.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="zero-round-trip-operation" title="Zero Round-Trip Operation">

<t>There is increased awareness today of the performance benefits
of eliminating round trips in session establishment.
Technologies like TCP Fast Open <xref target="RFC7413"/>
and TLS 1.3 <xref target="I-D.ietf-tls-tls13"/>
provide mechanisms to reduce or eliminate
round trips in session establishment.</t>

<t>Similarly, DSO supports zero round-trip operation.</t>

<t>Having initiated a connection to a server, possibly using
zero round-trip TCP Fast Open and/or
zero round-trip TLS 1.3, a client MAY send multiple
response-requiring DSO request messages to the server in succession
without having to wait for a response to the first request message
to confirm successful establishment of a DSO session.</t>

<t>However, a client MUST NOT send non-response-requiring DSO request
messages until after a DSO Session has been mutually established.</t>

<t>Similarly, a server MUST NOT send DSO request messages until it
has received a response-requiring DSO request message from a
client and transmitted a successful NOERROR response for that request.</t>

</section>
<section anchor="middlebox-considerations" title="Middlebox Considerations">

<t>Where an application-layer middlebox (e.g., a DNS proxy, forwarder, or
session multiplexer) is in the path the middlebox MUST NOT blindly
forward DSO messages in either direction, and MUST treat the inbound
and outbound connections as separate sessions.  This does not preclude
the use of DSO messages in the presence of an IP-layer middlebox, such
as a NAT that rewrites IP-layer and/or transport-layer headers but
otherwise preserves the effect of a single session between the client
and the server.</t>

<t>To illustrate the above, consider a network where a middlebox
terminates one or more TCP connections from clients and multiplexes the
queries therein over a single TCP connection to an upstream server.
The DSO messages and any associated state are specific to the individual
TCP connections.  A DSO-aware middlebox MAY in some circumstances be
able to retain associated state and pass it between the client and
server (or vice versa) but this would be highly TLV-specific.  For
example, the middlebox may be able to maintain a list of which clients
have made Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/> and
make its own subscription(s) on their behalf, relaying any subsequent
notifications to the client (or clients) that have subscribed to that
particular notification.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="format" title="Message Format">

<t>A DSO message begins with
the standard twelve-octet DNS message header <xref target="RFC1035"/>
with the OPCODE field set to the DSO OPCODE (tentatively 6).
However, unlike standard DNS messages, the question section, answer section,
authority records section and additional records sections are not present.
The corresponding count fields (QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) MUST be
set to zero on transmission.</t>

<t>If a DSO message is received where any of the count fields are
not zero, then a FORMERR MUST be returned,
unless a future IETF Standard specifies otherwise.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                          MESSAGE ID                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |QR |    OPCODE     |            Z              |     RCODE     |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     QDCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ANCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     NSCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ARCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                           DSO Data                            /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><vspace blankLines='999' /></t>

<section anchor="header" title="DNS Header Fields in DSO Messages">

<t>In an unacknowledged request message the MESSAGE ID field MUST be set to zero.
In an acknowledged request message the MESSAGE ID field MUST
be set to a unique nonzero value, that the initiator is not
currently using for any other active operation on this connection.
For the purposes here, a MESSAGE ID is in use in this DSO Session if the
initiator has used it in a request for which it is still awaiting a response,
or if the client has used it to setup a long-lived operation that has not yet been cancelled.
For example, a long-lived operation could be
a Push Notification subscription <xref target="I-D.ietf-dnssd-push"/> or
a Discovery Relay interface subscription <xref target="I-D.sctl-dnssd-mdns-relay"/>.</t>

<t>Whether a message is acknowledged or unacknowledged is
determined only by the specification for the Primary TLV.
An acknowledgment cannot be requested by including a nonzero message ID
in a message the primary TLV of which is specified to be unacknowledged,
nor can an acknowledgment be prevented by sending a message ID of zero
in a message with a primary TLV that is specified to be acknowledged.
A responder that receives either such malformed message MUST treat it
as a programming error and terminate the connection.</t>

<t>In a request message the DNS Header QR bit MUST be zero (QR=0).<vspace />
If the QR bit is not zero the message is not a request message.</t>

<t>In a response message the DNS Header QR bit MUST be one (QR=1).<vspace />
If the QR bit is not one the message is not a response message.</t>

<t>In a response message (QR=1) the MESSAGE ID field MUST contain a copy of the value of
the MESSAGE ID field in the acknowledged request message being responded to.
In a response message (QR=1) the MESSAGE ID field MUST NOT be zero.
If a response message (QR=1) is received where the MESSAGE ID is zero
this is a fatal error and the receiver MUST forcibly abort the connection immediately.</t>

<t>The DNS Header OPCODE field holds the DSO OPCODE value (tentatively 6).</t>

<t>The Z bits are currently unused in DSO messages,
and in both DSO requests and DSO responses the
Z bits MUST be set to zero (0) on transmission and MUST be silently ignored
on reception, unless a future IETF Standard specifies otherwise.</t>

<t><vspace blankLines='999' /></t>

<t>In a request message (QR=0) the RCODE is generally set to zero on transmission,
and silently ignored on reception, except where specified otherwise
(for example, the Retry Delay request message (see <xref target="retry"/>),
where the RCODE indicates the reason for termination).</t>

<t>The RCODE value in a response message (QR=1) may be one of the following values:</t>

<texttable>
      <ttcol align='right'>Code</ttcol>
      <ttcol align='left'>Mnemonic</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>0</c>
      <c>NOERROR</c>
      <c>Operation processed successfully</c>
      <c>1</c>
      <c>FORMERR</c>
      <c>Format error</c>
      <c>2</c>
      <c>SERVFAIL</c>
      <c>Server failed to process request due to a problem with the server</c>
      <c>3</c>
      <c>NXDOMAIN</c>
      <c>Name Error — Named entity does not exist (TLV-dependent)</c>
      <c>4</c>
      <c>NOTIMP</c>
      <c>DSO not supported</c>
      <c>5</c>
      <c>REFUSED</c>
      <c>Operation declined for policy reasons</c>
      <c>9</c>
      <c>NOTAUTH</c>
      <c>Not Authoritative (TLV-dependent)</c>
      <c>11</c>
      <c>DSONOTIMP</c>
      <c>DSO type code not supported</c>
</texttable>

<t>Use of the above RCODEs is likely to be common in DSO but 
does not preclude the definition and use of other codes in future documents that 
make use of DSO.</t>

<t>If a document defining a new DSO TLV makes use of NXDOMAIN (Name Error)
or NOTAUTH (Not Authoritative) then that document MUST specify the specific
interpretation of these RCODE values in the context of that new DSO TLV.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="dsodata" title="DSO Data">

<t>The standard twelve-octet DNS message header with its
zero-valued count fields is followed by the DSO Data,
expressed using TLV syntax, as described below <xref target="tlvsyntax"/>.</t>

<t>A DSO message may be either a request message or a response message,
as indicated by the QR bit in the DNS message header.
DSO request messages are further subdivided into two variants,
acknowledged request messages
(which generate a corresponding response message)
and unacknowledged request messages
(which do not generate any corresponding response message).</t>

<t>A DSO request message MUST contain at least one TLV.
The first TLV in a DSO request message is referred to as the “Primary TLV”
and determines the nature of the operation being performed,
including whether it is an acknowledged or unacknowledged operation.
In some cases it may be appropriate to include other TLVs in a request message,
such as the Encryption Padding TLV (<xref target="padding"/>),
and these extra TLVs are referred to as the “Additional TLVs”.</t>

<t>A DSO response message may contain no TLVs,
or it may be specified to contain one or more TLVs
appropriate to the information being communicated.</t>

<t>A DSO response message may contain one or more TLVs with
DSO-TYPE the same as the Primary TLV from the corresponding DSO request message,
in which case those TLV(s) are referred to as “Response Primary TLVs”.
A DSO response message is not required to carry Response Primary TLVs.
The MESSAGE ID field in the DNS message header is sufficient to identify
to which DSO request message this response message relates.</t>

<t>A DSO response message may contain one or more TLVs with
DSO-TYPEs different from the Primary TLV from the corresponding DSO request message,
in which case those TLV(s) are referred to as “Response Additional TLVs”.</t>

<t>Response Primary TLV(s), if present, MUST occur first in the response message,
before any Response Additional TLVs.</t>

<t>It is anticipated that by default most DSO request messages will be specified
to be acknowledged request messages, which generate corresponding responses.
In some specialized high-traffic use cases,
it may be appropriate to specify unacknowledged request messages.
Unacknowledged request messages can be more efficient on the network,
because they don’t generate a stream of corresponding reply messages.
Using unacknowledged request messages can also simplify software
in some cases, by removing need for an initiator to maintain
state while it waits to receive replies it doesn’t care about.
When the specification for a particular TLV states that,
when used as a Primary TLV (i.e., first) in a request message,
that request message is to be unacknowledged,
the MESSAGE ID field MUST be set to zero and
the receiver MUST NOT generate any response message
corresponding to this unacknowledged request message.</t>

<t>The previous point, that the receiver MUST NOT generate responses to
unacknowledged request messages, applies even in the case of errors.
When a DSO request message is received with the MESSAGE ID field
set to zero, the receiver MUST NOT generate any response.
For example, if the DSO-TYPE in the Primary TLV is unrecognized,
then a DSONOTIMP error MUST NOT be returned; instead the receiver
MUST forcibly abort the connection immediately.</t>

<t>Unacknowledged request messages MUST NOT be used “speculatively”
in cases where the sender doesn’t know if the receiver supports
the Primary TLV in the message, because there is no way to receive
any response to indicate success or failure of the request message
(the request message does not contain a unique MESSAGE ID with
which to associate a response with its corresponding request).
Unacknowledged request messages are only appropriate in cases where
the sender already knows that the receiver supports and wishes to
receive these messages.</t>

<t>For example, after a client has subscribed for Push Notifications
<xref target="I-D.ietf-dnssd-push"/>, the subsequent event notifications are
then sent as unacknowledged messages, and this is appropriate
because the client initiated the message stream by virtue of its
Push Notification subscription, thereby indicating its support of
Push Notifications, and its desire to receive those notifications.</t>

<t>Similarly, after an mDNS Relay client has subscribed to receive inbound
mDNS traffic from an mDNS Relay, the subsequent stream of received
packets is then sent using unacknowledged messages, and this
is appropriate because the client initiated the message stream
by virtue of its mDNS Relay link subscription, thereby indicating
its support of mDNS Relay, and its desire to receive inbound mDNS
packets over that DSO session <xref target="I-D.sctl-dnssd-mdns-relay"/>.</t>

<t><vspace blankLines='999' /></t>

<section anchor="tlvsyntax" title="TLV Syntax">

<t>All TLVs, whether used as “Primary”, “Additional”, “Response Primary”,
or “Response Additional”, use the same encoding syntax.</t>

<t>The specification for a TLV determines whether,
when used as the Primary (i.e., first) TLV in a request message,
that request message is to be acknowledged.
If the request message is to be acknowledged, the specification
also states which TLVs, if any, are to be included in the response.
The Primary TLV may or may not be contained in the response,
depending on what is stated in the specification for that TLV.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                            DSO-TYPE                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                        DSO DATA LENGTH                        |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                      TYPE-DEPENDENT DATA                      /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='DSO-TYPE:'>
  A 16-bit unsigned integer in network (big endian) byte order
giving the type of the current DSO TLV per the IANA DSO Type Code Registry.</t>
  <t hangText='DSO DATA LENGTH:'>
  A 16-bit unsigned integer in network (big endian) byte order
giving the size in octets of the TYPE-DEPENDENT DATA.</t>
  <t hangText='TYPE-DEPENDENT DATA:'>
  Type-code specific format.</t>
</list></t>

<t>Where domain names appear within TYPE-DEPENDENT DATA, they MAY<vspace />
be compressed using standard DNS name compression <xref target="RFC1035"/>.<vspace />
However, the compression offsets MUST be relative to
the start of the TYPE-DEPENDENT DATA and MUST NOT
extend beyond the end of the TYPE-DEPENDENT DATA.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="request-tlvs" title="Request TLVs">

<t>The first TLV in a DSO request message is the “Primary TLV”
and indicates the operation to be performed.
A DSO request message MUST contain at at least one TLV, the Primary TLV.</t>

<t>Immediately following the Primary TLV, a DSO request message
MAY contain one or more “Additional TLVs”, which specify
additional parameters relating to the operation.</t>

</section>
<section anchor="response-tlvs" title="Response TLVs">

<t>Depending on the operation, a DSO response message MAY contain no TLVs,
because it is simply a response to a previous request message, and the
MESSAGE ID in the header is sufficient to identify the request in question.
Or it may contain a single response TLV, with the same DSO-TYPE as the
Primary TLV in the request message.
Alternatively it may contain one or more TLVs of other
types, or a combination of the above, as appropriate
for the information that needs to be communicated.
The specification for each DSO TLV determines
what TLVs are required in a response to a request using that TLV.</t>

<t>If a DSO response is received for an operation where the specification
requires that the response carry a particular TLV or TLVs,
and the required TLV(s) are not present, then this is a fatal
error and the recipient of the defective response message MUST
forcibly abort the connection immediately.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="unrecognized-tlvs" title="Unrecognized TLVs">

<t>If DSO request is received containing an unrecognized Primary TLV,
with a nonzero MESSAGE ID (indicating that a response is expected),
then the receiver MUST send a response with matching MESSAGE ID,
and RCODE DSONOTIMP (tentatively 11).
The response MUST NOT contain a copy of the unrecognized Primary TLV.</t>

<t>If DSO request is received containing an unrecognized Primary TLV,
with a zero MESSAGE ID (indicating that no response is expected),
the receiver MUST silently ignore the message. A response MUST NOT be sent.</t>

<t>If a DSO request message is received where the Primary TLV is recognized,
containing one or more unrecognized Additional TLVs, the unrecognized
Additional TLVs MUST be silently ignored, and the remainder of the message
is interpreted and handled as if the unrecognized parts were not present.</t>

<t>Similarly, if a DSO response message is received containing one
or more unrecognized TLVs, the unrecognized TLVs MUST be silently
ignored, and the remainder of the message is interpreted and
handled as if the unrecognized parts were not present.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="edns0-and-tsig" title="EDNS(0) and TSIG">

<t>Since the ARCOUNT field MUST be zero, a DSO message
MUST NOT contain an EDNS(0) option in the additional records section.
If functionality provided by current or future EDNS(0) options
is desired for DSO messages, one or more new DSO TLVs
need to be defined to carry the necessary information.</t>

<t>For example, the EDNS(0) Padding Option <xref target="RFC7830"/> used for security purposes
is not permitted in a DSO message,
so if message padding is desired for DSO messages
then the Encryption Padding TLV described in <xref target="padding"/> MUST be used.</t>

<t>Similarly, a DSO message MUST NOT contain a TSIG record.
A TSIG record in a conventional DNS message is added as the last record
in the additional records section, and carries a signature computed over
the preceding message content. Since DSO data appears
after the additional records section, it would not be included in the
signature calculation. 
If use of signatures with DSO messages becomes necessary in the 
future, a new DSO TLV needs to be defined to perform this function.</t>

<t>Note however that, while DSO <spanx style="strong">messages</spanx> cannot include
EDNS(0) or TSIG records, a DSO <spanx style="strong">session</spanx> is typically used to 
carry a whole series of DNS messages of different kinds, including DSO
messages, and other DNS message types like Query <xref target="RFC1034"/> 
<xref target="RFC1035"/> and Update <xref target="RFC2136"/>, and those messages can carry EDNS(0) and 
TSIG records.</t>

<t>This specification explicitly prohibits use of the
EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>
in <spanx style="strong">any</spanx> messages sent on a DSO Session (because it is obsoleted by
the functionality provided by the DSO Keepalive operation),
but messages may contain other EDNS(0) options as appropriate.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="message-handling" title="Message Handling">

<t>The initiator MUST set the value of the QR bit in the DNS header to
zero (0), and the responder MUST set it to one (1).
Every DSO request message (QR=0) with a nonzero MESSAGE ID field
MUST elicit a corresponding response (QR=1), which MUST have the same
MESSAGE ID in the DNS message header as in the corresponding request.
DSO request messages sent by the client with a nonzero MESSAGE ID field
elicit a response from the server, and
DSO request messages sent by the server with a nonzero MESSAGE ID field
elicit a response from the client.</t>

<t>A DSO request message (QR=0) with a zero MESSAGE ID field MUST NOT elicit a response.</t>

<t>The namespaces of 16-bit MESSAGE IDs are disjoint in each direction.
For example, it is <spanx style="strong">not</spanx> an error for both client and server to send a request
message with the same ID. In effect, the 16-bit MESSAGE ID combined with the 
identity of the initiator (client or server) serves as a 17-bit unique 
identifier for a particular operation on a DSO Session.</t>

<t>As described in <xref target="header"/> An initiator MUST NOT reuse a
MESSAGE ID that is already in use for an outstanding request,
unless specified otherwise by the relevant specification
for the DSO in question. At the very least, this means 
that a MESSAGE ID MUST NOT be reused in a particular direction
on a particular DSO Session while the initiator is waiting for a response to a 
previous request using that MESSAGE ID on that DSO Session,
unless specified otherwise by the relevant 
specification for the DSO in question.
(For a long-lived operation the MESSAGE ID for the operation
MUST NOT be reused whilst that operation remains active.)</t>

<t>If a client or server receives a response (QR=1) where the MESSAGE ID is zero,
or any other value that does not match the MESSAGE ID of any of its outstanding operations,
this is a fatal error and the recipient MUST forcibly abort the connection immediately.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="dso-response-generation" title="DSO Response Generation">

<t>With most TCP implementations, for DSO requests that generate a response,
the TCP data acknowledgement (generated because data has been received by TCP),
the TCP window update (generated because TCP has delivered that data to the receiving software),
and the DSO response (generated by the receiving application-layer software itself)
are all combined into a single IP packet.
Combining these three elements into a single IP packet gives a
potentially significant improvement in network efficiency.</t>

<t>For DSO requests that do not generate a response,
the TCP implementation generally doesn’t have any way to know
that no response will be forthcoming, so it waits fruitlessly
for the application-layer software to generate a response,
until the Delayed ACK timer fires <xref target="RFC1122"/> (typically 200 milliseconds)
and only then does it send the TCP ack and window update.
In conjunction with Nagle’s Algorithm at the sender,
this can delay the sender’s transmission of its next
(non-full-sized) TCP segment, while the sender is waiting for
its previous (non-full-sized) TCP segment to be acknowledged,
which won’t happen until the Delayed ACK timer fires.
Nagle’s Algorithm exists to combine multiple small
application writes into more efficient large TCP segments,
to guard against wasteful use of the network by applications
that would otherwise transmit a stream of small TCP segments,
but in this case Nagle’s Algorithm (created to improve network efficiency)
can interact badly with TCP’s Delayed ACK feature
(also created to improve network efficiency) <xref target="NagleDA"/>
with the result of delaying some messages by up to 200 milliseconds.</t>

<t>Possible mitigations for this problem include:</t>

<t><list style="symbols">
  <t>Disabling Nagle’s Algorithm at the sender.<vspace />
This is not great, because it results<vspace />
in less efficient use of the network.</t>
  <t>Disabling Delayed ACK at the receiver.<vspace />
This is not great, because it results<vspace />
in less efficient use of the network.</t>
  <t>Using a networking API that lets the receiver signal to the TCP
implementation that the receiver has received and processed a client
request for which it will not be generating any immediate response.
This allows the TCP implementation to operate efficiently in both cases;
for requests that generate a response, the TCP ack, window update, and
DSO response are transmitted together in a single TCP segment,
and for requests that do not generate a response,
the application-layer software informs the TCP implementation
that it should go ahead and send the TCP ack and window update
immediately, without waiting for the Delayed ACK timer.
Unfortunately it is not known at this time which (if any) of the
widely-available networking APIs currently include this capability.</t>
</list></t>

</section>
<section anchor="cancellation" title="Responder-Initiated Operation Cancellation">

<t>This document, the base specification for DNS Stateful Operations,
does not itself define any long-lived operations,
but it defines a framework for supporting long-lived operations
such as Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/> and
Discovery Relay interface subscriptions <xref target="I-D.sctl-dnssd-mdns-relay"/>.</t>

<t>Generally speaking, a long-lived operation is initiated by the initiator,
and, if successful, remains active until the initiator terminates the operation.</t>

<t>However, it is possible that a long-lived operation may be valid
at the time it was initiated, but then a later change of circumstances
may render that previously valid operation invalid.</t>

<t>For example, a long-lived client operation may pertain to a name
that the server is authoritative for, but then the server configuration
is changed such that it is no longer authoritative for that name.</t>

<t>In such cases, instead of terminating the entire session
it may be desirable for the responder to be able to cancel
selectively only those operations that have become invalid.</t>

<t>The responder performs this selective cancellation by sending
a new response message, with the MESSAGE ID field containing the
MESSAGE ID of the long-lived operation that is to be terminated
(that it had previously acknowledged with a NOERROR RCODE), and the
RCODE field of the new response message giving the reason for cancellation.</t>

<t>After a response message with nonzero RCODE has been sent,
that operation has been terminated from the responder’s point of view,
and the responder sends no more messages relating to that operation.</t>

<t>After a response message with nonzero RCODE has been received by the initiator,
that operation has been terminated from the initiator’s point of view,
and its MESSAGE ID is now free for reuse.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="lifecycle" title="DSO Session Lifecycle and Timers">

<section anchor="dso-session-initiation" title="DSO Session Initiation">

<t>A DSO Session begins as described in <xref target="establishment"/>.</t>

<t>The client may perform as many DNS operations as it wishes using the
newly created DSO Session. Operations SHOULD be pipelined (i.e., the
client doesn’t need wait for a response before sending the next message).
The server MUST act on messages in the order they are transmitted, but
responses to those messages SHOULD be sent out of order when appropriate.</t>

</section>
<section anchor="sessiontimeouts" title="DSO Session Timeouts">

<t>Two timeout values are associated with a DSO Session: the inactivity timeout, and 
the keepalive interval. 
Both values are communicated in the same TLV, the DSO Keepalive TLV (see <xref target="keepalive"/>).</t>

<t>The first timeout value, the inactivity timeout, is the maximum time for which
a client may speculatively keep a DSO Session open in the expectation that
it may have future requests to send to that server.</t>

<t>The second timeout value, the keepalive interval, is the maximum permitted
interval between client messages to the server if the client wishes to keep
the DSO Session alive.</t>

<t>The two timeout values are independent. The inactivity timeout may be lower, the 
same, or higher than the keepalive interval, though in most cases the inactivity 
timeout is expected to be shorter than the keepalive interval.</t>

<t>Only when the client has a very long-lived low-traffic operation does the 
keepalive interval come into play, to ensure that a sufficient residual
amount of traffic is generated to maintain NAT and firewall state
and to assure client and server that they still have connectivity to each other.</t>

<t>On a new DSO Session, if no explicit DSO Keepalive message exchange has taken 
place, the default value for both timeouts is 15 seconds.
For both timeouts, lower values of the timeout result in higher network traffic
and higher CPU load on the server.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="inactivetimer" title="Inactive DSO Sessions">

<t>At both servers and clients, the generation or reception of any complete
DNS message, including DNS requests, responses, updates, or DSO
messages, resets both timers for that DSO Session, with the exception
that a DSO Keepalive message resets only the keepalive timer,
not the inactivity timeout timer.</t>

<t>In addition, for as long as the client has an outstanding operation in progress,
the inactivity timer remains cleared, and an inactivity timeout cannot occur.</t>

<t>For short-lived DNS operations like traditional queries and updates,
an operation is considered in progress for the time between request and 
response, typically a period of a few hundred milliseconds at most.
At the client, the inactivity timer is cleared upon transmission of a 
request and remains cleared until reception of the corresponding response.
At the server, the inactivity timer is cleared upon reception of a request
and remains cleared until transmission of the corresponding response.</t>

<t>For long-lived DNS Stateful operations (such as
a Push Notification subscription <xref target="I-D.ietf-dnssd-push"/> or
a Discovery Relay interface subscription <xref target="I-D.sctl-dnssd-mdns-relay"/>),
an operation is considered in progress
for as long as the operation is active, until it is cancelled.
This means that a DSO Session can exist, with active operations,
with no messages flowing in either direction, for far longer than the 
inactivity timeout, and this is not an error.
This is why there are two separate timers:
the inactivity timeout, and the keepalive interval.
Just because a DSO Session has no traffic for an extended period of time
does not automatically make that DSO Session “inactive”,
if it has an active operation that is awaiting events.</t>

</section>
<section anchor="the-inactivity-timeout" title="The Inactivity Timeout">

<t>The purpose of the inactivity timeout is for the server to balance its trade off 
between the costs of setting up new DSO Sessions and the costs of maintaining inactive 
DSO Sessions. A server with abundant DSO Session capacity can offer a high inactivity timeout, 
to permit clients to keep a speculative DSO Session open for a long time, to save 
the cost of establishing a new DSO Session for future communications with that 
server. A server with scarce memory resources can offer a low inactivity timeout,
to cause clients to promptly close DSO Sessions whenever they have no outstanding
operations with that server, and then create a new DSO Session later when needed.</t>

<section anchor="closing-inactive-dso-sessions" title="Closing Inactive DSO Sessions">

<t>A client is NOT required to wait until the inactivity timeout expires
before closing a DSO Session.
A client MAY close a DSO Session at any time, at the client’s discretion.
If a client determines that it has no current or reasonably anticipated
future need for an inactive DSO Session, then the client SHOULD close that connection.</t>

<t>If, at any time during the life of the DSO Session,
the inactivity timeout value (i.e., 15 seconds by default) elapses
without there being any operation active on the DSO Session,
the client MUST close the connection gracefully.</t>

<t>If, at any time during the life of the DSO Session,
twice the inactivity timeout value (i.e., 30 seconds by default),
or five seconds, if twice the inactivity timeout value is less than five seconds,
elapses without there being any operation active on the DSO Session,
the server SHOULD consider the client delinquent,
and SHOULD forcibly abort the DSO Session.</t>

<t>In this context, an operation being active on a DSO Session includes
a query waiting for a response, an update waiting for a response,
or an active long-lived operation, but not a DSO Keepalive message exchange itself.
A DSO Keepalive message exchange resets only the keepalive
interval timer, not the inactivity timeout timer.</t>

<t>If the client wishes to keep an inactive DSO Session open for longer than
the default duration without having to send traffic every 15 seconds,
then it uses the DSO Keepalive message to request
longer timeout values, as described in <xref target="keepalive"/>.</t>

</section>
<section anchor="values-for-the-inactivity-timeout" title="Values for the Inactivity Timeout">

<t>For the inactivity timeout value, lower values result in
more frequent DSO Session teardown and re-establishment.
Higher values result in lower traffic and lower CPU load on the server,
but higher memory burden to maintain state for inactive DSO Sessions.</t>

<t>A server may dictate (in a server-initiated Keepalive message,
or in a response to a client-initiated Keepalive request message)
any value it chooses for the inactivity timeout.
When a connection’s inactivity timeout is reached the client MUST
begin closing the idle connection, but a client is NOT REQUIRED
to keep an idle connection open until the inactivity timeout is
reached — a client SHOULD begin closing the connection sooner
if it has no reason to expect future operations with that server
before the inactivity timeout is reached.</t>

<t>A shorter inactivity timeout with a longer keepalive interval signals
to the client that it should not speculatively keep an inactive DSO
Session open for very long without reason, but when it does have an
active reason to keep a DSO Session open, it doesn’t need to be sending
an aggressive level of keepalive traffic to maintain that session.</t>

<t>A longer inactivity timeout with a shorter keepalive interval
signals to the client that it may speculatively keep an inactive
DSO Session open for a long time, but to maintain that inactive
DSO Session it should be sending a lot of keepalive traffic.
This configuration is expected to be less common.</t>

<t>A server may dictate any value it chooses for the inactivity timeout
(either in a response to a client-initiated request, or in a server-initiated message)
including values under one second, or even zero.</t>

<t>An inactivity timeout of zero informs the client that it
should not speculatively maintain idle connections at all, and
as soon as the client has completed the operation or operations relating
to this server, the client should immediately begin closing this session.</t>

<t>An inactivity timeout of 0xFFFFFFFF (2^32-1 milliseconds, approximately 49.7 days)
informs the client that it may keep an idle connection open as long as it wishes.
Note that after granting an unlimited inactivity timeout in this way,
at any point the server may revise that inactivity timeout by sending
a new Keepalive TLV dictating new Session Timeout values to the client.</t>

<t>A server will abort an idle client session after twice the
inactivity timeout value, or five seconds, whichever is greater.
In the case of a zero inactivity timeout value, this means that
if a client fails to close an idle client session then the server
will forcibly abort the idle session after five seconds.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="keepalivetimer" title="The Keepalive Interval">

<t>The purpose of the keepalive interval is to manage the generation of
sufficient messages to maintain state in middleboxes (such at NAT gateways
or firewalls) and for the client and server to periodically verify that they
still have connectivity to each other. This allows them to clean up state
when connectivity is lost, and attempt re-connection if appropriate.</t>

<section anchor="keepalive-interval-expiry" title="Keepalive Interval Expiry">

<t>If, at any time during the life of the DSO Session,
the keepalive interval value (i.e., 15 seconds by default) elapses
without any DNS messages being sent or received on a DSO Session,
the client MUST take action to keep the DSO Session alive,
by sending a DSO Keepalive message (see <xref target="keepalive"/>).
A DSO Keepalive message exchange resets only the keepalive timer, 
not the inactivity timer.</t>

<t>If a client disconnects from the network abruptly,
without cleanly closing its DSO Session,
leaving a long-lived operation uncanceled,
the server learns of this after failing to
receive the required keepalive traffic from that client.
If, at any time during the life of the DSO Session,
twice the keepalive interval value (i.e., 30 seconds by default) elapses
without any DNS messages being sent or received on a DSO Session,
the server SHOULD consider the client delinquent,
and SHOULD forcibly abort the DSO Session.</t>

</section>
<section anchor="values-for-the-keepalive-interval" title="Values for the Keepalive Interval">

<t>For the keepalive interval value, lower values result in a higher volume of keepalive 
traffic. Higher values of the keepalive interval reduce traffic and CPU load, 
but have minimal effect on the memory burden
at the server, because clients keep a DSO Session open for the same length of time
(determined by the inactivity timeout) regardless of the level of keepalive traffic 
required.</t>

<t>It may be appropriate for clients and servers to select different keepalive 
interval values depending on the nature of the network they are on.</t>

<t>A corporate DNS server that knows it is serving only clients on the internal 
network, with no intervening NAT gateways or firewalls, can impose a higher 
keepalive interval, because frequent keepalive traffic is not required.</t>

<t>A public DNS server that is serving primarily residential consumer clients, 
where it is likely there will be a NAT gateway on the path, may impose a lower 
keepalive interval, to generate more frequent keepalive traffic.</t>

<t>A smart client may be adaptive to its environment. A client using
a private IPv4 address <xref target="RFC1918"/> to communicate with a DNS server
at an address outside that IPv4 private address block,
may conclude that there is likely to be a NAT gateway on the path,
and accordingly request a lower keepalive interval.</t>

<t>By default it is RECOMMENDED that clients request,
and servers grant, a keepalive interval of 60 minutes.
This keepalive interval provides for reasonably timely detection if
a client abruptly disconnects without cleanly closing the session,
and is sufficient to maintain state in firewalls and NAT gateways
that follow the IETF recommended Best Current Practice that the
“established connection idle-timeout” used by middleboxes
be at least 2 hours 4 minutes <xref target="RFC5382"/>.</t>

<t>Note that the lower the keepalive interval value, the higher the load on client
and server. For example, a hypothetical keepalive interval value of 100ms would result
in a continuous stream of at least ten messages per second, in both directions,
to keep the DSO Session alive. And, in this extreme example, a single packet loss and
retransmission over a long path could introduce a momentary pause in the stream of messages,
long enough to cause the server to overzealously abort the connection.</t>

<t>Because of this concern, the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with a keepalive interval value less than ten seconds.
If a client receives a Keepalive message specifying a keepalive interval value
less than ten seconds this is an error and the client MUST
forcibly abort the connection immediately.</t>

<t>A keepalive interval value of 0xFFFFFFFF (2^32-1 milliseconds, approximately 49.7 days)
informs the client that it should generate no keepalive traffic.
Note that after signaling that the client should generate no keepalive traffic in this way,
at any point the server may revise that keepalive traffic requirement by sending
a new Keepalive TLV dictating new Session Timeout values to the client.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="server-initiated-session-termination" title="Server-Initiated Session Termination">

<t>In addition to cancelling individual operations selectively (see <xref target="cancellation"/>)
there are also occasions where a server may need to terminate
one or more entire sessions wholesale.
An entire session may need to be terminated if the client is defective in some way,
or departs from the network without closing its session.
Sessions may also need to be terminated if the server becomes overloaded,
or if the server is reconfigured and lacks the ability to be selective about
which operations need to be cancelled.</t>

<t>This section discusses various reasons a session may be terminated,
and the mechanisms for doing so.</t>

<section anchor="error" title="Server-Initiated Session Termination on Error">

<t>After sending an error response to a client, the server MAY end the DSO Session,
or may allow the DSO Session to remain open. For error conditions
that only affect the single operation in question, the server SHOULD return an
error response to the client and leave the DSO Session open for further operations.
For error conditions that are likely to make all operations unsuccessful in the
immediate future, the server SHOULD return an error response to the client and 
then end the DSO Session by sending a Retry Delay request message, as described in 
<xref target="retry"/>.</t>

<t>Upon receiving an error response from the server, a client SHOULD NOT
automatically close the DSO Session. An error relating to one particular operation
on a DSO Session does not necessarily imply that all other operations on that
DSO Session have also failed, or that future operations will fail. The client
should assume that the server will make its own decision about whether or not to
end the DSO Session, based on the server’s determination of whether the error
condition pertains to this particular operation, or would also apply to any
subsequent operations. If the server does not end the DSO Session by
sending the client a Retry Delay message (see <xref target="retry"/>) then the client
SHOULD continue to use that DSO Session for subsequent operations.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="server-initiated-session-termination-on-overload" title="Server-Initiated Session Termination on Overload">

<t>A server MUST NOT close a DSO Session with a client,
except in certain exceptional circumstances, as outlined below.
In normal operation, closing a DSO Session is the client’s responsibility.
The client makes the determination of when to close a DSO
Session based on an evaluation of both its own needs,
and the inactivity timeout value dictated by the server.</t>

<t>Some exceptional situations where a server may terminate a DSO Session include:</t>

<t><list style="symbols">
  <t>The server application software or underlying operating system
is shutting down or restarting.</t>
  <t>The server application software terminates unexpectedly
(perhaps due to a bug that makes it crash).</t>
  <t>The server is undergoing a reconfiguration or maintenance
procedure, that, due to the way the server software is
implemented, requires clients to be disconnected.
For example, some software is implemented such that it reads
a configuration file at startup, and changing the server’s
configuration entails modifying the configuration file
and then killing and restarting the server software,
which generally entails a loss of network connections.</t>
  <t>The client fails to meets its obligation to generate keepalive
traffic or close an inactive session by the prescribed time
(twice the time interval dictated by the server, or five seconds,
whichever is greater, as described in <xref target="sessiontimeouts"/>).</t>
  <t>The client sends a grossly invalid or malformed request that is
indicative of a seriously defective client implementation (see <xref target="error"/>).</t>
  <t>The server is over capacity and needs to shed some load (see <xref target="retry"/>).</t>
</list></t>

<t>When a server has to close a DSO Session with a client
(because of exceptional circumstances such as those outlined above)
the server SHOULD, whenever possible, send a Retry Delay request message
(see below) informing the client of the reason for the DSO Session
being closed, and allow the client five seconds to receive it
before the server resorts to forcibly aborting the connection.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="retry" title="Server-Initiated Retry Delay Request Message">

<t>There may be rare cases where a server is overloaded and wishes to shed load.
If a server is low on resources it MAY simply terminate a client connection
by forcibly aborting it.
However, the likely behavior of the client may be simply to to treat this as
a network failure and reconnect immediately, putting more burden on the server.</t>

<t>Therefore to avoid this reconnection implosion, a server SHOULD instead choose 
to shed client load by sending a Retry Delay request message, with an RCODE of 
SERVFAIL, to inform the client of the overload situation.
The format of the Retry Delay TLV is described in <xref target="delay"/>.
After sending a Retry Delay request message,
the server MUST NOT send any further messages on that DSO Session.</t>

<t>Upon receipt of a Retry Delay request from the server, the client MUST
make note of the reconnect delay for this server, and then immediately
close the connection gracefully.</t>

<t>After sending a Retry Delay request message the server SHOULD allow the
client five seconds to close the connection, and if the client has not
closed the connection after five seconds then the server SHOULD
forcibly abort the connection.</t>

<t>A Retry Delay request message MUST NOT be initiated by a client.
If a server receives a Retry Delay request message this is an error
and the server MUST forcibly abort the connection immediately.</t>

<section anchor="outstanding-operations" title="Outstanding Operations">

<t>At the moment a server chooses to initiate a Retry Delay request message
there may be DNS requests already in flight from client to server on this 
DSO Session, which will arrive at the server after its Retry Delay request message 
has been sent.
The server MUST silently ignore such incoming requests, and MUST NOT generate
any response messages for them. When the Retry Delay request message from the
server arrives at the client, the client will determine that any DNS requests
it previously sent on this DSO Session, that have not yet received a response, now 
will certainly not be receiving any response. Such requests should be considered
failed, and should be retried at a later time, as appropriate.</t>

<t>In the case where some, but not all, of the existing operations on a DSO Session 
have become invalid (perhaps because the server has been reconfigured and is no 
longer authoritative for some of the names),
but the server is terminating all DSO Sessions en masse with a REFUSED (5) RCODE,
the RECONNECT DELAY MAY be zero, indicating that the clients SHOULD immediately
attempt to re-establish operations.</t>

<t>It is likely that some of the attempts will be successful and some will not,
depending on the nature of the reconfiguration.</t>

<t>In the case where a server is terminating a large number of DSO Sessions at once
(e.g., if the system is restarting) and the server doesn’t want to be inundated 
with a flood of simultaneous retries, it SHOULD send different RECONNECT delay 
values to each client.
These adjustments MAY be selected randomly, pseudorandomly, or deterministically
(e.g., incrementing the time value by one tenth of a second for each successive
client, yielding a post-restart reconnection rate of ten clients per second).</t>

</section>
<section anchor="client-reconnection" title="Client Reconnection">

<t>After a DSO Session is closed by the server, the client SHOULD try to reconnect,
to that server, or to another suitable server, if more than one is available.
If reconnecting to the same server, the client MUST respect the indicated delay
before attempting to reconnect.</t>

<t>If a particular server does not want a client to reconnect (the server is being
de-commissioned), it SHOULD set the retry delay to the maximum value (which is
approximately 49.7 days). If the server will only be out of service for a maintenance
period, it should use a value closer to the expected maintenance window and
not default to a very large delay value or clients may not attempt to reconnect
after it resumes service.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
</section>
</section>
<section anchor="base-tlvs-for-dns-stateful-operations" title="Base TLVs for DNS Stateful Operations">

<t>This section describes the three base TLVs for DNS Stateful Operations:
Keepalive, Retry Delay, and Encryption Padding.</t>

<section anchor="keepalive" title="Keepalive TLV">

<t>The Keepalive TLV (DSO-TYPE=1) performs two functions:
to reset the keepalive timer for the DSO Session,
and to establish the values for the Session Timeouts.</t>

<t>The TYPE-DEPENDENT DATA for the the Keepalive TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 INACTIVITY TIMEOUT (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 KEEPALIVE INTERVAL (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='INACTIVITY TIMEOUT:'>
  The inactivity timeout for the current DSO Session, specified as
a 32-bit unsigned integer in network (big endian) byte order in units of milliseconds.
This is the timeout at which the client MUST begin closing an inactive DSO Session.
The inactivity timeout can be any value of the server’s choosing.
If the client does not gracefully close an inactive DSO
Session, then after twice this interval, or five seconds,
whichever is greater, the server will forcibly abort the connection.</t>
  <t hangText='KEEPALIVE INTERVAL:'>
  The keepalive interval for the current DSO Session, specified as
a 32-bit unsigned integer in network (big endian) byte order in units of milliseconds.
This is the interval at which a client MUST generate keepalive
traffic to maintain connection state.
The keepalive interval MUST NOT be less than ten seconds.
If the client does not generate the mandated keepalive traffic,
then after twice this interval the server will forcibly abort the connection.
Since the minimum allowed keepalive interval is ten seconds, the
minimum time at which a server will forcibly disconnect a client for
failing to generate the mandated keepalive traffic is twenty seconds.</t>
</list></t>

<t>The transmission or reception of DSO Keepalive messages
(i.e., messages where the Keepalive TLV is the first TLV)
reset only the keepalive timer, not the inactivity timer.
The reason for this is that periodic Keepalive messages are sent for the sole
purpose of keeping a DSO Session alive, when that DSO Session has current
or recent non-maintenance activity that warrants keeping that DSO Session alive.
Sending keepalive traffic itself is not considered a client activity;
it is considered a maintenance activity that is performed
in service of other client activities.
If keepalive traffic itself were to reset the inactivity timer,
then that would create a circular livelock where keepalive traffic
would be sent indefinitely to keep a DSO Session alive, where the only
activity on that DSO Session would be the keepalive traffic keeping
the DSO Session alive so that further keepalive traffic can be sent.
For a DSO Session to be considered active, it must be carrying
something more than just keepalive traffic.
This is why merely sending or receiving a Keepalive message
does not reset the inactivity timer.</t>

<t>When sent by a client, the Keepalive request message MUST
be sent as an acknowledged request, with a nonzero MESSAGE ID.
If a server receives a Keepalive request message with a zero MESSAGE ID then
this is a fatal error and the server MUST forcibly abort the connection immediately.
The Keepalive request message resets a DSO Session’s keepalive timer,
and at the same time communicates to the server the the client’s
requested Session Timeout values.
In a server response to a client-initiated Keepalive request message,
the Session Timeouts contain the server’s chosen values from
this point forward in the DSO Session, which the client MUST respect.
This is modeled after the DHCP protocol, where the client requests a certain
lease lifetime using DHCP option 51 <xref target="RFC2132"/>, but the server is the
ultimate authority for deciding what lease lifetime is actually granted.</t>

<t>When a client is sending its second and subsequent Keepalive DSO requests to
the server, the client SHOULD continue to request its preferred values each time.
This allows flexibility, so that if conditions change during the lifetime of a
DSO Session, the server can adapt its responses to better fit the client’s needs.</t>

<t>Once a DSO Session is in progress (see <xref target="details"/>)
a Keepalive request message MAY be initiated by a server.
When sent by a server, the Keepalive request message MUST be
sent as an unacknowledged request, with the MESSAGE ID set to zero.
The client MUST NOT generate a response to a server-initiated DSO Keepalive message.
If a client receives a Keepalive request message with a nonzero MESSAGE ID then
this is a fatal error and the client MUST forcibly abort the connection immediately.
The Keepalive request message from the server resets a DSO Session’s keepalive timer,
and at the same time unilaterally informs the client of the new
Session Timeout values to use from this point forward in this DSO Session.
No client DSO response message to this unilateral declaration is required or allowed.</t>

<t>The Keepalive TLV is not used as a request message Additional TLV.</t>

<t>In response messages the Keepalive TLV is used only as a Response Primary TLV,
replying to a Keepalive request message from the client.
A Keepalive TLV MUST NOT be added as to other responses a Response Additional TLV.
If the server wishes to update a client’s Session Timeout values
other than in response to a Keepalive request message from the client,
then it does so by sending an unacknowledged Keepalive request message
of its own, as described above.</t>

<t>It is not required that the Keepalive TLV be used in every DSO Session.
While many DNS Stateful operations
will be used in conjunction with a long-lived session state,
not all DNS Stateful operations require long-lived session state,
and in some cases the default 15-second value for both the inactivity timeout
and keepalive interval may be perfectly appropriate.
However, note that for clients that implement only the TLVs defined in
this document it is the only way for a client to initiate a DSO Session.</t>

<section anchor="client-handling-of-received-session-timeout-values" title="Client handling of received Session Timeout values">

<t>When a client receives a response to its client-initiated DSO Keepalive message,
or receives a server-initiated DSO Keepalive message, the client has then 
received Session Timeout values dictated by the server. The two timeout values 
contained in the DSO Keepalive TLV from the server may each be higher, lower, or 
the same as the respective Session Timeout values the client previously had for 
this DSO Session.</t>

<t>In the case of the keepalive timer, the handling of the received value is 
straightforward. The act of receiving the message containing the DSO Keepalive 
TLV itself resets the keepalive timer and updates the keepalive interval for the 
DSO Session. The new keepalive interval indicates the 
maximum time that may elapse before another message must be sent
or received on this DSO Session, if the DSO Session is to remain alive.</t>

<t><vspace blankLines='999' /></t>

<t>In the case of the inactivity timeout, the handling of the received value 
is a little more subtle, though the meaning of the inactivity 
timeout is unchanged — it still indicates the maximum permissible time allowed 
without useful activity on a DSO Session.
The act of receiving the message containing the DSO Keepalive TLV does not
itself reset the inactivity timer. The time elapsed since the last useful
activity on this DSO Session is unaffected by exchange of DSO Keepalive messages.
The new inactivity timeout value in the DSO Keepalive TLV in the received message
does update the timeout associated with the running inactivity timer;
that becomes the new maximum permissible time without activity on a DSO Session.</t>

<t><list style="symbols">
  <t>If the current inactivity timer value is not greater than the
new inactivity timeout, then the DSO Session may remain open for now.
When the inactivity timer value exceeds the new inactivity timeout,
the client MUST then begin closing the DSO Session, as described above.</t>
  <t>If the current inactivity timer value is already greater
than the new inactivity timeout, then this DSO Session has
already been inactive for longer than the server permits,
and the client MUST immediately begin closing this DSO Session.</t>
  <t>If the current inactivity timer value is already more than twice the
new inactivity timeout, then the client is immediately considered delinquent
(this DSO Session is immediately eligible to be forcibly terminated by the server)
and the client MUST immediately begin closing this DSO Session.
However if a server abruptly reduces the inactivity timeout in this
way, then, to give the client time to close the connection gracefully
before the server resorts to forcibly aborting it, the server
SHOULD give the client an additional grace period of one quarter
of the new inactivity timeout, or five seconds, whichever is greater.</t>
</list></t>

</section>
<section anchor="relation-to-edns0-tcp-keepalive-option" title="Relation to EDNS(0) TCP Keepalive Option">

<t>The inactivity timeout value in the Keepalive TLV (DSO-TYPE=1) has similar
intent to the EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>.
A client/server pair that supports DSO MUST NOT use the
EDNS(0) TCP KeepAlive option within any message after a DSO 
Session has been established.
Once a DSO Session has been established, if either
client or server receives a DNS message over the DSO Session that contains an
EDNS(0) TCP Keepalive option, this is an error and the receiver of the
EDNS(0) TCP Keepalive option MUST forcibly abort the connection immediately.</t>

</section>
</section>
<section anchor="delay" title="Retry Delay TLV">

<t>The Retry Delay TLV (DSO-TYPE=2) can be used as
a Primary TLV (unacknowledged) in a server-to-client message,
or as a Response Additional TLV in a server-to-client response to a client-to-server request message.</t>

<t>The TYPE-DEPENDENT DATA for the the Retry Delay TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     RETRY DELAY (32 bits)                     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='RETRY DELAY:'>
  A time value, specified as
a 32-bit unsigned integer in network (big endian) byte order in units of milliseconds,
within which the client MUST NOT retry this operation, or retry connecting to this server.</t>
</list></t>

<t>The RECOMMENDED value is 10 seconds.</t>

<section anchor="retry-delay-tlv-used-as-a-primary-tlv" title="Retry Delay TLV used as a Primary TLV">

<t>When sent in a DSO request message, from server to client, the 
Retry Delay TLV (0) is used as a Primary TLV. It is used by a server
to instruct a client to close the DSO Session and underlying connection,
and not to reconnect for the indicated time interval.</t>

<t>In this case it applies to the DSO Session as a whole, and the client MUST begin closing the 
DSO Session, as described in <xref target="retry"/>. The RCODE in the message header 
MUST indicate the reason for the termination:</t>

<t><list style="symbols">
  <t>NOERROR indicates a routine shutdown.</t>
  <t>SERVFAIL indicates that the server is overloaded due to resource exhaustion.</t>
  <t>REFUSED indicates that the server has been reconfigured and is no longer able 
to perform one or more of the functions 
currently being performed on this DSO Session (for example, a DNS Push Notification 
server could be reconfigured such that is is no longer accepting DNS Push 
Notification requests for one or more of the currently subscribed names).</t>
</list></t>

<t>This document specifies only these three RCODE values for Retry Delay request.
Servers sending Retry Delay requests SHOULD use one of these three values.
However, future circumstances may create situations where other RCODE values
are appropriate in Retry Delay requests, so clients MUST be prepared
to accept Retry Delay requests with any RCODE value.</t>

<t>A Retry Delay request is an unacknowledged request message;
the MESSAGE ID MUST be set to zero in the request
and the client MUST NOT send a response.</t>

</section>
<section anchor="retry-delay-tlv-used-as-a-response-additional-tlv" title="Retry Delay TLV used as a Response Additional TLV">

<t>In the case of a client request that returns a nonzero RCODE value,
the server MAY append a Retry Delay TLV (0) to the response,
indicating the time interval during which the client
SHOULD NOT attempt this operation again.</t>

<t>The indicated time interval during which the client SHOULD NOT retry
applies only to the failed operation, not to the DSO Session as a whole.</t>

</section>
<section anchor="retry-delay-tlv-is-used-by-server-only" title="Retry Delay TLV is used by server only">

<t>A client MUST NOT send a Retry Delay TLV to a server,
either in a DSO request message, or in a DSO response message.
If a server receives a DSO message containing a Retry Delay TLV,
this is a fatal error and the server MUST forcibly abort the connection immediately.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="padding" title="Encryption Padding TLV">

<t>The Encryption Padding TLV (DSO-TYPE=3) can only be used as
an Additional or Response Additional TLV.
It is only applicable when the DSO Transport layer uses encryption
such as TLS.</t>

<t>The TYPE-DEPENDENT DATA for the the Padding TLV is optional and is a
variable length field containing non-specified values. A DATA LENGTH
of 0 essentially provides for 4 octets of padding (the minimum amount).</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   /                                                               /
   /                   VARIABLE NUMBER OF OCTETS                   /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t>As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
the PADDING octets SHOULD be set to 0x00.  Other values MAY be used,
for example, in cases where there is a concern that the padded
message could be subject to compression before encryption.
PADDING octets of any value MUST be accepted in the messages received.</t>

<t>The Encryption Padding TLV may be included in either a DSO request, response, or both.
As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
if a request is received with an Encryption Padding TLV,
then the response MUST also include an Encryption Padding TLV.</t>

<t>The length of padding is intentionally not specified in this document and
is a function of current best practices with respect to the type and length
of data in the preceding TLVs <xref target="I-D.ietf-dprive-padding-policy"/>.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="summary" title="Summary">

<t>This section summarizes some noteworthy highlights about
various components of the DSO protocol.</t>

<section anchor="message-id" title="MESSAGE ID">

<t>In DSO Request Messages the MESSAGE ID may be either
nonzero (signaling that the responder MUST generate a response)
or zero (signaling that the responder MUST NOT generate a response).</t>

<t>In DSO Response Messages the MESSAGE ID MUST NOT be zero
(since this would be a response to a request that had
indicated that a response is not allowed).</t>

<t>The table below illustrates the legal combinations:</t>

<figure><artwork><![CDATA[
                          +--------------------+-------------------+
                          | Nonzero MESSAGE ID |  Zero MESSAGE ID  |
   +----------------------+--------------------+-------------------+
   | DSO Request Message  |         X          |         X         |
   +----------------------+--------------------+-------------------+
   | DSO Response Message |         X          |                   |
   +----------------------+--------------------+-------------------+
]]></artwork></figure>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="tlv-usage" title="TLV Usage">

<t>The table below indicates, for each of the three TLVs defined in this
document, whether they are valid in each of ten different contexts.</t>

<t>The first five contexts are requests from client to server,
and the corresponding responses from server back to client:</t>

<t><list style="symbols">
  <t>C-P - Primary TLV,
sent in DSO Request message,
from client to server,
with nonzero MESSAGE ID indicating that this request MUST generate response message.</t>
  <t>C-U - Primary TLV (unacknowledged),
sent in DSO Request message,
from client to server,
with zero MESSAGE ID indicating that this request MUST NOT generate response message.</t>
  <t>C-A - Additional TLV, optionally added to request message from client to server.</t>
  <t>CRP - Response Primary TLV, included in response message sent to back the client
(in response to a client “C-P” request with nonzero MESSAGE ID indicating that a response is required)
where the DSO-TYPE of the Response TLV matches the DSO-TYPE of the Primary TLV in the request.</t>
  <t>CRA - Response Additional TLV, included in response message sent to back the client
(in response to a client “C-P” request with nonzero MESSAGE ID indicating that a response is required)
where the DSO-TYPE of the Response TLV does not match the DSO-TYPE of the Primary TLV in the request.</t>
</list></t>

<t>The second five contexts are the reverse: requests from server to client,
and the corresponding responses from client back to server.</t>

<figure><artwork><![CDATA[
              +-------------------------+-------------------------+
              | C-P  C-U  C-A  CRP  CRA | S-P  S-U  S-A  SRP  SRA |
 +------------+-------------------------+-------------------------+
 | KeepAlive  |  X              X       |       X                 |
 +------------+-------------------------+-------------------------+
 | RetryDelay |                      X  |       X                 |
 +------------+-------------------------+-------------------------+
 | Padding    |            X         X  |            X         X  |
 +------------+-------------------------+-------------------------+
]]></artwork></figure>

<t>It is recommended that definitions of future TLVs include a
similar table summarizing the contexts where the new TLV is valid.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="inactivity-timeout" title="Inactivity Timeout">

<t>The Inactivity Timeout may have any 32-bit unsigned integer value.</t>

<t>The value zero informs the client that it
should not speculatively maintain idle connections at all, and
as soon as the client has completed the operation or operations relating
to this server, the client should immediately begin closing this session.</t>

<t>The maximum possible value,
0xFFFFFFFF (2^32-1 milliseconds, approximately 49.7 days),
informs the client that it may keep an idle connection open as long as it wishes.</t>

<t>The Inactivity timer is reset by any message <spanx style="strong">except</spanx> the Keepalive TLV,
and remains cleared any time that an operation is outstanding.</t>

</section>
<section anchor="keepalive-interval" title="Keepalive Interval">

<t>The Keepalive Interval is a 32-bit unsigned integer value,
with a minimum value of 10,000 milliseconds (10 seconds).</t>

<t>The maximum possible value,
0xFFFFFFFF (2^32-1 milliseconds, approximately 49.7 days),
informs the client that it should generate no keepalive traffic.</t>

<t>Any message exchange (including the Keepalive TLV) resets the Keepalive timer.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="dso-opcode-registration" title="DSO OPCODE Registration">

<t>The IANA is directed to record the value (tentatively) 6 for the DSO OPCODE
in the DNS OPCODE Registry.</t>

</section>
<section anchor="dso-rcode-registration" title="DSO RCODE Registration">

<t>The IANA is directed to record the value (tentatively) 11 for the DSONOTIMP error code
in the DNS RCODE Registry.</t>

</section>
<section anchor="dso-type-code-registry" title="DSO Type Code Registry">

<t>The IANA is directed to create the 16-bit DSO Type Code Registry,
with initial (hexadecimal) values as shown below:</t>

<texttable>
      <ttcol align='left'>Type</ttcol>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Status</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>0000</c>
      <c>Reserved</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0001</c>
      <c>KeepAlive</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0002</c>
      <c>RetryDelay</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0003</c>
      <c>EncryptionPadding</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0004-003F</c>
      <c>Unassigned, reserved for    DSO session-management TLVs</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0040-F7FF</c>
      <c>Unassigned</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>F800-FBFF</c>
      <c>Reserved for experimental/local use</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>FC00-FFFF</c>
      <c>Reserved for future expansion</c>
      <c>&#160;</c>
      <c>&#160;</c>
</texttable>

<t>DSO Type Code zero is reserved and is not currently intended for allocation.</t>

<t>Registrations of new DSO Type Codes in
the “Reserved for DSO session-management” range 0004-003F
and the “Reserved for future expansion” range FC00-FFFF
require publication of an IETF Standards Action document <xref target="RFC5226"/>.</t>

<t>Requests to register additional new DSO Type Codes
in the “Unassigned” range 0040-F7FF
are to be recorded by IANA after consultation with the
registry’s Designated Expert <xref target="RFC5226"/> at that time.
At the time of publication of this document, the Designated Expert
for the newly created DSO Type Code registry is [<spanx style="strong">TBD</spanx>].</t>

<t>DSO Type Codes in the “experimental/local” range F800-FBFF
may be used as Experimental Use or Private Use values <xref target="RFC5226"/>
and may be used freely for development purposes,
or for other purposes within a single site.
No attempt is made to prevent multiple sites from using
the same value in different (and incompatible) ways.
There is no need for IANA to review such assignments
(since IANA does not record them) and assignments
are not generally useful for broad interoperability.
It is the responsibility of the sites making use of
“experimental/local” values to ensure that no
conflicts occur within the intended scope of use.</t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>If this mechanism is to be used with DNS over TLS, then these messages
are subject to the same constraints as any other DNS-over-TLS messages
and MUST NOT be sent in the clear before the TLS session is established.</t>

<t>The data field of the “Encryption Padding” TLV could be used as a covert channel.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to
Tim Chown,
Ralph Droms,
Jan Komissar,
Manju Shankar Rao,
and Ted Lemon
for their helpful contributions to this document.</t>

<t><vspace blankLines='999' /></t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC1035;
&RFC7766;
&RFC6891;
&RFC7828;
&RFC2119;
&RFC2136;
&RFC7830;
&RFC1034;
&RFC1918;
&RFC5382;
&RFC2132;
&RFC5226;


    </references>

    <references title='Informative References'>

<reference anchor="NagleDA" target="http://www.stuartcheshire.org/papers/nagledelayedack/">
  <front>
    <title>TCP Performance problems caused by interaction between Nagle's Algorithm and Delayed ACK</title>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization></organization>
    </author>
    <date year="2005" month="May" day="20"/>
  </front>
</reference>
&RFC7858;
&I-D.ietf-dnssd-push;
&I-D.sctl-dnssd-mdns-relay;
&RFC6763;
&RFC0768;
&RFC7413;
&I-D.ietf-tls-tls13;
&RFC1122;
&I-D.ietf-dprive-padding-policy;


    </references>



  </back>

<!-- ##markdown-source:
H4sIAL6Lb1oAA+W9+3obR5Iv+H8+RS39h0kNAFMXy7b622+bpiib07o1SfVl
9uyerwAUiGoDVZiqAim0pHc5z3KebOOaGVkXkJLdfXrnaEYzMlDIyktkXH8R
MR6PXZM3q+xZ8vz1ZXLZpE222K6SN5usSpu8LGo3L2dFuoYH5lW6aMZ51izG
86IuN+M6q2t4ZFzn10W6Gh8/dXP4+bPk0fHD78cPx4+eunxTPUuaals3j46P
fzh+5NIqS58l50WTVUXWuNtreu+bt8mfy+qXvLhOfqrK7cb9chseGj/H97pZ
2jxL6mbutht8S/0suXhxmnz33dOnI/rXw+PH3zo3K+cwyrNkC5P83m3yZy5J
xklTzuj/17t1lS1q/ndZNfQfLt02y7KiJ+FvkuQFDj5JfsxWq7ymj3gDLtKd
/bCsrsMsk8td3WTrOjmFPYOh8+16BF/OJvRoOp1W2Q08fXlK/13DqzNYzw/f
Hieny7SCMWDv8TP6epY3O3hdNr8ty3lyCv/FH5dzmMXpSfLDk+Onj+WjbdFU
8PC7yxP6YLMsC3jo3x4mT2HsJ48eJw9h6+mrbJ3mq2dJle5+n9ezCUw/XvLl
BOaS1cu8ysyiL5stzC/+hlZ+stmssrBEXdJD+GiRF3mTJS/LcmPWc7oFomry
omwt5tvjh0/uWsyT4++TH757kjx+dPydXcxMpvX7FGczmZXreE3/Pkme5zOg
rLoszKL+vVwWrS9oTZcwu/m2CKd6lc2WRbkqr/Osjk5SnrRLp3+Pk1fpdTpP
V1mRnGawnEw+fvN+UVbz5HKWZ8UsS96m1S9mb/hbszFv/vIkefLTSWtfcFvn
yR+AxOe0Ur8Pf0vnv695St1NuOzfhMu0Sv9LbUINCxrehZMJzKqAxZotOMHL
XBb2C94CmHoNk5lldvyUn56s6enfX+On3fdcTZK32xpYVJWbN12V6/hjes+7
Il0s8lUOH8+jW3RwYBkBzCa/XpqNeX2aPPru6fH3d12bHx7+kHz/9Lvk4ePH
EQ/YyEx+P02L67/RGlxewILXwPRvMjzF1+n1Knt+wgfapNU1TmvZNJtn33xz
e3s7qYkv6P1DbvLNJoULXn9T4C/n2SrdZfN09ss3PAILmavTt8nbrKI3IQVs
qnK6QrY5S7c1nOp0B5sIM0tnKHySadbcZkBENJmvaziv67LKm+U6SYt58pzf
kZyc/oHJ0jPy/exrgN+p8Dr+dgz/++jYufF4DLQOZwLTce5qmdcJSMPtGkg6
mWfA5bI6SZMiuyXh+ebt6ZvnZwmsbUiWJofPL98cTRz832QNwjO9hgFg89fb
Igf5liVlePQWlpkXCe5oDpKlaFytA4rcrUfJtkaZ2ew22Rju2nWzHN+kq22W
HF69/NMRiLuiSd9PYOJAVAl8BLOtMpn5PGmWaZPAMcAsdEg4pnVWbpt65OAQ
1nlBkxnRbsONrXYbOpZNOkcxy5+7NFlUsNe3IMET3CEZHvchew8zp7mCDIYR
Ujhs2i+/lrDiCe/3Op/PV5lzXyH/qeAqEyXg7mewXNiiBSgUaVFvQMjWfrPL
ZgkiFFZUJO+ev8VpTDPcmhwmnaW4S6tdUm+yWb7Is/nI8eTSNQiNEQ9wA79H
6vzw4f8AdQK1iU+f+N+oY3z6xBTnn3x5CU/+X/jt999+/+nTxF1uZ0s7sxlM
pVws4NlwhKNkVRbX4xVcsbk/RRoYp5/BpLLkdpkVTs51ma1phX5Y/BTn4Ikn
b3CtsCfTrIB9b3Cbl+lNBmS5Bq6dFnm9dnTQOJ8Mtn0KPGwJJ4hHBmcMr6/r
ckYciGgO3lrWmaGxGheW1p40Ju684A/rHC4XUyvPI13VZZLOb1Kgu2t4mE69
3m5w6jBihTuHqgG/TRcx4cPN3sMm4QLPYIWHx0fJmRJP8kqX4s+bT+bp9z88
hJOBN2fvN6scuOVq5zx5l0lZwKnTdhzAIYzlhQcwFSD7Jp/Vk+TPy3xVN/6d
yxQpBzgOcaOmdKzbJrCBK6CjBob0ezOugP/gQvxmJodwZH4spKY/ZNkmxfMG
Qic6VqJ5BERzhCecVFm9XdH2gcypmYbx4TW8dg53GdYhjzVVPmOdPF9vSmGX
9o1+XUpTyQoYMJIHb/44bD6vawX7PUncC3sbUj0poJiibIBlTHMgwCqHvQQh
AbOAKwlPzVY58kGY3myFFAOflEWRKeMmhk5zCMPxgdQZTE6nzNtS48i4xA38
OyOy+c8tyKesZi4FIzcpnWrrd5P7smW45cB0D/EWkoiDeTw9Gu1j1i02jZxT
iOJXsWygVFgnDnRf5t27vEIuEg7dEFP0TH7kdJ5DzD25B3OHnQXtSIal8UWE
6P1CjkW7Am8B0VlWO9pNIKokR0pa81bjxsDPYS8n7sW2Ij5N46zBmpoGaQQb
hy/GH+CimFXP0nDKWcL6CZ+ZORp3WMMUP3zgr/FazXNkvDXYeCCWkH4WFahf
uAIgZP8Ow0idDE0bh+PDwcGiQFVVMsRN8vQ5oen4Z0BHWd1k43LWwFEss3SO
bK6mwUbJdNvQmxfltmJVLQERtJrDtP/4/PTNu9dXo+Tktfzj9aV+ckH/OKIN
xhOG0/x7VpU0j3Q2Az2ZZRoMnVdg9lY8OfwUnmc2QT/GK4wUB6fB0wZdZous
JW1SJFW8V0SH5aAH4DDQLJwSHJ4Q5xHx/M0G7jPTG64TL7eQi9lg2ZaJ+zOI
NzifesOqG9+BDXApWCNQ62r3d5TjZbmSm0/cG9eAXFlsf3pXlc3K6yL/O/MY
pAc+QyBuuDHuNgc6VNZa+Gdo1awa+Ek44Pnb4peivI1IkB5NFw3pFUPrAmHI
rDv/JaPTQGLbNltkFuynkH1BXkiroonBa2ikdArKP1j3dj0juBKo5fPFlFlG
C1CmhxxOCBfl1pzkJ/JmlcA1KyvALC4uxtNUiBufV/6cNw4GWqPioSKUXkuf
AJuDk2kmyVkK0h7PnS4rbRAuWi8pTj9viOCBy9cy8xSZsJyA8G+YMi4UzLM5
TBBMIJrfqkyRfvhWwIauUV2A71e7EeoVOIsVSFfY3vSmzOeoMRcLkLyqDPUp
2shNil1yCzvnSKspcN185w3HhhnQt23dQzdrW8yYGuCQJu4kuS5hDKICpvyq
xJ3J6ZBpcnRO/gXwcF7X28zQsptmC2CRcAnkVSNUH0Bmb1dpBUsknULuI6vC
0/I9HBf8NgcOAkf/Z5yw//EatjdHR4wKUmGrdKXwvuLMElKAMxCFV8mmzrbz
cnxxMXJe8cQVwMlcgw5ZwVr/TsqZVbmstJ8i2a5YL8lWKwcKKzF1rzcgLcLO
zJhj4CHj97d5TbwHLz0wqiSjnQOGdZPPgR85nr/KUNxGOPgpiQac9sWFMN1I
MLCREY8kOwG3gxkFC5hkWd7Sk46FAy5GHuTjw2XNkAmA7XqNjDtfwBC4iLSC
s0elF6m4QiUQHvcHQPSDN9PspEOazUi7gpsE6gbNFn+Gx2LPzBCsOSinXJOW
t4Dlor8EiSOtSYnQ6wvvdekKqLyWsbJaWKrVxsZgM8N6cTvUkMADaspZuZo4
utyXHXsMV2L0HGL9eMmRS9YZqrxN5gwnHHmds/sS0v2a9BdkDxVpE7gPME2n
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
2pUxp1IFE5QL8sW4/w/wsx5s81EBAA==

-->

</rfc>

