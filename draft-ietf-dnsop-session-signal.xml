<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.9 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC7766 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7766.xml">
<!ENTITY RFC6891 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6891.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC8174 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY RFC1034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC2136 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2136.xml">
<!ENTITY RFC7830 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7830.xml">
<!ENTITY RFC1918 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1918.xml">
<!ENTITY RFC2132 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2132.xml">
<!ENTITY RFC8126 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8126.xml">
<!ENTITY RFC7858 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7858.xml">
<!ENTITY RFC7828 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7828.xml">
<!ENTITY RFC2782 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2782.xml">
<!ENTITY I-D.ietf-dnssd-push SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dnssd-push.xml">
<!ENTITY I-D.ietf-dnssd-mdns-relay SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dnssd-mdns-relay.xml">
<!ENTITY RFC6763 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6763.xml">
<!ENTITY RFC0768 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.0768.xml">
<!ENTITY RFC6335 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6335.xml">
<!ENTITY RFC7413 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7413.xml">
<!ENTITY I-D.ietf-tls-tls13 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-tls-tls13.xml">
<!ENTITY RFC6762 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6762.xml">
<!ENTITY RFC1122 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1122.xml">
<!ENTITY RFC7788 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7788.xml">
<!ENTITY RFC5382 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5382.xml">
<!ENTITY RFC7857 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7857.xml">
<!ENTITY I-D.ietf-dprive-padding-policy SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dprive-padding-policy.xml">
]>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-dnsop-session-signal-12" category="std" updates="1035, 7766">

  <front>
    <title>DNS Stateful Operations</title>

    <author initials="R." surname="Bellis" fullname="Ray Bellis">
      <organization abbrev="ISC">Internet Systems Consortium, Inc.</organization>
      <address>
        <postal>
          <street>950 Charter Street</street>
          <city>Redwood City</city>
          <code>CA 94063</code>
          <country>USA</country>
        </postal>
        <phone>+1 (650) 423-1200</phone>
        <email>ray@isc.org</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino</city>
          <code>CA 95014</code>
          <country>USA</country>
        </postal>
        <phone>+1 (408) 996-1010</phone>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="J." surname="Dickinson" fullname="John Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>jad@sinodun.com</email>
      </address>
    </author>
    <author initials="S." surname="Dickinson" fullname="Sara Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>sara@sinodun.com</email>
      </address>
    </author>
    <author initials="T." surname="Lemon" fullname="Ted Lemon">
      <organization>Barefoot Consulting</organization>
      <address>
        <postal>
          <street>Brattleboro</street>
          <code>VT 05301</code>
          <country>USA</country>
        </postal>
        <email>mellon@fugue.com</email>
      </address>
    </author>
    <author initials="T." surname="Pusateri" fullname="Tom Pusateri">
      <organization>Unaffiliated</organization>
      <address>
        <postal>
          <street></street>
          <city>Raleigh</city>
          <code>NC 27608</code>
          <country>USA</country>
        </postal>
        <phone>+1 (919) 867-1330</phone>
        <email>pusateri@bangj.com</email>
      </address>
    </author>

    <date year="2018" month="July" day="26"/>

    <area>Internet</area>
    <workgroup>DNSOP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document defines a new DNS OPCODE for DNS Stateful Operations (DSO).
DSO messages communicate operations within persistent
stateful sessions, using type-length-value (TLV) syntax.
Three TLVs are defined that manage session timeouts,
termination, and encryption padding, and 
a framework is defined for extensions to enable new stateful operations.
This document updates RFC 1035 by adding a new DNS header opcode and result code which has different message semantics.  This document updates RFC 7766 by redefining a session, providing new guidance on connection re-use, and providing a new mechanism for handling session idle timeouts.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The use of transports for DNS other than UDP is being increasingly specified,
for example, DNS over TCP <xref target="RFC1035"/> <xref target="RFC7766"/> and DNS over TLS <xref target="RFC7858"/>.
Such transports can offer persistent, long-lived sessions and therefore when
using them for transporting DNS messages it is of benefit to have a mechanism
that can establish parameters associated with those sessions, such as timeouts.
In such situations it is also advantageous to support server-initiated messages.</t>

<t>The existing EDNS(0) Extension Mechanism for DNS <xref target="RFC6891"/> is explicitly
defined to only have “per-message” semantics. While EDNS(0) has been used to
signal at least one session-related parameter (edns-tcp-keepalive EDNS0 Option
<xref target="RFC7828"/>) the result is less than optimal due to the restrictions
imposed by the EDNS(0) semantics and the lack of server-initiated signalling. 
For example, a server cannot arbitrarily 
instruct a client to close a connection because the server can only send EDNS(0) options 
in responses to queries that contained EDNS(0) options.</t>

<t>This document defines a new DNS OPCODE, DSO ([TBA1], tentatively 6), for DNS Stateful Operations.
DSO messages are used to communicate operations within persistent
stateful sessions, expressed using type-length-value (TLV) syntax.
This document defines an initial set of three TLVs,
used to manage session timeouts, termination, and encryption padding.</t>

<t>The three TLVs defined here are all mandatory for all implementations of DSO.
Further TLVs may be defined in additional specifications.</t>

<t>The format for DSO messages
(<xref target="format"/>) differs somewhat from the traditional DNS message
format used for standard queries and responses.
The standard twelve-byte header is used, but the four count fields
(QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) are set to zero and accordingly their
corresponding sections are not present.
The actual data pertaining to DNS Stateful Operations
(expressed in TLV syntax) is appended to the end of the DNS message header.
When displayed using packet analyzer tools that have not been
updated to recognize the DSO format, this
will result in the DSO data being displayed
as unknown additional data after the end of the DNS message.
It is likely that future updates to these tools will add the ability
to recognize, decode, and display the DSO data.</t>

<t>This new format has distinct advantages over an RR-based format because it
is more explicit and more compact. Each TLV definition is specific
to its use case, and as a result contains no redundant or overloaded fields.
Importantly, it completely avoids conflating DNS Stateful Operations in any way 
with normal DNS operations or with existing EDNS(0)-based functionality.
A goal of this approach is to avoid the operational issues that have
befallen EDNS(0), particularly relating to middlebox behaviour.</t>

<t>With EDNS(0), multiple options may be packed into a single OPT pseudo-RR,
and there is no generalized mechanism for a client to be able to tell
whether a server has processed or otherwise acted upon each individual
option within the combined OPT pseudo-RR.
The specifications for each individual option need to define how each
different option is to be acknowledged, if necessary.</t>

<t>In contrast to EDNS(0), with DSO there is no
compelling motivation to pack multiple operations into a single
message for efficiency reasons, because DSO
always operates using a connection-oriented transport protocol.
Each DSO operation is communicated in its own separate
DNS message, and the transport protocol can take care of packing
several DNS messages into a single IP packet if appropriate.
For example, TCP can pack multiple small DNS messages into a single TCP segment.
This simplification allows for clearer semantics.
Each DSO request message communicates just one primary operation,
and the RCODE in the corresponding response message indicates the
success or failure of that operation.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="requirements-language" title="Requirements Language">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”,
and “OPTIONAL” in this document are to be interpreted as
described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

</section>
<section anchor="terminology" title="Terminology">

<t>“DSO” is used to mean DNS Stateful Operation.</t>

<t>The term “connection” means a bidirectional byte (or message) stream,
where the bytes (or messages) are delivered reliably and in-order,
such as provided by using
DNS over TCP <xref target="RFC1035"/> <xref target="RFC7766"/> or DNS over TLS <xref target="RFC7858"/>.</t>

<t>The unqualified term “session” in the context of this document means the exchange of
DNS messages over a connection where:</t>

<t><list style="symbols">
  <t>The connection between client and server is persistent and relatively
long-lived (i.e., minutes or hours, rather than seconds).</t>
  <t>Either end of the connection may initiate messages to the other.</t>
</list></t>

<t>In this document the term “session” is used exclusively as described above.
The term has no relationship to the “session layer” of the
OSI “seven-layer model”.</t>

<t>A “DSO Session” is established between two endpoints that acknowledge
persistent DNS state via the exchange of DSO messages over the connection.
This is distinct from a DNS-over-TCP session as described in
the previous specification for DNS over TCP <xref target="RFC7766"/>.</t>

<t>A “DSO Session” is terminated when the underlying connection is closed.
The underlying connection can be closed in two ways:</t>

<t>Where this specification says, “close gracefully,”
that means sending a TLS close_notify (if TLS is in use) followed by a TCP FIN,
or the equivalents for other protocols.
Where this specification requires a connection to be closed gracefully,
the requirement to initiate that graceful close is placed on the client,
to place the burden of TCP’s TIME-WAIT state on the client rather than the server.</t>

<t>Where this specification says, “forcibly abort,”
that means sending a TCP RST,
or the equivalent for other protocols.
In the BSD Sockets API this is achieved by setting the
SO_LINGER option to zero before closing the socket.</t>

<t>The term “server” means the software with a listening socket, awaiting
incoming connection requests.</t>

<t>The term “client” means the software which initiates a connection
to the server’s listening socket.</t>

<t>The terms “initiator” and “responder” correspond respectively to the
initial sender and subsequent receiver of a DSO request message or unacknowledged message,
regardless of which was the “client” and “server” in the usual DNS sense.</t>

<t>The term “sender” may apply to
either an initiator (when sending a DSO request message or unacknowledged message)
or a responder (when sending a DSO response message).</t>

<t>Likewise, the term “receiver” may apply to
either a responder (when receiving a DSO request message or unacknowledged message)
or an initiator (when receiving a DSO response message).</t>

<t>In protocol implementation there are generally two kinds of errors
that software writers have to deal with.
The first is situations that arise due to factors in the environment,
such as temporary loss of connectivity. While undesirable, these
situations do not indicate a flaw in the software, and they are
situations that software should generally be able to recover from.
The second is situations that should never happen when communicating
with a correctly-implemented peer.
If they do happen, they indicate a serious flaw in the protocol implementation,
beyond what it is reasonable to expect software to recover from.
This document describes this latter form of error condition as a
“fatal error” and specifies that an implementation encountering
a fatal error condition “MUST forcibly abort the connection immediately”.
Given that these fatal error conditions signify defective software,
and given that defective software is likely to remain defective for
some time until it is fixed, after forcibly aborting a connection,
a client SHOULD refrain from automatically reconnecting to that
same service instance for at least one hour.</t>

<t>This document uses the term “same service instance” as follows:</t>

<t><list style="symbols">
  <t>In cases where a server is specified or configured using
an IP address and TCP port number,
two different configurations are referring to the same service instance if they
contain the same IP address and TCP port number.</t>
  <t>In cases where a server is specified or configured using
a hostname and TCP port number,
such as in the content of a DNS SRV record <xref target="RFC2782"/>,
two different configurations (or DNS SRV records) are considered
to be referring to the same service instance if they
contain the same hostname (subject to the usual case insensitive
DNS name matching rules <xref target="RFC1034"/> <xref target="RFC1035"/>) and TCP port number.
In these cases, configurations with different hostnames are considered
to be referring to different service instances, even if those different hostnames
happen to be aliases, or happen to resolve to the same IP address(es).
Implementations SHOULD NOT resolve hostnames and then
perform matching of IP address(es) in order to evaluate whether
two entities should be determined to be the “same service instance”.</t>
</list></t>

<t>When an anycast service is configured on a particular IP address and port, it
must be the case that although there is more than one physical server
responding on that IP address, each such server can be treated as equivalent.
If a change in network topology causes
packets in a particular TCP connection to be sent to an anycast
server instance that does not know about the connection, the new
server will automatically terminate the connection with a TCP reset,
since it will have no record of the connection, and then the client can
reconnect or stop using the connection, as appropriate.</t>

<t>If after the connection is re-established, the client’s assumption that it is
connected to the same service is violated in some way, that would be considered
to be incorrect behavior in this context. It is however out of the possible
scope for this specification to make specific recommendations in this regard;
that would be up to follow-on documents that describe specific uses of DNS
stateful operations.</t>

<t>The term “long-lived operations” refers to operations
such as Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/>,
Discovery Relay interface subscriptions <xref target="I-D.ietf-dnssd-mdns-relay"/>,
and other future long-lived DNS operations that choose to use
DSO as their basis. These operations establish state that persists beyond
the lifetime of a traditional brief request/response transaction.
This document, the base specification for DNS Stateful Operations,
defines a framework for supporting long-lived operations,
but does not itself define any long-lived operations.
Nonetheless, to appreciate the design rationale behind
DNS Stateful Operations, it is helpful to understand
the kind of long-lived operations that it is intended to support.</t>

<t>DNS Stateful Operations uses three kinds of message:
“DSO request messages”, “DSO response messages”, and
“DSO unacknowledged messages”.
A DSO request message elicits a DSO response message.
DSO unacknowledged messages are unidirectional messages and do not generate any response.</t>

<t>Both DSO request messages and DSO unacknowledged messages are formatted as DNS
request messages (the header QR bit is set to zero, as described in <xref target="format"/>).
One difference is that in DSO request messages the MESSAGE ID field is nonzero;
in DSO unacknowledged messages it is zero.</t>

<t>The content of DSO messages is expressed using type-length-value (TLV) syntax.</t>

<t>In a DSO request message or DSO unacknowledged message
the first TLV is referred to as the “Primary TLV”
and determines the nature of the operation being performed,
including whether it is an acknowledged or unacknowledged operation;
any other TLVs in a DSO request message or unacknowledged message are referred to as “Additional TLVs”
and serve additional non-primary purposes, which may be related to
the primary purpose, or not, as in the case of the encryption padding TLV.</t>

<t>A DSO response message may contain no TLVs, or it may contain one
or more TLVs as appropriate to the information being communicated.
In the context of DSO response messages,
one or more TLVs with the same DSO-TYPE as the Primary TLV in the
corresponding DSO request message are referred to as “Response Primary TLVs”.
Any other TLVs with different DSO-TYPEs are referred to as “Response Additional TLVs”.
The Response Primary TLV(s), if present, MUST occur first in the response message,
before any Response Additional TLVs.</t>

<t>Two timers (elapsed time since an event) are defined in this document:</t>

<t><list style="symbols">
  <t>an inactivity timer (see <xref target="inactivetimer"/> and <xref target="keepalive"/>)</t>
  <t>a keepalive timer (see <xref target="keepalivetimer"/> and <xref target="keepalive"/>)</t>
</list></t>

<t>The timeouts associated with these timers are called
the inactivity timeout and 
the keepalive interval, respectively. 
The term “Session Timeouts” is used to refer to this pair of timeout values.</t>

<t>Resetting a timer means resetting the timer value to zero and starting the timer again.
Clearing a timer means resetting the timer value to zero but NOT starting the timer again.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="discussion" title="Discussion">

<t>There are several use cases for DNS Stateful operations that can 
be described here.</t>

<t>Firstly, establishing session parameters such as server-defined timeouts is of 
great use in the 
general management of persistent connections. For example, using DSO sessions 
for stub-to-recursive DNS-over-TLS <xref target="RFC7858"/> is more flexible for both the 
client and the server than attempting to manage sessions using just the
edns-tcp-keepalive EDNS0 Option <xref target="RFC7828"/>.
The simple set of TLVs defined in this document is
sufficient to greatly enhance connection management for this use case.</t>

<t>Secondly, DNS-SD <xref target="RFC6763"/> has evolved into a naturally session-based mechanism where,
for example, long-lived subscriptions lend themselves to ‘push’ mechanisms as 
opposed to polling. Long-lived stateful connections and server-initiated 
messages align with this use case <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>A general use case is that DNS traffic is often bursty but session establishment 
can be expensive. One challenge with long-lived connections is to maintain 
sufficient traffic to maintain NAT and firewall state.
To mitigate this issue this document introduces a
new concept for the DNS, that is DSO “Keepalive traffic”.
This traffic carries no DNS data and is not considered ‘activity’
in the classic DNS sense, but serves to maintain state in middleboxes,
and to assure client and server that they still have connectivity to each other.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="details" title="Protocol Details">

<section anchor="establishment" title="DSO Session Establishment">

<t>DSO messages MUST be carried in only protocols and in
environments where a session may be established according to the definition
given above in the Terminology section (<xref target="terminology"/>).</t>

<t>DNS over plain UDP <xref target="RFC0768"/> is not appropriate since it fails on the requirement for
in-order message delivery, and, in the presence of NAT gateways and firewalls
with short UDP timeouts, it fails to provide a persistent bi-directional
communication channel unless an excessive amount of DSO keepalive traffic is used.</t>

<t>At the time of publication, DSO is specified only
for DNS over TCP <xref target="RFC1035"/> <xref target="RFC7766"/>, and
for DNS over TLS over TCP <xref target="RFC7858"/>.
Any use of DSO over some other connection technology needs to be
specified in an appropriate future document.</t>

<t>Determining whether a given connection is using DNS over TCP, or DNS
over TLS over TCP, is outside the scope of this specification, and
must be determined using some out-of-band configuration information.
There is no provision within the DSO specification to
turn TLS on or off during the lifetime of a connection.
For service types where the service instance is discovered
using a DNS SRV record <xref target="RFC2782"/>,
the specification for that service type SRV name <xref target="RFC6335"/>
will state whether the connection uses plain TCP, or TLS over TCP.
For example, the specification for the
“_dns‑push‑tls._tcp” service <xref target="I-D.ietf-dnssd-push"/>,
states that it uses TLS.
It is a common convention that protocols specified to run over TLS
are given IANA service type names ending in “‑tls”.</t>

<t>In some environments it may be known in advance by external means
that both client and server support DSO, and in these cases either
client or server may initiate DSO messages at any time.</t>

<t>However, in the typical case a server will not know in advance whether a
client supports DSO, so in general, unless it is known in advance by other means
that a client does support DSO, a server MUST NOT initiate DSO request messages
or DSO unacknowledged messages
until a DSO Session has been mutually established
by at least one successful DSO request/response exchange
initiated by the client, as described below.
Similarly, unless it is known in advance by other means that a server
does support DSO, a client MUST NOT initiate
DSO unacknowledged messages until after a DSO Session has been mutually established.</t>

<t>A DSO Session is established over a connection by the client
sending a DSO request message, such as a DSO Keepalive request message (<xref target="keepalive"/>),
and receiving a response, with matching MESSAGE ID, and RCODE
set to NOERROR (0), indicating that the DSO request was successful.</t>

<t>If the RCODE in the response is set to DSOTYPENI
(“DSO-TYPE Not Implemented”, [TBA2] tentatively RCODE 11)
this indicates that the server does support DSO, but does not implement
the DSO-TYPE of the primary TLV in this DSO request message.
A server implementing DSO MUST NOT return DSOTYPENI
for a DSO Keepalive request message, because the Keepalive TLV is mandatory to implement.
But in the future, if a client attempts to establish a DSO Session
using a response-requiring DSO request message using some newly-defined DSO-TYPE that the server
does not understand, that would result in a DSOTYPENI response.
If the server returns DSOTYPENI then a DSO Session is not
considered established, but the client is permitted to continue
sending DNS messages on the connection,
including other DSO messages such as the DSO Keepalive,
which may result in a successful NOERROR response,
yielding the establishment of a DSO Session.</t>

<t>If the RCODE is set to any value other than NOERROR (0) or DSOTYPENI
([TBA2] tentatively 11), then the client MUST assume that the server does
not implement DSO at all. In this case the client is permitted to continue
sending DNS messages on that connection, but the client SHOULD NOT
issue further DSO messages on that connection.</t>

<t>When the server receives a DSO request message
from a client, and transmits a successful NOERROR response to that
request, the server considers the DSO Session established.</t>

<t>When the client receives the server’s NOERROR response to its
DSO request message, the client considers the DSO Session established.</t>

<t>Once a DSO Session has been established,
either end may unilaterally send appropriate DSO messages at any time,
and therefore either client or server may be the initiator of a message.</t>

<t>Once a DSO Session has been established,
clients and servers should behave as described in this specification with
regard to inactivity timeouts and session termination, not as previously
prescribed in the earlier specification for DNS over TCP <xref target="RFC7766"/>.</t>

<t>Note that for clients that implement only the DSO-TYPEs defined in
this base specification, sending a Keepalive TLV is the only
DSO request message they have available to initiate a DSO Session.
Even for clients that do implement other future DSO-TYPEs, for simplicity
they MAY elect to always send an initial DSO Keepalive
request message as their way of initiating a DSO Session.
A future definition of a new response-requiring DSO-TYPE
gives implementers the option of using that new DSO-TYPE if they wish,
but does not change the fact that sending a Keepalive TLV
remains a valid way of initiating a DSO Session.</t>

<section anchor="sharing" title="Connection Sharing">

<t>As previously specified for DNS over TCP <xref target="RFC7766"/>:</t>

<figure><artwork><![CDATA[
   To mitigate the risk of unintentional server overload, DNS
   clients MUST take care to minimize the number of concurrent
   TCP connections made to any individual server.  It is RECOMMENDED
   that for any given client/server interaction there SHOULD be
   no more than one connection for regular queries, one for zone
   transfers, and one for each protocol that is being used on top
   of TCP (for example, if the resolver was using TLS). However,
   it is noted that certain primary/secondary configurations
   with many busy zones might need to use more than one TCP
   connection for zone transfers for operational reasons (for
   example, to support concurrent transfers of multiple zones).
]]></artwork></figure>

<t>A single server may support multiple services, including DNS Updates 
<xref target="RFC2136"/>, DNS Push Notifications <xref target="I-D.ietf-dnssd-push"/>,
and other services, for one or more DNS zones.
When a client discovers that the target server for several different operations
is the same target hostname and port, the client SHOULD use a single
shared DSO Session for all those operations.
A client SHOULD NOT open multiple connections to the same target host and port
just because the names being operated on are different or
happen to fall within different zones.
This requirement has two benefits.
First, it reduces unnecessary connection load on the DNS server.
Second, it avoids paying the TCP slow start penalty when making subsequent
connections to the same server.</t>

<t>However, server implementers and operators should be aware that connection
sharing may not be possible in all cases.
A single host device may be home to multiple independent client software
instances that don’t coordinate with each other.
Similarly, multiple independent client devices behind the same NAT gateway
will also typically appear to the DNS server as different source ports on
the same client IP address.
Because of these constraints, a DNS server MUST be prepared to accept
multiple connections from different source ports on the same client IP address.</t>

</section>
<section anchor="zero-round-trip-operation" title="Zero Round-Trip Operation">

<t>There is increased awareness today of the performance benefits
of eliminating round trips in session establishment.
Technologies like TCP Fast Open <xref target="RFC7413"/>
and TLS 1.3 <xref target="I-D.ietf-tls-tls13"/>
provide mechanisms to reduce or eliminate
round trips in session establishment.</t>

<t>Similarly, DSO supports zero round-trip operation.</t>

<t>Having initiated a connection to a server, possibly using
zero round-trip TCP Fast Open and/or
zero round-trip TLS 1.3, a client MAY send multiple
response-requiring DSO request messages to the server in succession
without having to wait for a response to the first request message
to confirm successful establishment of a DSO session.</t>

<t>However, a client MUST NOT send non-response-requiring DSO request
messages until after a DSO Session has been mutually established.</t>

<t>Similarly, a server MUST NOT send DSO request messages until it
has received a response-requiring DSO request message from a
client and transmitted a successful NOERROR response for that request.</t>

<t>Caution must be taken to ensure that DSO messages sent before the first
round-trip is completed are idempotent, or are otherwise immune to any problems
that could be result from the inadvertent replay that can occur with zero round-trip operation.</t>

</section>
<section anchor="middlebox-considerations" title="Middlebox Considerations">

<t>Where an application-layer middlebox (e.g., a DNS proxy, forwarder,
or session multiplexer) is in the path, care must be taken to avoid
inappropriately passing session signaling through the middlebox.</t>

<t>In cases where a DSO session is terminated on one side of a middlebox,
and then some session is opened on the other side of the middlebox in
order to satisfy requests sent over the first DSO session, any such session
MUST be treated as a separate session.</t>

<t>This does not
preclude the use of DSO messages in the presence of an IP-layer
middlebox, such as a NAT that rewrites IP-layer and/or transport-
layer headers but otherwise preserves the effect of a single session
between the client and the server.  And of course it does not apply
to middleboxes that do not implement DNS Stateless Operations.</t>

<t>These restrictions do not apply to such middleboxes:
since they have no way to understand a DSO message, a pass-through
middlebox like the one described in the previous paragraph will pass
DSO messages unchanged or drop them (or possibly drop the connection).
A middlebox that is not doing a strict pass-through will have no way
to know on which connection to forward a DSO message, and therefore
will not be able to behave incorrectly.</t>

<t>To illustrate the above, consider a network where a middlebox
terminates one or more TCP connections from clients and multiplexes the
queries therein over a single TCP connection to an upstream server.
The DSO messages and any associated state are specific to the individual
TCP connections.  A DSO-aware middlebox MAY in some circumstances be
able to retain associated state and pass it between the client and
server (or vice versa) but this would be highly TLV-specific.  For
example, the middlebox may be able to maintain a list of which clients
have made Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/> and
make its own subscription(s) on their behalf, relaying any subsequent
notifications to the client (or clients) that have subscribed to that
particular notification.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="format" title="Message Format">

<t>A DSO message begins with
the standard twelve-byte DNS message header <xref target="RFC1035"/>
with the OPCODE field set to the DSO OPCODE ([TBA1] tentatively 6).
However, unlike standard DNS messages, the question section, answer section,
authority records section and additional records sections are not present.
The corresponding count fields (QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) MUST be
set to zero on transmission.</t>

<t>If a DSO message is received where any of the count fields are
not zero, then a FORMERR MUST be returned,
unless a future IETF Standard specifies otherwise.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                          MESSAGE ID                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |QR |    OPCODE     |            Z              |     RCODE     |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     QDCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ANCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     NSCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ARCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                           DSO Data                            /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><vspace blankLines='999' /></t>

<section anchor="header" title="DNS Header Fields in DSO Messages">

<t>In an unacknowledged message the MESSAGE ID field MUST be set to zero.
In an acknowledged request message the MESSAGE ID field MUST
be set to a unique nonzero value, that the initiator is not
currently using for any other active operation on this connection.
For the purposes here, a MESSAGE ID is in use in this DSO Session if the
initiator has used it in a request for which it is still awaiting a response,
or if the client has used it to set up a long-lived operation that has not yet been cancelled.
For example, a long-lived operation could be
a Push Notification subscription <xref target="I-D.ietf-dnssd-push"/> or
a Discovery Relay interface subscription <xref target="I-D.ietf-dnssd-mdns-relay"/>.</t>

<t>Whether a message is acknowledged or unacknowledged is
determined only by the specification for the Primary TLV.
An acknowledgment cannot be requested by including a nonzero message ID
in a message the primary TLV of which is specified to be unacknowledged,
nor can an acknowledgment be prevented by sending a message ID of zero
in a message with a primary TLV that is specified to be acknowledged.
A responder that receives either such malformed message MUST treat it
as a fatal error and forcibly abort the connection immediately.</t>

<t>In a request or unacknowledged message the DNS Header QR bit MUST be zero (QR=0).
If the QR bit is not zero the message is not a request or unacknowledged message.</t>

<t>In a response message the DNS Header QR bit MUST be one (QR=1).<vspace />
If the QR bit is not one the message is not a response message.</t>

<t>In a response message (QR=1) the MESSAGE ID field MUST contain a copy of the value of
the MESSAGE ID field in the request message being responded to.
In a response message (QR=1) the MESSAGE ID field MUST NOT be zero.
If a response message (QR=1) is received where the MESSAGE ID is zero
this is a fatal error and the recipient MUST forcibly abort the connection immediately.</t>

<t>The DNS Header OPCODE field holds the DSO OPCODE value ([TBA1] tentatively 6).</t>

<t>The Z bits are currently unused in DSO messages,
and in both DSO requests and DSO responses the
Z bits MUST be set to zero (0) on transmission and MUST be silently ignored
on reception, unless a future IETF Standard specifies otherwise.</t>

<t><vspace blankLines='999' /></t>

<t>In a DNS request message (QR=0) the RCODE is set according to the definition of the request.
For example, in a Retry Delay message (<xref target="retry"/>) the RCODE indicates the reason for termination.
However, in most cases, except where clearly specified otherwise,
in a DNS request message (QR=0) the RCODE is set to zero on transmission,
and silently ignored on reception.</t>

<t>The RCODE value in a response message (QR=1) may be one of the following values:</t>

<texttable>
      <ttcol align='right'>Code</ttcol>
      <ttcol align='left'>Mnemonic</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>0</c>
      <c>NOERROR</c>
      <c>Operation processed successfully</c>
      <c>1</c>
      <c>FORMERR</c>
      <c>Format error</c>
      <c>2</c>
      <c>SERVFAIL</c>
      <c>Server failed to process request due to a problem with the server</c>
      <c>3</c>
      <c>NXDOMAIN</c>
      <c>Name Error — Named entity does not exist (TLV-dependent)</c>
      <c>4</c>
      <c>NOTIMP</c>
      <c>DSO not supported</c>
      <c>5</c>
      <c>REFUSED</c>
      <c>Operation declined for policy reasons</c>
      <c>9</c>
      <c>NOTAUTH</c>
      <c>Not Authoritative (TLV-dependent)</c>
      <c>[TBA2] 11</c>
      <c>DSOTYPENI</c>
      <c>Primary TLV’s DSO-Type is not implemented</c>
</texttable>

<t>Use of the above RCODEs is likely to be common in DSO but 
does not preclude the definition and use of other codes in future documents that 
make use of DSO.</t>

<t>If a document defining a new DSO-TYPE makes use of NXDOMAIN (Name Error)
or NOTAUTH (Not Authoritative) then that document MUST specify the specific
interpretation of these RCODE values in the context of that new DSO TLV.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="dsodata" title="DSO Data">

<t>The standard twelve-byte DNS message header with its
zero-valued count fields is followed by the DSO Data,
expressed using TLV syntax, as described below <xref target="tlvsyntax"/>.</t>

<t>A DSO message may be a request message, a response message, or an unacknowledged message.</t>

<t>A DSO request message or DSO unacknowledged message MUST contain at least one TLV.
The first TLV in a DSO request message or DSO unacknowledged message is referred to as the “Primary TLV”
and determines the nature of the operation being performed,
including whether it is an acknowledged or unacknowledged operation.
In some cases it may be appropriate to include other TLVs in a request message or unacknowledged message,
such as the Encryption Padding TLV (<xref target="padding"/>),
and these extra TLVs are referred to as the “Additional TLVs” and are not limited to what is defined in this document. New “Additional TLVs” may be defined in the future and those definitions will describe when their use is appropriate.</t>

<t>A DSO response message may contain no TLVs, or it may be specified to
contain one or more TLVs appropriate to the information being
communicated.  This includes “Primary TLVs” and “Additional TLVs”
defined in this document as well as in future TLV definitions.
It may be permissible for an additional TLV to appear in a response
to a primary TLV even though the specification of that primary TLV
does not specify it explicitly.  See <xref target="TLV"/> for more information.</t>

<t>A DSO response message may contain one or more TLVs with
DSO-TYPE the same as the Primary TLV from the corresponding DSO request message,
in which case those TLV(s) are referred to as “Response Primary TLVs”.
A DSO response message is not required to carry Response Primary TLVs.
The MESSAGE ID field in the DNS message header is sufficient to identify
the DSO request message to which this response message relates.</t>

<t>A DSO response message may contain one or more TLVs with
DSO-TYPEs different from the Primary TLV from the corresponding DSO request message,
in which case those TLV(s) are referred to as “Response Additional TLVs”.</t>

<t>Response Primary TLV(s), if present, MUST occur first in the response message,
before any Response Additional TLVs.</t>

<t>It is anticipated that most DSO operations will be specified
to use request messages, which generate corresponding responses.
In some specialized high-traffic use cases,
it may be appropriate to specify unacknowledged messages.
Unacknowledged messages can be more efficient on the network,
because they don’t generate a stream of corresponding reply messages.
Using unacknowledged messages can also simplify software
in some cases, by removing need for an initiator to maintain
state while it waits to receive replies it doesn’t care about.
When the specification for a particular TLV states that,
when used as a Primary TLV (i.e., first) in an outgoing DNS request message (i.e., QR=0),
that message is to be unacknowledged,
the MESSAGE ID field MUST be set to zero and
the receiver MUST NOT generate any response message
corresponding to this unacknowledged message.</t>

<t>The previous point, that the receiver MUST NOT generate responses to
unacknowledged messages, applies even in the case of errors.
When a DSO message is received where both the QR bit and the MESSAGE ID field
are zero, the receiver MUST NOT generate any response.
For example, if the DSO-TYPE in the Primary TLV is unrecognized,
then a DSOTYPENI error MUST NOT be returned; instead the receiver
MUST forcibly abort the connection immediately.</t>

<t>Unacknowledged messages MUST NOT be used “speculatively”
in cases where the sender doesn’t know if the receiver supports
the Primary TLV in the message, because there is no way to receive
any response to indicate success or failure of the request message
(the request message does not contain a unique MESSAGE ID with
which to associate a response with its corresponding request).
Unacknowledged messages are only appropriate in cases
where the sender already knows that the receiver supports,
and wishes to receive, these messages.</t>

<t>For example, after a client has subscribed for Push Notifications
<xref target="I-D.ietf-dnssd-push"/>, the subsequent event notifications are
then sent as unacknowledged messages, and this is appropriate
because the client initiated the message stream by virtue of its
Push Notification subscription, thereby indicating its support of
Push Notifications, and its desire to receive those notifications.</t>

<t>Similarly, after an Discovery Relay client has subscribed to receive
inbound mDNS (multicast DNS, <xref target="RFC6762"/>) traffic from an Discovery
Relay, the subsequent stream of received
packets is then sent using unacknowledged messages, and this
is appropriate because the client initiated the message stream
by virtue of its Discovery Relay link subscription, thereby indicating
its support of Discovery Relay, and its desire to receive inbound mDNS
packets over that DSO session <xref target="I-D.ietf-dnssd-mdns-relay"/>.</t>

<t><vspace blankLines='999' /></t>

<section anchor="tlvsyntax" title="TLV Syntax">

<t>All TLVs, whether used as “Primary”, “Additional”, “Response Primary”,
or “Response Additional”, use the same encoding syntax.</t>

<t>The specification for a TLV states whether that DSO-TYPE may be used in
“Primary”, “Additional”, “Response Primary”, or “Response Additional” TLVs.
The specification for a TLV also states whether,
when used as the Primary (i.e., first) TLV in a DNS request message (i.e., QR=0),
that DSO message is to be acknowledged.
If the DSO message is to be acknowledged, the specification
also states which TLVs, if any, are to be included in the response.
The Primary TLV may or may not be contained in the response,
depending on what is stated in the specification for that TLV.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                           DSO-TYPE                            |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                          DSO-LENGTH                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                           DSO-DATA                            /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='DSO-TYPE:'>
  A 16-bit unsigned integer, in network (big endian) byte order,
giving the DSO-TYPE of the current DSO TLV per the IANA DSO Type Code Registry.</t>
  <t hangText='DSO-LENGTH:'>
  A 16-bit unsigned integer, in network (big endian) byte order,
giving the size in bytes of the DSO-DATA.</t>
  <t hangText='DSO-DATA:'>
  Type-code specific format. The generic DSO machinery treats the
DSO-DATA as an opaque “blob” without attempting to interpret it.
Interpretation of the meaning of the DSO-DATA for a particular
DSO-TYPE is the responsibility of the software that implements that DSO-TYPE.</t>
</list></t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="request-tlvs" title="Request TLVs">

<t>The first TLV in a DSO request message or unacknowledged message is the “Primary TLV”
and indicates the operation to be performed.
A DSO request message or unacknowledged message MUST contain at at least one TLV, the Primary TLV.</t>

<t>Immediately following the Primary TLV, a DSO request message or unacknowledged message
MAY contain one or more “Additional TLVs”, which specify
additional parameters relating to the operation.</t>

</section>
<section anchor="response-tlvs" title="Response TLVs">

<t>Depending on the operation, a DSO response message MAY contain no TLVs,
because it is simply a response to a previous request message, and the
MESSAGE ID in the header is sufficient to identify the request in question.
Or it may contain a single response TLV, with the same DSO-TYPE as the
Primary TLV in the request message.
Alternatively it may contain one or more TLVs of other
types, or a combination of the above, as appropriate
for the information that needs to be communicated.
The specification for each DSO TLV determines
what TLVs are required in a response to a request using that TLV.</t>

<t>If a DSO response is received for an operation where the specification
requires that the response carry a particular TLV or TLVs,
and the required TLV(s) are not present, then this is a fatal
error and the recipient of the defective response message MUST
forcibly abort the connection immediately.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="unrecognized-tlvs" title="Unrecognized TLVs">

<t>If DSO request message is received containing an unrecognized Primary TLV,
with a nonzero MESSAGE ID (indicating that a response is expected),
then the receiver MUST send an error response with matching MESSAGE ID,
and RCODE DSOTYPENI ([TBA2] tentatively 11).
The error response MUST NOT contain a copy of the unrecognized Primary TLV.</t>

<t>If DSO unacknowledged message is received containing an unrecognized Primary TLV,
with a zero MESSAGE ID (indicating that no response is expected),
then this is a fatal error and the recipient
MUST forcibly abort the connection immediately.</t>

<t>If a DSO request message or unacknowledged message is received where the Primary TLV is recognized,
containing one or more unrecognized Additional TLVs, the unrecognized
Additional TLVs MUST be silently ignored, and the remainder of the message
is interpreted and handled as if the unrecognized parts were not present.</t>

<t>Similarly, if a DSO response message is received containing one
or more unrecognized TLVs, the unrecognized TLVs MUST be silently
ignored, and the remainder of the message is interpreted and
handled as if the unrecognized parts were not present.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="edns0-and-tsig" title="EDNS(0) and TSIG">

<t>Since the ARCOUNT field MUST be zero, a DSO message
MUST NOT contain an EDNS(0) option in the additional records section.
If functionality provided by current or future EDNS(0) options
is desired for DSO messages, one or more new DSO TLVs
need to be defined to carry the necessary information.</t>

<t>For example, the EDNS(0) Padding Option <xref target="RFC7830"/> used for security purposes
is not permitted in a DSO message,
so if message padding is desired for DSO messages
then the Encryption Padding TLV described in <xref target="padding"/> MUST be used.</t>

<t>Similarly, a DSO message MUST NOT contain a TSIG record.
A TSIG record in a conventional DNS message is added as the last record in
the additional records section, and carries a signature computed over the
preceding message content. Since DSO data appears <spanx style="strong">after</spanx> the additional
records section, it would not be included in the signature calculation. 
If use of signatures with DSO messages becomes necessary in the 
future, a new DSO TLV needs to be defined to perform this function.</t>

<t>Note however that, while DSO <spanx style="strong">messages</spanx> cannot include
EDNS(0) or TSIG records, a DSO <spanx style="strong">session</spanx> is typically used to 
carry a whole series of DNS messages of different kinds, including DSO
messages, and other DNS message types like Query <xref target="RFC1034"/> <xref target="RFC1035"/>
and Update <xref target="RFC2136"/>, and those messages can carry EDNS(0) and TSIG records.</t>

<t>Although messages may contain other EDNS(0) options as appropriate,
this specification explicitly prohibits use of the
edns-tcp-keepalive EDNS0 Option <xref target="RFC7828"/>
in <spanx style="strong">any</spanx> messages sent on a DSO Session (because it is obsoleted by
the functionality provided by the DSO Keepalive operation).
If any message sent on a DSO Session contains an edns-tcp-keepalive EDNS0 Option
this is a fatal error and the recipient of the defective message MUST
forcibly abort the connection immediately.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="message-handling" title="Message Handling">

<t>The initiator MUST set the value of the QR bit in the DNS header to zero (0),
and the responder MUST set it to one (1).</t>

<t>As described above in <xref target="header"/> whether an outgoing message with QR=0
is unacknowledged or acknowledged is determined by the specification
for the Primary TLV, which in turn determines whether the MESSAGE ID field
in that outgoing message will be zero or nonzero.</t>

<t>A DSO unacknowledged message has both the QR bit and the MESSAGE ID field set to zero,
and MUST NOT elicit a response.</t>

<t>Every DSO request message (QR=0) with a nonzero MESSAGE ID field
is an acknowledged DSO request, and MUST elicit a corresponding response (QR=1),
which MUST have the same MESSAGE ID in the DNS message header as in the corresponding request.</t>

<t>Valid DSO request messages sent by the client with a nonzero MESSAGE ID field
elicit a response from the server, and
Valid DSO request messages sent by the server with a nonzero MESSAGE ID field
elicit a response from the client.</t>

<t>The namespaces of 16-bit MESSAGE IDs are independent in each direction.
This means it is <spanx style="strong">not</spanx> an error for both client and server to send request
messages at the same time as each other, using the same MESSAGE ID, in different directions.
This simplification is necessary in order for the protocol to be implementable.
It would be infeasible to require the client and server
to coordinate with each other regarding allocation of new unique MESSAGE IDs.
It is also not necessary to require the client and server
to coordinate with each other regarding allocation of new unique MESSAGE IDs.
The value of the 16-bit MESSAGE ID combined with the
identity of the initiator (client or server) is sufficient
to unambiguously identify the operation in question.
This can be thought of as a 17-bit message identifier space, using
message identifiers 0x00001-0x0FFFF for client-to-server DSO request messages, and
message identifiers 0x10001-0x1FFFF for server-to-client DSO request messages.
The least-significant 16 bits are stored explicitly in the
MESSAGE ID field of the DSO message, and the most-significant
bit is implicit from the direction of the message.</t>

<t>As described above in <xref target="header"/>, an initiator MUST NOT reuse a
MESSAGE ID that it already has in use for an outstanding request
(unless specified otherwise by the relevant specification for the DSO-TYPE in question).
At the very least, this means that a MESSAGE ID MUST NOT
be reused in a particular direction on a particular DSO
Session while the initiator is waiting for a response to a
previous request using that MESSAGE ID on that DSO Session
(unless specified otherwise by the relevant specification for the DSO-TYPE in question),
and for a long-lived operation the MESSAGE ID for the operation
MUST NOT be reused while that operation remains active.</t>

<t>If a client or server receives a response (QR=1) where the MESSAGE ID is zero, or is
any other value that does not match the MESSAGE ID of any of its outstanding operations,
this is a fatal error and the recipient MUST forcibly abort the connection immediately.</t>

<section anchor="error-responses" title="Error Responses">

<t>When a DSO unacknowledged message is unsuccessful for some reason,
the responder immediately aborts the connection.</t>

<t>When a DSO request message is unsuccessful for some reason,
the responder returns an error code to the initiator.</t>

<t>In the case of a server returning an error code to a client
in response to an unsuccessful DSO request message, the server MAY choose
to end the DSO Session, or MAY choose to allow the DSO Session to remain open.
For error conditions that only affect the single operation in question, the server SHOULD
return an error response to the client and leave the DSO Session open for further operations.</t>

<t>For error conditions that are likely to make all operations unsuccessful in the
immediate future, the server SHOULD return an error response to the client and then
end the DSO Session by sending a Retry Delay message, as described in <xref target="retry"/>.</t>

<t>Upon receiving an error response from the server, a client SHOULD NOT
automatically close the DSO Session. An error relating to one particular operation
on a DSO Session does not necessarily imply that all other operations on that
DSO Session have also failed, or that future operations will fail. The client
should assume that the server will make its own decision about whether or not to
end the DSO Session, based on the server’s determination of whether the error
condition pertains to this particular operation, or would also apply to any
subsequent operations. If the server does not end the DSO Session by
sending the client a Retry Delay message (<xref target="retry"/>) then the client
SHOULD continue to use that DSO Session for subsequent operations.</t>

</section>
</section>
<section anchor="dso-response-generation" title="DSO Response Generation">

<t>With most TCP implementations, for DSO requests that generate a
response, the TCP data acknowledgement (generated because data has
been received by TCP), the TCP window update (generated because TCP
has delivered that data to the receiving software), and the DSO
response (generated by the receiving application-layer software
itself) are all combined into a single IP packet.  Combining these
three elements into a single IP packet can give a significant
improvement in network efficiency, assuming that the DSO response
is sent before the TCP Delayed Acknowledgement timer goes off.</t>

<t>For DSO requests that do not generate a response,
the TCP implementation generally doesn’t have any way to know
that no response will be forthcoming, so it waits fruitlessly
for the application-layer software to generate a response,
until the Delayed ACK timer fires <xref target="RFC1122"/> (typically 200 milliseconds)
and only then does it send the TCP ACK and window update.
In conjunction with Nagle’s Algorithm at the sender,
this can delay the sender’s transmission of its next
(non-full-sized) TCP segment, while the sender is waiting for
its previous (non-full-sized) TCP segment to be acknowledged,
which won’t happen until the Delayed ACK timer fires.
Nagle’s Algorithm exists to combine multiple small
application writes into more-efficient large TCP segments,
to guard against wasteful use of the network by applications
that would otherwise transmit a stream of small TCP segments,
but in this case Nagle’s Algorithm (created to improve network efficiency)
can interact badly with TCP’s Delayed ACK feature
(also created to improve network efficiency) <xref target="NagleDA"/>
with the result of delaying some messages by up to 200 milliseconds.</t>

<t>Possible mitigations for this problem include:</t>

<t><list style="symbols">
  <t>Disable Nagle’s Algorithm at the sender. This is not great,<vspace />
because it results in less efficient use of the network.</t>
  <t>Disable Delayed ACK at the receiver. This is not great,<vspace />
because it results in less efficient use of the network.</t>
  <t>Adding padding data to fill the segment. This is not great,
because it uses additional bandwidth.</t>
  <t>Use a networking API that lets the receiver signal to the TCP
implementation that the receiver has received and processed a client
request for which it will not be generating any immediate response.
This allows the TCP implementation to operate efficiently in both cases;
for requests that generate a response, the TCP ACK, window update, and
DSO response are transmitted together in a single TCP segment,
and for requests that do not generate a response,
the application-layer software informs the TCP implementation
that it should go ahead and send the TCP ACK and window update
immediately, without waiting for the Delayed ACK timer.
Unfortunately it is not known at this time which (if any) of the
widely-available networking APIs currently include this capability.</t>
</list></t>

</section>
<section anchor="cancellation" title="Responder-Initiated Operation Cancellation">

<t>This document, the base specification for DNS Stateful Operations,
does not itself define any long-lived operations,
but it defines a framework for supporting long-lived operations,
such as Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/> and
Discovery Relay interface subscriptions <xref target="I-D.ietf-dnssd-mdns-relay"/>.</t>

<t>Generally speaking, a long-lived operation is initiated by the initiator,
and, if successful, remains active until the initiator terminates the operation.</t>

<t>However, it is possible that a long-lived operation may be valid
at the time it was initiated, but then a later change of circumstances
may render that previously valid operation invalid.</t>

<t>For example, a long-lived client operation may pertain to a name
that the server is authoritative for, but then the server configuration
is changed such that it is no longer authoritative for that name.</t>

<t>In such cases, instead of terminating the entire session
it may be desirable for the responder to be able to cancel
selectively only those operations that have become invalid.</t>

<t>The responder performs this selective cancellation by sending
a new response message, with the MESSAGE ID field containing the
MESSAGE ID of the long-lived operation that is to be terminated
(that it had previously acknowledged with a NOERROR RCODE), and the
RCODE field of the new response message giving the reason for cancellation.</t>

<t>After a response message with nonzero RCODE has been sent,
that operation has been terminated from the responder’s point of view,
and the responder sends no more messages relating to that operation.</t>

<t>After a response message with nonzero RCODE has been received by the initiator,
that operation has been terminated from the initiator’s point of view,
and the cancelled operation’s MESSAGE ID is now free for reuse.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="lifecycle" title="DSO Session Lifecycle and Timers">

<section anchor="dso-session-initiation" title="DSO Session Initiation">

<t>A DSO Session begins as described in <xref target="establishment"/>.</t>

<t>The client may perform as many DNS operations as it wishes using the
newly created DSO Session. When the
client has multiple messages to send, it SHOULD NOT wait for each response before sending the next message.
This prevents TCP’s delayed acknowledgement algorithm from forcing the
client into a slow lock-step.
The server MUST act on messages in the order they are transmitted, but
when responses to those messages become available out of order, the server
SHOULD NOT delay sending available responses to respond in order.
<xref target="RFC7788"/> section 3.3 specifies this in more detail.</t>

</section>
<section anchor="sessiontimeouts" title="DSO Session Timeouts">

<t>Two timeout values are associated with a DSO Session:
the inactivity timeout, and the keepalive interval. 
Both values are communicated in the same TLV, the Keepalive TLV (<xref target="keepalive"/>).</t>

<t>The first timeout value, the inactivity timeout, is the maximum time for which
a client may speculatively keep a DSO Session open with no operations pending
(e.g., an outstanding DNS Push request)
in the expectation that
it may have future requests to send to that server.</t>

<t>The second timeout value, the keepalive interval, is the maximum permitted
interval between messages if the client wishes to keep the DSO Session alive.</t>

<t>The two timeout values are independent. The inactivity timeout may be lower,
the same, or higher than the keepalive interval, though in most cases the
inactivity timeout is expected to be shorter than the keepalive interval.</t>

<t>A shorter inactivity timeout with a longer keepalive interval signals
to the client that it should not speculatively keep an inactive DSO
Session open for very long without reason, but when it does have an
active reason to keep a DSO Session open, it doesn’t need to be sending
an aggressive level of DSO keepalive traffic to maintain that session.</t>

<t>A longer inactivity timeout with a shorter keepalive interval
signals to the client that it may speculatively keep an inactive
DSO Session open for a long time, but to maintain that inactive
DSO Session it should be sending a lot of DSO keepalive traffic.
This configuration is expected to be less common.</t>

<t>In the usual case where the inactivity timeout is shorter than the keepalive
interval, it is only when a client has a very long-lived, low-traffic, operation
that the keepalive interval comes into play, to ensure that a sufficient
residual amount of traffic is generated to maintain NAT and firewall state
and to assure client and server that they still have connectivity to each other.</t>

<t>On a new DSO Session, if no explicit DSO Keepalive message exchange has taken 
place, the default value for both timeouts is 15 seconds.</t>

<t>For both timeouts, lower values of the timeout result in higher network traffic
and higher CPU load on the server.</t>

</section>
<section anchor="inactive-dso-sessions" title="Inactive DSO Sessions">

<t>At both servers and clients, the generation or reception of any complete
DNS message, including DNS requests, responses, updates, or DSO
messages, resets both timers for that DSO Session, with the exception
that a DSO Keepalive message resets only the keepalive timer,
not the inactivity timeout timer.</t>

<t>In addition, for as long as the client has an outstanding operation in progress,
the inactivity timer remains cleared, and an inactivity timeout cannot occur.</t>

<t>For short-lived DNS operations like traditional queries and updates,
an operation is considered in progress for the time between request and 
response, typically a period of a few hundred milliseconds at most.
At the client, the inactivity timer is cleared upon transmission of a 
request and remains cleared until reception of the corresponding response.
At the server, the inactivity timer is cleared upon reception of a request
and remains cleared until transmission of the corresponding response.</t>

<t>For long-lived DNS Stateful operations (such as
a Push Notification subscription <xref target="I-D.ietf-dnssd-push"/> or
a Discovery Relay interface subscription <xref target="I-D.ietf-dnssd-mdns-relay"/>),
an operation is considered in progress
for as long as the operation is active, until it is cancelled.
This means that a DSO Session can exist, with active operations,
with no messages flowing in either direction, for far longer than the 
inactivity timeout, and this is not an error.
This is why there are two separate timers:
the inactivity timeout, and the keepalive interval.
Just because a DSO Session has no traffic for an extended period of time
does not automatically make that DSO Session “inactive”,
if it has an active operation that is awaiting events.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="inactivetimer" title="The Inactivity Timeout">

<t>The purpose of the inactivity timeout is for the server to balance its trade off 
between the costs of setting up new DSO Sessions and the costs of maintaining inactive 
DSO Sessions. A server with abundant DSO Session capacity can offer a high inactivity timeout, 
to permit clients to keep a speculative DSO Session open for a long time, to save 
the cost of establishing a new DSO Session for future communications with that 
server. A server with scarce memory resources can offer a low inactivity timeout,
to cause clients to promptly close DSO Sessions whenever they have no outstanding
operations with that server, and then create a new DSO Session later when needed.</t>

<section anchor="closing-inactive-dso-sessions" title="Closing Inactive DSO Sessions">

<t>When a connection’s inactivity timeout is reached the client MUST
begin closing the idle connection, but a client is not required to
keep an idle connection open until the inactivity timeout is reached.
A client MAY close a DSO Session at any time, at the client’s discretion.
If a client determines that it has no current or reasonably
anticipated future need for a currently inactive DSO Session,
then the client SHOULD gracefully close that connection.</t>

<t>If, at any time during the life of the DSO Session,
the inactivity timeout value (i.e., 15 seconds by default) elapses
without there being any operation active on the DSO Session,
the client MUST close the connection gracefully.</t>

<t>If, at any time during the life of the DSO Session,
twice the inactivity timeout value (i.e., 30 seconds by default),
or five seconds, if twice the inactivity timeout value is less than five seconds,
elapses without there being any operation active on the DSO Session,
the server MUST consider the client delinquent,
and MUST forcibly abort the DSO Session.</t>

<t>In this context, an operation being active on a DSO Session includes
a query waiting for a response, an update waiting for a response,
or an active long-lived operation, but not a DSO Keepalive message exchange itself.
A DSO Keepalive message exchange resets only the keepalive
interval timer, not the inactivity timeout timer.</t>

<t>If the client wishes to keep an inactive DSO Session open for longer
than the default duration then it uses the DSO Keepalive message
to request longer timeout values, as described in <xref target="keepalive"/>.</t>

</section>
<section anchor="values-for-the-inactivity-timeout" title="Values for the Inactivity Timeout">

<t>For the inactivity timeout value, lower values result in
more frequent DSO Session teardown and re-establishment.
Higher values result in lower traffic and lower CPU load on the server,
but higher memory burden to maintain state for inactive DSO Sessions.</t>

<t>A server may dictate any value it chooses for the inactivity timeout
(either in a response to a client-initiated request, or in a server-initiated message)
including values under one second, or even zero.</t>

<t>An inactivity timeout of zero informs the client that it
should not speculatively maintain idle connections at all, and
as soon as the client has completed the operation or operations relating
to this server, the client should immediately begin closing this session.</t>

<t>A server will abort an idle client session after twice the
inactivity timeout value, or five seconds, whichever is greater.
In the case of a zero inactivity timeout value, this means that
if a client fails to close an idle client session then the server
will forcibly abort the idle session after five seconds.</t>

<t>An inactivity timeout of 0xFFFFFFFF represents “infinity” and
informs the client that it may keep an idle connection open as long as it wishes.
Note that after granting an unlimited inactivity timeout in this way,
at any point the server may revise that inactivity timeout by sending
a new DSO Keepalive message dictating new Session Timeout values to the client.</t>

<t>The largest <spanx style="strong">finite</spanx> inactivity timeout
supported by the current Keepalive TLV is
0xFFFFFFFE (2^32-2 milliseconds, approximately 49.7 days).</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="keepalivetimer" title="The Keepalive Interval">

<t>The purpose of the keepalive interval is to manage the generation of
sufficient messages to maintain state in middleboxes (such at NAT gateways
or firewalls) and for the client and server to periodically verify that they
still have connectivity to each other. This allows them to clean up state
when connectivity is lost, and to establish a new session if appropriate.</t>

<section anchor="keepalive-interval-expiry" title="Keepalive Interval Expiry">

<t>If, at any time during the life of the DSO Session,
the keepalive interval value (i.e., 15 seconds by default) elapses
without any DNS messages being sent or received on a DSO Session,
the client MUST take action to keep the DSO Session alive,
by sending a DSO Keepalive message (<xref target="keepalive"/>).
A DSO Keepalive message exchange resets only the keepalive timer, 
not the inactivity timer.</t>

<t>If a client disconnects from the network abruptly,
without cleanly closing its DSO Session,
perhaps leaving a long-lived operation uncancelled,
the server learns of this after failing to
receive the required DSO keepalive traffic from that client.
If, at any time during the life of the DSO Session,
twice the keepalive interval value (i.e., 30 seconds by default) elapses
without any DNS messages being sent or received on a DSO Session,
the server SHOULD consider the client delinquent,
and SHOULD forcibly abort the DSO Session.</t>

</section>
<section anchor="values-for-the-keepalive-interval" title="Values for the Keepalive Interval">

<t>For the keepalive interval value, lower values result in a higher volume of DSO keepalive 
traffic. Higher values of the keepalive interval reduce traffic and CPU load, 
but have minimal effect on the memory burden
at the server, because clients keep a DSO Session open for the same length of time
(determined by the inactivity timeout) regardless of the level of DSO keepalive traffic 
required.</t>

<t>It may be appropriate for clients and servers to select different keepalive 
interval values depending on the nature of the network they are on.</t>

<t>A corporate DNS server that knows it is serving only clients on the internal 
network, with no intervening NAT gateways or firewalls, can impose a higher 
keepalive interval, because frequent DSO keepalive traffic is not required.</t>

<t>A public DNS server that is serving primarily residential consumer clients, 
where it is likely there will be a NAT gateway on the path, may impose a lower 
keepalive interval, to generate more frequent DSO keepalive traffic.</t>

<t>A smart client may be adaptive to its environment. A client using
a private IPv4 address <xref target="RFC1918"/> to communicate with a DNS server
at an address outside that IPv4 private address block,
may conclude that there is likely to be a NAT gateway on the path,
and accordingly request a lower keepalive interval.</t>

<t>By default it is RECOMMENDED that clients request,
and servers grant, a keepalive interval of 60 minutes.
This keepalive interval provides for reasonably timely detection if
a client abruptly disconnects without cleanly closing the session,
and is sufficient to maintain state in firewalls and NAT gateways
that follow the IETF recommended Best Current Practice that the
“established connection idle-timeout” used by middleboxes
be at least 2 hours 4 minutes <xref target="RFC5382"/> <xref target="RFC7857"/>.</t>

<t>Note that the lower the keepalive interval value, the higher the load on client
and server. For example, a hypothetical keepalive interval value of 100ms would result
in a continuous stream of at least ten messages per second, in both directions,
to keep the DSO Session alive. And, in this extreme example, a single packet loss and
retransmission over a long path could introduce a momentary pause in the stream of messages,
long enough to cause the server to overzealously abort the connection.</t>

<t>Because of this concern, the server MUST NOT send a DSO Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with a keepalive interval value less than ten seconds.
If a client receives a DSO Keepalive message specifying a keepalive interval value
less than ten seconds this is a fatal error and the client MUST
forcibly abort the connection immediately.</t>

<t>A keepalive interval value of 0xFFFFFFFF represents “infinity” and
informs the client that it should generate no DSO keepalive traffic.
Note that after signaling that the client should generate no DSO keepalive traffic in this way,
at any point the server may revise that DSO keepalive traffic requirement by sending
a new DSO Keepalive message dictating new Session Timeout values to the client.</t>

<t>The largest <spanx style="strong">finite</spanx> keepalive interval
supported by the current Keepalive TLV is
0xFFFFFFFE (2^32-2 milliseconds, approximately 49.7 days).</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="server-initiated-session-termination" title="Server-Initiated Session Termination">

<t>In addition to cancelling individual long-lived operations selectively (<xref target="cancellation"/>)
there are also occasions where a server may need to terminate one or more entire sessions.
An entire session may need to be terminated if the client is defective in some way,
or departs from the network without closing its session.
Sessions may also need to be terminated if the server becomes overloaded,
or if the server is reconfigured and lacks the ability to be selective about
which operations need to be cancelled.</t>

<t>This section discusses various reasons a session may be terminated,
and the mechanisms for doing so.</t>

<t>In normal operation, closing a DSO Session is the client’s responsibility.
The client makes the determination of when to close a DSO
Session based on an evaluation of both its own needs,
and the inactivity timeout value dictated by the server.
A server only causes a DSO Session to be ended in the exceptional circumstances outlined below.</t>

<t>Some of the exceptional situations in which a server may terminate a DSO Session include:</t>

<t><list style="symbols">
  <t>The server application software or underlying operating system
is shutting down or restarting.</t>
  <t>The server application software terminates unexpectedly
(perhaps due to a bug that makes it crash).</t>
  <t>The server is undergoing a reconfiguration or maintenance
procedure, that, due to the way the server software is
implemented, requires clients to be disconnected.
For example, some software is implemented such that it reads
a configuration file at startup, and changing the server’s
configuration entails modifying the configuration file
and then killing and restarting the server software,
which generally entails a loss of network connections.</t>
  <t>The client fails to meets its obligation to generate the required
DSO keepalive traffic, or to close an inactive session by the prescribed time
(twice the time interval dictated by the server, or five seconds,
whichever is greater, as described in <xref target="sessiontimeouts"/>).</t>
  <t>The client sends a grossly invalid or malformed request that
is indicative of a seriously defective client implementation.</t>
  <t>The server is over capacity and needs to shed some load.</t>
</list></t>

<section anchor="retry" title="Server-Initiated Retry Delay Message">

<t>In the cases described above where a server elects to terminate a
DSO Session, it could do so simply by forcibly aborting the connection.
However, if it did this the likely behavior of the client might be simply to to treat
this as a network failure and reconnect immediately, putting more burden on the server.</t>

<t>Therefore, to avoid this reconnection implosion, a server SHOULD instead choose
to shed client load by sending a Retry Delay message, with an appropriate RCODE
value informing the client of the reason the DSO Session needs to be terminated.
The format of the Retry Delay TLV, and the interpretations of the various RCODE values,
are described in <xref target="delay"/>.
After sending a Retry Delay message,
the server MUST NOT send any further messages on that DSO Session.</t>

<t>Upon receipt of a Retry Delay message from the server,
the client MUST make note of the reconnect delay for this server,
and then immediately close the connection gracefully.</t>

<t>After sending a Retry Delay message the server SHOULD allow the
client five seconds to close the connection, and if the client has not
closed the connection after five seconds then the server SHOULD
forcibly abort the connection.</t>

<t>A Retry Delay message MUST NOT be initiated by a client.
If a server receives a Retry Delay message this is a fatal error
and the server MUST forcibly abort the connection immediately.</t>

<t><vspace blankLines='999' /></t>

<section anchor="outstanding-operations" title="Outstanding Operations">

<t>At the instant a server chooses to initiate a Retry Delay message
there may be DNS requests already in flight from client to server on this 
DSO Session, which will arrive at the server after its Retry Delay message 
has been sent.
The server MUST silently ignore such incoming requests, and MUST NOT generate
any response messages for them. When the Retry Delay message from the
server arrives at the client, the client will determine that any DNS requests
it previously sent on this DSO Session, that have not yet received a response, now 
will certainly not be receiving any response. Such requests should be considered
failed, and should be retried at a later time, as appropriate.</t>

<t>In the case where some, but not all, of the existing operations on a DSO Session 
have become invalid (perhaps because the server has been reconfigured and is no 
longer authoritative for some of the names),
but the server is terminating all affected DSO Sessions en masse
by sending them all a Retry Delay message,
the RECONNECT DELAY MAY be zero, indicating that the clients SHOULD immediately
attempt to re-establish operations.</t>

<t>It is likely that some of the attempts will be successful and some will not,
depending on the nature of the reconfiguration.</t>

<t>In the case where a server is terminating a large number of DSO Sessions at once
(e.g., if the system is restarting) and the server doesn’t want to be inundated 
with a flood of simultaneous retries, it SHOULD send different RECONNECT delay 
values to each client.
These adjustments MAY be selected randomly, pseudorandomly, or deterministically
(e.g., incrementing the time value by one tenth of a second for each successive
client, yielding a post-restart reconnection rate of ten clients per second).</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="client-reconnection" title="Client Reconnection">

<t>After a DSO Session is ended by the server
(either by sending the client a Retry Delay message,
or by forcibly aborting the underlying transport connection)
the client SHOULD try to reconnect,
to that service instance, or to another suitable service instance, if more than one is available.
If reconnecting to the same service instance, the client MUST respect the indicated delay,
if available, before attempting to reconnect.</t>

<t>If the service instance will only be out of service for a short maintenance period,
it should use a value a little longer that the expected maintenance window.
It should not default to a very large delay value, or clients may
not attempt to reconnect after it resumes service.</t>

<t>If a particular service instance does not want a client to reconnect ever
(perhaps the service instance is being de-commissioned),
it SHOULD set the retry delay to the maximum value
0xFFFFFFFF (2^32-1 milliseconds, approximately 49.7 days).
It is not possible to instruct a client to stay away for longer than 49.7 days.
If, after 49.7 days, the DNS or other configuration information
still indicates that this is the valid service instance for a
particular service, then clients MAY attempt to reconnect.
In reality, if a client is rebooted or otherwise lose state, it
may well attempt to reconnect before 49.7 days elapses, for as
long as the DNS or other configuration information continues to
indicate that this is the service instance the client should use.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
</section>
</section>
<section anchor="base-tlvs-for-dns-stateful-operations" title="Base TLVs for DNS Stateful Operations">

<t>This section describes the three base TLVs for DNS Stateful Operations:
Keepalive, Retry Delay, and Encryption Padding.</t>

<section anchor="keepalive" title="Keepalive TLV">

<t>The Keepalive TLV (DSO-TYPE=1) performs two functions:
to reset the keepalive timer for the DSO Session,
and to establish the values for the Session Timeouts.</t>

<t>The DSO-DATA for the the Keepalive TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 INACTIVITY TIMEOUT (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 KEEPALIVE INTERVAL (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='INACTIVITY TIMEOUT:'>
  The inactivity timeout for the current DSO Session, specified as
a 32-bit unsigned integer, in network (big endian) byte order, in units of milliseconds.
This is the timeout at which the client MUST begin closing an inactive DSO Session.
The inactivity timeout can be any value of the server’s choosing.
If the client does not gracefully close an inactive DSO
Session, then after twice this interval, or five seconds,
whichever is greater, the server will forcibly abort the connection.</t>
  <t hangText='KEEPALIVE INTERVAL:'>
  The keepalive interval for the current DSO Session, specified as
a 32-bit unsigned integer, in network (big endian) byte order, in units of milliseconds.
This is the interval at which a client MUST generate DSO keepalive
traffic to maintain connection state.
The keepalive interval MUST NOT be less than ten seconds.
If the client does not generate the mandated DSO keepalive traffic,
then after twice this interval the server will forcibly abort the connection.
Since the minimum allowed keepalive interval is ten seconds, the
minimum time at which a server will forcibly disconnect a client for
failing to generate the mandated DSO keepalive traffic is twenty seconds.</t>
</list></t>

<t>The transmission or reception of DSO Keepalive messages
(i.e., messages where the Keepalive TLV is the first TLV)
reset only the keepalive timer, not the inactivity timer.
The reason for this is that periodic DSO Keepalive messages are sent for the sole
purpose of keeping a DSO Session alive, when that DSO Session has current
or recent non-maintenance activity that warrants keeping that DSO Session alive.
Sending DSO keepalive traffic itself is not considered a client activity;
it is considered a maintenance activity that is performed
in service of other client activities.
If DSO keepalive traffic itself were to reset the inactivity timer,
then that would create a circular livelock where keepalive traffic
would be sent indefinitely to keep a DSO Session alive, where the only
activity on that DSO Session would be the keepalive traffic keeping
the DSO Session alive so that further keepalive traffic can be sent.
For a DSO Session to be considered active, it must be carrying
something more than just keepalive traffic.
This is why merely sending or receiving a DSO Keepalive message
does not reset the inactivity timer.</t>

<t>When sent by a client, the DSO Keepalive request message MUST
be sent as an acknowledged request, with a nonzero MESSAGE ID.
If a server receives a DSO Keepalive message with a zero MESSAGE ID then
this is a fatal error and the server MUST forcibly abort the connection immediately.
The DSO Keepalive request message resets a DSO Session’s keepalive timer,
and at the same time communicates to the server the the client’s
requested Session Timeout values.
In a server response to a client-initiated DSO Keepalive request message,
the Session Timeouts contain the server’s chosen values from
this point forward in the DSO Session, which the client MUST respect.
This is modeled after the DHCP protocol, where the client requests a certain
lease lifetime using DHCP option 51 <xref target="RFC2132"/>, but the server is the
ultimate authority for deciding what lease lifetime is actually granted.</t>

<t>When a client is sending its second and subsequent DSO Keepalive requests to
the server, the client SHOULD continue to request its preferred values each time.
This allows flexibility, so that if conditions change during the lifetime of a
DSO Session, the server can adapt its responses to better fit the client’s needs.</t>

<t>Once a DSO Session is in progress (<xref target="establishment"/>)
a DSO Keepalive message MAY be initiated by a server.
When sent by a server, the DSO Keepalive message MUST be
sent as an unacknowledged message, with the MESSAGE ID set to zero.
The client MUST NOT generate a response to a server-initiated DSO Keepalive message.
If a client receives a DSO Keepalive request message with a nonzero MESSAGE ID then
this is a fatal error and the client MUST forcibly abort the connection immediately.
The unacknowledged DSO Keepalive message from the server resets a DSO Session’s keepalive timer,
and at the same time unilaterally informs the client of the new
Session Timeout values to use from this point forward in this DSO Session.
No client DSO response message to this unilateral declaration is required or allowed.</t>

<t>The Keepalive TLV is not used as an Additional TLV.</t>

<t>In DSO Keepalive response messages, the Keepalive TLV is REQUIRED and is used only 
as a Response Primary TLV sent as a reply to a DSO Keepalive request message from 
the client.
A Keepalive TLV MUST NOT be added to other responses as a Response Additional TLV.
If the server wishes to update a client’s Session Timeout values
other than in response to a DSO Keepalive request message from the client,
then it does so by sending an unacknowledged DSO Keepalive message
of its own, as described above.</t>

<t>It is not required that the Keepalive TLV be used in every DSO Session.
While many DNS Stateful operations
will be used in conjunction with a long-lived session state,
not all DNS Stateful operations require long-lived session state,
and in some cases the default 15-second value for both the inactivity timeout
and keepalive interval may be perfectly appropriate.
However, note that for clients that implement only the DSO-TYPEs defined in this document,
a Keepalive request message is the only way for a client to initiate a DSO Session.</t>

<section anchor="client-handling-of-received-session-timeout-values" title="Client handling of received Session Timeout values">

<t>When a client receives a response to its client-initiated DSO Keepalive message,
or receives a server-initiated DSO Keepalive message, the client has then 
received Session Timeout values dictated by the server. The two timeout values 
contained in the Keepalive TLV from the server may each be higher, lower, or 
the same as the respective Session Timeout values the client previously had for 
this DSO Session.</t>

<t>In the case of the keepalive timer, the handling of the received value is 
straightforward. The act of receiving the message containing the Keepalive 
TLV itself resets the keepalive timer and updates the keepalive interval for the 
DSO Session. The new keepalive interval indicates the 
maximum time that may elapse before another message must be sent
or received on this DSO Session, if the DSO Session is to remain alive.</t>

<t><vspace blankLines='999' /></t>

<t>In the case of the inactivity timeout, the handling of the received
value is a little more subtle, though the meaning of the inactivity
timeout remains as specified — it still indicates the maximum
permissible time allowed without useful activity on a DSO Session.
The act of receiving the message containing the Keepalive TLV does not
itself reset the inactivity timer. The time elapsed since the last useful
activity on this DSO Session is unaffected by exchange of DSO Keepalive messages.
The new inactivity timeout value in the Keepalive TLV in the received message
does update the timeout associated with the running inactivity timer;
that becomes the new maximum permissible time without activity on a DSO Session.</t>

<t><list style="symbols">
  <t>If the current inactivity timer value is less than the
new inactivity timeout, then the DSO Session may remain open for now.
When the inactivity timer value reaches the new inactivity timeout,
the client MUST then begin closing the DSO Session, as described above.</t>
  <t>If the current inactivity timer value is equal to the
new inactivity timeout, then this DSO Session has been
inactive for exactly as long as the server will permit,
and now the client MUST immediately begin closing this DSO Session.</t>
  <t>If the current inactivity timer value is already greater
than the new inactivity timeout, then this DSO Session has
already been inactive for longer than the server permits,
and the client MUST immediately begin closing this DSO Session.</t>
  <t>If the current inactivity timer value is already more than twice the
new inactivity timeout, then the client is immediately considered delinquent
(this DSO Session is immediately eligible to be forcibly terminated by the server)
and the client MUST immediately begin closing this DSO Session.
However if a server abruptly reduces the inactivity timeout in this
way, then, to give the client time to close the connection gracefully
before the server resorts to forcibly aborting it, the server
SHOULD give the client an additional grace period of one quarter
of the new inactivity timeout, or five seconds, whichever is greater.</t>
</list></t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="relation-to-edns-tcp-keepalive-edns0-option" title="Relation to edns-tcp-keepalive EDNS0 Option">

<t>The inactivity timeout value in the Keepalive TLV (DSO-TYPE=1) has
similar intent to the edns-tcp-keepalive EDNS0 Option <xref target="RFC7828"/>. A
client/server pair that supports DSO MUST NOT use the edns-tcp-keepalive
EDNS0 Option within any message after a DSO Session has been
established. A client that has sent a DSO message to establish a
session MUST NOT send an edns-tcp-keepalive EDNS0 Option from this
point on. Once a DSO Session has been established, if either client
or server receives a DNS message over the DSO Session that contains
an edns-tcp-keepalive EDNS0 Option, this is a fatal error and the
receiver of the edns-tcp-keepalive EDNS0 Option MUST forcibly abort
the connection immediately.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="delay" title="Retry Delay TLV">

<t>The Retry Delay TLV (DSO-TYPE=2) can be used as
a Primary TLV (unacknowledged) in a server-to-client message,
or as a Response Additional TLV in either direction.</t>

<t>The DSO-DATA for the the Retry Delay TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     RETRY DELAY (32 bits)                     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='RETRY DELAY:'>
  A time value, specified as
a 32-bit unsigned integer, in network (big endian) byte order, in units of milliseconds,
within which the initiator MUST NOT retry this operation, or retry connecting to this server.
Recommendations for the RETRY DELAY value are given in <xref target="retry"/>.</t>
</list></t>

<section anchor="retry-delay-tlv-used-as-a-primary-tlv" title="Retry Delay TLV used as a Primary TLV">

<t>When sent from server to client, the
Retry Delay TLV is used as the Primary TLV in an unacknowledged message.
It is used by a server
to instruct a client to close the DSO Session and underlying connection,
and not to reconnect for the indicated time interval.</t>

<t>In this case it applies to the DSO Session as a whole, and the client MUST begin closing the 
DSO Session, as described in <xref target="retry"/>. The RCODE in the message header 
SHOULD indicate the principal reason for the termination:</t>

<t><list style="symbols">
  <t>NOERROR indicates a routine shutdown or restart.</t>
  <t>FORMERR indicates that the client requests are too badly malformed for the session to continue.</t>
  <t>SERVFAIL indicates that the server is overloaded due to resource exhaustion and needs to shed load.</t>
  <t>REFUSED indicates that the server has been reconfigured,
and at this time it is now unable to perform one or more
of the long-lived client operations that were previously being performed on this DSO Session.</t>
  <t>NOTAUTH indicates that the server has been reconfigured
and at this time it is now unable to perform one or more
of the long-lived client operations that were previously being performed on this DSO Session
because it does not have authority over the names in question
(for example, a DNS Push Notification server could be reconfigured
such that is is no longer accepting DNS Push Notification
requests for one or more of the currently subscribed names).</t>
</list></t>

<t>This document specifies only these RCODE values for Retry Delay message.
Servers sending Retry Delay messages SHOULD use one of these values.
However, future circumstances may create situations where other RCODE values
are appropriate in Retry Delay messages, so clients MUST be prepared
to accept Retry Delay messages with any RCODE value.</t>

<t>In some cases, when a server sends a Retry Delay message to a client,
there may be more than one reason for the server wanting to end the session.
Possibly the configuration could have been changed such that some
long-lived client operations can no longer be continued due to policy (REFUSED), and other
long-lived client operations can no longer be performed due to
the server no longer being authoritative for those names (NOTAUTH).
In such cases the server MAY use any of the applicable RCODE values,
or RCODE=NOERROR (routine shutdown or restart).</t>

<t>Note that the selection of RCODE value in a Retry Delay message
is not critical, since the RCODE value is generally used only for
information purposes, such as writing to a log file for future
human analysis regarding the nature of the disconnection.
Generally clients do not modify their behavior depending on the RCODE value.
The RETRY DELAY in the message tells the client how long it should
wait before attempting a new connection to this service instance.</t>

<t>For clients that do in some way modify their behavior depending on the RCODE value,
they should treat unknown RCODE values the same as RCODE=NOERROR (routine shutdown or restart).</t>

<t>A Retry Delay message from server to client is an unacknowledged message;
the MESSAGE ID MUST be set to zero in the outgoing message
and the client MUST NOT send a response.</t>

<t>A client MUST NOT send a Retry Delay DSO request message or DSO unacknowledged message to a server.
If a server receives a DNS request message (i.e., QR=0) where the Primary TLV is the Retry Delay TLV,
this is a fatal error and the server MUST forcibly abort the connection immediately.</t>

</section>
<section anchor="retry-delay-tlv-used-as-a-response-additional-tlv" title="Retry Delay TLV used as a Response Additional TLV">

<t>In the case of a request that returns a nonzero RCODE value,
the responder MAY append a Retry Delay TLV to the response,
indicating the time interval during which the initiator
SHOULD NOT attempt this operation again.</t>

<t>The indicated time interval during which the initiator SHOULD NOT retry
applies only to the failed operation, not to the DSO Session as a whole.</t>

</section>
</section>
<section anchor="padding" title="Encryption Padding TLV">

<t>The Encryption Padding TLV (DSO-TYPE=3) can only be used as
an Additional or Response Additional TLV.
It is only applicable when the DSO Transport layer uses encryption
such as TLS.</t>

<t>The DSO-DATA for the the Padding TLV is optional and is a
variable length field containing non-specified values. A DSO-LENGTH
of 0 essentially provides for 4 bytes of padding (the minimum amount).</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   /                                                               /
   /                   VARIABLE NUMBER OF BYTES                    /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t>As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
the PADDING bytes SHOULD be set to 0x00.  Other values MAY be used,
for example, in cases where there is a concern that the padded
message could be subject to compression before encryption.
PADDING bytes of any value MUST be accepted in the messages received.</t>

<t>The Encryption Padding TLV may be included in either a DSO request, response, or both.
As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
if a request is received with an Encryption Padding TLV,
then the response MUST also include an Encryption Padding TLV.</t>

<t>The length of padding is intentionally not specified in this document and
is a function of current best practices with respect to the type and length
of data in the preceding TLVs <xref target="I-D.ietf-dprive-padding-policy"/>.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="summary-highlights" title="Summary Highlights">

<t>This section summarizes some noteworthy highlights about
various components of the DSO protocol.</t>

<section anchor="qr-bit-and-message-id" title="QR bit and MESSAGE ID">

<t>In DSO Request Messages the QR bit is 0 and the MESSAGE ID is nonzero.</t>

<t>In DSO Response Messages the QR bit is 1 and the MESSAGE ID is nonzero.</t>

<t>In DSO Unacknowledged Messages the QR bit is 0 and the MESSAGE ID is zero.</t>

<t>The table below illustrates which combinations are legal and how they are interpreted:</t>

<figure><artwork><![CDATA[
            +--------------------------+------------------------+
            |     MESSAGE ID zero      |   MESSAGE ID nonzero   |
   +--------+--------------------------+------------------------+
   |  QR=0  |  Unacknowledged Message  |    Request Message     |
   +--------+--------------------------+------------------------+
   |  QR=1  |  Invalid - Fatal Error   |    Response Message    |
   +--------+--------------------------+------------------------+
]]></artwork></figure>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="TLV" title="TLV Usage">

<t>The table below indicates, for each of the three TLVs defined in this
document, whether they are valid in each of ten different contexts.</t>

<t>The first five contexts are requests or unacknowledged messages from client to server,
and the corresponding responses from server back to client:</t>

<t><list style="symbols">
  <t>C-P - Primary TLV, sent in DSO Request message, from client to server,
with nonzero MESSAGE ID indicating that this request MUST generate response message.</t>
  <t>C-U - Primary TLV, sent in DSO Unacknowledged message, from client to server,
with zero MESSAGE ID indicating that this request MUST NOT generate response message.</t>
  <t>C-A - Additional TLV, optionally added to request message or unacknowledged message from client to server.</t>
  <t>CRP - Response Primary TLV, included in response message sent back to the client
(in response to a client “C-P” request with nonzero MESSAGE ID indicating that a response is required)
where the DSO-TYPE of the Response TLV matches the DSO-TYPE of the Primary TLV in the request.</t>
  <t>CRA - Response Additional TLV, included in response message sent back to the client
(in response to a client “C-P” request with nonzero MESSAGE ID indicating that a response is required)
where the DSO-TYPE of the Response TLV does not match the DSO-TYPE of the Primary TLV in the request.</t>
</list></t>

<t>The second five contexts are their counterparts in the opposite direction:
requests or unacknowledged messages from server to client, and the corresponding responses from client back to server.</t>

<figure><artwork><![CDATA[
              +-------------------------+-------------------------+
              | C-P  C-U  C-A  CRP  CRA | S-P  S-U  S-A  SRP  SRA |
 +------------+-------------------------+-------------------------+
 | KeepAlive  |  X              X       |       X                 |
 +------------+-------------------------+-------------------------+
 | RetryDelay |                      X  |       X                 |
 +------------+-------------------------+-------------------------+
 | Padding    |            X         X  |            X         X  |
 +------------+-------------------------+-------------------------+
]]></artwork></figure>

<t>Note that some of the columns in this table are currently empty.
The table provides a template for future TLV definitions to follow.
It is recommended that definitions of future TLVs include a
similar table summarizing the contexts where the new TLV is valid.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="dso-opcode-registration" title="DSO OPCODE Registration">

<t>The IANA is requested to record the value ([TBA1] tentatively) 6 for the DSO OPCODE
in the DNS OPCODE Registry. DSO stands for DNS Stateful Operations.</t>

</section>
<section anchor="dso-rcode-registration" title="DSO RCODE Registration">

<t>The IANA is requested to record the value ([TBA2] tentatively) 11 for the
DSOTYPENI error code in the DNS RCODE Registry.
The DSOTYPENI error code (“DSO-TYPE Not Implemented”) indicates that
the receiver does implement DNS Stateful Operations, but does not implement
the specific DSO-TYPE of the primary TLV in the DSO request message.</t>

</section>
<section anchor="dso-type-code-registry" title="DSO Type Code Registry">

<t>The IANA is requested to create the 16-bit DSO Type Code Registry,
with initial (hexadecimal) values as shown below:</t>

<texttable>
      <ttcol align='left'>Type</ttcol>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Status</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>0000</c>
      <c>Reserved</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0001</c>
      <c>KeepAlive</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0002</c>
      <c>RetryDelay</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0003</c>
      <c>EncryptionPadding</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0004-003F</c>
      <c>Unassigned, reserved for    DSO session-management TLVs</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0040-F7FF</c>
      <c>Unassigned</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>F800-FBFF</c>
      <c>Reserved for experimental/local use</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>FC00-FFFF</c>
      <c>Reserved for future expansion</c>
      <c>&#160;</c>
      <c>&#160;</c>
</texttable>

<t>DSO Type Code zero is reserved and is not currently intended for allocation.</t>

<t>Registrations of new DSO Type Codes in
the “Reserved for DSO session-management” range 0004-003F
and the “Reserved for future expansion” range FC00-FFFF
require publication of an IETF Standards Action document <xref target="RFC8126"/>.</t>

<t>Requests to register additional new DSO Type Codes
in the “Unassigned” range 0040-F7FF
are to be recorded by IANA after Expert Review <xref target="RFC8126"/>.</t>

<t>DSO Type Codes in the “experimental/local” range F800-FBFF
may be used as Experimental Use or Private Use values <xref target="RFC8126"/>
and may be used freely for development purposes,
or for other purposes within a single site.
No attempt is made to prevent multiple sites from using
the same value in different (and incompatible) ways.
There is no need for IANA to review such assignments
(since IANA does not record them) and assignments
are not generally useful for broad interoperability.
It is the responsibility of the sites making use of
“experimental/local” values to ensure that no
conflicts occur within the intended scope of use.</t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>If this mechanism is to be used with DNS over TLS, then these messages
are subject to the same constraints as any other DNS-over-TLS messages
and MUST NOT be sent in the clear before the TLS session is established.</t>

<t>The data field of the “Encryption Padding” TLV could be used as a covert channel.</t>

<t>When designing new DSO TLVs, the potential for data in the
TLV to be used as a tracking identifier should be taken
into consideration, and should be avoided when not required.</t>

<t>When used without TLS or similar cryptographic protection, a malicious
entity maybe able to inject a malicious Retry Delay Unacknowledged Message
into the data stream, specifying an unreasonably large RETRY DELAY, causing
a denial-of-service attack against the client.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to
Stephane Bortzmeyer,
Tim Chown,
Ralph Droms,
Paul Hoffman,
Jan Komissar,
Edward Lewis,
Allison Mankin,
Rui Paulo,
David Schinazi,
Manju Shankar Rao,
and Bernie Volz
for their helpful contributions to this document.</t>

<t><vspace blankLines='999' /></t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC1035;
&RFC7766;
&RFC6891;
&RFC2119;
&RFC8174;
&RFC1034;
&RFC2136;
&RFC7830;
&RFC1918;
&RFC2132;
&RFC8126;


    </references>

    <references title='Informative References'>

<reference anchor="NagleDA" target="http://www.stuartcheshire.org/papers/nagledelayedack/">
  <front>
    <title>TCP Performance problems caused by interaction between Nagle's Algorithm and Delayed ACK</title>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization></organization>
    </author>
    <date year="2005" month="May" day="20"/>
  </front>
</reference>
&RFC7858;
&RFC7828;
&RFC2782;
&I-D.ietf-dnssd-push;
&I-D.ietf-dnssd-mdns-relay;
&RFC6763;
&RFC0768;
&RFC6335;
&RFC7413;
&I-D.ietf-tls-tls13;
&RFC6762;
&RFC1122;
&RFC7788;
&RFC5382;
&RFC7857;
&I-D.ietf-dprive-padding-policy;


    </references>



  </back>

<!-- ##markdown-source:
H4sIALnhYFsAA+2963IbR5Yu+j+fojb9w6QGgElJlm11TOymJMrmtG5NUnb3
7Jg9UQAKRNlAFaaqIAotK+K8wnmD/Sz7Uc6TnHXNXFkXkJJ7vPtMHPVoTBGF
rLysXPf1rfF47Jq8WWWPk2evLpPLJm2yxXaVvN5kVdrkZVG7eTkr0jU8MK/S
RTPOs2Yxnhd1uRnXWV3DI+M6vy7S1fjkvpvD1x8n949Pvh1/M77/yOWb6nHS
VNu6uX98/N3xfZdWWfo4OS+arCqyxt1c03tfv0l+Kqtf8uI6+b4qtxv3y014
aPwM3+tmafM4qZu5227wLfXj5OT4wdej5JtvHj1yblbO4duPky1M7lu3yR+7
JBknTTmj/9a7dZUtav65rBr6h0u3zbKs6En4myR5AYNeTJIn2WqV1/QrXvhF
urO/LKvrMLvkclc32bpOnsJewdD5dj2CD2cTejSdTqvsHTx9+ZT+XcOrM1jH
d18fJ0+XaQVjwJ7j7+jjWd7s4HXZ/KYs58lT+Bf/upzDLJ6eJt89PH70QH61
LZoKHn57eUq/2CzLAh76p5Pk8NHXx0fJw/sP4ECOj+nDbJ3mq8dJle7+mNez
CSwgXvTlBGaT1cu8ysyyL5stzDD+hNZ+utmssrBIXdTrIpOP3qTVL8lP6c4s
6ukWKKrJi7K1oq+PTx7euqKHx98eJd9992h8cnwSrWgmc/tjiu+dzMp1vLB/
mSTP8hkQVl0WZmX/Ui6L1ge0sEuY33xbhMO9ymbLolyV13lWRwcqT9r108/j
5GV6nc7TVVYkTzNYUCa/fv1+UVbz5HKWZ8WMd8jsDn9qtub1Xx4mD78/be1M
kTfZPPkTUPqcVur34ed0/seap9TdhMv+TbhMq/S/1CbUsKDhXbiaJC+ydbQD
VzBO+B0t/gkwqEVZNnSdtysg2OuIxp8AVwRuOS0rS8g/XiXHXz84PuknZJne
GjhIWfxxsb3e9lAqTO/NtgbGVuV2huU6/jVN8m2RLhb5Kodfz6PZHRxYNgL7
n18vzTRfPU3uf/Po+Ntb79t3J98dJd8++mZ88uBBdN82Mpc/TtPi+mdahcsL
OLY1CIt3GR7/q/R6lT07ZUpo0uoaJ7Zsms3jr766ubmZ1MRV9OIiL/pqkwJv
qL8q8JvzbJXusnk6++UrHoGF09XTN8mbrKI3IelsqnK6QrY7S7c1HON0B9sI
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

-->

</rfc>

