<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.7 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC7766 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7766.xml">
<!ENTITY RFC6891 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6891.xml">
<!ENTITY RFC7828 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7828.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2136 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2136.xml">
<!ENTITY RFC7830 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7830.xml">
<!ENTITY RFC1034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC1918 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1918.xml">
<!ENTITY RFC5382 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5382.xml">
<!ENTITY RFC2132 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2132.xml">
<!ENTITY RFC5226 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5226.xml">
<!ENTITY RFC7858 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7858.xml">
<!ENTITY RFC2782 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2782.xml">
<!ENTITY RFC6335 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6335.xml">
<!ENTITY I-D.ietf-dnssd-push SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dnssd-push.xml">
<!ENTITY I-D.sctl-dnssd-mdns-relay SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.sctl-dnssd-mdns-relay.xml">
<!ENTITY RFC6763 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6763.xml">
<!ENTITY RFC0768 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.0768.xml">
<!ENTITY RFC7413 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7413.xml">
<!ENTITY I-D.ietf-tls-tls13 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-tls-tls13.xml">
<!ENTITY RFC1122 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1122.xml">
<!ENTITY I-D.ietf-dprive-padding-policy SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dprive-padding-policy.xml">
]>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-dnsop-session-signal-06" category="std" updates="RFC 7766, RFC 1035">

  <front>
    <title>DNS Stateful Operations</title>

    <author initials="R." surname="Bellis" fullname="Ray Bellis">
      <organization abbrev="ISC">Internet Systems Consortium, Inc.</organization>
      <address>
        <postal>
          <street>950 Charter Street</street>
          <city>Redwood City</city>
          <code>CA 94063</code>
          <country>USA</country>
        </postal>
        <phone>+1 650 423 1200</phone>
        <email>ray@isc.org</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>1 Infinite Loop</street>
          <city>Cupertino</city>
          <code>CA 95014</code>
          <country>USA</country>
        </postal>
        <phone>+1 408 974 3207</phone>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="J." surname="Dickinson" fullname="John Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>jad@sinodun.com</email>
      </address>
    </author>
    <author initials="S." surname="Dickinson" fullname="Sara Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>sara@sinodun.com</email>
      </address>
    </author>
    <author initials="T." surname="Lemon" fullname="Ted Lemon">
      <organization>Barefoot Consulting</organization>
      <address>
        <postal>
          <street>Brattleboro</street>
          <code>VT 05301</code>
          <country>USA</country>
        </postal>
        <email>mellon@fugue.com</email>
      </address>
    </author>
    <author initials="T." surname="Pusateri" fullname="Tom Pusateri">
      <organization>Unaffiliated</organization>
      <address>
        <postal>
          <street></street>
          <city>Raleigh</city>
          <code>NC 27608</code>
          <country>USA</country>
        </postal>
        <phone>+1 919 867 1330</phone>
        <email>pusateri@bangj.com</email>
      </address>
    </author>

    <date year="2018" month="January" day="26"/>

    <area>Internet</area>
    <workgroup>DNSOP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document defines a new DNS OPCODE for DNS Stateful Operations (DSO).
DSO messages communicate operations within persistent
stateful sessions, using type-length-value (TLV) syntax.
Three TLVs are defined that manage session timeouts,
termination, and encryption padding, and 
a framework is defined for extensions to enable new stateful operations.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The use of transports for DNS other than UDP is being increasingly specified,
for example, DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> and DNS over TLS <xref target="RFC7858"/>.
Such transports can offer persistent, long-lived sessions and therefore when
using them for transporting DNS messages it is of benefit to have a mechanism
that can establish parameters associated with those sessions, such as timeouts.
In such situations it is also advantageous to support server-initiated messages.</t>

<t>The existing EDNS(0) Extension Mechanism for DNS <xref target="RFC6891"/> is explicitly
defined to only have “per-message” semantics. While EDNS(0) has been used to
signal at least one session-related parameter (the EDNS(0) TCP Keepalive option
<xref target="RFC7828"/>) the result is less than optimal due to the restrictions
imposed by the EDNS(0) semantics and the lack of server-initiated signalling. 
For example, a server cannot arbitrarily 
instruct a client to close a connection because the server can only send EDNS(0) options 
in responses to queries that contained EDNS(0) options.</t>

<t>This document defines a new DNS OPCODE, DSO (tentatively 6), for DNS Stateful Operations.
DSO messages are used to communicate operations within persistent
stateful sessions, expressed using type-length-value (TLV) syntax.
This document defines an initial set of three TLVs,
used to manage session timeouts, termination, and encryption padding.</t>

<t>All three of the TLVs defined here are mandatory for all implementations of DSO.
Further TLVs may be defined in additional specifications.</t>

<t>The format for DSO messages
(<xref target="format"/>) differs somewhat from the traditional DNS message
format used for standard queries and responses.
The standard twelve-byte header is used, but the four count fields
(QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) are set to zero and accordingly their
corresponding sections are not present.
The actual data pertaining to DNS Stateful Operations
(expressed in TLV syntax) is appended to the end of the DNS message header.
When displayed using packet analyzer tools that have not been
updated to recognize the DSO format, this
will result in the DSO data being displayed
as unknown additional data after the end of the DNS message.
It is likely that future updates to these tools will add the ability
to recognize, decode, and display the DSO data.</t>

<t>This new format has distinct advantages over an RR-based format because it
is more explicit and more compact. Each TLV definition is specific
to its use case, and as a result contains no redundant or overloaded fields.
Importantly, it completely avoids conflating DNS Stateful Operations in any way 
with normal DNS operations or with existing EDNS(0)-based functionality.
A goal of this approach is to avoid the operational issues that have
befallen EDNS(0), particularly relating to middlebox behaviour.</t>

<t>With EDNS(0), multiple options may be packed into a single OPT pseudo-RR,
and there is no generalized mechanism for a client to be able to tell
whether a server has processed or otherwise acted upon each individual
option within the combined OPT pseudo-RR.
The specifications for each individual option need to define how each
different option is to be acknowledged, if necessary.</t>

<t>In contrast to EDNS(0), with DSO there is no
compelling motivation to pack multiple operations into a single
message for efficiency reasons, because DSO
always operates using a connection-oriented transport protocol.
Each DSO operation is communicated in its own separate
DNS message, and the transport protocol can take care of packing
several DNS messages into a single IP packet if appropriate.
For example, TCP can pack multiple small DNS messages into a single TCP segment.
This simplification allows for clearer semantics.
Each DSO request message communicates just one primary operation,
and the RCODE in the corresponding response message indicates the
success or failure of that operation.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="terminology" title="Terminology">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and
“OPTIONAL” in this document are to be interpreted as described in
“Key words for use in RFCs to Indicate Requirement Levels” <xref target="RFC2119"/>.</t>

<t>“DSO” is used to mean DNS Stateful Operation.</t>

<t>The term “connection” means a bidirectional byte (or message) stream,
where the bytes (or messages) are delivered reliably and in-order,
such as provided by using
DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> or DNS over TLS <xref target="RFC7858"/>.</t>

<t>At present, DSO is specified only for DNS over TCP, and for DNS over TLS over TCP.
Any use of DSO over some other connection technology needs to be
specified in an appropriate document.</t>

<t>Determining whether a given connection is using DNS over TCP, or DNS over TLS over TCP,
is outside the scope of this specification, and must be determined using some out-of-band
configuration information. There is no provision within the DSO specification to turn
TLS on or off during the lifetime of a connection.
For service types where the service instance is discovered using a DNS SRV record <xref target="RFC2782"/>,
the specification for that service type SRV name <xref target="RFC6335"/>
will state whether the connection uses plain TCP, or TLS over TCP.
For example, the specification for the
“_dns‑push‑tls._tcp” service <xref target="I-D.ietf-dnssd-push"/>,
states that it uses TLS.
It is a common convention that protocols specified to run over TLS
are given IANA service type names ending in “‑tls”.</t>

<t>The unqualified term “session” in the context of this document means the exchange of
DNS messages over a connection where:</t>

<t><list style="symbols">
  <t>The connection between client and server is persistent and relatively
long-lived (i.e., minutes or hours, rather than seconds).</t>
  <t>Either end of the connection may initiate messages to the other.</t>
</list></t>

<t>In this document the term “session” is used exclusively as described
above, and is in no way related to the anachronistic term “session”
as used in the obsolete “seven-layer model” that shaped the design
of the failed OSI protocols of the 1980s.</t>

<t>A “DSO Session” is established between two endpoints that acknowledge
persistent DNS state via the exchange of DSO messages over the connection.
This is distinct from a DNS-over-TCP session as described in
the previous specification for DNS over TCP <xref target="RFC7766"/>.</t>

<t>A “DSO Session” is terminated when the underlying connection is closed.
The underlying connection can be closed in two ways:</t>

<t>Where this specification says, “close gracefully,”
that means sending a TLS close_notify followed by a TCP FIN,
or the equivalents for other protocols.
Where this specification requires a connection to be closed gracefully,
the requirement to initiate that graceful close is placed on the client,
to place the burden of TCP’s TIME-WAIT state on the client rather than the server.</t>

<t>Where this specification says, “forcibly abort,”
that means sending a TCP RST,
or the equivalent for other protocols.
In the BSD Sockets API this is achieved by setting the
SO_LINGER option to zero before closing the socket.</t>

<t>The term “server” means the software with a listening socket, awaiting
incoming connection requests.</t>

<t>The term “client” means the software which initiates a connection
to the server’s listening socket.</t>

<t>The terms “initiator” and “responder” correspond respectively to the
initial sender and subsequent receiver of a DSO request message,
regardless of which was the “client” and “server” in the usual DNS sense.</t>

<t>The term “sender” may apply to
either an initiator (when sending a DSO request message)
or a responder (when sending a DSO response message).</t>

<t>Likewise, the term “receiver” may apply to
either a responder (when receiving a DSO request message)
or an initiator (when receiving a DSO response message).</t>

<t>The term “long-lived operations” refers to operations
such as Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/>,
Discovery Relay interface subscriptions <xref target="I-D.sctl-dnssd-mdns-relay"/>,
and other future long-lived DNS operations that choose to use
DSO as their basis, that establish state that persists beyond
the lifetime of a traditional brief request/response transaction.
This document, the base specification for DNS Stateful Operations,
defines a framework for supporting long-lived operations,
but does not itself define any long-lived operations.
Nonetheless, to appreciate the design rationale behind
DNS Stateful Operations, it is helpful to understand
the kind of long-lived operations that it is intended to support.</t>

<t>DNS Stateful Operations uses “DSO request messages” and “DSO response messages”.
DSO request messages are further subdivided into two variants,
“acknowledged request messages”
(which generate a corresponding response message) and
“unacknowledged request messages”
(which do not generate any corresponding response message).</t>

<t>The content of DSO messages is expressed using type-length-value (TLV) syntax.</t>

<t>In a DSO request message the first TLV is referred to as the “Primary TLV”
and determines the nature of the operation being performed,
including whether it is an acknowledged or unacknowledged operation;
any other TLVs in a DSO request message are referred to as “Additional TLVs”
and serve additional non-primary purposes, which may be related to
the primary purpose, or not, as in the case of the encryption padding TLV.</t>

<t>A DSO response message may contain no TLVs, or it may contain one
or more TLVs as appropriate to the information being communicated.
In the context of DSO response messages,
one or more TLVs with the same DSO-TYPE as the Primary TLV in the
corresponding DSO request message are referred to as “Response Primary TLVs”.
Any other TLVs with different DSO-TYPEs are referred to as “Response Additional TLVs”.
The Response Primary TLV(s), if present, MUST occur first in the response message,
before any Response Additional TLVs.</t>

<t>Two timers (elapsed time since an event) are defined in this document:</t>

<t><list style="symbols">
  <t>an inactivity timer (see <xref target="inactivetimer"/> and <xref target="keepalive"/>)</t>
  <t>a keepalive timer (see <xref target="keepalivetimer"/> and <xref target="keepalive"/>)</t>
</list></t>

<t>The timeouts associated with these timers are called
the inactivity timeout and 
the keepalive interval, respectively. 
The term “Session Timeouts” is used to refer to this pair of timeout values.</t>

<t>Resetting a timer means resetting the timer value to zero and starting the timer again.
Clearing a timer means resetting the timer value to zero but NOT starting the timer again.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="discussion" title="Discussion">

<t>There are several use cases for DNS Stateful operations that can 
be described here.</t>

<t>Firstly, establishing session parameters such as server-defined timeouts is of 
great use in the 
general management of persistent connections. For example, using DSO sessions 
for stub-to-recursive DNS-over-TLS <xref target="RFC7858"/> is more flexible for both the 
client and the server than attempting to manage sessions using just the EDNS(0)
TCP Keepalive option <xref target="RFC7828"/>.
The simple set of TLVs defined in this document is
sufficient to greatly enhance connection management for this use case.</t>

<t>Secondly, DNS-SD <xref target="RFC6763"/> has evolved into a naturally session-based mechanism where,
for example, long-lived subscriptions lend themselves to ‘push’ mechanisms as 
opposed to polling. Long-lived stateful connections and server-initiated 
messages align with this use case <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>A general use case is that DNS traffic is often bursty but session establishment 
can be expensive. One challenge with long-lived connections is to maintain 
sufficient traffic to maintain NAT and firewall state.
To mitigate this issue this document introduces a
new concept for the DNS, that is DSO “Keepalive traffic”.
This traffic carries no DNS data and is not considered ‘activity’
in the classic DNS sense, but serves to maintain state in middleboxes,
and to assure client and server that they still have connectivity to each other.</t>

<t>There are a myriad of other potential use cases for DSO given the versatility 
and extensibility of this specification.</t>

<t><xref target="details"/> of this document describes the protocol details of DNS Stateful Operations
including definitions of three TLVs for session management and encryption padding.
<xref target="lifecycle"/> presents a detailed discussion of the DSO Session lifecycle
including an in-depth discussion of keepalive traffic and session termination.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="details" title="Protocol Details">

<section anchor="establishment" title="DSO Session Establishment">

<t>DSO messages MUST be carried in only protocols and in
environments where a session may be established according to the definition
given above in the Terminology section (<xref target="terminology"/>).
Standard DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/>, and DNS over TLS <xref target="RFC7858"/>
are suitable protocols.</t>

<t>DNS over plain UDP <xref target="RFC0768"/> is not appropriate since it fails on the requirement for
in-order message delivery, and, in the presence of NAT gateways and firewalls
with short UDP timeouts, it fails to provide a persistent bi-directional
communication channel unless an excessive amount of keepalive traffic is used.</t>

<t>In some environments it may be known in advance by external means
that both client and server support DSO, and in these cases either
client or server may initiate DSO messages at any time.</t>

<t>However, in the typical case a server will not know in advance whether a
client supports DSO, so in general, unless it is known in advance by other means
that a client does support DSO, a server MUST NOT initiate DSO request messages
until a DSO Session has been mutually established, as described below.
Similarly, unless it is known in advance by other means that a server
does support DSO, a client MUST NOT initiate non-response-requiring
DSO request messages until after a DSO Session has been mutually established.</t>

<t>Whether or not a given DSO request message elicits a response is
determined by whether or not the first DSO TLV (<xref target="tlvsyntax"/>)
in the message (the Primary TLV) is one that is specified to generate a response.
Whether a Primary TLV will be specified to elicit a response will depend
on the intended use pattern for that particular TLV.</t>

<t>A DSO Session is established over a connection by the client
sending a DSO request message of a kind that requires a response,
such as the DSO Keepalive TLV (<xref target="keepalive"/>),
and receiving a response, with matching MESSAGE ID, and RCODE
set to NOERROR (0), indicating that the DSO request was successful.</t>

<t>If the RCODE is set to DSONOTIMP (tentatively 11) this indicates
that the server does support DSO, but does not support the particular
operation the client requested.
A server MUST NOT return DSONOTIMP for the DSO Keepalive TLV,
but in the future if a client attempts to establish a DSO Session
using a newly-defined response-requiring DSO TLV that the server
does not understand, that would result in a DSONOTIMP response.
If the server returns DSONOTIMP then a DSO Session is not
considered established, but the client is permitted to continue
sending DNS messages on the connection,
including other response-requiring DSO messages such as the DSO Keepalive,
which may result in a successful NOERROR response,
yielding the establishment of a DSO Session.</t>

<t>If the RCODE is set to any value other than NOERROR (0) or DSONOTIMP
(tentatively 11), then the client should assume that the server does
not support DSO. In this case the client is permitted to continue
sending DNS messages on that connection, but the client SHOULD NOT
issue further DSO messages on that connection.</t>

<t>When the server receives a response-requiring DSO request message
from a client, and transmits a successful NOERROR response to that
request, the server considers the DSO Session established.</t>

<t>When the client receives the server’s NOERROR response to its
DSO request message, the client considers the DSO Session established.</t>

<t>Once a DSO Session has been established,
either end may unilaterally send DSO messages at any time,
and therefore either client or server may be the initiator of a message.</t>

<t>Once a DSO Session has been established,
clients and servers should behave as described in this specification with
regard to inactivity timeouts and session termination, not as previously
prescribed in the earlier specification for DNS over TCP <xref target="RFC7766"/>.</t>

<t>Note that for clients that implement only the TLVs defined in this base specification,
sending a DSO Keepalive TLV is the only response-requiring
DSO request message they have available to initiate a DSO Session.
Even for clients that do implement other DSO TLVs, for simplicity
they MAY elect to always send an initial DSO Keepalive
request message as their way of initiating a DSO Session.</t>

<t><vspace blankLines='999' /></t>

<section anchor="sharing" title="Connection Sharing">

<t>As previously specified for DNS over TCP <xref target="RFC7766"/>:</t>

<figure><artwork><![CDATA[
   To mitigate the risk of unintentional server overload, DNS
   clients MUST take care to minimize the number of concurrent
   TCP connections made to any individual server.  It is RECOMMENDED
   that for any given client/server interaction there SHOULD be
   no more than one connection for regular queries, one for zone
   transfers, and one for each protocol that is being used on top
   of TCP (for example, if the resolver was using TLS). However,
   it is noted that certain primary/secondary configurations
   with many busy zones might need to use more than one TCP
   connection for zone transfers for operational reasons (for
   example, to support concurrent transfers of multiple zones).
]]></artwork></figure>

<t>A single server may support multiple services, including DNS Updates 
<xref target="RFC2136"/>, DNS Push Notifications <xref target="I-D.ietf-dnssd-push"/>,
and other services, for one or more DNS zones.
When a client discovers that the target server for several different operations
is the same target hostname and port, the client SHOULD use a single
shared DSO Session for all those operations.
A client SHOULD NOT open multiple connections to the same target host and port
just because the names being operated on are different or
happen to fall within different zones.
This requirement is to reduce unnecessary connection load on the DNS server.</t>

<t>However, server implementers and operators should be aware that connection
sharing may not be possible in all cases.
A single host device may be home to multiple independent client software
instances that don’t coordinate with each other.
Similarly, multiple independent client devices behind the same NAT gateway
will also typically appear to the DNS server as different source ports on
the same client IP address.
Because of these constraints, a DNS server MUST be prepared to accept
multiple connections from different source ports on the same client IP address.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="zero-round-trip-operation" title="Zero Round-Trip Operation">

<t>There is increased awareness today of the performance benefits
of eliminating round trips in session establishment.
Technologies like TCP Fast Open <xref target="RFC7413"/>
and TLS 1.3 <xref target="I-D.ietf-tls-tls13"/>
provide mechanisms to reduce or eliminate
round trips in session establishment.</t>

<t>Similarly, DSO supports zero round-trip operation.</t>

<t>Having initiated a connection to a server, possibly using
zero round-trip TCP Fast Open and/or
zero round-trip TLS 1.3, a client MAY send multiple
response-requiring DSO request messages to the server in succession
without having to wait for a response to the first request message
to confirm successful establishment of a DSO session.</t>

<t>However, a client MUST NOT send non-response-requiring DSO request
messages until after a DSO Session has been mutually established.</t>

<t>Similarly, a server MUST NOT send DSO request messages until it
has received a response-requiring DSO request message from a
client and transmitted a successful NOERROR response for that request.</t>

</section>
<section anchor="middlebox-considerations" title="Middlebox Considerations">

<t>Where an application-layer middlebox (e.g., a DNS proxy, forwarder, or
session multiplexer) is in the path, the middlebox MUST NOT blindly
forward DSO messages in either direction, and MUST treat the inbound
and outbound connections as separate sessions.  This does not preclude
the use of DSO messages in the presence of an IP-layer middlebox, such
as a NAT that rewrites IP-layer and/or transport-layer headers but
otherwise preserves the effect of a single session between the client
and the server.</t>

<t>To illustrate the above, consider a network where a middlebox
terminates one or more TCP connections from clients and multiplexes the
queries therein over a single TCP connection to an upstream server.
The DSO messages and any associated state are specific to the individual
TCP connections.  A DSO-aware middlebox MAY in some circumstances be
able to retain associated state and pass it between the client and
server (or vice versa) but this would be highly TLV-specific.  For
example, the middlebox may be able to maintain a list of which clients
have made Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/> and
make its own subscription(s) on their behalf, relaying any subsequent
notifications to the client (or clients) that have subscribed to that
particular notification.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="format" title="Message Format">

<t>A DSO message begins with
the standard twelve-byte DNS message header <xref target="RFC1035"/>
with the OPCODE field set to the DSO OPCODE (tentatively 6).
However, unlike standard DNS messages, the question section, answer section,
authority records section and additional records sections are not present.
The corresponding count fields (QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) MUST be
set to zero on transmission.</t>

<t>If a DSO message is received where any of the count fields are
not zero, then a FORMERR MUST be returned,
unless a future IETF Standard specifies otherwise.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                          MESSAGE ID                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |QR |    OPCODE     |            Z              |     RCODE     |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     QDCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ANCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     NSCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ARCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                           DSO Data                            /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><vspace blankLines='999' /></t>

<section anchor="header" title="DNS Header Fields in DSO Messages">

<t>In an unacknowledged request message the MESSAGE ID field MUST be set to zero.
In an acknowledged request message the MESSAGE ID field MUST
be set to a unique nonzero value, that the initiator is not
currently using for any other active operation on this connection.
For the purposes here, a MESSAGE ID is in use in this DSO Session if the
initiator has used it in a request for which it is still awaiting a response,
or if the client has used it to setup a long-lived operation that has not yet been cancelled.
For example, a long-lived operation could be
a Push Notification subscription <xref target="I-D.ietf-dnssd-push"/> or
a Discovery Relay interface subscription <xref target="I-D.sctl-dnssd-mdns-relay"/>.</t>

<t>Whether a message is acknowledged or unacknowledged is
determined only by the specification for the Primary TLV.
An acknowledgment cannot be requested by including a nonzero message ID
in a message the primary TLV of which is specified to be unacknowledged,
nor can an acknowledgment be prevented by sending a message ID of zero
in a message with a primary TLV that is specified to be acknowledged.
A responder that receives either such malformed message MUST treat it
as a programming error and forcibly abort the connection immediately.</t>

<t>In a request message the DNS Header QR bit MUST be zero (QR=0).<vspace />
If the QR bit is not zero the message is not a request message.</t>

<t>In a response message the DNS Header QR bit MUST be one (QR=1).<vspace />
If the QR bit is not one the message is not a response message.</t>

<t>In a response message (QR=1) the MESSAGE ID field MUST contain a copy of the value of
the MESSAGE ID field in the acknowledged request message being responded to.
In a response message (QR=1) the MESSAGE ID field MUST NOT be zero.
If a response message (QR=1) is received where the MESSAGE ID is zero
this is a fatal error and the receiver MUST forcibly abort the connection immediately.</t>

<t>The DNS Header OPCODE field holds the DSO OPCODE value (tentatively 6).</t>

<t>The Z bits are currently unused in DSO messages,
and in both DSO requests and DSO responses the
Z bits MUST be set to zero (0) on transmission and MUST be silently ignored
on reception, unless a future IETF Standard specifies otherwise.</t>

<t><vspace blankLines='999' /></t>

<t>In a request message (QR=0) the RCODE is generally set to zero on transmission,
and silently ignored on reception, except where specified otherwise
(for example, the Retry Delay request message (<xref target="retry"/>),
where the RCODE indicates the reason for termination).</t>

<t>The RCODE value in a response message (QR=1) may be one of the following values:</t>

<texttable>
      <ttcol align='right'>Code</ttcol>
      <ttcol align='left'>Mnemonic</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>0</c>
      <c>NOERROR</c>
      <c>Operation processed successfully</c>
      <c>1</c>
      <c>FORMERR</c>
      <c>Format error</c>
      <c>2</c>
      <c>SERVFAIL</c>
      <c>Server failed to process request due to a problem with the server</c>
      <c>3</c>
      <c>NXDOMAIN</c>
      <c>Name Error — Named entity does not exist (TLV-dependent)</c>
      <c>4</c>
      <c>NOTIMP</c>
      <c>DSO not supported</c>
      <c>5</c>
      <c>REFUSED</c>
      <c>Operation declined for policy reasons</c>
      <c>9</c>
      <c>NOTAUTH</c>
      <c>Not Authoritative (TLV-dependent)</c>
      <c>11</c>
      <c>DSONOTIMP</c>
      <c>DSO type code not supported</c>
</texttable>

<t>Use of the above RCODEs is likely to be common in DSO but 
does not preclude the definition and use of other codes in future documents that 
make use of DSO.</t>

<t>If a document defining a new DSO TLV makes use of NXDOMAIN (Name Error)
or NOTAUTH (Not Authoritative) then that document MUST specify the specific
interpretation of these RCODE values in the context of that new DSO TLV.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="dsodata" title="DSO Data">

<t>The standard twelve-byte DNS message header with its
zero-valued count fields is followed by the DSO Data,
expressed using TLV syntax, as described below <xref target="tlvsyntax"/>.</t>

<t>A DSO message may be either a request message or a response message,
as indicated by the QR bit in the DNS message header.
DSO request messages are further subdivided into two variants,
acknowledged request messages
(which generate a corresponding response message)
and unacknowledged request messages
(which do not generate any corresponding response message).</t>

<t>A DSO request message MUST contain at least one TLV.
The first TLV in a DSO request message is referred to as the “Primary TLV”
and determines the nature of the operation being performed,
including whether it is an acknowledged or unacknowledged operation.
In some cases it may be appropriate to include other TLVs in a request message,
such as the Encryption Padding TLV (<xref target="padding"/>),
and these extra TLVs are referred to as the “Additional TLVs”.</t>

<t>A DSO response message may contain no TLVs,
or it may be specified to contain one or more TLVs
appropriate to the information being communicated.</t>

<t>A DSO response message may contain one or more TLVs with
DSO-TYPE the same as the Primary TLV from the corresponding DSO request message,
in which case those TLV(s) are referred to as “Response Primary TLVs”.
A DSO response message is not required to carry Response Primary TLVs.
The MESSAGE ID field in the DNS message header is sufficient to identify
to which DSO request message this response message relates.</t>

<t>A DSO response message may contain one or more TLVs with
DSO-TYPEs different from the Primary TLV from the corresponding DSO request message,
in which case those TLV(s) are referred to as “Response Additional TLVs”.</t>

<t>Response Primary TLV(s), if present, MUST occur first in the response message,
before any Response Additional TLVs.</t>

<t>It is anticipated that by default most DSO request messages will be specified
to be acknowledged request messages, which generate corresponding responses.
In some specialized high-traffic use cases,
it may be appropriate to specify unacknowledged request messages.
Unacknowledged request messages can be more efficient on the network,
because they don’t generate a stream of corresponding reply messages.
Using unacknowledged request messages can also simplify software
in some cases, by removing need for an initiator to maintain
state while it waits to receive replies it doesn’t care about.
When the specification for a particular TLV states that,
when used as a Primary TLV (i.e., first) in a request message,
that request message is to be unacknowledged,
the MESSAGE ID field MUST be set to zero and
the receiver MUST NOT generate any response message
corresponding to this unacknowledged request message.</t>

<t>The previous point, that the receiver MUST NOT generate responses to
unacknowledged request messages, applies even in the case of errors.
When a DSO request message is received with the MESSAGE ID field
set to zero, the receiver MUST NOT generate any response.
For example, if the DSO-TYPE in the Primary TLV is unrecognized,
then a DSONOTIMP error MUST NOT be returned; instead the receiver
MUST forcibly abort the connection immediately.</t>

<t>Unacknowledged request messages MUST NOT be used “speculatively”
in cases where the sender doesn’t know if the receiver supports
the Primary TLV in the message, because there is no way to receive
any response to indicate success or failure of the request message
(the request message does not contain a unique MESSAGE ID with
which to associate a response with its corresponding request).
Unacknowledged request messages are only appropriate in cases
where the sender already knows that the receiver supports,
and wishes to receive, these messages.</t>

<t>For example, after a client has subscribed for Push Notifications
<xref target="I-D.ietf-dnssd-push"/>, the subsequent event notifications are
then sent as unacknowledged messages, and this is appropriate
because the client initiated the message stream by virtue of its
Push Notification subscription, thereby indicating its support of
Push Notifications, and its desire to receive those notifications.</t>

<t>Similarly, after an mDNS Relay client has subscribed to receive inbound
mDNS traffic from an mDNS Relay, the subsequent stream of received
packets is then sent using unacknowledged messages, and this
is appropriate because the client initiated the message stream
by virtue of its mDNS Relay link subscription, thereby indicating
its support of mDNS Relay, and its desire to receive inbound mDNS
packets over that DSO session <xref target="I-D.sctl-dnssd-mdns-relay"/>.</t>

<t><vspace blankLines='999' /></t>

<section anchor="tlvsyntax" title="TLV Syntax">

<t>All TLVs, whether used as “Primary”, “Additional”, “Response Primary”,
or “Response Additional”, use the same encoding syntax.</t>

<t>The specification for a TLV states whether that DSO-TYPE may be used in
“Primary”, “Additional”, “Response Primary”, or “Response Additional” TLVs.
The specification for a TLV also states whether,
when used as the Primary (i.e., first) TLV in a request message,
that request message is to be acknowledged.
If the request message is to be acknowledged, the specification
also states which TLVs, if any, are to be included in the response.
The Primary TLV may or may not be contained in the response,
depending on what is stated in the specification for that TLV.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                            DSO-TYPE                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                        DSO DATA LENGTH                        |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                      TYPE-DEPENDENT DATA                      /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='DSO-TYPE:'>
  A 16-bit unsigned integer, in network (big endian) byte order,
giving the type of the current DSO TLV per the IANA DSO Type Code Registry.</t>
  <t hangText='DSO DATA LENGTH:'>
  A 16-bit unsigned integer, in network (big endian) byte order,
giving the size in bytes of the TYPE-DEPENDENT DATA.</t>
  <t hangText='TYPE-DEPENDENT DATA:'>
  Type-code specific format.</t>
</list></t>

<t>Where domain names appear within TYPE-DEPENDENT DATA, they MAY<vspace />
be compressed using standard DNS name compression <xref target="RFC1035"/>.<vspace />
However, the compression offsets MUST be relative to
the start of the TYPE-DEPENDENT DATA and MUST NOT
extend beyond the end of the TYPE-DEPENDENT DATA.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="request-tlvs" title="Request TLVs">

<t>The first TLV in a DSO request message is the “Primary TLV”
and indicates the operation to be performed.
A DSO request message MUST contain at at least one TLV, the Primary TLV.</t>

<t>Immediately following the Primary TLV, a DSO request message
MAY contain one or more “Additional TLVs”, which specify
additional parameters relating to the operation.</t>

</section>
<section anchor="response-tlvs" title="Response TLVs">

<t>Depending on the operation, a DSO response message MAY contain no TLVs,
because it is simply a response to a previous request message, and the
MESSAGE ID in the header is sufficient to identify the request in question.
Or it may contain a single response TLV, with the same DSO-TYPE as the
Primary TLV in the request message.
Alternatively it may contain one or more TLVs of other
types, or a combination of the above, as appropriate
for the information that needs to be communicated.
The specification for each DSO TLV determines
what TLVs are required in a response to a request using that TLV.</t>

<t>If a DSO response is received for an operation where the specification
requires that the response carry a particular TLV or TLVs,
and the required TLV(s) are not present, then this is a fatal
error and the recipient of the defective response message MUST
forcibly abort the connection immediately.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="unrecognized-tlvs" title="Unrecognized TLVs">

<t>If DSO request is received containing an unrecognized Primary TLV,
with a nonzero MESSAGE ID (indicating that a response is expected),
then the receiver MUST send a response with matching MESSAGE ID,
and RCODE DSONOTIMP (tentatively 11).
The response MUST NOT contain a copy of the unrecognized Primary TLV.</t>

<t>If DSO request is received containing an unrecognized Primary TLV,
with a zero MESSAGE ID (indicating that no response is expected),
then this is a fatal error and the receiver
MUST forcibly abort the connection immediately.</t>

<t>If a DSO request message is received where the Primary TLV is recognized,
containing one or more unrecognized Additional TLVs, the unrecognized
Additional TLVs MUST be silently ignored, and the remainder of the message
is interpreted and handled as if the unrecognized parts were not present.</t>

<t>Similarly, if a DSO response message is received containing one
or more unrecognized TLVs, the unrecognized TLVs MUST be silently
ignored, and the remainder of the message is interpreted and
handled as if the unrecognized parts were not present.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="edns0-and-tsig" title="EDNS(0) and TSIG">

<t>Since the ARCOUNT field MUST be zero, a DSO message
MUST NOT contain an EDNS(0) option in the additional records section.
If functionality provided by current or future EDNS(0) options
is desired for DSO messages, one or more new DSO TLVs
need to be defined to carry the necessary information.</t>

<t>For example, the EDNS(0) Padding Option <xref target="RFC7830"/> used for security purposes
is not permitted in a DSO message,
so if message padding is desired for DSO messages
then the Encryption Padding TLV described in <xref target="padding"/> MUST be used.</t>

<t>Similarly, a DSO message MUST NOT contain a TSIG record.
A TSIG record in a conventional DNS message is added as the last record in
the additional records section, and carries a signature computed over the
preceding message content. Since DSO data appears <spanx style="strong">after</spanx> the additional
records section, it would not be included in the signature calculation. 
If use of signatures with DSO messages becomes necessary in the 
future, a new DSO TLV needs to be defined to perform this function.</t>

<t>Note however that, while DSO <spanx style="strong">messages</spanx> cannot include
EDNS(0) or TSIG records, a DSO <spanx style="strong">session</spanx> is typically used to 
carry a whole series of DNS messages of different kinds, including DSO
messages, and other DNS message types like Query <xref target="RFC1034"/> 
<xref target="RFC1035"/> and Update <xref target="RFC2136"/>, and those messages can carry EDNS(0) and 
TSIG records.</t>

<t>This specification explicitly prohibits use of the
EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>
in <spanx style="strong">any</spanx> messages sent on a DSO Session (because it is obsoleted by
the functionality provided by the DSO Keepalive operation),
but messages may contain other EDNS(0) options as appropriate.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="message-handling" title="Message Handling">

<t>The initiator MUST set the value of the QR bit in the DNS header to
zero (0), and the responder MUST set it to one (1).
Every DSO request message (QR=0) with a nonzero MESSAGE ID field
MUST elicit a corresponding response (QR=1), which MUST have the same
MESSAGE ID in the DNS message header as in the corresponding request.
DSO request messages sent by the client with a nonzero MESSAGE ID field
elicit a response from the server, and
DSO request messages sent by the server with a nonzero MESSAGE ID field
elicit a response from the client.</t>

<t>A DSO request message (QR=0) with a zero MESSAGE ID field MUST NOT elicit a response.</t>

<t>The namespaces of 16-bit MESSAGE IDs are disjoint in each direction.
For example, it is <spanx style="strong">not</spanx> an error for both client and server to send a request
message with the same ID. In effect, the 16-bit MESSAGE ID combined with the 
identity of the initiator (client or server) serves as a 17-bit unique 
identifier for a particular operation on a DSO Session.</t>

<t>As described in <xref target="header"/>, an initiator MUST NOT reuse a
MESSAGE ID that is already in use for an outstanding request
(unless specified otherwise by the relevant specification for the DSO in question).
At the very least, this means that a MESSAGE ID MUST NOT
be reused in a particular direction on a particular DSO
Session while the initiator is waiting for a response to a
previous request using that MESSAGE ID on that DSO Session
(unless specified otherwise by the relevant specification for the DSO in question),
and for a long-lived operation the MESSAGE ID for the operation
MUST NOT be reused while that operation remains active.</t>

<t>If a client or server receives a response (QR=1) where the MESSAGE ID is zero, or is
any other value that does not match the MESSAGE ID of any of its outstanding operations,
this is a fatal error and the recipient MUST forcibly abort the connection immediately.</t>

<section anchor="error-responses" title="Error Responses">

<t>When a request message is unsuccessful for some reason, the responder
returns an error code to the initiator (for acknowledged request messages)
or aborts the connection (for unacknowledged request messages).</t>

<t>In the case of a server returning an error code to a client, the server MAY choose
to end the DSO Session, or MAY choose to allow the DSO Session to remain open.
For error conditions that only affect the single operation in question, the server SHOULD
return an error response to the client and leave the DSO Session open for further operations.</t>

<t>For error conditions that are likely to make all operations unsuccessful in the
immediate future, the server SHOULD return an error response to the client and then
end the DSO Session by sending a Retry Delay request message, as described in <xref target="retry"/>.</t>

<t>Upon receiving an error response from the server, a client SHOULD NOT
automatically close the DSO Session. An error relating to one particular operation
on a DSO Session does not necessarily imply that all other operations on that
DSO Session have also failed, or that future operations will fail. The client
should assume that the server will make its own decision about whether or not to
end the DSO Session, based on the server’s determination of whether the error
condition pertains to this particular operation, or would also apply to any
subsequent operations. If the server does not end the DSO Session by
sending the client a Retry Delay message (<xref target="retry"/>) then the client
SHOULD continue to use that DSO Session for subsequent operations.</t>

</section>
</section>
<section anchor="dso-response-generation" title="DSO Response Generation">

<t>With most TCP implementations, for DSO requests that generate a response,
the TCP data acknowledgement (generated because data has been received by TCP),
the TCP window update (generated because TCP has delivered that data to the receiving software),
and the DSO response (generated by the receiving application-layer software itself)
are all combined into a single IP packet.
Combining these three elements into a single IP packet
can give a significant improvement in network efficiency.</t>

<t>For DSO requests that do not generate a response,
the TCP implementation generally doesn’t have any way to know
that no response will be forthcoming, so it waits fruitlessly
for the application-layer software to generate a response,
until the Delayed ACK timer fires <xref target="RFC1122"/> (typically 200 milliseconds)
and only then does it send the TCP ACK and window update.
In conjunction with Nagle’s Algorithm at the sender,
this can delay the sender’s transmission of its next
(non-full-sized) TCP segment, while the sender is waiting for
its previous (non-full-sized) TCP segment to be acknowledged,
which won’t happen until the Delayed ACK timer fires.
Nagle’s Algorithm exists to combine multiple small
application writes into more-efficient large TCP segments,
to guard against wasteful use of the network by applications
that would otherwise transmit a stream of small TCP segments,
but in this case Nagle’s Algorithm (created to improve network efficiency)
can interact badly with TCP’s Delayed ACK feature
(also created to improve network efficiency) <xref target="NagleDA"/>
with the result of delaying some messages by up to 200 milliseconds.</t>

<t>Possible mitigations for this problem include:</t>

<t><list style="symbols">
  <t>Disable Nagle’s Algorithm at the sender. This is not great,<vspace />
because it results in less efficient use of the network.</t>
  <t>Disable Delayed ACK at the receiver. This is not great,<vspace />
because it results in less efficient use of the network.</t>
  <t>Use a networking API that lets the receiver signal to the TCP
implementation that the receiver has received and processed a client
request for which it will not be generating any immediate response.
This allows the TCP implementation to operate efficiently in both cases;
for requests that generate a response, the TCP ACK, window update, and
DSO response are transmitted together in a single TCP segment,
and for requests that do not generate a response,
the application-layer software informs the TCP implementation
that it should go ahead and send the TCP ACK and window update
immediately, without waiting for the Delayed ACK timer.
Unfortunately it is not known at this time which (if any) of the
widely-available networking APIs currently include this capability.</t>
</list></t>

</section>
<section anchor="cancellation" title="Responder-Initiated Operation Cancellation">

<t>This document, the base specification for DNS Stateful Operations,
does not itself define any long-lived operations,
but it defines a framework for supporting long-lived operations,
such as Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/> and
Discovery Relay interface subscriptions <xref target="I-D.sctl-dnssd-mdns-relay"/>.</t>

<t>Generally speaking, a long-lived operation is initiated by the initiator,
and, if successful, remains active until the initiator terminates the operation.</t>

<t>However, it is possible that a long-lived operation may be valid
at the time it was initiated, but then a later change of circumstances
may render that previously valid operation invalid.</t>

<t>For example, a long-lived client operation may pertain to a name
that the server is authoritative for, but then the server configuration
is changed such that it is no longer authoritative for that name.</t>

<t>In such cases, instead of terminating the entire session
it may be desirable for the responder to be able to cancel
selectively only those operations that have become invalid.</t>

<t>The responder performs this selective cancellation by sending
a new response message, with the MESSAGE ID field containing the
MESSAGE ID of the long-lived operation that is to be terminated
(that it had previously acknowledged with a NOERROR RCODE), and the
RCODE field of the new response message giving the reason for cancellation.</t>

<t>After a response message with nonzero RCODE has been sent,
that operation has been terminated from the responder’s point of view,
and the responder sends no more messages relating to that operation.</t>

<t>After a response message with nonzero RCODE has been received by the initiator,
that operation has been terminated from the initiator’s point of view,
and the cancelled operation’s MESSAGE ID is now free for reuse.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="lifecycle" title="DSO Session Lifecycle and Timers">

<section anchor="dso-session-initiation" title="DSO Session Initiation">

<t>A DSO Session begins as described in <xref target="establishment"/>.</t>

<t>The client may perform as many DNS operations as it wishes using the
newly created DSO Session. Operations SHOULD be pipelined (i.e., the
client doesn’t need wait for a response before sending the next message).
The server MUST act on messages in the order they are transmitted, but
responses to those messages SHOULD be sent out of order when appropriate.</t>

</section>
<section anchor="sessiontimeouts" title="DSO Session Timeouts">

<t>Two timeout values are associated with a DSO Session:
the inactivity timeout, and the keepalive interval. 
Both values are communicated in the same TLV, the DSO Keepalive TLV (<xref target="keepalive"/>).</t>

<t>The first timeout value, the inactivity timeout, is the maximum time for which
a client may speculatively keep a DSO Session open in the expectation that
it may have future requests to send to that server.</t>

<t>The second timeout value, the keepalive interval, is the maximum permitted
interval between messages if the client wishes to keep the DSO Session alive.</t>

<t>The two timeout values are independent. The inactivity timeout may be lower,
the same, or higher than the keepalive interval, though in most cases the
inactivity timeout is expected to be shorter than the keepalive interval.</t>

<t>A shorter inactivity timeout with a longer keepalive interval signals
to the client that it should not speculatively keep an inactive DSO
Session open for very long without reason, but when it does have an
active reason to keep a DSO Session open, it doesn’t need to be sending
an aggressive level of keepalive traffic to maintain that session.</t>

<t>A longer inactivity timeout with a shorter keepalive interval
signals to the client that it may speculatively keep an inactive
DSO Session open for a long time, but to maintain that inactive
DSO Session it should be sending a lot of keepalive traffic.
This configuration is expected to be less common.</t>

<t>In the usual case where the inactivity timeout is shorter than the keepalive
interval, it is only when a client has a very long-lived, low-traffic, operation
that the keepalive interval comes into play, to ensure that a sufficient
residual amount of traffic is generated to maintain NAT and firewall state
and to assure client and server that they still have connectivity to each other.</t>

<t>On a new DSO Session, if no explicit DSO Keepalive message exchange has taken 
place, the default value for both timeouts is 15 seconds.</t>

<t>For both timeouts, lower values of the timeout result in higher network traffic
and higher CPU load on the server.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="inactive-dso-sessions" title="Inactive DSO Sessions">

<t>At both servers and clients, the generation or reception of any complete
DNS message, including DNS requests, responses, updates, or DSO
messages, resets both timers for that DSO Session, with the exception
that a DSO Keepalive message resets only the keepalive timer,
not the inactivity timeout timer.</t>

<t>In addition, for as long as the client has an outstanding operation in progress,
the inactivity timer remains cleared, and an inactivity timeout cannot occur.</t>

<t>For short-lived DNS operations like traditional queries and updates,
an operation is considered in progress for the time between request and 
response, typically a period of a few hundred milliseconds at most.
At the client, the inactivity timer is cleared upon transmission of a 
request and remains cleared until reception of the corresponding response.
At the server, the inactivity timer is cleared upon reception of a request
and remains cleared until transmission of the corresponding response.</t>

<t>For long-lived DNS Stateful operations (such as
a Push Notification subscription <xref target="I-D.ietf-dnssd-push"/> or
a Discovery Relay interface subscription <xref target="I-D.sctl-dnssd-mdns-relay"/>),
an operation is considered in progress
for as long as the operation is active, until it is cancelled.
This means that a DSO Session can exist, with active operations,
with no messages flowing in either direction, for far longer than the 
inactivity timeout, and this is not an error.
This is why there are two separate timers:
the inactivity timeout, and the keepalive interval.
Just because a DSO Session has no traffic for an extended period of time
does not automatically make that DSO Session “inactive”,
if it has an active operation that is awaiting events.</t>

</section>
<section anchor="inactivetimer" title="The Inactivity Timeout">

<t>The purpose of the inactivity timeout is for the server to balance its trade off 
between the costs of setting up new DSO Sessions and the costs of maintaining inactive 
DSO Sessions. A server with abundant DSO Session capacity can offer a high inactivity timeout, 
to permit clients to keep a speculative DSO Session open for a long time, to save 
the cost of establishing a new DSO Session for future communications with that 
server. A server with scarce memory resources can offer a low inactivity timeout,
to cause clients to promptly close DSO Sessions whenever they have no outstanding
operations with that server, and then create a new DSO Session later when needed.</t>

<section anchor="closing-inactive-dso-sessions" title="Closing Inactive DSO Sessions">

<t>When a connection’s inactivity timeout is reached the client MUST
begin closing the idle connection, but a client is NOT REQUIRED to
keep an idle connection open until the inactivity timeout is reached.
A client MAY close a DSO Session at any time, at the client’s discretion.
If a client determines that it has no current or reasonably
anticipated future need for a currently inactive DSO Session,
then the client SHOULD gracefully close that connection.</t>

<t>If, at any time during the life of the DSO Session,
the inactivity timeout value (i.e., 15 seconds by default) elapses
without there being any operation active on the DSO Session,
the client MUST close the connection gracefully.</t>

<t>If, at any time during the life of the DSO Session,
twice the inactivity timeout value (i.e., 30 seconds by default),
or five seconds, if twice the inactivity timeout value is less than five seconds,
elapses without there being any operation active on the DSO Session,
the server SHOULD consider the client delinquent,
and SHOULD forcibly abort the DSO Session.</t>

<t>In this context, an operation being active on a DSO Session includes
a query waiting for a response, an update waiting for a response,
or an active long-lived operation, but not a DSO Keepalive message exchange itself.
A DSO Keepalive message exchange resets only the keepalive
interval timer, not the inactivity timeout timer.</t>

<t>If the client wishes to keep an inactive DSO Session open for longer
than the default duration then it uses the DSO Keepalive message
to request longer timeout values, as described in <xref target="keepalive"/>.</t>

</section>
<section anchor="values-for-the-inactivity-timeout" title="Values for the Inactivity Timeout">

<t>For the inactivity timeout value, lower values result in
more frequent DSO Session teardown and re-establishment.
Higher values result in lower traffic and lower CPU load on the server,
but higher memory burden to maintain state for inactive DSO Sessions.</t>

<t>A server may dictate any value it chooses for the inactivity timeout
(either in a response to a client-initiated request, or in a server-initiated message)
including values under one second, or even zero.</t>

<t>An inactivity timeout of zero informs the client that it
should not speculatively maintain idle connections at all, and
as soon as the client has completed the operation or operations relating
to this server, the client should immediately begin closing this session.</t>

<t>A server will abort an idle client session after twice the
inactivity timeout value, or five seconds, whichever is greater.
In the case of a zero inactivity timeout value, this means that
if a client fails to close an idle client session then the server
will forcibly abort the idle session after five seconds.</t>

<t>An inactivity timeout of 0xFFFFFFFF (2^32-1 milliseconds, approximately 49.7 days)
informs the client that it may keep an idle connection open as long as it wishes.
Note that after granting an unlimited inactivity timeout in this way,
at any point the server may revise that inactivity timeout by sending
a new Keepalive request message dictating new Session Timeout values to the client.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="keepalivetimer" title="The Keepalive Interval">

<t>The purpose of the keepalive interval is to manage the generation of
sufficient messages to maintain state in middleboxes (such at NAT gateways
or firewalls) and for the client and server to periodically verify that they
still have connectivity to each other. This allows them to clean up state
when connectivity is lost, and attempt re-connection if appropriate.</t>

<section anchor="keepalive-interval-expiry" title="Keepalive Interval Expiry">

<t>If, at any time during the life of the DSO Session,
the keepalive interval value (i.e., 15 seconds by default) elapses
without any DNS messages being sent or received on a DSO Session,
the client MUST take action to keep the DSO Session alive,
by sending a DSO Keepalive message (<xref target="keepalive"/>).
A DSO Keepalive message exchange resets only the keepalive timer, 
not the inactivity timer.</t>

<t>If a client disconnects from the network abruptly,
without cleanly closing its DSO Session,
perhaps leaving a long-lived operation uncancelled,
the server learns of this after failing to
receive the required keepalive traffic from that client.
If, at any time during the life of the DSO Session,
twice the keepalive interval value (i.e., 30 seconds by default) elapses
without any DNS messages being sent or received on a DSO Session,
the server SHOULD consider the client delinquent,
and SHOULD forcibly abort the DSO Session.</t>

</section>
<section anchor="values-for-the-keepalive-interval" title="Values for the Keepalive Interval">

<t>For the keepalive interval value, lower values result in a higher volume of keepalive 
traffic. Higher values of the keepalive interval reduce traffic and CPU load, 
but have minimal effect on the memory burden
at the server, because clients keep a DSO Session open for the same length of time
(determined by the inactivity timeout) regardless of the level of keepalive traffic 
required.</t>

<t>It may be appropriate for clients and servers to select different keepalive 
interval values depending on the nature of the network they are on.</t>

<t>A corporate DNS server that knows it is serving only clients on the internal 
network, with no intervening NAT gateways or firewalls, can impose a higher 
keepalive interval, because frequent keepalive traffic is not required.</t>

<t>A public DNS server that is serving primarily residential consumer clients, 
where it is likely there will be a NAT gateway on the path, may impose a lower 
keepalive interval, to generate more frequent keepalive traffic.</t>

<t>A smart client may be adaptive to its environment. A client using
a private IPv4 address <xref target="RFC1918"/> to communicate with a DNS server
at an address outside that IPv4 private address block,
may conclude that there is likely to be a NAT gateway on the path,
and accordingly request a lower keepalive interval.</t>

<t>By default it is RECOMMENDED that clients request,
and servers grant, a keepalive interval of 60 minutes.
This keepalive interval provides for reasonably timely detection if
a client abruptly disconnects without cleanly closing the session,
and is sufficient to maintain state in firewalls and NAT gateways
that follow the IETF recommended Best Current Practice that the
“established connection idle-timeout” used by middleboxes
be at least 2 hours 4 minutes <xref target="RFC5382"/>.</t>

<t>Note that the lower the keepalive interval value, the higher the load on client
and server. For example, a hypothetical keepalive interval value of 100ms would result
in a continuous stream of at least ten messages per second, in both directions,
to keep the DSO Session alive. And, in this extreme example, a single packet loss and
retransmission over a long path could introduce a momentary pause in the stream of messages,
long enough to cause the server to overzealously abort the connection.</t>

<t>Because of this concern, the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with a keepalive interval value less than ten seconds.
If a client receives a Keepalive message specifying a keepalive interval value
less than ten seconds this is a fatal error and the client MUST
forcibly abort the connection immediately.</t>

<t>A keepalive interval value of 0xFFFFFFFF (2^32-1 milliseconds, approximately 49.7 days)
informs the client that it should generate no keepalive traffic.
Note that after signaling that the client should generate no keepalive traffic in this way,
at any point the server may revise that keepalive traffic requirement by sending
a new Keepalive request message dictating new Session Timeout values to the client.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="server-initiated-session-termination" title="Server-Initiated Session Termination">

<t>In addition to cancelling individual long-lived operations selectively (<xref target="cancellation"/>)
there are also occasions where a server may need to terminate one or more entire sessions.
An entire session may need to be terminated if the client is defective in some way,
or departs from the network without closing its session.
Sessions may also need to be terminated if the server becomes overloaded,
or if the server is reconfigured and lacks the ability to be selective about
which operations need to be cancelled.</t>

<t>This section discusses various reasons a session may be terminated,
and the mechanisms for doing so.</t>

<t>Normally a server MUST NOT close a DSO Session with a client.
A server only causes a DSO Session to be ended in the exceptional circumstances outlined below.
In normal operation, closing a DSO Session is the client’s responsibility.
The client makes the determination of when to close a DSO
Session based on an evaluation of both its own needs,
and the inactivity timeout value dictated by the server.</t>

<t>Some of the exceptional situations in which a server may terminate a DSO Session include:</t>

<t><list style="symbols">
  <t>The server application software or underlying operating system
is shutting down or restarting.</t>
  <t>The server application software terminates unexpectedly
(perhaps due to a bug that makes it crash).</t>
  <t>The server is undergoing a reconfiguration or maintenance
procedure, that, due to the way the server software is
implemented, requires clients to be disconnected.
For example, some software is implemented such that it reads
a configuration file at startup, and changing the server’s
configuration entails modifying the configuration file
and then killing and restarting the server software,
which generally entails a loss of network connections.</t>
  <t>The client fails to meets its obligation to generate the required
keepalive traffic, or to close an inactive session by the prescribed time
(twice the time interval dictated by the server, or five seconds,
whichever is greater, as described in <xref target="sessiontimeouts"/>).</t>
  <t>The client sends a grossly invalid or malformed request that
is indicative of a seriously defective client implementation.</t>
  <t>The server is over capacity and needs to shed some load.</t>
</list></t>

<section anchor="retry" title="Server-Initiated Retry Delay Request Message">

<t>In the cases described above where a server elects to terminate a
DSO Session, it could do so simply by forcibly aborting the connection.
However, if it did this the likely behavior of the client might be simply to to treat
this as a network failure and reconnect immediately, putting more burden on the server.</t>

<t>Therefore, to avoid this reconnection implosion, a server SHOULD instead choose to
shed client load by sending a Retry Delay request message, with an appropriate RCODE
value informing the client of the reason the DSO Session needs to be terminated.
For example, an RCODE value of SERVFAIL indicates that the server is overloaded
due to resource exhaustion, or is restarting.
An RCODE value of NOTAUTH indicates that the server has been reconfigured and is
no longer able to perform one or more of the functions currently being performed
on this DSO Session because it no longer has authority over the names in question.
An RCODE value of REFUSED indicates a policy change regarding this session.
An RCODE value of FORMERR indicates that the client requests are
too badly malformed for the session to continue.
The format of the Retry Delay TLV is described in <xref target="delay"/>.
After sending a Retry Delay request message,
the server MUST NOT send any further messages on that DSO Session.</t>

<t>Upon receipt of a Retry Delay request message from the server,
the client MUST make note of the reconnect delay for this server,
and then immediately close the connection gracefully.</t>

<t>After sending a Retry Delay request message the server SHOULD allow the
client five seconds to close the connection, and if the client has not
closed the connection after five seconds then the server SHOULD
forcibly abort the connection.</t>

<t>A Retry Delay request message MUST NOT be initiated by a client.
If a server receives a Retry Delay request message this is a fatal error
and the server MUST forcibly abort the connection immediately.</t>

<section anchor="outstanding-operations" title="Outstanding Operations">

<t>At the instant a server chooses to initiate a Retry Delay request message
there may be DNS requests already in flight from client to server on this 
DSO Session, which will arrive at the server after its Retry Delay request message 
has been sent.
The server MUST silently ignore such incoming requests, and MUST NOT generate
any response messages for them. When the Retry Delay request message from the
server arrives at the client, the client will determine that any DNS requests
it previously sent on this DSO Session, that have not yet received a response, now 
will certainly not be receiving any response. Such requests should be considered
failed, and should be retried at a later time, as appropriate.</t>

<t>In the case where some, but not all, of the existing operations on a DSO Session 
have become invalid (perhaps because the server has been reconfigured and is no 
longer authoritative for some of the names),
but the server is terminating all affected DSO Sessions en masse
by sending them all a Retry Delay request message,
the RECONNECT DELAY MAY be zero, indicating that the clients SHOULD immediately
attempt to re-establish operations.</t>

<t>It is likely that some of the attempts will be successful and some will not,
depending on the nature of the reconfiguration.</t>

<t>In the case where a server is terminating a large number of DSO Sessions at once
(e.g., if the system is restarting) and the server doesn’t want to be inundated 
with a flood of simultaneous retries, it SHOULD send different RECONNECT delay 
values to each client.
These adjustments MAY be selected randomly, pseudorandomly, or deterministically
(e.g., incrementing the time value by one tenth of a second for each successive
client, yielding a post-restart reconnection rate of ten clients per second).</t>

</section>
<section anchor="client-reconnection" title="Client Reconnection">

<t>After a DSO Session is ended by the server
(either by sending the client a Retry Delay request message,
or by forcibly aborting the underlying transport connection)
the client SHOULD try to reconnect,
to that server, or to another suitable server, if more than one is available.
If reconnecting to the same server, the client MUST respect the indicated delay,
if available, before attempting to reconnect.</t>

<t>If a particular server does not want a client to reconnect (the server is being
de-commissioned), it SHOULD set the retry delay to the maximum value (which is
approximately 49.7 days). If the server will only be out of service for a maintenance
period, it should use a value closer to the expected maintenance window and
not default to a very large delay value or clients may not attempt to reconnect
after it resumes service.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
</section>
</section>
<section anchor="base-tlvs-for-dns-stateful-operations" title="Base TLVs for DNS Stateful Operations">

<t>This section describes the three base TLVs for DNS Stateful Operations:
Keepalive, Retry Delay, and Encryption Padding.</t>

<section anchor="keepalive" title="Keepalive TLV">

<t>The Keepalive TLV (DSO-TYPE=1) performs two functions:
to reset the keepalive timer for the DSO Session,
and to establish the values for the Session Timeouts.</t>

<t>The TYPE-DEPENDENT DATA for the the Keepalive TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 INACTIVITY TIMEOUT (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 KEEPALIVE INTERVAL (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='INACTIVITY TIMEOUT:'>
  The inactivity timeout for the current DSO Session, specified as
a 32-bit unsigned integer, in network (big endian) byte order, in units of milliseconds.
This is the timeout at which the client MUST begin closing an inactive DSO Session.
The inactivity timeout can be any value of the server’s choosing.
If the client does not gracefully close an inactive DSO
Session, then after twice this interval, or five seconds,
whichever is greater, the server will forcibly abort the connection.</t>
  <t hangText='KEEPALIVE INTERVAL:'>
  The keepalive interval for the current DSO Session, specified as
a 32-bit unsigned integer, in network (big endian) byte order, in units of milliseconds.
This is the interval at which a client MUST generate keepalive
traffic to maintain connection state.
The keepalive interval MUST NOT be less than ten seconds.
If the client does not generate the mandated keepalive traffic,
then after twice this interval the server will forcibly abort the connection.
Since the minimum allowed keepalive interval is ten seconds, the
minimum time at which a server will forcibly disconnect a client for
failing to generate the mandated keepalive traffic is twenty seconds.</t>
</list></t>

<t>The transmission or reception of DSO Keepalive messages
(i.e., messages where the Keepalive TLV is the first TLV)
reset only the keepalive timer, not the inactivity timer.
The reason for this is that periodic Keepalive messages are sent for the sole
purpose of keeping a DSO Session alive, when that DSO Session has current
or recent non-maintenance activity that warrants keeping that DSO Session alive.
Sending keepalive traffic itself is not considered a client activity;
it is considered a maintenance activity that is performed
in service of other client activities.
If keepalive traffic itself were to reset the inactivity timer,
then that would create a circular livelock where keepalive traffic
would be sent indefinitely to keep a DSO Session alive, where the only
activity on that DSO Session would be the keepalive traffic keeping
the DSO Session alive so that further keepalive traffic can be sent.
For a DSO Session to be considered active, it must be carrying
something more than just keepalive traffic.
This is why merely sending or receiving a Keepalive message
does not reset the inactivity timer.</t>

<t>When sent by a client, the Keepalive request message MUST
be sent as an acknowledged request, with a nonzero MESSAGE ID.
If a server receives a Keepalive request message with a zero MESSAGE ID then
this is a fatal error and the server MUST forcibly abort the connection immediately.
The Keepalive request message resets a DSO Session’s keepalive timer,
and at the same time communicates to the server the the client’s
requested Session Timeout values.
In a server response to a client-initiated Keepalive request message,
the Session Timeouts contain the server’s chosen values from
this point forward in the DSO Session, which the client MUST respect.
This is modeled after the DHCP protocol, where the client requests a certain
lease lifetime using DHCP option 51 <xref target="RFC2132"/>, but the server is the
ultimate authority for deciding what lease lifetime is actually granted.</t>

<t>When a client is sending its second and subsequent Keepalive DSO requests to
the server, the client SHOULD continue to request its preferred values each time.
This allows flexibility, so that if conditions change during the lifetime of a
DSO Session, the server can adapt its responses to better fit the client’s needs.</t>

<t>Once a DSO Session is in progress (<xref target="establishment"/>)
a Keepalive request message MAY be initiated by a server.
When sent by a server, the Keepalive request message MUST be
sent as an unacknowledged request, with the MESSAGE ID set to zero.
The client MUST NOT generate a response to a server-initiated DSO Keepalive message.
If a client receives a Keepalive request message with a nonzero MESSAGE ID then
this is a fatal error and the client MUST forcibly abort the connection immediately.
The Keepalive request message from the server resets a DSO Session’s keepalive timer,
and at the same time unilaterally informs the client of the new
Session Timeout values to use from this point forward in this DSO Session.
No client DSO response message to this unilateral declaration is required or allowed.</t>

<t>The Keepalive TLV is not used as a request message Additional TLV.</t>

<t>In response messages the Keepalive TLV is used only as a Response Primary TLV,
replying to a Keepalive request message from the client.
A Keepalive TLV MUST NOT be added as to other responses a Response Additional TLV.
If the server wishes to update a client’s Session Timeout values
other than in response to a Keepalive request message from the client,
then it does so by sending an unacknowledged Keepalive request message
of its own, as described above.</t>

<t>It is not required that the Keepalive TLV be used in every DSO Session.
While many DNS Stateful operations
will be used in conjunction with a long-lived session state,
not all DNS Stateful operations require long-lived session state,
and in some cases the default 15-second value for both the inactivity timeout
and keepalive interval may be perfectly appropriate.
However, note that for clients that implement only the TLVs defined in this document,
a Keepalive request message is the only way for a client to initiate a DSO Session.</t>

<section anchor="client-handling-of-received-session-timeout-values" title="Client handling of received Session Timeout values">

<t>When a client receives a response to its client-initiated DSO Keepalive message,
or receives a server-initiated DSO Keepalive message, the client has then 
received Session Timeout values dictated by the server. The two timeout values 
contained in the DSO Keepalive TLV from the server may each be higher, lower, or 
the same as the respective Session Timeout values the client previously had for 
this DSO Session.</t>

<t>In the case of the keepalive timer, the handling of the received value is 
straightforward. The act of receiving the message containing the DSO Keepalive 
TLV itself resets the keepalive timer and updates the keepalive interval for the 
DSO Session. The new keepalive interval indicates the 
maximum time that may elapse before another message must be sent
or received on this DSO Session, if the DSO Session is to remain alive.</t>

<t><vspace blankLines='999' /></t>

<t>In the case of the inactivity timeout, the handling of the received
value  is a little more subtle, though the meaning of the inactivity
timeout remains as specified — it still indicates the maximum
permissible time allowed  without useful activity on a DSO Session.
The act of receiving the message containing the DSO Keepalive TLV does not
itself reset the inactivity timer. The time elapsed since the last useful
activity on this DSO Session is unaffected by exchange of DSO Keepalive messages.
The new inactivity timeout value in the DSO Keepalive TLV in the received message
does update the timeout associated with the running inactivity timer;
that becomes the new maximum permissible time without activity on a DSO Session.</t>

<t><list style="symbols">
  <t>If the current inactivity timer value is less than the
new inactivity timeout, then the DSO Session may remain open for now.
When the inactivity timer value reaches the new inactivity timeout,
the client MUST then begin closing the DSO Session, as described above.</t>
  <t>If the current inactivity timer value is equal to the
new inactivity timeout, then this DSO Session has been
inactive for exactly as long as the server will permit,
and now the client MUST immediately begin closing this DSO Session.</t>
  <t>If the current inactivity timer value is already greater
than the new inactivity timeout, then this DSO Session has
already been inactive for longer than the server permits,
and the client MUST immediately begin closing this DSO Session.</t>
  <t>If the current inactivity timer value is already more than twice the
new inactivity timeout, then the client is immediately considered delinquent
(this DSO Session is immediately eligible to be forcibly terminated by the server)
and the client MUST immediately begin closing this DSO Session.
However if a server abruptly reduces the inactivity timeout in this
way, then, to give the client time to close the connection gracefully
before the server resorts to forcibly aborting it, the server
SHOULD give the client an additional grace period of one quarter
of the new inactivity timeout, or five seconds, whichever is greater.</t>
</list></t>

</section>
<section anchor="relation-to-edns0-tcp-keepalive-option" title="Relation to EDNS(0) TCP Keepalive Option">

<t>The inactivity timeout value in the Keepalive TLV (DSO-TYPE=1) has similar
intent to the EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>.
A client/server pair that supports DSO MUST NOT use the
EDNS(0) TCP KeepAlive option within any message after a DSO 
Session has been established.
Once a DSO Session has been established, if either
client or server receives a DNS message over the DSO Session that contains an
EDNS(0) TCP Keepalive option, this is a fatal error and the receiver of the
EDNS(0) TCP Keepalive option MUST forcibly abort the connection immediately.</t>

</section>
</section>
<section anchor="delay" title="Retry Delay TLV">

<t>The Retry Delay TLV (DSO-TYPE=2) can be used as
a Primary TLV (unacknowledged) in a server-to-client message,
or as a Response Additional TLV in either direction.</t>

<t>The TYPE-DEPENDENT DATA for the the Retry Delay TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     RETRY DELAY (32 bits)                     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='RETRY DELAY:'>
  A time value, specified as
a 32-bit unsigned integer, in network (big endian) byte order, in units of milliseconds,
within which the initiator MUST NOT retry this operation, or retry connecting to this server.</t>
</list></t>

<t>The RECOMMENDED value is 10 seconds.</t>

<section anchor="retry-delay-tlv-used-as-a-primary-tlv" title="Retry Delay TLV used as a Primary TLV">

<t>When sent in a DSO request message, from server to client, the 
Retry Delay TLV (0) is used as a Primary TLV. It is used by a server
to instruct a client to close the DSO Session and underlying connection,
and not to reconnect for the indicated time interval.</t>

<t>In this case it applies to the DSO Session as a whole, and the client MUST begin closing the 
DSO Session, as described in <xref target="retry"/>. The RCODE in the message header 
MUST indicate the reason for the termination:</t>

<t><list style="symbols">
  <t>NOERROR indicates a routine shutdown.</t>
  <t>FORMERR indicates that the client requests are too badly malformed for the session to continue.</t>
  <t>SERVFAIL indicates that the server is overloaded due to resource exhaustion, or is restarting.</t>
  <t>REFUSED indicates that the server has been reconfigured
and due to a policy change is no longer able to perform one or more
of the functions currently being performed on this DSO Session</t>
  <t>NOTAUTH indicates that the server has been reconfigured
and is no longer able to perform one or more
of the functions currently being performed on this DSO Session
because it no longer has authority over the names in question
(for example, a DNS Push Notification server could be reconfigured
such that is is no longer accepting DNS Push Notification
requests for one or more of the currently subscribed names).</t>
</list></t>

<t>This document specifies only these RCODE values for Retry Delay request.
Servers sending Retry Delay requests SHOULD use one of these values.
However, future circumstances may create situations where other RCODE values
are appropriate in Retry Delay requests, so clients MUST be prepared
to accept Retry Delay requests with any RCODE value.</t>

<t>A Retry Delay request is an unacknowledged request message;
the MESSAGE ID MUST be set to zero in the request
and the client MUST NOT send a response.</t>

<t>A client MUST NOT send a Retry Delay request message to a server.
If a server receives a Retry Delay request message, this is a fatal error
and the server MUST forcibly abort the connection immediately.</t>

</section>
<section anchor="retry-delay-tlv-used-as-a-response-additional-tlv" title="Retry Delay TLV used as a Response Additional TLV">

<t>In the case of a request that returns a nonzero RCODE value,
the responder MAY append a Retry Delay TLV (0) to the response,
indicating the time interval during which the initator
SHOULD NOT attempt this operation again.</t>

<t>The indicated time interval during which the initator SHOULD NOT retry
applies only to the failed operation, not to the DSO Session as a whole.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="padding" title="Encryption Padding TLV">

<t>The Encryption Padding TLV (DSO-TYPE=3) can only be used as
an Additional or Response Additional TLV.
It is only applicable when the DSO Transport layer uses encryption
such as TLS.</t>

<t>The TYPE-DEPENDENT DATA for the the Padding TLV is optional and is a
variable length field containing non-specified values. A DATA LENGTH
of 0 essentially provides for 4 bytes of padding (the minimum amount).</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   /                                                               /
   /                   VARIABLE NUMBER OF BYTES                    /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t>As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
the PADDING bytes SHOULD be set to 0x00.  Other values MAY be used,
for example, in cases where there is a concern that the padded
message could be subject to compression before encryption.
PADDING bytes of any value MUST be accepted in the messages received.</t>

<t>The Encryption Padding TLV may be included in either a DSO request, response, or both.
As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
if a request is received with an Encryption Padding TLV,
then the response MUST also include an Encryption Padding TLV.</t>

<t>The length of padding is intentionally not specified in this document and
is a function of current best practices with respect to the type and length
of data in the preceding TLVs <xref target="I-D.ietf-dprive-padding-policy"/>.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="summary-highlights" title="Summary Highlights">

<t>This section summarizes some noteworthy highlights about
various components of the DSO protocol.</t>

<section anchor="message-id" title="MESSAGE ID">

<t>In DSO Request Messages the MESSAGE ID may be either
nonzero (signaling that the responder MUST generate a response)
or zero (signaling that the responder MUST NOT generate a response).</t>

<t>In DSO Response Messages the MESSAGE ID MUST NOT be zero
(since this would be a response to a request that had
indicated that a response is not allowed).</t>

<t>The table below illustrates the legal combinations:</t>

<figure><artwork><![CDATA[
                          +--------------------+-------------------+
                          | Nonzero MESSAGE ID |  Zero MESSAGE ID  |
   +----------------------+--------------------+-------------------+
   | DSO Request Message  |         X          |         X         |
   +----------------------+--------------------+-------------------+
   | DSO Response Message |         X          |                   |
   +----------------------+--------------------+-------------------+
]]></artwork></figure>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="tlv-usage" title="TLV Usage">

<t>The table below indicates, for each of the three TLVs defined in this
document, whether they are valid in each of ten different contexts.</t>

<t>The first five contexts are requests from client to server,
and the corresponding responses from server back to client:</t>

<t><list style="symbols">
  <t>C-P - Primary TLV,
sent in DSO Request message,
from client to server,
with nonzero MESSAGE ID indicating that this request MUST generate response message.</t>
  <t>C-U - Primary TLV (unacknowledged),
sent in DSO Request message,
from client to server,
with zero MESSAGE ID indicating that this request MUST NOT generate response message.</t>
  <t>C-A - Additional TLV, optionally added to request message from client to server.</t>
  <t>CRP - Response Primary TLV, included in response message sent to back the client
(in response to a client “C-P” request with nonzero MESSAGE ID indicating that a response is required)
where the DSO-TYPE of the Response TLV matches the DSO-TYPE of the Primary TLV in the request.</t>
  <t>CRA - Response Additional TLV, included in response message sent to back the client
(in response to a client “C-P” request with nonzero MESSAGE ID indicating that a response is required)
where the DSO-TYPE of the Response TLV does not match the DSO-TYPE of the Primary TLV in the request.</t>
</list></t>

<t>The second five contexts are their counterparts in the opposite direction:
requests from server to client, and the corresponding responses from client back to server.</t>

<figure><artwork><![CDATA[
              +-------------------------+-------------------------+
              | C-P  C-U  C-A  CRP  CRA | S-P  S-U  S-A  SRP  SRA |
 +------------+-------------------------+-------------------------+
 | KeepAlive  |  X              X       |       X                 |
 +------------+-------------------------+-------------------------+
 | RetryDelay |                      X  |       X                 |
 +------------+-------------------------+-------------------------+
 | Padding    |            X         X  |            X         X  |
 +------------+-------------------------+-------------------------+
]]></artwork></figure>

<t>It is recommended that definitions of future TLVs include a
similar table summarizing the contexts where the new TLV is valid.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="inactivity-timeout" title="Inactivity Timeout">

<t>The Inactivity Timeout may have any 32-bit unsigned integer value.</t>

<t>The value zero informs the client that it
should not speculatively maintain idle connections at all, and
as soon as the client has completed the operation or operations relating
to this server, the client should immediately begin closing this session.</t>

<t>The maximum possible value,
0xFFFFFFFF (2^32-1 milliseconds, approximately 49.7 days),
informs the client that it may keep an idle connection open as long as it wishes.</t>

<t>The Inactivity timer is reset by any message <spanx style="strong">except</spanx> the Keepalive TLV,
and remains cleared any time that an operation is outstanding.</t>

</section>
<section anchor="keepalive-interval" title="Keepalive Interval">

<t>The Keepalive Interval is a 32-bit unsigned integer value,
with a minimum value of 10,000 milliseconds (10 seconds).</t>

<t>The maximum possible value,
0xFFFFFFFF (2^32-1 milliseconds, approximately 49.7 days),
informs the client that it should generate no keepalive traffic.</t>

<t>Any message exchange (including the Keepalive TLV) resets the Keepalive timer.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="dso-opcode-registration" title="DSO OPCODE Registration">

<t>The IANA is requested to record the value (tentatively) 6 for the DSO OPCODE
in the DNS OPCODE Registry.</t>

</section>
<section anchor="dso-rcode-registration" title="DSO RCODE Registration">

<t>The IANA is requested to record the value (tentatively) 11 for the DSONOTIMP error code
in the DNS RCODE Registry.</t>

</section>
<section anchor="dso-type-code-registry" title="DSO Type Code Registry">

<t>The IANA is requested to create the 16-bit DSO Type Code Registry,
with initial (hexadecimal) values as shown below:</t>

<texttable>
      <ttcol align='left'>Type</ttcol>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Status</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>0000</c>
      <c>Reserved</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0001</c>
      <c>KeepAlive</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0002</c>
      <c>RetryDelay</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0003</c>
      <c>EncryptionPadding</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0004-003F</c>
      <c>Unassigned, reserved for    DSO session-management TLVs</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0040-F7FF</c>
      <c>Unassigned</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>F800-FBFF</c>
      <c>Reserved for experimental/local use</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>FC00-FFFF</c>
      <c>Reserved for future expansion</c>
      <c>&#160;</c>
      <c>&#160;</c>
</texttable>

<t>DSO Type Code zero is reserved and is not currently intended for allocation.</t>

<t>Registrations of new DSO Type Codes in
the “Reserved for DSO session-management” range 0004-003F
and the “Reserved for future expansion” range FC00-FFFF
require publication of an IETF Standards Action document <xref target="RFC5226"/>.</t>

<t>Requests to register additional new DSO Type Codes
in the “Unassigned” range 0040-F7FF
are to be recorded by IANA after consultation with the
registry’s Designated Expert <xref target="RFC5226"/> at that time.
At the time of publication of this document, the Designated Expert
for the newly created DSO Type Code registry is [<spanx style="strong">TBD</spanx>].</t>

<t>DSO Type Codes in the “experimental/local” range F800-FBFF
may be used as Experimental Use or Private Use values <xref target="RFC5226"/>
and may be used freely for development purposes,
or for other purposes within a single site.
No attempt is made to prevent multiple sites from using
the same value in different (and incompatible) ways.
There is no need for IANA to review such assignments
(since IANA does not record them) and assignments
are not generally useful for broad interoperability.
It is the responsibility of the sites making use of
“experimental/local” values to ensure that no
conflicts occur within the intended scope of use.</t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>If this mechanism is to be used with DNS over TLS, then these messages
are subject to the same constraints as any other DNS-over-TLS messages
and MUST NOT be sent in the clear before the TLS session is established.</t>

<t>The data field of the “Encryption Padding” TLV could be used as a covert channel.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to
Stephane Bortzmeyer,
Tim Chown,
Ralph Droms,
Paul Hoffman,
Jan Komissar,
Edward Lewis,
Allison Mankin,
Rui Paulo,
David Schinazi,
Manju Shankar Rao,
and Bernie Volz
for their helpful contributions to this document.</t>

<t><vspace blankLines='999' /></t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC1035;
&RFC7766;
&RFC6891;
&RFC7828;
&RFC2119;
&RFC2136;
&RFC7830;
&RFC1034;
&RFC1918;
&RFC5382;
&RFC2132;
&RFC5226;


    </references>

    <references title='Informative References'>

<reference anchor="NagleDA" target="http://www.stuartcheshire.org/papers/nagledelayedack/">
  <front>
    <title>TCP Performance problems caused by interaction between Nagle's Algorithm and Delayed ACK</title>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization></organization>
    </author>
    <date year="2005" month="May" day="20"/>
  </front>
</reference>
&RFC7858;
&RFC2782;
&RFC6335;
&I-D.ietf-dnssd-push;
&I-D.sctl-dnssd-mdns-relay;
&RFC6763;
&RFC0768;
&RFC7413;
&I-D.ietf-tls-tls13;
&RFC1122;
&I-D.ietf-dprive-padding-policy;


    </references>



  </back>

<!-- ##markdown-source:
H4sIAFCanFoAA+W963YbR7Ym+D+eIof6YVIHgKmLZVm1ek3REmXzlG5FUnbV
mZ45KwkkiLSATJzMBClY0lr9CvMG/Sz9KPMkva8RO/ICUrLLXXNap9UlA4nI
uOzY12/vPR6PXZM3y+xJ8uzVWXLWpE023yyT1+usSpu8LGo3K6dFuoIHZlU6
b8Z51szHs6Iu1+M6q2t4ZFznl0W6HB8+cjP4+ZPk/uG9x+N74/uPXL6uniRN
tamb+4eH3x3ed2mVpU+Sk6LJqiJr3PUlvff1m+TnsnqXF5fJD1W5Wbt31+Gh
8TN8r5umzZOkbmZus8a31E+S0+dPk2+/ffRoRP+6d/jgG+em5QxGeZJsYJKP
3Tp/4pJknDTllP633q6qbF7zv8uqof9w6aZZlBU9CX+TJC9w8EnyfbZc5jV9
xBtwmm7th2V1GWaZnG3rJlvVyVPYMxg636xG8OV0Qo+mFxdVdgVPnz2l/67h
1Rms57tvDpOni7SCMWDv8TP6epo3W3hdNrsuy1nyFP6LPy5nMIunR8l3Dw8f
PZCPNkVTwcNvz47og/WiLOChf7mXPIKxH95/kNyDraevslWaL58kVbr9c15P
JzD9eMlnE5hLVi/yKjOLPms2ML/4G1r50Xq9zMISdUn34KN5XuRNlrwoy7VZ
z9MNEFWTF2VrMd8c3nt402IeHj5Ovvv2YfLg/uG3djFTmdafU5zNZFqu4jX9
6yR5lk+BsuqyMIv613JRtL6gNZ3B7GabIpzqeTZdFOWyvMyzOjpJedIunf49
Tl6ml+ksXWZF8jSD5WTy8ev387KaJWfTPCumWfImrd6ZveFvzca8/tvD5OEP
R619wW2dJX8BEp/RSv0+/JLO/lzzlLqbcNa/CWdplf6n2oQaFjS8C+eT5EW2
inbgHMYJn9HivwcONS/Lhu7xZgnkehmR9/fAFoFdXpSVJeOfzpPDbx4c3usn
Y5neClhHWfx5vrnc9FAqTO/NpgbOVuV2huUq/pgm+bZI5/N8mcPHs2h2e3uW
f8D+55cLM81XT5P73z46fHzTbfvu3nfJ40ffJvcePIhYx1pm8ueLtLj8hdbg
8gIObQWy4irDw3+VXi6zZ0dMB01aXeK0Fk2zfvL119fX15Oa2IleW2RCX69T
4Av11wX+cpYt0202S6fvvuYRWDadP32TvMkqehMSzroqL5bIbafppoZDvNjC
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
AQA=

-->

</rfc>

