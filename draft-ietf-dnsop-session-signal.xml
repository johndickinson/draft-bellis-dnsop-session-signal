<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.7 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC7766 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7766.xml">
<!ENTITY RFC6891 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6891.xml">
<!ENTITY RFC7828 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7828.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC7830 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7830.xml">
<!ENTITY RFC1034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC2136 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2136.xml">
<!ENTITY RFC1918 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1918.xml">
<!ENTITY RFC2132 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2132.xml">
<!ENTITY RFC5226 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5226.xml">
<!ENTITY RFC7858 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7858.xml">
<!ENTITY RFC6763 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6763.xml">
<!ENTITY I-D.ietf-dnssd-push SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dnssd-push.xml">
<!ENTITY RFC0768 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.0768.xml">
<!ENTITY RFC1122 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1122.xml">
<!ENTITY I-D.ietf-dprive-padding-policy SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dprive-padding-policy.xml">
]>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-dnsop-session-signal-05" category="std" updates="RFC 7766, RFC 1035">

  <front>
    <title>DNS Stateful Operations</title>

    <author initials="R." surname="Bellis" fullname="Ray Bellis">
      <organization abbrev="ISC">Internet Systems Consortium, Inc.</organization>
      <address>
        <postal>
          <street>950 Charter Street</street>
          <city>Redwood City</city>
          <code>CA 94063</code>
          <country>USA</country>
        </postal>
        <phone>+1 650 423 1200</phone>
        <email>ray@isc.org</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>1 Infinite Loop</street>
          <city>Cupertino</city>
          <code>CA 95014</code>
          <country>USA</country>
        </postal>
        <phone>+1 408 974 3207</phone>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="J." surname="Dickinson" fullname="John Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>jad@sinodun.com</email>
      </address>
    </author>
    <author initials="S." surname="Dickinson" fullname="Sara Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>sara@sinodun.com</email>
      </address>
    </author>
    <author initials="A." surname="Mankin" fullname="Allison Mankin">
      <organization>Salesforce</organization>
      <address>
        <email>allison.mankin@gmail.com</email>
      </address>
    </author>
    <author initials="T." surname="Pusateri" fullname="Tom Pusateri">
      <organization>Unaffiliated</organization>
      <address>
        <postal>
          <street></street>
          <city>Raleigh</city>
          <code>NC 27608</code>
          <country>USA</country>
        </postal>
        <phone>+1 919 867 1330</phone>
        <email>pusateri@bangj.com</email>
      </address>
    </author>

    <date year="2017" month="November" day="30"/>

    <area>Internet</area>
    <workgroup>DNSOP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document defines a new DNS OPCODE, for DNS Stateful Operations (DSO).
DSO messages are used to communicate operations within persistent
stateful sessions, expressed using type-length-value (TLV) syntax.
This document defines an initial set of TLVs, including ones
used to manage session timeouts and termination.
This mechanism is intended to reduce the overhead of existing 
“per-packet” signaling mechanisms with “per-message” semantics as well as 
defining new stateful operations not defined in EDNS(0).</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The use of transports for DNS other than UDP is being increasingly specified,
for example, DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> and DNS over TLS <xref target="RFC7858"/>.
Such transports can offer persistent, long-lived sessions and therefore when
using them for transporting DNS messages it is of benefit to have a mechanism
that can establish parameters associated with those sessions, such as timeouts.
In such situations it is also advantageous to support server initiated messages.</t>

<t>The existing EDNS(0) Extension Mechanism for DNS <xref target="RFC6891"/> is explicitly
defined to only have “per-message” semantics. Whilst EDNS(0) has been used to
signal at least one session-related parameter (the EDNS(0) TCP Keepalive option
<xref target="RFC7828"/>) the result is less than optimal due to the restrictions
imposed by the EDNS(0) semantics and the lack of server-initiated signalling. 
For example, a server cannot arbitrarily 
instruct a client to close a connection because the server can only send EDNS(0) options 
in responses to queries that contained EDNS(0) options.</t>

<t>This document defines a new DNS OPCODE, for DNS Stateful Operations (DSO).
DSO messages are used to communicate operations within persistent
stateful sessions, expressed using type-length-value (TLV) syntax.
This document defines an initial set of TLVs, including ones
used to manage session timeouts and termination.</t>

<t>All three of the TLVs defined here are mandatory for all implementations of DSO.
Additional TLVs may be defined in additional specifications.</t>

<t>It should be noted that the message format for DNS Stateful Operations
(see <xref target="format"/>) differs from the traditional DNS packet
format used for standard queries and responses.
The standard twelve-octet header is used, but the four count fields
(QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) are set to zero and their
corresponding sections are not present.
The actual data pertaining to DNS Stateful Operations
(expressed in TLV format) is appended to the end of the DNS message header.
When displayed using packet analyzer tools that have not been
updated to recognize the DNS Stateful Operations format, this
will result in the Stateful Operations data being displayed
as unknown additional data after the end of the DNS message.
It is likely that future updates to these tools will add the ability
to recognize, decode, and display the Stateful Operations data.</t>

<t>This new format has distinct advantages over an RR-based format because it
is more explicit and more compact. Each TLV definition is specific
to the use case, and as a result contains no redundant or overloaded fields.
Importantly, it completely avoids conflating DNS Stateful Operations in anyway 
with normal DNS operations or with existing EDNS(0) based functionality.
A goal of this approach is to avoid the operational issues that have
befallen EDNS(0), particularly relating to middle-box behaviour.</t>

<t>With EDNS(0), multiple options may be packed into a single OPT pseudo-RR,
and there is no generalized mechanism for a client to be able to tell
whether a server has processed or otherwise acted upon each individual
option within the combined OPT RR.
The specifications for each individual option need to define how each
different option is to be acknowledged, if necessary.</t>

<t>In contrast to EDNS(0), with DNS Stateful Operations there is no
compelling motivation to pack multiple operations into a single
message for efficiency reasons, because DNS Stateful Operations
always operates using a connection-oriented transport protocol.
Each Stateful operation is communicated in its own separate
DNS message, and the transport protocol can take care of packing
separate DNS messages into a single IP packet if appropriate.
For example, TCP can pack multiple small DNS messages into a single TCP segment.
This simplification allows for clearer semantics.
Each DSO request message communicates just one primary operation,
and the RCODE in the corresponding response message indicates the
success or failure of that operation.</t>

</section>
<section anchor="terminology" title="Terminology">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and
“OPTIONAL” in this document are to be interpreted as described in
“Key words for use in RFCs to Indicate Requirement Levels” <xref target="RFC2119"/>.</t>

<t>“DSO” is used to mean DNS Stateful Operation.</t>

<t>The term “connection” means a bidirectional byte stream of reliable,
in-order messages, such as provided by using
DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> or DNS over TLS <xref target="RFC7858"/>.</t>

<t>The unqualified term “session” in the context of this document means the exchange of
DNS messages over a connection where:</t>

<t><list style="symbols">
  <t>The connection between client and server is persistent and relatively
long-lived (i.e., minutes or hours, rather than seconds).</t>
  <t>Either end of the connection may initiate messages to the other.</t>
</list></t>

<t>A “DSO session” is established between two endpoints that
acknowledge persistent DNS state via the exchange of DSO messages
over the connection. This is distinct from, for example a DNS-over-TCP session
as described in RC7766.</t>

<t>A “DSO session” is terminated when the underlying connection is closed.</t>

<t>The term “server” means the software with a listening socket, awaiting
incoming connection requests.</t>

<t>The term “client” means the software which initiates a connection
to the server’s listening socket.</t>

<t>The terms “initiator” and “responder” correspond respectively to the
initial sender and subsequent receiver of a DSO request message,
regardless of which was the “client” and “server” in the usual DNS sense.</t>

<t>The term “sender” may apply to either an initiator
(when sending a DNS Stateful Operation request message)
or a responder (when sending a DNS Stateful Operation response message).</t>

<t>Likewise, the term “receiver” may apply to either a responder
(when receiving a DNS Stateful Operation request message)
or an initiator (when receiving a DNS Stateful Operation response message).</t>

<t>DNS Stateful Operations are expressed using type-length-value (TLV) syntax.</t>

<t>Two timers (elapsed time since an event) are defined in this document:</t>

<t><list style="symbols">
  <t>an inactivity timer (see <xref target="keepalive"/> and <xref target="inactivetimer"/>)</t>
  <t>a keepalive timer (see <xref target="keepalive"/> and <xref target="keepalivetimer"/>)</t>
</list></t>

<t>The timeouts associated with these timers are called the inactivity timeout and 
the keepalive interval respectively. 
The term “Session Timeouts” is used to refer to this pair of timeout values.</t>

<t>Reseting a timer means resetting the timer value to zero and starting the timer 
again. Clearing a timer means resetting the timer value to zero but NOT starting 
the time again.</t>

</section>
<section anchor="discussion" title="Discussion">

<t>There are several use cases for DNS Stateful operations that can 
be described here.</t>

<t>Firstly, establishing session parameters such as server defined timeouts is of 
great use in the 
general management of persistent connections. For example, using DSO sessions 
for stub to recursive DNS-over-TLS <xref target="RFC7858"/> is more flexible for both the 
client and the server than attempting to manage sessions using just the EDNS(0)
TCP Keepalive option
<xref target="RFC7828"/>. The simple set of TLVs defined in this document is
sufficient to greatly enhance connection management for this use case.</t>

<t>Secondly, DNS-SD <xref target="RFC6763"/> has evolved into a naturally session based mechanism where,
for example, long-lived subscriptions lend themselves to ‘push’ mechanisms as 
opposed to polling. Long-lived stateful connections and server initiated 
messages align with this use case <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>A general use case is that DNS traffic is often bursty but session establishment 
can be expensive. One challenge with long-lived connections is to maintain 
sufficient traffic to maintain NAT and firewall state.
To mitigate this issue this document introduces a
new concept for the DNS, that is DSO “Keepalive traffic”.
This traffic carries no DNS data and is not considered ‘activity’
in the classic DNS sense, but serves to maintain state in middle boxes,
and to assure client and server that they still have connectivity to each other.</t>

<t>There are a myriad of other potential use cases for DSO given the versatility 
and extensibility of this specification.</t>

<t><xref target="details"/> of this document describes the protocol details of DNS Stateful
Operations including definitions of three TLVs for session management and 
encryption padding. <xref target="lifecycle"/> presents a
detailed discussion of the DSO Session lifecycle including an
in-depth discussion of keepalive traffic and session termination.</t>

</section>
<section anchor="details" title="Protocol Details">

<section anchor="establishment" title="DSO Session Establishment">

<t>DSO messages MUST only be carried in protocols and in
environments where a session may be established according to the definition above.
Standard DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/>, and DNS over TLS <xref target="RFC7858"/>
are suitable protocols.</t>

<t>DNS over plain UDP <xref target="RFC0768"/> is not appropriate since it fails on the requirement for
in-order message delivery, and, in the presence of NAT gateways and firewalls
with short UDP timeouts, it fails to provide a persistent bi-directional
communication channel unless an excessive amount of keepalive traffic is used.</t>

<t>In some environments it may be known in advance by external means
that both client and server support DSO, and in these cases either
client or server may initiate DSO messages at any time.</t>

<t>However, in the typical case a server will not know in advance whether a
client supports DSO, so in general, unless it is known in advance by other means
that a client does support DSO, a server MUST NOT initiate DSO messages until
a DSO session has been mutually established, as described below.</t>

<t>A client MAY attempt to initiate DSO messages at any time
on a connection; receiving a NOTIMP response in reply indicates that the
server does not implement DSO, and the client SHOULD NOT
issue further DSO messages on that connection.</t>

<t>The DSO message format (see <xref target="tlvformat"/>) includes a bit in the TLV structure
that indicates whether or not a particular DSO request message from the
initiator requires a corresponding DSO response message from the responder.
A “DSO session” is established over a connection by the client
sending a DSO request message of a kind that has the acknowledgement bit set,
indicating that it is a request message of a kind that requires a response.</t>

<t>When the server receives a response-requiring DSO request message
from a client, and transmits its response, the server considers
the DSO session established.</t>

<t>When the client receives the server’s DSO response,
the client considers the DSO session established.</t>

<t>Apart from cases where it is known in advance by external means
that both client and server support DSO,
session establishment can only be performed by the client sending
a DSO request message of a kind that requires a response.</t>

<t>Currently the only suitable such messages are the 
DSO Keepalive Operation TLV (see <xref target="keepalive"/>) and the
DSO Encryption Padding TLV (see <xref target="padding"/>).</t>

<t>If future documents define other client-initiated
response-requiring DSO request messages, then one of these
messages may also be used to establish a DSO session.</t>

<t>Clients MAY send non-response-requiring DSO request messages at any time
on a connection, but a “DSO session” is only considered established after:</t>

<t><list style="symbols">
  <t>the client has sent its first response-requiring DSO request message, and</t>
  <t>(at the server) the server has received this request and transmitted its response</t>
  <t>(at the client) the client has received the server’s response</t>
</list></t>

<t>Once a “DSO session” has been established,
either end may unilaterally send DSO messages at any time,
and therefore either client or server may be the initiator of a message.</t>

<t>Once a “DSO session” has been established,
clients and servers should behave as described in this specification with
regard to inactivity timeouts and connection close, not as prescribed in
the previous specification for DNS over TCP <xref target="RFC7766"/>.</t>

<section anchor="middle-box-considerations" title="Middle-box Considerations">

<t>Where an application-layer middle box (e.g., a DNS proxy, forwarder, or
session multiplexer) is in the path the middle box MUST NOT blindly
forward DSO messages in either direction, and MUST treat the inbound
and outbound connections as separate sessions.  This does not preclude
the use of DSO messages in the presence of an IP-layer middle box such
as a NAT that rewrites IP-layer and/or transport-layer headers, but
otherwise preserves the effect of a single session between the client
and the server.</t>

<t>To illustrate the above, consider a network where a middle box
terminates one or more TCP connections from clients and multiplexes the
queries therein over a single TCP connection to an upstream server.  The
DSO messages and any associated state are specific to the individual
TCP connections.  A DSO-aware middle box MAY in some circumstances be
able to retain associated state and pass it between the client and
server (or vice versa) but this would be highly TLV-specific.  For
example, the middle box may be able to maintain a list of which clients
have made Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/> and
make its own subscription(s) on their behalf, relaying any subsequent
notifications to the client (or clients) that have subscribed to that
particular notification.</t>

</section>
</section>
<section anchor="format" title="Message Format">

<t>A DSO message begins with
the standard twelve-octet DNS message header <xref target="RFC1035"/>
with the OPCODE field set to the DSO OPCODE (tentatively 6).
However, unlike standard DNS messages, the question section, answer section,
authority records section and additional records sections are not present.
The corresponding count fields (QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) MUST be
set to zero on transmission.</t>

<t>If a DSO message is received where any of the count fields are
not zero, then a FORMERR MUST be returned,
unless a future document specifies otherwise.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                          MESSAGE ID                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |QR |    OPCODE     |            Z              |     RCODE     |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     QDCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ANCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     NSCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ARCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                           DSO Data                            /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<section anchor="header" title="Header">

<t>In a request the MESSAGE ID field MUST be set to a unique value, that the
initiator is not currently using for any other active operation on this 
connection.
For the purposes here, a MESSAGE ID is in use in this DSO session if the
initiator has used it in a request for which it has not yet received a
response, or if the client has used it to setup state that it has not yet
deleted. For example, state could be a subscription <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>In a response the MESSAGE ID field MUST contain a copy of the value of the
MESSAGE ID field in the request being responded to.</t>

<t>In a request the DNS Header QR bit MUST be zero (QR=0).
If the QR bit is not zero the message is not a request.</t>

<t>In a response the DNS Header QR bit MUST be one (QR=1).
If the QR bit is not one the message is not a response.</t>

<t>The DNS Header OPCODE field holds the DSO OPCODE value (tentatively 6).</t>

<t>The Z bits are currently unused in DSO messages,
and in both DSO requests and DSO responses the
Z bits MUST be set to zero (0) on transmission and MUST be silently ignored
on reception, unless a future document specifies otherwise.</t>

<t>In a request message (QR=0) the RCODE is generally set to zero on transmission,
and silently ignored on reception, except where specified otherwise
(for example, the Retry Delay operation (see <xref target="delay"/>), where the RCODE indicates the reason
for termination).</t>

<t>The RCODE value in a response may be one of the following values:</t>

<texttable>
      <ttcol align='right'>Code</ttcol>
      <ttcol align='left'>Mnemonic</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>0</c>
      <c>NOERROR</c>
      <c>Operation processed successfully</c>
      <c>1</c>
      <c>FORMERR</c>
      <c>Format error</c>
      <c>2</c>
      <c>SERVFAIL</c>
      <c>Server failed to process request due to a problem with the server</c>
      <c>3</c>
      <c>NXDOMAIN</c>
      <c>Name Error — Named entity does not exist (TLV-dependent)</c>
      <c>4</c>
      <c>NOTIMP</c>
      <c>DSO not supported</c>
      <c>5</c>
      <c>REFUSED</c>
      <c>Operation declined for policy reasons</c>
      <c>9</c>
      <c>NOTAUTH</c>
      <c>Not Authoritative (TLV dependent)</c>
      <c>11</c>
      <c>DSONOTIMP</c>
      <c>DSO type code not supported</c>
</texttable>

<t>Use of the above RCODEs is likely to be common in DSO but 
does not preclude the definition and use of other codes in future documents that 
make use of DSO.</t>

<t>If a document describing a DSO makes use of either NXDOMAIN (Name Error)
or NOTAUTH then that document MUST explain the meaning.</t>

</section>
<section anchor="dsodata" title="DSO Data">

<t>The standard twelve-octet DNS message header is followed by the DSO Data.</t>

<t>The first TLV in a DSO request message is called the Operation 
TLV. Any subsequent TLVs after this initial Operation TLV are called Modifier TLVs.</t>

<t>Depending on the operation a DSO response can contain:</t>

<t><list style="symbols">
  <t>No TLVs</t>
  <t>Only an Operation TLV</t>
  <t>An Operation TLV followed by one or more Modifier TLVs</t>
  <t>Only Modifier TLVs</t>
</list></t>

<section anchor="tlvformat" title="TLV Format">

<t>Operation and modifier TLVs both use the same encoding format.</t>

<t>The Acknowledgement bit in an Operation TLV of a request dictates if a response is to be sent. The Operation TLV may or may not be echoed back in the response according to the definition of the TLV. Each Operation TLV definition should stipulate whether an acknowledgement is REQUIRED. If the Operation TLV is not included in the response according to the TLV definition, the matching identifier in the standard DNS Header response is sufficient as an acknowledgement. If the TLV Acknowledgement bit is cleared in a request, a response MUST NOT be sent. The Acknowledgement bit is NEVER set in a response. Modifier TLVs MUST NEVER set the Acknowledgement bit in request or response.</t>

<t>It is by design that Operation TLVs SHOULD normally require a response and, therefore, set the TLV Acknowledgement bit in a request. However, for some Operation TLVs, this may be undesirable and the TLV Acknowledgement bit MAY be cleared in the request.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   | A |                        DSO-TYPE                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                        DSO DATA LENGTH                        |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                      TYPE-DEPENDENT DATA                      /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='A:'>
  A 1-bit TLV Response flag indicating whether or not an Operation TLV requires
a response Acknowledgement. This bit is never set in responses to Operation TLVs and never set in Modifier TLVs in either direction.</t>
  <t hangText='DSO-TYPE:'>
  A 15-bit field in network order giving the type of the current DSO TLV per
the IANA DSO Type Codes Registry.</t>
  <t hangText='DSO DATA LENGTH:'>
  A 16-bit field in network order giving the size in octets of
the TYPE-DEPENDENT DATA.</t>
  <t hangText='TYPE-DEPENDENT DATA:'>
  Type-code specific format.</t>
</list></t>

<t>Where domain names appear within TYPE-DEPENDENT DATA, they MAY be compressed 
using standard DNS name compression. However, the compression MUST NOT point
outside of the TYPE-DEPENDENT DATA section and offsets MUST be from the start
of the TYPE-DEPENDENT DATA.</t>

</section>
<section anchor="operation-tlvs" title="Operation TLVs">

<t>An “Operation TLV” specifies the operation to be performed.</t>

<t>A DSO message MUST contain at most one Operation TLV.</t>

<t>In all cases a DSO request message MUST contain exactly one 
Operation TLV, indicating the operation to be performed.</t>

<t>Depending on the operation, a DSO response message MAY contain no 
Operation TLV, because it is simply a response to a previous request message,
and the MESSAGE ID in the header is sufficient to identify the request in 
question. Or it may contain a single corresponding response Operation TLV, with 
the same DSO-TYPE as in the request message. The specification for each DSO
type determines whether a response for that operation type 
is required to carry the Operation TLV.</t>

<t>If a DSO response is received for an operation which requires
that the response carry an Operation TLV, and the required Operation TLV is not
the first DSO TLV in the response message, then this is a fatal 
error and the recipient of the defective response message MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
<section anchor="modifier-tlvs" title="Modifier TLVs">

<t>A “Modifier TLV” specifies additional parameters
relating to the operation. Immediately following the Operation TLV, if present,
a DSO message MAY contain one or more Modifier TLVs.</t>

</section>
<section anchor="unrecognized-tlvs" title="Unrecognized TLVs">

<t>If a DSO request is received containing an unrecognized
Operation TLV, the receiver MUST send a response with matching
MESSAGE ID, and RCODE DSONOTIMP (tentatively 11). The response MUST NOT contain 
an Operation TLV.</t>

<t>If a DSO message (request or response) is received
containing one or more unrecognized Modifier TLVs, the unrecognized
Modifier TLVs MUST be silently ignored, and the remainder of the message
is interpreted and handled as if the unrecognized parts were not present.</t>

</section>
</section>
<section anchor="edns0-and-tsig" title="EDNS(0) and TSIG">

<t>Since the ARCOUNT field MUST be zero, a DSO message
MUST NOT contain an EDNS(0) option in the additional records section.
If functionality provided by current or future EDNS(0) options is desired
for DSO messages, an Operation TLV or
Modifier TLV needs to be defined to carry the necessary information.</t>

<t>For example, the EDNS(0) Padding Option <xref target="RFC7830"/> used for security purposes
is not permitted in a DSO message,
so if message padding is desired for DSO messages
then the Encryption Padding TLV described in <xref target="padding"/> MUST be used.</t>

<t>Similarly, a DSO message MUST NOT contain a TSIG record.
A TSIG record in a conventional DNS message is added as the last record
in the additional records section, and carries a signature computed over
the preceding message content. Since DSO data appears
after the additional records section, it would not be included in the
signature calculation. 
If use of signatures with DSO messages becomes necessary in the 
future, an explicit Modifier TLV needs to be defined to 
perform this function.</t>

<t>Note however that, while DSO <spanx style="emph">messages</spanx> cannot include
EDNS(0) or TSIG records, a DSO <spanx style="emph">session</spanx> is typically used to 
carry a whole series of DNS messages of different kinds, including DSO
messages, and other DNS message types like Query <xref target="RFC1034"/> 
<xref target="RFC1035"/> and Update <xref target="RFC2136"/>, and those messages can carry EDNS(0) and 
TSIG records.</t>

<t>This specification explicitly prohibits use of the
EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>
in <spanx style="emph">any</spanx> messages sent on a DSO session (because it duplicates
the functionality provided by the DSO Keepalive operation),
but messages may contain other EDNS(0) options as appropriate.</t>

</section>
</section>
<section anchor="message-handling" title="Message Handling">

<t>The initiator MUST set the value of the QR bit in the DNS header to
zero (0), and the responder MUST set it to one (1).
Every DSO request message (QR=0) with the Acknowledgement bit set in the
operation TLV MUST elicit a response (QR=1), which MUST have the same
MESSAGE ID in the DNS message header as in the corresponding request.
DSO request messages sent by the client with the Acknowledgement
bit set in the operation TLV elicit a response from the server, and
DSO request messages sent by the server with the Acknowledgement
bit set in the operation TLV elicit a response from the client.</t>

<t>A DSO request message (QR=0) with the Acknowledgement bit clear in the
operation TLV MUST NOT elicit a response.</t>

<t>The namespaces of 16-bit MESSAGE IDs are disjoint in each direction.
For example, it is <spanx style="emph">not</spanx> an error for both client and server to send a request
message with the same ID. In effect, the 16-bit MESSAGE ID combined with the 
identity of the initiator (client or server) serves as a 17-bit unique 
identifier for a particular operation on a DSO session.</t>

<t>As described in <xref target="header"/> An initiator MUST NOT reuse a MESSAGE ID that is 
already in use for an 
outstanding request, unless specified otherwise by the relevant specification 
for the DSO in question. At the very least, this means 
that a MESSAGE ID MUST NOT be reused in a particular direction
on a particular DSO session while the initiator is waiting for a response to a 
previous request using that MESSAGE ID on that DSO session,
unless specified otherwise by the relevant 
specification for the DSO in question.
(For a long-lived state the MESSAGE ID for the operation
MUST NOT be reused whilst that state remains active.)</t>

<t>If a client or server receives a response (QR=1) where the MESSAGE ID does not
match any of its outstanding operations, this is a fatal error and it MUST 
immediately terminate the connection with a TCP RST (or equivalent for other 
protocols).</t>

</section>
<section anchor="dso-response-generation" title="DSO Response Generation">

<t>With most TCP implementations, for DSO requests that generate a response,
the TCP data acknowledgement (generated because data has been received by TCP),
the TCP window update (generated because TCP has delivered that data to the receiving software),
and the DSO response (generated by the receiving application-layer software itself)
are all combined into a single packet.
Combining these three elements into a single packet gives a
potentially significant improvement in network efficiency.</t>

<t>For DSO requests that do not generate a response,
the TCP implementation generally doesn’t have any way to know
that no response will be forthcoming, so it waits fruitlessly
for the application-layer software to generate a response,
until the Delayed ACK timer fires <xref target="RFC1122"/> (typically 200 milliseconds)
and only then does it send the TCP ack and window update.
In conjunction with Nagle’s Algorithm at the sender,
this can delay the sender’s transmission of its next
(non-full-sized) TCP segment, while the sender is waiting for
its previous (non-full-sized) TCP segment to be acknowledged.
Nagle’s Algorithm exists to combine multiple small
application writes into more efficient large TCP segments,
to guard against wasteful use of the network by applications
that would otherwise transmit a stream of small TCP segments,
but in this case Nagle’s Algorithm (created to improve network efficiency)
can interact badly with TCP’s Delayed ACK feature
(also created to improve network efficiency) <xref target="NagleDA"/>.</t>

<t>Possible mitigations for this problem include:</t>

<t><list style="symbols">
  <t>Disabling Nagle’s Algorithm at the sender.
This is not great, because it results in less efficient use of the network.</t>
  <t>Disabling Delayed ACK at the receiver.
This is not great, because it results in less efficient use of the network.</t>
  <t>Using a networking API that lets the receiver signal to the TCP
implementation that the receiver has received and processed a client
request for which it will not be generating any immediate response.
This allows the TCP implementation to operate efficiently in both cases;
for requests that generate a response, the TCP ack, window update, and
DSO response are transmitted together in a single TCP segment,
and for requests that do not generate a response,
the application-layer software informs the TCP implementation
that it should go ahead and send the TCP ack and window update
immediately, without waiting for the Delayed ACK timer.
Unfortunately it is not known at this time which (if any) of the
widely-available networking APIs currently include this capability.</t>
</list></t>

</section>
</section>
<section anchor="lifecycle" title="DSO Session Lifecycle and Timers">

<section anchor="dso-session-initiation" title="DSO Session Initiation">

<t>A session begins when a client makes a new connection to a server.</t>

<t>A DSO session begin as described in <xref target="establishment"/>.</t>

<t>The client may perform as many DNS operations as it wishes using the
newly created DSO session. Operations SHOULD be pipelined (i.e., the
client doesn’t need wait for a response before sending the next message).
The server MUST act on messages in the order they are transmitted, but
responses to those messages MAY be sent out of order, if appropriate.</t>

</section>
<section anchor="sessiontimeouts" title="DSO Session Timeouts">

<t>Two timeout values are associated with a DSO session: the inactivity timeout, and 
the keepalive interval.</t>

<t>The first timeout value, the inactivity timeout, is the maximum time for which
a client may speculatively keep a DSO session open in the expectation that
it may have future requests to send to that server.</t>

<t>The second timeout value, the keepalive interval, is the maximum permitted
interval between client messages to the server if the client wishes to keep
the DSO session alive.</t>

<t>The two timeout values are independent. The inactivity timeout may be lower, the 
same, or higher than the keepalive interval, though in most cases the inactivity 
timeout is expected to be shorter than the keepalive interval.</t>

<t>Only when the client has a very long-lived low-traffic state does the 
keepalive interval come into play, to ensure that a sufficient residual
amount of traffic is generated to maintain NAT and firewall state
and to assure client and server that they still have connectivity to each other.</t>

<t>On a new DSO session, if no explicit DSO Keepalive message exchange has taken 
place, the default value for both timeouts is 15 seconds.
For both timeouts, lower values of the timeout result in higher network traffic
and higher CPU load on the server.</t>

</section>
<section anchor="inactivetimer" title="Inactive DSO Sessions">

<t>At both servers and clients, the generation or reception of any complete
DNS message, including DNS requests, responses, updates, or DSO
messages, resets both timers for that DSO session, with the exception
that a DSO Keepalive message resets only the keepalive timer, not the inactivity 
timeout timer.</t>

<t>In addition, for as long as the client has an outstanding operation in progress,
the inactivity timer remains cleared, and an inactivity 
timeout cannot occur.</t>

<t>For short-lived DNS operations like traditional queries and updates,
an operation is considered in progress for the time between request and 
response, typically a period of a few hundred milliseconds at most.
At the client, the inactivity timer is cleared upon transmission of a 
request and remains cleared until reception of the corresponding response.
At the server, the inactivity timer is cleared upon reception of a request
and remains cleared until transmission of the corresponding response.</t>

<t>For long-lived DNS Stateful operations, an operation is considered in progress
for as long as the state is active, until it is cancelled.
This means that a DSO session can exist, with a state 
active, with no messages flowing in either direction, for far longer than the 
inactivity timeout, and this is not an error. This is why there are two separate 
timers: the inactivity timeout, and the keepalive interval. Just because a DSO 
session has no traffic for an extended period of time
does not automatically make that DSO session “inactive”,
if it has an active state that is awaiting events.</t>

</section>
<section anchor="the-inactivity-timeout" title="The Inactivity Timeout">

<t>The purpose of the inactivity timeout is for the server to balance its trade off 
between the costs of setting up new DSO sessions and the costs of maintaining inactive 
DSO sessions. A server with abundant DSO session capacity can offer a high inactivity timeout, 
to permit clients to keep a speculative DSO session open for a long time, to save 
the cost of establishing a new DSO session for future communications with that 
server. A server with scarce memory resources can offer a low inactivity timeout,
to cause clients to promptly close DSO sessions whenever they have no outstanding
operations with that server, and then create a new DSO session later when needed.</t>

<section anchor="closing-inactive-dso-sessions" title="Closing Inactive DSO Sessions">

<t>A client is NOT required to wait until the inactivity timeout expires
before closing a DSO session.
A client MAY close a DSO session at any time, at the client’s discretion.
If a client determines that it has no current or reasonably anticipated
future need for an inactive DSO session, then the client SHOULD close that connection.</t>

<t>If, at any time during the life of the DSO session,
the inactivity timeout value (i.e., 15 seconds by default) elapses
without there being any operation active on the DSO session,
the client MUST gracefully close the connection with a
TLS close_notify followed by a TCP FIN (or equivalent for other protocols).</t>

<t>If, at any time during the life of the DSO session,
twice the inactivity timeout value (i.e., 30 seconds by default),
or five seconds, if twice the inactivity timeout value is less than five seconds,
elapses without there being any operation active on the DSO session,
the server SHOULD consider the client delinquent,
and forcibly abort the DSO session.
For DSO sessions over TCP (or over TLS over TCP),
to avoid the burden of having a connection in TIME-WAIT state, instead of
closing the connection gracefully the server SHOULD abort
the connection with a TCP RST (or equivalent for other protocols).
(In the BSD Sockets API this is achieved by setting the
SO_LINGER option to zero before closing the socket.)</t>

<t>In this context, an operation being active on a DSO session includes
a query waiting for a response, an update waiting for a response,
or active state,
but not a DSO Keepalive message exchange itself.
A DSO Keepalive message exchange resets only the keepalive
interval timer, not the inactivity timeout timer.</t>

<t>If the client wishes to keep an inactive DSO session open for longer than
the default duration without having to send traffic every 15 seconds,
then it uses the DSO Keepalive message to request
longer timeout values, as described in <xref target="keepalive"/>.</t>

</section>
<section anchor="values-for-the-inactivity-timeout" title="Values for the Inactivity Timeout">

<t>For the inactivity timeout value, lower values result in
more frequent DSO session teardown and re-establishment.
Higher values result in larger memory burden to maintain state for
inactive DSO sessions, but lower traffic and CPU load on the server.</t>

<t>A server may dictate (in a server-initiated Keepalive message,
or in a response to a client-initiated Keepalive request message)
any value it chooses for the inactivity timeout.
When a connection’s inactivity timeout is reached the client MUST
begin closing the idle connection, but a client is NOT REQUIRED
to keep an idle connection open until the inactivity timeout is
reached — a client SHOULD begin closing the connection sooner
if it has no reason to expect future operations with that server
before the inactivity timeout is reached.</t>

<t>A shorter inactivity timeout with a longer keepalive interval signals
to the client that it should not speculatively keep an inactive DSO
session open for very long without reason, but when it does have an
active reason to keep a DSO session open, it doesn’t need to be sending
an aggressive level of keepalive traffic to maintain that session.</t>

<t>A longer inactivity timeout with a shorter keepalive interval
signals to the client that it may speculatively keep an inactive
DSO session open for a long time, but to maintain that inactive
DSO session it should be sending a lot of keepalive traffic.
This configuration is expected to be less common.</t>

<t>A server may dictate any value it chooses for the inactivity timeout
(either in a response to a client-initiated request, or in a server-initiated message)
including values under one second, or even zero.
An inactivity timeout of zero informs the client that it
should not speculatively maintain idle connections at all, and
as soon as the client has completed the operation or operations relating
to this server, the client should immediately begin closing this session.</t>

<t>A server will abort an idle client session after twice the
inactivity timeout value, or five seconds, whichever is greater.
In the case of a zero inactivity timeout value, this means that
if a client fails to close an idle client session then the server
will forcibly abort the idle session after five seconds.</t>

</section>
</section>
<section anchor="keepalivetimer" title="The Keepalive Interval">

<t>The purpose of the keepalive interval is to manage the generation of
sufficient messages to maintain state in middle boxes (such at NAT gateways
or firewalls) and for the client and server to periodically verify that they
still have connectivity to each other. This allows them to clean up state
when connectivity is lost, and attempt re-connection if appropriate.</t>

<section anchor="keepalive-interval-expiry" title="Keepalive Interval Expiry">

<t>If, at any time during the life of the DSO session,
the keepalive interval value (i.e., 15 seconds by default) elapses
without any DNS messages being sent or received on a DSO session,
the client MUST take action to keep the DSO session alive,
by sending a DSO Keepalive message (see <xref target="keepalive"/>).
A DSO Keepalive message exchange resets only the keepalive timer, 
not the inactivity timer.</t>

<t>If a client disconnects from the network abruptly,
without cleanly closing its DSO session,
leaving long-lived state uncanceled,
the server learns of this after failing to
receive the required keepalive traffic from that client.
If, at any time during the life of the DSO session,
twice the keepalive interval value (i.e., 30 seconds by default) elapses
without any DNS messages being sent or received on a DSO session,
the server SHOULD consider the client delinquent,
and forcibly abort the connection with a TCP RST (or equivalent for other 
protocols).</t>

</section>
<section anchor="values-for-the-keepalive-interval" title="Values for the Keepalive Interval">

<t>For the keepalive interval value, lower values result in higher volume keepalive 
traffic. Higher values of the keepalive interval reduce traffic and CPU load, 
but have minimal effect on the memory burden
at the server, because clients keep a DSO session open for the same length of time
(determined by the inactivity timeout) regardless of the level of keepalive traffic 
required.</t>

<t>It may be appropriate for clients and servers to select different keepalive 
interval values depending on the nature of the network they are on.</t>

<t>A corporate DNS server that knows it is serving only clients on the internal 
network, with no intervening NAT gateways or firewalls, can impose a higher 
keepalive interval, because frequent keepalive traffic is not required.</t>

<t>A public DNS server that is serving primarily residential consumer clients, 
where it is likely there will be a NAT gateway on the path, may impose a lower 
keepalive interval, to generate more frequent keepalive traffic.</t>

<t>A smart client may be adaptive to its environment. A client using
a private IPv4 address <xref target="RFC1918"/> to communicate with a DNS server
at an address outside that IPv4 private address block,
may conclude that there is likely to be a NAT gateway on the path,
and accordingly request a lower keepalive interval.</t>

<t>For environments where there is a NAT gateway or firewalls on the path, it is
RECOMMENDED that clients request, and servers grant, a keepalive interval of 15
minutes. In other environments it is RECOMMENDED that clients request, and 
servers grant, a keepalive interval of 60 minutes.</t>

<t>Note that the lower the keepalive interval value, the higher the load on client
and server. For example, an keepalive interval value of 100ms would result in a
continuous stream of at least ten messages per second, in both directions,
to keep the DSO session alive. And, in this extreme example, a single packet loss and
retransmission over a long path could introduce a momentary pause in the stream of messages,
long enough to cause the server to overzealously abort the connection.</t>

<t>Because of this concern, the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with an keepalive interval value less than ten seconds.
If a client receives an Keepalive message specifying an keepalive interval value
less than ten seconds this is an error and the client MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="server-initiated-termination-on-error" title="Server-Initiated Termination on Error">

<t>After sending an error response to a client, the server MAY end the DSO session,
or may allow the DSO session to remain open. For error conditions
that only affect the single operation in question, the server SHOULD return an
error response to the client and leave the DSO session open for further operations.
For error conditions that are likely to make all operations unsuccessful in the
immediate future, the server SHOULD return an error response to the client and 
then end the DSO session by sending a Retry Delay request message, as described in 
<xref target="delay"/>.</t>

</section>
<section anchor="error" title="Client Behaviour in Receiving an Error">

<t>Upon receiving an error response from the server, a client SHOULD NOT
automatically close the DSO session. An error relating to one particular operation
on a DSO session does not necessarily imply that all other operations on that
DSO session have also failed, or that future operations will fail. The client
should assume that the server will make its own decision about whether or not to
end the DSO session, based on the server’s determination of whether the error
condition pertains to this particular operation, or would also apply to any
subsequent operations. If the server does not end the DSO session by
sending the client a Retry Delay message (see <xref target="delay"/>) then the client
SHOULD continue to use that DSO session for subsequent operations.</t>

</section>
<section anchor="server-initiated-termination-on-overload" title="Server-Initiated Termination on Overload">

<t>A server MUST NOT close a DSO session with a client,
except in certain exceptional circumstances, as outlined below.
In normal operation, closing a DSO session is the client’s responsibility.
The client makes the determination of when to close a DSO
session based on an evaluation of both its own needs,
and the inactivity timeout value dictated by the server.</t>

<t>Some exceptional situations where a server may terminate a DSO session include:</t>

<t><list style="symbols">
  <t>The server is undergoing reconfiguration or maintenance procedures
that require clients to be disconnected.</t>
  <t>The server application software or underlying operating system
is shutting down or restarting.</t>
  <t>The server application software terminates unexpectedly
(perhaps due to a bug that makes it crash).</t>
  <t>The client fails to meets its obligation to generate keepalive
traffic or close an inactive session by the prescribed times
(twice the time interval dictated by the server, or five seconds,
whichever is greater, as described in <xref target="sessiontimeouts"/>).</t>
  <t>The client sends a grossly invalid or malformed request that is
indicative of a seriously defective client implementation (see <xref target="error"/>).</t>
  <t>The server is over capacity and needs to shed some load (see <xref target="retry"/>).</t>
</list></t>

<t>When a server has to close a DSO session with a client
(because of exceptional circumstances such as those outlined above)
the server SHOULD, whenever possible, send a Retry Delay Operation TLV
(see below) informing the client of the reason for the DSO session
being closed, and allow the client five seconds to receive it
before the server resorts to forcibly aborting the connection.</t>

</section>
<section anchor="retry" title="Retry Delay Operation TLV">

<t>There may be rare cases where a server is overloaded and wishes to shed load.
If a server is low on resources it MAY simply terminate a client connection with 
a TCP RST (or equivalent for other protocols).
However, the likely behavior of the client may be simply to to treat this as a
network failure and connect
immediately, putting more burden on the server.</t>

<t>Therefore to avoid this reconnection implosion, a server SHOULD instead choose 
to shed client load by sending a Retry Delay request message, with an RCODE of 
SERVFAIL, to inform the client of the overload situation. After sending a Retry 
Delay request message, the server MUST NOT send any further messages on that 
DSO session.</t>

<t>After sending the Retry Delay request the server SHOULD allow the
client five seconds to close the connection, and if the client has not
closed the connection after five seconds then the server SHOULD abort
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>Upon receipt of a Retry Delay request from the server, the client MUST
make note of the reconnect delay for this server, and then immediately
close the connection. This is to place the burden of TCP’s TIME-WAIT state on 
the client.</t>

<t>A Retry Delay request message MUST NOT be initiated by a client.
If a server receives a Retry Delay request message this is an error
and the server MUST immediately terminate the connection with a TCP RST
(or equivalent for other protocols).</t>

<section anchor="outstanding-operations" title="Outstanding Operations">

<t>At the moment a server chooses to initiate a Retry Delay request message
there may be DNS requests already in flight from client to server on this 
DSO session, which will arrive at the server after its Retry Delay request message 
has been sent.
The server MUST silently ignore such incoming requests, and MUST NOT generate
any response messages for them. When the Retry Delay request message from the
server arrives at the client, the client will determine that any DNS requests
it previously sent on this DSO session, that have not yet received a response, now 
will certainly not be receiving any response. Such requests should be considered
failed, and should be retried at a later time, as appropriate.</t>

<t>In the case where some, but not all, of the existing operations on a DSO session 
have become invalid (perhaps because the server has been reconfigured and is no 
longer authoritative for some of the names),
but the server is terminating all DSO sessions en masse with a REFUSED (5) RCODE,
the RECONNECT DELAY MAY be zero, indicating that the clients SHOULD immediately
attempt to re-establish operations.
It is likely that some of the attempts will be successful and some will not.</t>

<t>In the case where a server is terminating a large number of DSO sessions at once
(e.g., if the system is restarting) and the server doesn’t want to be inundated 
with a flood of simultaneous retries, it SHOULD send different RECONNECT delay 
values to each client.
These adjustments MAY be selected randomly, pseudorandomly, or deterministically
(e.g., incrementing the time value by one tenth of a second for each successive
client, yielding a post-restart reconnection rate of ten clients per second).</t>

</section>
<section anchor="client-reconnection" title="Client Reconnection">

<t>After a DSO session is closed by the server, the client SHOULD try to reconnect,
to that server, or to another suitable server, if more than one is available.
If reconnecting to the same server, the client MUST respect the indicated delay
before attempting to reconnect.</t>

<t>If a particular server does not want a client to reconnect (it is being
de-commissioned), it SHOULD set the retry delay to the maximum value (which is
approximately 497 days). If the server will only be out of service for a maintenance
period, it should use a value closer to the expected maintenance window and
not default to a very large delay value or clients may not attempt to reconnect
after it resumes service.</t>

</section>
</section>
</section>
<section anchor="sharing" title="Connection Sharing">

<t>As previously specified for DNS over TCP <xref target="RFC7766"/>,
to mitigate the risk of unintentional server overload, DNS clients
MUST take care to minimize the number of concurrent TCP connections
made to any individual server.  It is RECOMMENDED that for any given
client/server interaction there SHOULD be no more than one connection
for regular queries, one for zone transfers, and one for each
protocol that is being used on top of TCP (for example, if the
resolver was using TLS).
However, it is noted that certain primary/secondary configurations
with many busy zones might need to use more than one TCP
connection for zone transfers for operational reasons
(for example, to support concurrent transfers of multiple zones).</t>

<t>A single server may support multiple services, including DNS Updates 
<xref target="RFC2136"/>, DNS Push Notifications <xref target="I-D.ietf-dnssd-push"/>,
and other services, for one or more DNS zones.
When a client discovers that the target server for several different operations
is the same target hostname and port, the client SHOULD use a single
shared DSO session for all those operations.
A client SHOULD NOT open multiple connections to the same target host and port
just because the names being operated on are different or
happen to fall within different zones.
This is to reduce unnecessary connection load on the DNS server.</t>

<t>However, server implementers and operators should be aware that connection
sharing may not be possible in all cases.
A single client device may be home to multiple independent client software
instances that don’t coordinate with each other.
Similarly, multiple independent client devices behind the same NAT gateway
will also typically appear to the DNS server as different source ports on
the same client IP address.
Because of these constraints, a DNS server MUST be prepared to accept
multiple connections from different source ports on the same client IP address.</t>

</section>
<section anchor="base-tlvs-for-dns-stateful-operations" title="Base TLVs for DNS Stateful Operations">

<section anchor="delay" title="Retry Delay TLV">

<t>The Retry Delay TLV (DSO-TYPE=0) can be used as an Operation TLV or as
a Modifier TLV.</t>

<t>The TYPE-DEPENDENT DATA for the the Retry Delay TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     RETRY DELAY (32 bits)                     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='RETRY DELAY:'>
  a time value, specified as a 32-bit word in network order in units of 
milliseconds, within which the client MUST NOT retry this operation, or retry 
connecting to this server.</t>
</list></t>

<t>The RECOMMENDED value is 10 seconds.</t>

<section anchor="use-as-an-operation-tlv" title="Use as an Operation TLV">

<t>When sent in a DSO request message, from server to client, the 
Retry Delay TLV (0) is considered an Operation TLV. It is used by a server 
to request that a client close the DSO session and underlying connection, and 
not to reconnect for the indicated time interval.</t>

<t>In this case it applies to the DSO session as a whole, and the client MUST begin closing the 
DSO session, as described in <xref target="retry"/>. The RCODE in the message header 
MUST indicate the reason for the termination:</t>

<t><list style="symbols">
  <t>NOERROR indicates a routine shutdown.</t>
  <t>SERVFAIL indicates that the server is overloaded due to resource exhaustion.</t>
  <t>REFUSED indicates that the server has been reconfigured and is no longer able 
to perform one or more of the functions 
currently being performed on this DSO session (for example, a DNS Push Notification 
server could be reconfigured such that is is no longer accepting DNS Push 
Notification requests for one or more of the currently subscribed names).</t>
</list></t>

<t>This document specifies only these three RCODE values for Retry Delay request.
Servers sending Retry Delay requests SHOULD use one of these three values.
However, future circumstances may create situations where other RCODE values
are appropriate in Retry Delay requests, so clients MUST be prepared
to accept Retry Delay requests with any RCODE value.</t>

<t>An acknowledgement is not desired for a Retry Delay Operation TLV and the TLV
Acknowledgement bit MUST be cleared in the request.</t>

</section>
<section anchor="use-as-a-modifier-tlv" title="Use as a Modifier TLV">

<t>In the case of a client request that returns a nonzero RCODE value,
the server MAY append a Retry Delay TLV (0) to the response,
indicating the time interval during which the client
SHOULD NOT attempt this operation again.</t>

<t>When appended to a DSO response message for some client request,
the Retry Delay TLV (0) is considered a Modifier TLV.</t>

<t>The indicated time interval during which the client SHOULD NOT retry
applies only to the failed operation, not to the DSO session as a whole.</t>

</section>
</section>
<section anchor="keepalive" title="Keepalive Operation TLV">

<t>The Keepalive Operation TLV (DSO-TYPE=1) performs two functions: to reset the
keepalive timer for the DSO session and to establish the values for the Session Timeouts.</t>

<t>The Keepalive Operation TLV resets only the keepalive timer, not the inactivity timer.
The reason for this is that periodic Keepalive Operation TLVs are sent for the
sole purpose of keeping a DSO session alive, because that DSO session has current
or recent non-maintenance activity that warrants keeping the DSO session alive.
If sending keepalive traffic itself were to reset the inactivity timer, then 
that would create a circular livelock where keepalive traffic would be sent 
indefinitely to keep a DSO session alive, where the only activity on that DSO 
session would be the keepalive traffic keeping the DSO session alive so that further 
keepalive traffic can be sent.</t>

<t>Sending keepalive traffic is considered a maintenance activity
that is performed in service of other client activities.
Sending keepalive traffic itself is not considered a client activity.
For a DSO session to be considered active, it must be carrying something more than just keepalive traffic.
This is why merely sending a Keepalive Operation TLV does not reset the inactivity timer.</t>

<t>When sent by a client, the Keepalive Operation TLV MUST have the Acknowledgement bit set.
It resets a DSO session’s keepalive timer, and at the same time requests what the
Session Timeout values should be from this point forward in the DSO session.
If a server receives a Keepalive Operation TLV without the Acknowledgement bit set
then this is a fatal error and the server MUST immediately terminate
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>Once a DSO session is in progress (see <xref target="details"/>) the Keepalive TLV also MAY be initiated by a server.
When sent by a server, the Keepalive Operation TLV MUST NOT have the Acknowledgement bit set.
It resets a DSO session’s keepalive timer, and unilaterally informs the client of
the new Session Timeout values to use from this point forward in this DSO session.
No client response to this unilateral declaration is required.
If a client receives a Keepalive Operation TLV with the Acknowledgement bit set
then this is a fatal error and the client MUST immediately terminate
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>It is not required that the Keepalive TLV be used in every DSO session.
While many DNS Stateful operations
will be used in conjunction with a long-lived session state,
not all DNS Stateful operations require long-lived session state,
and in some cases the default 15-second value for both the inactivity timeout
and keepalive interval may be perfectly appropriate. However, it can be noted 
that for clients that implement only the TLVs defined in this document it is
the only way for a client to initiate a DSO session.</t>

<t>The TYPE-DEPENDENT DATA for the the Keepalive TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 INACTIVITY TIMEOUT (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 KEEPALIVE INTERVAL (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='INACTIVITY TIMEOUT:'>
  the inactivity timeout for the current DSO session, specified as a
32-bit word in network (big endian) order in units of milliseconds.
This is the timeout at which the client MUST begin closing an inactive DSO session.
The inactivity timeout can be any value of the server’s choosing.
If the client does not gracefully close an inactive DSO
session, then after twice this interval, or five seconds,
whichever is greater, the server will forcibly terminate the
connection with a TCP RST (or equivalent for other protocols).</t>
  <t hangText='KEEPALIVE INTERVAL:'>
  the keepalive interval for the current DSO session, specified as a
32-bit word in network (big endian) order in units of milliseconds.
This is the interval at which a client MUST generate keepalive
traffic to maintain connection state.
The keepalive interval MUST NOT be less than ten seconds.
If the client does not generate the mandated keepalive traffic,
then after twice this interval the server will forcibly terminate
the connection with a TCP RST (or equivalent for other protocols).
Since the minimum allowed keepalive interval is ten seconds, the
minimum time at which a server will forcibly disconnect a client for
failing to generate the mandated keepalive traffic is twenty seconds.</t>
</list></t>

<t>In a client-initiated DSO Keepalive message,
the Session Timeouts contain the client’s requested values.
In a server response to a client-initiated message, the Session Timeouts contain 
the server’s chosen values, which the client MUST respect.
This is modeled after the DHCP protocol, where the client
requests a certain lease lifetime using DHCP option 51 <xref target="RFC2132"/>,
but the server is the ultimate authority
for deciding what lease lifetime is actually granted.</t>

<t>In a server-initiated DSO Keepalive message, the Session Timeouts
unilaterally inform the client of the new values from this point
forward in this DSO session. The client MUST NOT generate a
response to the server-initiated DSO Keepalive message.</t>

<t>When a client is sending its second and subsequent Keepalive DSO 
requests to the server, the client SHOULD continue to request its preferred 
values each time. This allows flexibility, so that if conditions change during 
the lifetime of a DSO session, the server can adapt its responses to better fit 
the client’s needs.</t>

<section anchor="client-handling-of-received-session-timeout-values" title="Client handling of received Session Timeout values">

<t>When a client receives a response to its client-initiated DSO Keepalive message,
or receives a server-initiated DSO Keepalive message, the client has then 
received Session Timeout values dictated by the server. The two timeout values 
contained in the DSO Keepalive TLV from the server may each be higher, lower, or 
the same as the respective Session Timeout values the client previously had for 
this DSO session.</t>

<t>In the case of the keepalive timer, the handling of the received value is 
straightforward. The act of receiving the message containing the DSO Keepalive 
TLV itself resets the keepalive timer and updates the keepalive interval for the 
DSO session. The new keepalive interval indicates the 
maximum time that may elapse before another message must be sent
or received on this DSO session, if the DSO session is to remain alive.</t>

<t>In the case of the inactivity timeout, the handling of the received value 
is a little more subtle, though the meaning of the inactivity 
timeout is unchanged — it still indicates the maximum permissible time allowed 
without activity on a DSO session.
The act of receiving the message containing the DSO Keepalive TLV does not
itself reset the inactivity timer. The time elapsed since the last useful
activity on this DSO session is unaffected by exchange of DSO Keepalive messages.
The new inactivity timeout value in the DSO Keepalive TLV in the received message
does update the timeout associated with the running inactivity timer;
that becomes the new maximum permissible time without activity on a DSO session.</t>

<t><list style="symbols">
  <t>If the current inactivity timer value is not greater than the
new inactivity timeout, then the DSO session may remain open for now.
When the inactivity timer value exceeds the new inactivity timeout,
the client MUST then begin closing the DSO session, as described above.</t>
  <t>If the current inactivity timer value is already greater
than the new inactivity timeout, then this DSO session has
already been inactive for longer than the server permits,
and the client MUST immediately begin closing this DSO session.</t>
  <t>If the current inactivity timer value is already more than twice the
new inactivity timeout, then the client is immediately considered delinquent
(this DSO session is immediately eligible to be forcibly terminated by the server)
and the client MUST immediately begin closing this DSO session.
However if a server abruptly reduces the inactivity timeout in this
way, then, to give the client time to close the connection gracefully
before the server resorts to terminating it forcibly, the server
SHOULD give the client an additional grace period of one quarter
of the new inactivity timeout, or five seconds, whichever is greater.</t>
</list></t>

</section>
<section anchor="relation-to-edns0-tcp-keepalive-option" title="Relation to EDNS(0) TCP Keepalive Option">

<t>The inactivity timeout value in the Keepalive TLV (DSO-TYPE=1) has similar
intent to the EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>.
A client/server pair that supports DSO MUST NOT use the
EDNS(0) TCP KeepAlive option within any message after a DSO 
session has been established.
Once a DSO session has been established, if either
client or server receives a DNS message over the DSO session that contains an
EDNS(0) TCP Keepalive option, this is an error and the receiver of the
EDNS(0) TCP Keepalive option MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="padding" title="Encryption Padding TLV">

<t>The Encryption Padding TLV (DSO-TYPE=2) can only be used as a Modifier TLV.
It is only applicable when the DSO Transport layer uses encryption
such as TLS.</t>

<t>The TYPE-DEPENDENT DATA for the the Padding TLV is optional and is a
variable length field containing non-specified values. A DATA LENGTH
of 0 essentially provides for 4 octets of padding (the minimum amount).</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   /                                                               /
   /                   VARIABLE NUMBER OF OCTETS                   /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t>As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
the PADDING octets SHOULD be set to 0x00.  Other values MAY be used,
for example, in cases where there is a concern that the padded
message could be subject to compression before encryption.
PADDING octets of any value MUST be accepted in the messages received.</t>

<t>The Encryption Padding TLV may be included in either a DSO request, response, or both.
As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
if a request is received with a Encryption Padding TLV,
then the response MUST also include an Encryption Padding TLV.</t>

<t>The length of padding is intentionally not specified in this document and
is a function of current best practices with respect to the type and length
of data in the preceding TLVs <xref target="I-D.ietf-dprive-padding-policy"/>.</t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="dso-opcode-registration" title="DSO OPCODE Registration">

<t>IANA are directed to assign a value (tentatively 6)
in the DNS OPCODEs Registry for the DSO OPCODE.</t>

</section>
<section anchor="dso-rcode-registration" title="DSO RCODE Registration">

<t>IANA are directed to assign a value (tentatively 11)
in the DNS RCODE Registry for the DSONOTIMP error code.</t>

</section>
<section anchor="dso-type-codes-registry" title="DSO Type Codes Registry">

<t>IANA are directed to create the 15-bit DSO Type Codes
Registry, with initial values as follows:</t>

<texttable>
      <ttcol align='right'>Type</ttcol>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Status</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>0x0000</c>
      <c>RetryDelay</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0001</c>
      <c>KeepAlive</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0002</c>
      <c>Encryption Padding</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0003 - 0x003F</c>
      <c>Unassigned, reserved for DSO session management TLVs</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x0040 - 0x77FF</c>
      <c>Unassigned</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x7800 - 0x7BFF</c>
      <c>Reserved for local / experimental use</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x7C00 - 0x7FFF</c>
      <c>Reserved for future expansion</c>
      <c>&#160;</c>
      <c>&#160;</c>
</texttable>

<t>Registration of additional DSO Type Codes requires publication
of an appropriate IETF “Standards Action” or “IESG Approval” document <xref target="RFC5226"/>.</t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>If this mechanism is to be used with DNS over TLS, then these messages
are subject to the same constraints as any other DNS over TLS messages
and MUST NOT be sent in the clear before the TLS session is established.</t>

<t>The data field of the “Encryption Padding” TLV could be used as a covert channel.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to
Tim Chown,
Ralph Droms,
Jan Komissar,
Manju Shankar Rao,
and Ted Lemon
for their helpful contributions to this document.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC1035;
&RFC7766;
&RFC6891;
&RFC7828;
&RFC2119;
&RFC7830;
&RFC1034;
&RFC2136;
&RFC1918;
&RFC2132;
&RFC5226;


    </references>

    <references title='Informative References'>

<reference anchor="NagleDA" target="http://www.stuartcheshire.org/papers/nagledelayedack/">
  <front>
    <title>TCP Performance problems caused by interaction between Nagle's Algorithm and Delayed ACK</title>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization></organization>
    </author>
    <date year="2005" month="May" day="20"/>
  </front>
</reference>
&RFC7858;
&RFC6763;
&I-D.ietf-dnssd-push;
&RFC0768;
&RFC1122;
&I-D.ietf-dprive-padding-policy;


    </references>



  </back>

<!-- ##markdown-source:
H4sIAOCpKVoAA+19a3cbR3Lo9/4Vc+UPJh0AJvW0lXNPlqYom7sSqSUpbzZf
cgbAgBwLmEFmBqSwks7JD7n3z+WX3Hp2V88Dom1lk5NztWFMAjPd1dXV1fWu
8XjsmrxZZs+TF2eXyWWTNtlis0zO11mVNnlZ1G5ezop0BQ/Mq3TRjPOsWYzn
RV2ux3VW1/DIuM6vi3Q5Pnji5vD68+ThweGz8eHh+NGBy9fV86SpNnXz8ODg
+4OHLq2y9HlyWjRZVWSNu7umic/fJH8pq3d5cZ38WJWbtXt3Fx4av8CJ3Sxt
nid1M3ebNU5TP08uXh4nz549fTqi3w4PHj1xblbOYZTnyQag/M6t8+cuScZJ
U87ov/V2VWWLmn8vq4b+cOmmuSkrehJ+kiQvcPBJ8kO2XOY1fcQYuEi39sOy
ug5QJpfbuslWdXIMSIOh881qBF/OJvRoOp1W2S08fXlMf9cwdQbr+f7JQXJ8
k1YwBiAfP6OvZ3mzhemy+V1ZzpNj+Is/LucAxfFR8v3jg6eP5KNN0VTw8NvL
I/pgfVMW8NA/HCZPYezHDx8lh4B6+ipbpfnyeVKl2z/k9WwC4MdLvpwALFl9
k1eZWfRlswH44m9o5Ufr9TILS9QlHcJHi7zImyx5VZZrs57jDVBVkxdlazFP
Dg4ff24xjw++S75/9jh59PDgmV3MTMD6Q4rQTGblKl7THyfJi3wGlFWXhVnU
H8ubovUFrekSoJtvirCrV9nspiiX5XWe1dFOypN26fT7OHmdXqfzdJkVyXEG
y8nk4/P3i7KaJ5ezPCtmWfImrd4Z3PC3BjHn//w4efzjUQsviNZ58icg8Tmt
1OPhl3T+h5pB6iLhsh8Jl2mV/o9CQg0LGsbC0QSgKmCxBgVHeJjLwn7BKADQ
awBmltnxU356sqKn/3CNn3bnuZokbzY1sKgqNzNdlav4Y5rnbZEuFvkyh4/n
0Sl68MAyAoAmv74xiDk7Th4+e3rw3eeOzfeH3yffPX2WHD56FPGAtUDyh2la
XP9Ca3B5AQteAde/zXAXz9LrZfbiiDe0SatrBOumadbPv/327u5uUhNf0POH
3OTbdQoHvP62wDfn2TLdZvN09u5bHoFvmavjN8mbrKKZkALWVTldItucpZsa
dnW6BSQCZOkMb59kmjV3GRARAfN1Dft1XVZ5c7NK0mKevOA5kqPjPzFZeka+
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
PR9qZgcBAA==

-->

</rfc>

