<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.7 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC7766 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7766.xml">
<!ENTITY RFC6891 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6891.xml">
<!ENTITY RFC7828 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7828.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC7830 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7830.xml">
<!ENTITY RFC1034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC2136 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2136.xml">
<!ENTITY RFC2132 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2132.xml">
<!ENTITY RFC1918 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1918.xml">
<!ENTITY RFC5226 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5226.xml">
<!ENTITY RFC7858 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7858.xml">
<!ENTITY RFC6763 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6763.xml">
<!ENTITY I-D.ietf-dnssd-push SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dnssd-push.xml">
<!ENTITY RFC0768 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.0768.xml">
<!ENTITY I-D.ietf-dprive-padding-policy SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dprive-padding-policy.xml">
]>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-dnsop-session-signal-05" category="std" updates="RFC 7766, RFC 1035">

  <front>
    <title>DNS Stateful Operations</title>

    <author initials="R." surname="Bellis" fullname="Ray Bellis">
      <organization abbrev="ISC">Internet Systems Consortium, Inc.</organization>
      <address>
        <postal>
          <street>950 Charter Street</street>
          <city>Redwood City</city>
          <code>CA 94063</code>
          <country>USA</country>
        </postal>
        <phone>+1 650 423 1200</phone>
        <email>ray@isc.org</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>1 Infinite Loop</street>
          <city>Cupertino</city>
          <code>CA 95014</code>
          <country>USA</country>
        </postal>
        <phone>+1 408 974 3207</phone>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="J." surname="Dickinson" fullname="John Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>jad@sinodun.com</email>
      </address>
    </author>
    <author initials="S." surname="Dickinson" fullname="Sara Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>sara@sinodun.com</email>
      </address>
    </author>
    <author initials="A." surname="Mankin" fullname="Allison Mankin">
      <organization>Salesforce</organization>
      <address>
        <email>allison.mankin@gmail.com</email>
      </address>
    </author>
    <author initials="T." surname="Pusateri" fullname="Tom Pusateri">
      <organization>Unaffiliated</organization>
      <address>
        <postal>
          <street></street>
          <city>Raleigh</city>
          <code>NC 27608</code>
          <country>USA</country>
        </postal>
        <phone>+1 919 867 1330</phone>
        <email>pusateri@bangj.com</email>
      </address>
    </author>

    <date year="2017"/>

    <area>Internet</area>
    <workgroup>DNSOP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document defines a new DNS Stateful Operation OPCODE used to communicate 
operations within persistent stateful sessions, expressed using type-length-value (TLV) 
syntax, and defines an initial set of TLVs used to manage session timeouts and 
termination. This mechanism is intended to reduce the overhead of existing 
“per-packet” signaling mechanisms with “per-message” semantics as well as 
defining new stateful operations not defined in EDNS(0).</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The use of transports for DNS other than UDP is being increasingly specified,
for example, DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> and DNS over TLS <xref target="RFC7858"/>.
Such transports can offer persistent, long-lived sessions and therefore when
using them for transporting DNS messages it is of benefit to have a mechanism
that can establish parameters associated with those sessions, such as timeouts.
In such situations it is also advantageous to support server initiated messages.</t>

<t>The existing EDNS(0) Extension Mechanism for DNS <xref target="RFC6891"/> is explicitly
defined to only have “per-message” semantics. Whilst EDNS(0) has been used to
signal at least one session-related parameter (the EDNS(0) TCP Keepalive option
<xref target="RFC7828"/>) the result is less than optimal due to the restrictions
imposed by the EDNS(0) semantics and the lack of server-initiated signalling. 
For example, a server cannot arbitrarily 
instruct a client to close a connection because the server can only send EDNS(0) options 
in responses to queries that contained EDNS(0) options.</t>

<t>This document defines a new DNS Stateful Operation OPCODE used to carry
operations within persistent stateful connections, expressed using type-length-value (TLV)
syntax, and
defines an initial set of TLVs including ones used to manage session timeouts and termination.</t>

<t>This new format has distinct advantages over an RR-based format because it
is more explicit and more compact. Each TLV definition is specific
to the use case, and as a result contains no redundant or overloaded fields.
Importantly, it completely avoids conflating DNS Stateful Operations in anyway 
with normal DNS operations or with existing EDNS(0) based functionality. A goal 
of this approach is to avoid the operational
issues that have befallen EDNS(0), particularly relating to middle-box 
behaviour.</t>

<t>With EDNS(0), multiple options may be packed into a single OPT pseudo-RR,
and there is no generalized mechanism for a client to be able to tell
whether a server has processed or otherwise acted upon each individual
option within the combined OPT RR.
The specifications for each individual option need to define how each
different option is to be acknowledged, if necessary.</t>

<t>With DNS Stateful Operations, in contrast, there is no compelling motivation
to pack multiple operations into a single message for efficiency reasons.
Each Stateful operation is communicated in its own separate
DNS message, and the transport protocol can take care of packing
separate DNS messages into a single IP packet if appropriate.
For example, TCP can pack multiple small DNS messages into a single TCP segment.
The RCODE in each response message indicates the success or failure of the operation in question.</t>

<t>It should be noted that the message format for DNS Stateful Operations
(see <xref target="format"/>) differs from the traditional DNS packet
format used for standard queries and responses.
The standard twelve-octet header is used, but the four count fields
(QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) are set to zero and their
corresponding sections are not present.
The actual data pertaining to DNS Stateful Operations is
appended to the end of the DNS message header.
When displayed using today’s packet analyzer tools that have not been updated
to recognize the DNS Stateful Operations format, this will result
in the Stateful Operations data being displayed as unknown additional
data after the end of the DNS message. It is likely that future updates
to these tools will add the ability to recognize, decode, and display the
Stateful Operations data.</t>

</section>
<section anchor="terminology" title="Terminology">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and
“OPTIONAL” in this document are to be interpreted as described in
“Key words for use in RFCs to Indicate Requirement Levels” <xref target="RFC2119"/>.</t>

<t>“DSO” is used to mean DNS Stateful Operation.</t>

<t>The term “connection” means a bidirectional byte stream of reliable,
in-order messages, such as provided by using
DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> or DNS over TLS <xref target="RFC7858"/>.</t>

<t>The unqualified term “session” in the context of this document means the exchange of
DNS messages over a connection where:</t>

<t><list style="symbols">
  <t>The connection between client and server is persistent and relatively
long-lived (i.e., minutes or hours, rather than seconds).</t>
  <t>Either end of the connection may initiate messages to the other.</t>
</list></t>

<t>A “DSO session” is established between two endpoints that
acknowledge persistent DNS state via the exchange of DSO messages
over the connection. This is distinct from, for example a DNS-over-TCP session
as described in RC7766.</t>

<t>A “DSO session” is terminated when the underlying connection is closed.</t>

<t>The term “server” means the software with a listening socket, awaiting
incoming connection requests.</t>

<t>The term “client” means the software which initiates a connection
to the server’s listening socket.</t>

<t>The terms “initiator” and “responder” correspond respectively to the
initial sender and subsequent receiver of a DSO request message,
regardless of which was the “client” and “server” in the usual DNS sense.</t>

<t>The term “sender” may apply to either an initiator
(when sending a DNS Stateful Operation request message)
or a responder (when sending a DNS Stateful Operation response message).</t>

<t>Likewise, the term “receiver” may apply to either a responder
(when receiving a DNS Stateful Operation request message)
or an initiator (when receiving a DNS Stateful Operation response message).</t>

<t>DNS Stateful Operations are expressed using type-length-value (TLV) syntax.</t>

<t>Two timers (elapsed time since an event) are defined in this document:</t>

<t><list style="symbols">
  <t>an inactivity timer (see <xref target="keepalive"/> and <xref target="inactivetimer"/>)</t>
  <t>a keepalive timer (see <xref target="keepalive"/> and <xref target="keepalivetimer"/>)</t>
</list></t>

<t>The timeouts associated with these timers are called the inactivity timeout and 
the keepalive interval respectively. 
The term “Session Timeouts” is used to refer to this pair of timeout values.</t>

<t>Reseting a timer means resetting the timer value to zero and starting the timer 
again. Clearing a timer means resetting the timer value to zero but NOT starting 
the time again.</t>

</section>
<section anchor="discussion" title="Discussion">

<t>There are several use cases for DNS Stateful operations that can 
be described here.</t>

<t>Firstly, establishing session parameters such as server defined timeouts is of 
great use in the 
general management of persistent connections. For example, using DSO sessions 
for stub to recursive DNS-over-TLS <xref target="RFC7858"/> is more flexible for both the 
client and the server than attempting to manage sessions using just the EDNS(0)
TCP Keepalive option
<xref target="RFC7828"/>. The simple set of TLVs defined in this document is
sufficient to greatly enhance connection management for this use case.</t>

<t>Secondly, DNS-SD <xref target="RFC6763"/> has evolved into a naturally session based mechanism where,
for example, long-lived subscriptions lend themselves to ‘push’ mechanisms as 
opposed to polling. Long-lived stateful connections and server initiated 
messages align with this use case <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>A general use case is that DNS traffic is often bursty but session establishment 
can be expensive. One challenge with long-lived connections is to maintain 
sufficient traffic to maintain NAT and firewall state.
To mitigate this issue this document introduces a
new concept for the DNS, that is DSO “Keepalive traffic”.
This traffic carries no DNS data and is not considered ‘activity’
in the classic DNS sense, but serves to maintain state in middle boxes,
and to assure client and server that they still have connectivity to each other.</t>

<t>There are a myriad of other potential use cases for DSO given the versatility 
and extensibility of this specification.</t>

<t><xref target="details"/> of this document describes the protocol details of DNS Stateful
Operations including definitions of three TLVs for session management and 
encryption padding. <xref target="lifecycle"/> presents a
detailed discussion of the DSO Session lifecycle including an
in-depth discussion of keepalive traffic and session termination.</t>

</section>
<section anchor="details" title="Protocol Details">

<section anchor="establishment" title="DSO Session Establishment">

<t>DSO messages MUST only be carried in protocols and in
environments where a session may be established according to the definition above.
Standard DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/>, and DNS over TLS <xref target="RFC7858"/>
are suitable protocols.</t>

<t>DNS over plain UDP <xref target="RFC0768"/> is not appropriate since it fails on the requirement for
in-order message delivery, and, in the presence of NAT gateways and firewalls
with short UDP timeouts, it fails to provide a persistent bi-directional
communication channel unless an excessive amount of keepalive traffic is used.</t>

<t>DSO messages relate only to the specific “DSO session” in which
they are being carried. A “DSO session” is established over a connection when
either side of the connection sends the first DSO
TLV and it is acknowledged by the other side. The DSO message format <xref target="dsodata"/> 
includes an option to specify that a DSO request does not require a 
response acknowledgement. Session establishment can only be performed using a 
DSO message that requires a response acknowledgement.</t>

<t>While this 
specification defines an initial set of three TLVs, additional TLVs may be 
defined in additional specifications. All three of the TLVs defined here are 
mandatory to implement.</t>

<t>A client MAY attempt to initiate DSO messages at any time
on a connection; receiving a NOTIMP response in reply indicates that the
server does not implement DSO, and the client SHOULD NOT
issue further DSO messages on that connection.</t>

<t>A server SHOULD NOT initiate DSO messages until a
client-initiated DSO message is received first,
unless in an environment where it is known in advance by other
means that the client supports DSO.
This requirement is to ensure that the clients that do not support
DSO do not receive unsolicited inbound DSO
messages that they would not know how to handle.</t>

<t>On a session between a client and server that support DSO,
once the client has sent at least one DSO message (or it is
known in advance by other means that the client supports DSO)
either end may unilaterally send DSO messages at any time,
and therefore either client or server may be the initiator of a message.</t>

<t>From this point on it is considered that a “DSO session” is in progress.
Clients and servers should behave as described in this specification with
regard to inactivity timeouts and connection close, not as prescribed in
the previous specification for DNS over TCP <xref target="RFC7766"/>.</t>

<section anchor="middle-box-considerations" title="Middle-box Considerations">

<t>Where an application-layer middle box (e.g., a DNS proxy, forwarder, or
session multiplexer) is in the path the middle box MUST NOT blindly
forward DSO messages in either direction, and MUST treat the inbound
and outbound connections as separate sessions.  This does not preclude
the use of DSO messages in the presence of an IP-layer middle box such
as a NAT that rewrites IP-layer and/or transport-layer headers, but
otherwise preserves the effect of a single session between the client
and the server.</t>

<t>To illustrate the above, consider a network where a middle box
terminates one or more TCP connections from clients and multiplexes the
queries therein over a single TCP connection to an upstream server.  The
DSO messages and any associated state are specific to the individual
TCP connections.  A DSO-aware middle box MAY in some circumstances be
able to retain associated state and pass it between the client and
server (or vice versa) but this would be highly TLV-specific.  For
example, the middle box may be able to maintain a list of which clients
have made Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/> and
make its own subscription(s) on their behalf, relaying any subsequent
notifications to the client (or clients) that have subscribed to that
particular notification.</t>

</section>
</section>
<section anchor="format" title="Message Format">

<t>A DSO message begins with
the standard twelve-octet DNS message header <xref target="RFC1035"/>
with the OPCODE field set to the DSO OPCODE (tentatively 6).
However, unlike standard DNS messages, the question section, answer section,
authority records section and additional records sections are not present.
The corresponding count fields (QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) MUST be
set to zero on transmission.</t>

<t>If a DSO message is received where any of the count fields are
not zero, then a FORMERR MUST be returned,
unless a future document specifies otherwise.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                          MESSAGE ID                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |QR |    OPCODE     |            Z              |     RCODE     |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     QDCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ANCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     NSCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ARCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                           DSO Data                            /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<section anchor="header" title="Header">

<t>In a request the MESSAGE ID field MUST be set to a unique value, that the
initiator is not currently using for any other active operation on this 
connection.
For the purposes here, a MESSAGE ID is in use in this DSO session if the
initiator has used it in a request for which it has not yet received a
response, or if the client has used it to setup state that it has not yet
deleted. For example, state could be a subscription <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>In a response the MESSAGE ID field MUST contain a copy of the value of the
MESSAGE ID field in the request being responded to.</t>

<t>In a request the DNS Header QR bit MUST be zero (QR=0).
If the QR bit is not zero the message is not a request.</t>

<t>In a response the DNS Header QR bit MUST be one (QR=1).
If the QR bit is not one the message is not a response.</t>

<t>The DNS Header OPCODE field holds the DSO OPCODE value (tentatively 6).</t>

<t>The Z bits are currently unused in DSO messages,
and in both DSO requests and DSO responses the
Z bits MUST be set to zero (0) on transmission and MUST be silently ignored
on reception, unless a future document specifies otherwise.</t>

<t>In a request message (QR=0) the RCODE is generally set to zero on transmission,
and silently ignored on reception, except where specified otherwise
(for example, the Retry Delay operation (see <xref target="delay"/>), where the RCODE indicates the reason
for termination).</t>

<t>The RCODE value in a response may be one of the following values:</t>

<texttable>
      <ttcol align='right'>Code</ttcol>
      <ttcol align='left'>Mnemonic</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>0</c>
      <c>NOERROR</c>
      <c>Operation processed successfully</c>
      <c>1</c>
      <c>FORMERR</c>
      <c>Format error</c>
      <c>2</c>
      <c>SERVFAIL</c>
      <c>Server failed to process request due to a problem with the server</c>
      <c>3</c>
      <c>NXDOMAIN</c>
      <c>Name Error — Named entity does not exist (TLV-dependent)</c>
      <c>4</c>
      <c>NOTIMP</c>
      <c>DSO not supported</c>
      <c>5</c>
      <c>REFUSED</c>
      <c>Operation declined for policy reasons</c>
      <c>9</c>
      <c>NOTAUTH</c>
      <c>Not Authoritative (TLV dependent)</c>
      <c>11</c>
      <c>DSONOTIMP</c>
      <c>DSO type code not supported</c>
</texttable>

<t>Use of the above RCODEs is likely to be common in DSO but 
does not preclude the definition and use of other codes in future documents that 
make use of DSO.</t>

<t>If a document describing a DSO makes use of either NXDOMAIN (Name Error)
or NOTAUTH then that document MUST explain the meaning.</t>

</section>
<section anchor="dsodata" title="DSO Data">

<t>The standard twelve-octet DNS message header is followed by the DSO Data.</t>

<t>The first TLV in a DSO request message is called the Operation 
TLV. Any subsequent TLVs after this initial Operation TLV are called Modifier TLVs.</t>

<t>Depending on the operation a DSO response can contain:</t>

<t><list style="symbols">
  <t>No TLVs</t>
  <t>Only an Operation TLV</t>
  <t>An Operation TLV followed by one or more Modifier TLVs</t>
  <t>Only Modifier TLVs</t>
</list></t>

<section anchor="tlv-format" title="TLV Format">

<t>Operation and modifier TLVs both use the same encoding format.</t>

<t>Operation TLVs SHOULD normally require a response and, therefore, set the TLV
Acknowledgement bit in a request. However, for some Operation TLVs, this may be
undesirable and the TLV Acknowledgement bit MAY be cleared in the request. Each
Operation TLV definition should stipulate whether an acknowledgement is
REQUIRED. If the TLV Acknowledgement bit is cleared in a request, a response
MUST NOT be sent. Modifier TLVs MUST NEVER set the Acknowledgement bit. The
Acknowledgement bit is NEVER set in the response to an Operation TLV.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   | A |                        DSO-TYPE                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                        DSO DATA LENGTH                        |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                      TYPE-DEPENDENT DATA                      /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='A:'>
  A 1-bit TLV Response flag indicating whether or not an Operation TLV requires
a response Acknowledgement.</t>
  <t hangText='DSO-TYPE:'>
  A 15-bit field in network order giving the type of the current DSO TLV per
the IANA DSO Type Codes Registry.</t>
  <t hangText='DSO DATA LENGTH:'>
  A 16-bit field in network order giving the size in octets of
the TYPE-DEPENDENT DATA.</t>
  <t hangText='TYPE-DEPENDENT DATA:'>
  Type-code specific format.</t>
</list></t>

<t>Where domain names appear within TYPE-DEPENDENT DATA, they MAY be compressed 
using standard DNS name compression. However, the compression MUST NOT point
outside of the TYPE-DEPENDENT DATA section and offsets MUST be from the start
of the TYPE-DEPENDENT DATA.</t>

</section>
<section anchor="operation-tlvs" title="Operation TLVs">

<t>An “Operation TLV” specifies the operation to be performed.</t>

<t>A DSO message MUST contain at most one Operation TLV.</t>

<t>In all cases a DSO request message MUST contain exactly one 
Operation TLV, indicating the operation to be performed.</t>

<t>Depending on the operation, a DSO response message MAY contain no 
Operation TLV, because it is simply a response to a previous request message,
and the MESSAGE ID in the header is sufficient to identify the request in 
question. Or it may contain a single corresponding response Operation TLV, with 
the same DSO-TYPE as in the request message. The specification for each DSO
type determines whether a response for that operation type 
is required to carry the Operation TLV.</t>

<t>If a DSO response is received for an operation which requires
that the response carry an Operation TLV, and the required Operation TLV is not
the first DSO TLV in the response message, then this is a fatal 
error and the recipient of the defective response message MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
<section anchor="modifier-tlvs" title="Modifier TLVs">

<t>A “Modifier TLV” specifies additional parameters
relating to the operation. Immediately following the Operation TLV, if present,
a DSO message MAY contain one or more Modifier TLVs.</t>

</section>
<section anchor="unrecognized-tlvs" title="Unrecognized TLVs">

<t>If a DSO request is received containing an unrecognized
Operation TLV, the receiver MUST send a response with matching
MESSAGE ID, and RCODE DSONOTIMP (tentatively 11). The response MUST NOT contain 
an Operation TLV.</t>

<t>If a DSO message (request or response) is received
containing one or more unrecognized Modifier TLVs, the unrecognized
Modifier TLVs MUST be silently ignored, and the remainder of the message
is interpreted and handled as if the unrecognized parts were not present.</t>

</section>
</section>
<section anchor="edns0-and-tsig" title="EDNS(0) and TSIG">

<t>Since the ARCOUNT field MUST be zero, a DSO message
MUST NOT contain an EDNS(0) option in the additional records section.
If functionality provided by current or future EDNS(0) options is desired
for DSO messages, an Operation TLV or
Modifier TLV needs to be defined to carry the necessary information.</t>

<t>For example, the EDNS(0) Padding Option <xref target="RFC7830"/> used for security purposes
is not permitted in a DSO message,
so if message padding is desired for DSO messages
then the Encryption Padding TLV described in <xref target="padding"/> MUST be used.</t>

<t>Similarly, a DSO message MUST NOT contain a TSIG record.
A TSIG record in a conventional DNS message is added as the last record
in the additional records section, and carries a signature computed over
the preceding message content. Since DSO data appears
after the additional records section, it would not be included in the
signature calculation. 
If use of signatures with DSO messages becomes necessary in the 
future, an explicit Modifier TLV needs to be defined to 
perform this function.</t>

<t>Note however that, while DSO <spanx style="emph">messages</spanx> cannot include
EDNS(0) or TSIG records, a DSO <spanx style="emph">session</spanx> is typically used to 
carry a whole series of DNS messages of different kinds, including DSO
messages, and other DNS message types like Query <xref target="RFC1034"/> 
<xref target="RFC1035"/> and Update <xref target="RFC2136"/>, and those messages can carry EDNS(0) and 
TSIG records.</t>

<t>This specification explicitly prohibits use of the
EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>
in <spanx style="emph">any</spanx> messages sent on a DSO session (because it duplicates
the functionality provided by the DSO Keepalive operation),
but messages may contain other EDNS(0) options as appropriate.</t>

</section>
</section>
<section anchor="message-handling" title="Message Handling">

<t>The initiator MUST set the value of the QR bit in the DNS header to
zero (0), and the responder MUST set it to one (1).
Every DSO request message (QR=0) with the Acknowledgement bit set in the
operation TLV MUST elicit a response (QR=1), which MUST have the same
MESSAGE ID in the DNS message header as in the corresponding request.
DSO request messages sent by the client with the Acknowledgement
bit set in the operation TLV elicit a response from the server, and
DSO request messages sent by the server with the Acknowledgement
bit set in the operation TLV elicit a response from the client.</t>

<t>With most TCP implementations, the TCP data acknowledgement (generated because 
data has been received by TCP), the TCP window update (generated because TCP has 
delivered that data to the receiving software) and the DSO 
response (generated by the receiving software itself)
are all combined into a single packet, so in practice the requirement that every
DSO request message MUST elicit a 
DSO response incurs minimal extra cost on the network.
Requiring that every request elicit a corresponding response also avoids
performance problems caused by interaction between
Nagle’s Algorithm and Delayed Ack <xref target="NagleDA"/>.</t>

<t>The namespaces of 16-bit MESSAGE IDs are disjoint in each direction.
For example, it is <spanx style="emph">not</spanx> an error for both client and server to send a request
message with the same ID. In effect, the 16-bit MESSAGE ID combined with the 
identity of the initiator (client or server) serves as a 17-bit unique 
identifier for a particular operation on a DSO session.</t>

<t>As described in <xref target="header"/> An initiator MUST NOT reuse a MESSAGE ID that is 
already in use for an 
outstanding request, unless specified otherwise by the relevant specification 
for the DSO in question. At the very least, this means 
that a MESSAGE ID MUST NOT be reused in a particular direction
on a particular DSO session while the initiator is waiting for a response to a 
previous request using that MESSAGE ID on that DSO session,
unless specified otherwise by the relevant 
specification for the DSO in question.
(For a long-lived state the MESSAGE ID for the operation
MUST NOT be reused whilst that state remains active.)</t>

<t>If a client or server receives a response (QR=1) where the MESSAGE ID does not
match any of its outstanding operations, this is a fatal error and it MUST 
immediately terminate the connection with a TCP RST (or equivalent for other 
protocols).</t>

</section>
</section>
<section anchor="keepalive" title="Keepalive Operation TLV">

<t>The Keepalive Operation TLV (DSO-TYPE=1) performs two functions: to reset the
keepalive timer for the DSO session and to establish the values for the Session Timeouts.</t>

<t>The Keepalive Operation TLV resets only the keepalive timer, not the inactivity timer.
The reason for this is that periodic Keepalive Operation TLVs are sent for the
sole purpose of keeping a DSO session alive, because that DSO session has current
or recent non-maintenance activity that warrants keeping the DSO session alive.
If sending keepalive traffic itself were to reset the inactivity timer, then 
that would create a circular livelock where keepalive traffic would be sent 
indefinitely to keep a DSO session alive, where the only activity on that DSO 
session would be the keepalive traffic keeping the DSO session alive so that further 
keepalive traffic can be sent.</t>

<t>Sending keepalive traffic is considered a maintenance activity
that is performed in service of other client activities.
Sending keepalive traffic itself is not considered a client activity.
For a DSO session to be considered active, it must be carrying something more than just keepalive traffic.
This is why merely sending a Keepalive Operation TLV does not reset the inactivity timer.</t>

<t>When sent by a client, the Keepalive Operation TLV MUST have the Acknowledgement bit set.
It resets a DSO session’s keepalive timer, and at the same time requests what the
Session Timeout values should be from this point forward in the DSO session.
If a server receives a Keepalive Operation TLV without the Acknowledgement bit set
then this is a fatal error and the server MUST immediately terminate
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>Once a DSO session is in progress (see <xref target="details"/>) the Keepalive TLV also MAY be initiated by a server.
When sent by a server, the Keepalive Operation TLV MUST NOT have the Acknowledgement bit set.
It resets a DSO session’s keepalive timer, and unilaterally informs the client of
the new Session Timeout values to use from this point forward in this DSO session.
No client response to this unilateral declaration is required.
If a client receives a Keepalive Operation TLV with the Acknowledgement bit set
then this is a fatal error and the client MUST immediately terminate
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>It is not required that the Keepalive TLV be used in every DSO session.
While many DNS Stateful operations
will be used in conjunction with a long-lived session state,
not all DNS Stateful operations require long-lived session state,
and in some cases the default 15-second value for both the inactivity timeout
and keepalive interval may be perfectly appropriate. However, it can be noted 
that for clients that implement only the TLVs defined in this document it is
the only way for a client to initiate a DSO session.</t>

<t>The TYPE-DEPENDENT DATA for the the Keepalive TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 INACTIVITY TIMEOUT (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 KEEPALIVE INTERVAL (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='INACTIVITY TIMEOUT:'>
  the inactivity timeout for the current DSO session, specified as a
32-bit word in network (big endian) order in units of milliseconds.
This is the timeout at which the client MUST close an inactive DSO session.
If the client does not gracefully close an inactive DSO session,
then after twice this interval the server will forcibly terminate
the connection with a TCP RST (or equivalent for other protocols).</t>
  <t hangText='KEEPALIVE INTERVAL:'>
  the keepalive interval for the current DSO session, specified as a
32-bit word in network (big endian) order in units of milliseconds.
This is the interval at which a client MUST generate keepalive
traffic to maintain connection state.
If the client does not generate the necessary keepalive traffic,
then after twice this interval the server will forcibly terminate
the connection with a TCP RST (or equivalent for other protocols).</t>
</list></t>

<t>In a client-initiated DSO Keepalive message,
the Session Timeouts contain the client’s requested values.
In a server response to a client-initiated message, the Session Timeouts contain 
the server’s chosen values, which the client MUST respect.
This is modeled after the DHCP protocol, where the client
requests a certain lease lifetime using DHCP option 51 <xref target="RFC2132"/>,
but the server is the ultimate authority
for deciding what lease lifetime is actually granted.</t>

<t>In a server-initiated DSO Keepalive message, the Session Timeouts
unilaterally inform the client of the new values from this point
forward in this DSO session. The client MUST NOT generate a
response to the server-initiated DSO Keepalive message.</t>

<t>When a client is sending its second and subsequent Keepalive DSO 
requests to the server, the client SHOULD continue to request its preferred 
values each time. This allows flexibility, so that if conditions change during 
the lifetime of a DSO session, the server can adapt its responses to better fit 
the client’s needs.</t>

<section anchor="client-handling-of-received-session-timeout-values" title="Client handling of received Session Timeout values">

<t>When a client receives a response to its client-initiated DSO Keepalive message,
or receives a server-initiated DSO Keepalive message, the client has then 
received Session Timeout values dictated by the server. The two timeout values 
contained in the DSO Keepalive TLV from the server may each be higher, lower, or 
the same as the respective Session Timeout values the client previously had for 
this DSO session.</t>

<t>In the case of the keepalive timer, the handling of the received value is 
straightforward. The act of receiving the message containing the DSO Keepalive 
TLV itself resets the keepalive timer and updates the keepalive interval for the 
DSO session. The new keepalive interval indicates the 
maximum time that may elapse before another message must be sent
or received on this DSO session, if the DSO session is to remain alive.</t>

<t>In the case of the inactivity timeout, the handling of the received value 
is a little more subtle, though the meaning of the inactivity 
timeout is unchanged – it still indicates the maximum permissible time allowed 
without activity on a DSO session.
The act of receiving the message containing the DSO Keepalive TLV does not
itself reset the inactivity timer. The time elapsed since the last useful
activity on this DSO session is unaffected by exchange of DSO Keepalive messages.
The act of receiving the message containing the DSO Keepalive TLV does update 
the timeout associated with the running inactivity timer; that
becomes the new maximum permissible time without activity on a DSO session.</t>

<t><list style="symbols">
  <t>If the current inactivity timer value is not greater than the new inactivity timeout, 
then the DSO session may remain open for now. When the inactivity timer value 
exceeds the new inactivity timeout, the client MUST then close the DSO session,
as described above.</t>
  <t>If the current inactivity timer value is already greater than the new inactivity 
timeout, then this DSO session has already been inactive
for longer than the server permits, and the client MUST immediately close this DSO session.</t>
  <t>If the current inactivity timer value is more than twice the new inactivity timeout, 
then this DSO session is eligible to be
forcibly terminated by the server and and the client MUST immediately close this 
DSO session. However if a server abruptly reduces the
inactivity timeout in this way the server SHOULD give the client a grace period
of one quarter of the new inactivity timeout, to give the client time to close
the connection gracefully before the server resorts to terminating it forcibly.</t>
</list></t>

</section>
<section anchor="relation-to-edns0-tcp-keepalive-option" title="Relation to EDNS(0) TCP Keepalive Option">

<t>The inactivity timeout value in the Keepalive TLV (DSO-TYPE=1) has similar
intent to the EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>.
A client/server pair that supports DSO MUST NOT use the
EDNS(0) TCP KeepAlive option within any message after a DSO 
session has been established.
Once a DSO session has been established, if either
client or server receives a DNS message over the DSO session that contains an
EDNS(0) TCP Keepalive option, this is an error and the receiver of the
EDNS(0) TCP Keepalive option MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="delay" title="Retry Delay TLV">

<t>The Retry Delay TLV (DSO-TYPE=0) can be used as an Operation TLV or as
a Modifier TLV.</t>

<t>The TYPE-DEPENDENT DATA for the the Retry Delay TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     RETRY DELAY (32 bits)                     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='RETRY DELAY:'>
  a time value, specified as a 32-bit word in network order in units of 
milliseconds, within which the client MUST NOT retry this operation, or retry 
connecting to this server.</t>
</list></t>

<t>The RECOMMENDED value is 10 seconds.</t>

<section anchor="use-as-an-operation-tlv" title="Use as an Operation TLV">

<t>When sent in a DSO request message, from server to client, the 
Retry Delay TLV (0) is considered an Operation TLV. It is used by a server 
to request that a client close the DSO session and underlying connection, and 
not to reconnect for the indicated time interval.</t>

<t>In this case it applies to the DSO session as a whole, and the client MUST close the 
DSO session, as described in section <xref target="retry"/>. The RCODE in the message header 
MUST indicate the reason for the termination:</t>

<t><list style="symbols">
  <t>NOERROR indicates a routine shutdown.</t>
  <t>SERVFAIL indicates that the server is overloaded due to resource exhaustion.</t>
  <t>REFUSED indicates that the server has been reconfigured and is no longer able 
to perform one or more of the functions 
currently being performed on this DSO session (for example, a DNS Push Notification 
server could be reconfigured such that is is no longer accepting DNS Push 
Notification requests for one or more of the currently subscribed names).</t>
</list></t>

<t>This document specifies only these three RCODE values for Retry Delay request.
Servers sending Retry Delay requests SHOULD use one of these three values.
However, future circumstances may create situations where other RCODE values
are appropriate in Retry Delay requests, so clients MUST be prepared
to accept Retry Delay requests with any RCODE value.</t>

<t>An acknowledgement is not desired for a Retry Delay Operation TLV and the TLV
Acknowledgement bit MUST be cleared in the request.</t>

</section>
<section anchor="use-as-a-modifier-tlv" title="Use as a Modifier TLV">

<t>When appended to a DSO response message for some client request,
the Retry Delay TLV (0) is considered a Modifier TLV.
The indicated time interval during which the client SHOULD NOT retry
applies only to the failed operation, not to the DSO session as a whole.</t>

<t>In the case of a client request that returns a nonzero RCODE value, the server 
MAY append a Retry Delay TLV (0) to the response, indicating the time interval
during which the client SHOULD NOT attempt this operation again.</t>

</section>
</section>
<section anchor="padding" title="Encryption Padding TLV">

<t>The Encryption Padding TLV (DSO-TYPE=2) can only be used as a Modifier TLV.
It is only applicable when the DSO Transport layer uses encryption
such as TLS.</t>

<t>The TYPE-DEPENDENT DATA for the the Padding TLV is optional and is a
variable length field containing non-specified values. A DATA LENGTH
of 0 essentially provides for 4 octets of padding (the minimum amount).</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   /                                                               /
   /                   VARIABLE NUMBER OF OCTETS                   /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t>As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
the PADDING octets SHOULD be set to 0x00.  Other values MAY be used,
for example, in cases where there is a concern that the padded
message could be subject to compression before encryption.
PADDING octets of any value MUST be accepted in the messages received.</t>

<t>The Encryption Padding TLV may be included in either a DSO request, response, or both.
As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
if a request is received with a Encryption Padding TLV,
then the response MUST also include an Encryption Padding TLV.</t>

<t>The length of padding is intentionally not specified in this document and
is a function of current best practices with respect to the type and length
of data in the preceding TLVs <xref target="I-D.ietf-dprive-padding-policy"/>.</t>

</section>
<section anchor="lifecycle" title="DSO Session Lifecycle and Timers">

<section anchor="dso-session-initiation" title="DSO Session Initiation">

<t>A session begins when a client makes a new connection to a server.</t>

<t>A DSO session begin as described in <xref target="establishment"/>.</t>

<t>The client may perform as many DNS operations as it wishes using the
newly created DSO session. Operations SHOULD be pipelined (i.e., the
client doesn’t need wait for a response before sending the next message).
The server MUST act on messages in the order they are transmitted, but
responses to those messages MAY be sent out of order, if appropriate.</t>

</section>
<section anchor="sessiontimeouts" title="DSO Session Timeouts">

<t>Two timeout values are associated with a DSO session: the inactivity timeout, and 
the keepalive interval.</t>

<t>The first timeout value, the inactivity timeout, is the maximum time for which
a client may speculatively keep a DSO session open in the expectation that
it may have future requests to send to that server.</t>

<t>The second timeout value, the keepalive interval, is the maximum permitted
interval between client messages to the server if the client wishes to keep
the DSO session alive.</t>

<t>The two timeout values are independent. The inactivity timeout may be lower, the 
same, or higher than the keepalive interval, though in most cases the inactivity 
timeout is expected to be shorter than the keepalive interval.</t>

<t>Only when the client has a very long-lived low-traffic state does the 
keepalive interval come into play, to ensure that a sufficient residual
amount of traffic is generated to maintain NAT and firewall state
and to assure client and server that they still have connectivity to each other.</t>

<t>On a new DSO session, if no explicit DSO Keepalive message exchange has taken 
place, the default value for both timeouts is 15 seconds.
For both timeouts, lower values of the timeout result in higher network traffic
and higher CPU load on the server.</t>

</section>
<section anchor="inactivetimer" title="Inactive DSO Sessions">

<t>At both servers and clients, the generation or reception of any complete
DNS message, including DNS requests, responses, updates, or DSO
messages, resets both timers for that DSO session, with the exception
that a DSO Keepalive message resets only the keepalive timer, not the inactivity 
timeout timer.</t>

<t>In addition, for as long as the client has an outstanding operation in progress,
the inactivity timer remains cleared, and an inactivity 
timeout cannot occur.</t>

<t>For short-lived DNS operations like traditional queries and updates,
an operation is considered in progress for the time between request and 
response, typically a period of a few hundred milliseconds at most.
At the client, the inactivity timer is cleared upon transmission of a 
request and remains cleared until reception of the corresponding response.
At the server, the inactivity timer is cleared upon reception of a request
and remains cleared until transmission of the corresponding response.</t>

<t>For long-lived DNS Stateful operations, an operation is considered in progress
for as long as the state is active, until it is cancelled.
This means that a DSO session can exist, with a state 
active, with no messages flowing in either direction, for far longer than the 
inactivity timeout, and this is not an error. This is why there are two separate 
timers: the inactivity timeout, and the keepalive interval. Just because a DSO 
session has no traffic for an extended period of time
does not automatically make that DSO session “inactive”,
if it has an active state that is awaiting events.</t>

</section>
<section anchor="the-inactivity-timeout" title="The Inactivity Timeout">

<t>The purpose of the inactivity timeout is for the server to balance its trade off 
between the costs of setting up new DSO sessions and the costs of maintaining inactive 
DSO sessions. A server with abundant DSO session capacity can offer a high inactivity timeout, 
to permit clients to keep a speculative DSO session open for a long time, to save 
the cost of establishing a new DSO session for future communications with that 
server. A server with scarce memory resources can offer a low inactivity timeout,
to cause clients to promptly close DSO sessions whenever they have no outstanding
operations with that server, and then create a new DSO session later when needed.</t>

<section anchor="closing-inactive-dso-sessions" title="Closing Inactive DSO Sessions">

<t>A client is NOT required to wait until the inactivity timeout expires
before closing a DSO session.
A client MAY close a DSO session at any time, at the client’s discretion.
If a client determines that it has no current or reasonably anticipated
future need for an inactive DSO session, then the client SHOULD close that connection.</t>

<t>If, at any time during the life of the DSO session,
the inactivity timeout value (i.e., 15 seconds by default) elapses
without there being any operation active on the DSO session,
the client MUST gracefully close the connection with a
TLS close_notify followed by a TCP FIN (or equivalent for other protocols).</t>

<t>If, at any time during the life of the DSO session, twice the inactivity timeout value
(i.e., 30 seconds by default) elapses without there being any operation
active on the DSO session, the server SHOULD consider the client delinquent,
and forcibly abort the DSO session.
For DSO sessions over TCP (or over TLS over TCP),
to avoid the burden of having a connection in TIME-WAIT state, instead of
closing the connection gracefully the server SHOULD abort
the connection with a TCP RST (or equivalent for other protocols).
(In the BSD Sockets API this is achieved by setting the
SO_LINGER option to zero before closing the socket.)</t>

<t>In this context, an operation being active on a DSO session includes
a query waiting for a response, an update waiting for a response,
or active state,
but not a DSO Keepalive message exchange itself.
A DSO Keepalive message exchange resets only the keepalive
interval timer, not the inactivity timeout timer.</t>

<t>If the client wishes to keep an inactive DSO session open for longer than
the default duration without having to send traffic every 15 seconds,
then it uses the DSO Keepalive message to request
longer timeout values, as described in <xref target="keepalive"/>.</t>

</section>
<section anchor="values-for-the-inactivity-timeout" title="Values for the Inactivity Timeout">

<t>For the inactivity timeout value, lower values result in more frequent DSO session 
teardown and re-establishment. Higher values result in lower traffic and CPU
load on the server, but a larger memory burden to maintain state for inactive 
DSO sessions.</t>

<t>A shorter inactivity timeout with a longer keepalive interval signals to the client 
that it should not speculatively keep inactive DSO sessions open for very long without
reason, but when it does have an active reason to keep a DSO session open, it 
doesn’t need to be sending an aggressive level of keepalive traffic.</t>

<t>A longer inactivity timeout with a shorter keepalive interval signals to the client
that it may speculatively keep inactive DSO sessions open for a long time, but it
should be sending a lot of keepalive traffic on those inactive DSO sessions.
This configuration is expected to be less common.</t>

<t>To avoid repeated teardown and re-establishment of sessions,
the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with an inactivity timeout value less than ten seconds.
If a client receives a Keepalive message specifying an inactivity timeout value
less than ten seconds this is an error and the client MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

<t>This does not mean that a client is forced to keep an idle connection open for
ten seconds if it doesn’t need that — a client is free to close an idle connection whenever it chooses —
it means that servers cannot <spanx style="emph">require</spanx> a client to close an idle connection in under ten seconds.</t>

<t>[Do we really want this restriction? How soon does the client reconnect after tearing down the connection? –SC]</t>

</section>
</section>
<section anchor="keepalivetimer" title="The Keepalive Interval">

<t>The purpose of the keepalive interval is to manage the generation of
sufficient messages to maintain state in middle boxes (such at NAT gateways
or firewalls) and for the client and server to periodically verify that they
still have connectivity to each other. This allows them to clean up state
when connectivity is lost, and attempt re-connection if appropriate.</t>

<section anchor="keepalive-interval-expiry" title="Keepalive Interval Expiry">

<t>If, at any time during the life of the DSO session,
the keepalive interval value (i.e., 15 seconds by default) elapses
without any DNS messages being sent or received on a DSO session,
the client MUST take action to keep the DSO session alive,
by sending a DSO Keepalive message (see <xref target="keepalive"/>).
A DSO Keepalive message exchange resets only the keepalive timer, 
not the inactivity timer.</t>

<t>If a client disconnects from the network abruptly,
without cleanly closing its DSO session,
leaving long-lived state uncanceled,
the server learns of this after failing to
receive the required keepalive traffic from that client.
If, at any time during the life of the DSO session,
twice the keepalive interval value (i.e., 30 seconds by default) elapses
without any DNS messages being sent or received on a DSO session,
the server SHOULD consider the client delinquent,
and forcibly abort the connection with a TCP RST (or equivalent for other 
protocols).</t>

</section>
<section anchor="values-for-the-keepalive-interval" title="Values for the Keepalive Interval">

<t>For the keepalive interval value, lower values result in higher volume keepalive 
traffic. Higher values of the keepalive interval reduce traffic and CPU load, 
but have minimal effect on the memory burden
at the server, because clients keep a DSO session open for the same length of time
(determined by the inactivity timeout) regardless of the level of keepalive traffic 
required.</t>

<t>It may be appropriate for clients and servers to select different keepalive 
interval values depending on the nature of the network they are on.</t>

<t>A corporate DNS server that knows it is serving only clients on the internal 
network, with no intervening NAT gateways or firewalls, can impose a higher 
keepalive interval, because frequent keepalive traffic is not required.</t>

<t>A public DNS server that is serving primarily residential consumer clients, 
where it is likely there will be a NAT gateway on the path, may impose a lower 
keepalive interval, to generate more frequent keepalive traffic.</t>

<t>A smart client may be adaptive to its environment. A client using
a private IPv4 address <xref target="RFC1918"/> to communicate with a DNS server
at an address outside that IPv4 private address block,
may conclude that there is likely to be a NAT gateway on the path,
and accordingly request a lower keepalive interval.</t>

<t>For environments where there is a NAT gateway or firewalls on the path, it is
RECOMMENDED that clients request, and servers grant, a keepalive interval of 15
minutes. In other environments it is RECOMMENDED that clients request, and 
servers grant, a keepalive interval of 60 minutes.</t>

<t>Note that the lower the keepalive interval value, the higher the load on client
and server. For example, an keepalive interval value of 100ms would result in a
continuous stream of at least ten messages per second, in both directions,
to keep the DSO session alive. And, in this extreme example, a single packet loss and
retransmission over a long path could introduce a momentary pause in the stream of messages,
long enough to cause the server to overzealously abort the connection.</t>

<t>Because of this concern, the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with an keepalive interval value less than ten seconds.
If a client receives an Keepalive message specifying an keepalive interval value
less than ten seconds this is an error and the client MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="server-initiated-termination-on-error" title="Server-Initiated Termination on Error">

<t>After sending an error response to a client, the server MAY close the DSO session,
or may allow the DSO session to remain open. For error conditions
that only affect the single operation in question, the server SHOULD return an
error response to the client and leave the DSO session open for further operations.
For error conditions that are likely to make all operations unsuccessful in the
immediate future, the server SHOULD return an error response to the client and 
then close the DSO session by sending a Retry Delay request message, as described in 
<xref target="delay"/>.</t>

</section>
<section anchor="error" title="Client Behaviour in Receiving an Error">

<t>Upon receiving an error response from the server, a client SHOULD NOT
automatically close the DSO session. An error relating to one particular operation
on a DSO session does not necessarily imply that all other operations on that
DSO session have also failed, or that future operations will fail. The client
should assume that the server will make its own decision about whether or not to
close the DSO session, based on the server’s determination of whether the error
condition pertains to this particular operation, or would also apply to any
subsequent operations. If the server does not close the DSO session then the client
SHOULD continue to use that DSO session for subsequent operations.</t>

</section>
<section anchor="server-initiated-termination-on-overload" title="Server-Initiated Termination on Overload">

<t>Apart from the cases where:</t>

<t><list style="symbols">
  <t>Session Timeouts expire (see <xref target="sessiontimeouts"/>)</t>
  <t>On error (see <xref target="error"/>)</t>
  <t>When under load (see below)</t>
</list></t>

<t>a server MUST NOT close a DSO session with a client, except in extraordinary error 
conditions. Closing the DSO session is the
client’s responsibility, to be done at the client’s discretion, when it so 
chooses. A server only closes a DSO session under exceptional circumstances, such as
when the server application software or underlying operating system is
restarting, the server application terminated unexpectedly (perhaps due to a
bug that makes it crash), or the server is undergoing maintenance procedures.
When possible, a server SHOULD send a Retry Delay message informing the
client of the reason for the DSO session being closed, and allow the client
five seconds to receive it before the server resorts to forcibly aborting the 
connection.</t>

</section>
<section anchor="retry" title="Retry Delay Operation TLV">

<t>There may be rare cases where a server is overloaded and wishes to shed load.
If a server is low on resources it MAY simply terminate a client connection with 
a TCP RST (or equivalent for other protocols).
However, the likely behavior of the client may be simply to to treat this as a
network failure and connect
immediately, putting more burden on the server.</t>

<t>Therefore to avoid this reconnection implosion, a server SHOULD instead choose 
to shed client load by sending a Retry Delay request message, with an RCODE of 
SERVFAIL, to inform the client of the overload situation. After sending a Retry 
Delay request message, the server MUST NOT send any further messages on that 
DSO session.</t>

<t>After sending the Retry Delay request the server SHOULD allow the
client five seconds to close the connection, and if the client has not
closed the connection after five seconds then the server SHOULD abort
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>Upon receipt of a Retry Delay request from the server, the client MUST
make note of the reconnect delay for this server, and then immediately
close the connection. This is to place the burden of TCP’s TIME-WAIT state on 
the client.</t>

<t>A Retry Delay request message MUST NOT be initiated by a client.
If a server receives a Retry Delay request message this is an error
and the server MUST immediately terminate the connection with a TCP RST
(or equivalent for other protocols).</t>

<section anchor="outstanding-operations" title="Outstanding Operations">

<t>At the moment a server chooses to initiate a Retry Delay request message
there may be DNS requests already in flight from client to server on this 
DSO session, which will arrive at the server after its Retry Delay request message 
has been sent.
The server MUST silently ignore such incoming requests, and MUST NOT generate
any response messages for them. When the Retry Delay request message from the
server arrives at the client, the client will determine that any DNS requests
it previously sent on this DSO session, that have not yet received a response, now 
will certainly not be receiving any response. Such requests should be considered
failed, and should be retried at a later time, as appropriate.</t>

<t>In the case where some, but not all, of the existing operations on a DSO session 
have become invalid (perhaps because the server has been reconfigured and is no 
longer authoritative for some of the names),
but the server is terminating all DSO sessions en masse with a REFUSED (5) RCODE,
the RECONNECT DELAY MAY be zero, indicating that the clients SHOULD immediately
attempt to re-establish operations.
It is likely that some of the attempts will be successful and some will not.</t>

<t>In the case where a server is terminating a large number of DSO sessions at once
(e.g., if the system is restarting) and the server doesn’t want to be inundated 
with a flood of simultaneous retries, it SHOULD send different RECONNECT delay 
values to each client.
These adjustments MAY be selected randomly, pseudorandomly, or deterministically
(e.g., incrementing the time value by one tenth of a second for each successive
client, yielding a post-restart reconnection rate of ten clients per second).</t>

</section>
<section anchor="client-reconnection" title="Client Reconnection">

<t>After a DSO session is closed by the server, the client SHOULD try to reconnect,
to that server, or to another suitable server, if more than one is available.
If reconnecting to the same server, the client MUST respect the indicated delay
before attempting to reconnect.</t>

<t>If a particular server does not want a client to reconnect (it is being
de-commissioned), it SHOULD set the retry delay to the maximum value (which is
approximately 497 days). If the server will only be out of service for a maintenance
period, it should use a value closer to the expected maintenance window and
not default to a very large delay value or clients may not attempt to reconnect
after it resumes service.</t>

</section>
</section>
</section>
<section anchor="sharing" title="Connection Sharing">

<t>As previously specified for DNS over TCP <xref target="RFC7766"/>,
to mitigate the risk of unintentional server overload, DNS clients
MUST take care to minimize the number of concurrent TCP connections
made to any individual server.  It is RECOMMENDED that for any given
client/server interaction there SHOULD be no more than one connection
for regular queries, one for zone transfers, and one for each
protocol that is being used on top of TCP (for example, if the
resolver was using TLS).
However, it is noted that certain primary/secondary configurations
with many busy zones might need to use more than one TCP
connection for zone transfers for operational reasons
(for example, to support concurrent transfers of multiple zones).</t>

<t>A single server may support multiple services, including DNS Updates 
<xref target="RFC2136"/>, DNS Push Notifications <xref target="I-D.ietf-dnssd-push"/>,
and other services, for one or more DNS zones.
When a client discovers that the target server for several different operations
is the same target hostname and port, the client SHOULD use a single
shared DSO session for all those operations.
A client SHOULD NOT open multiple connections to the same target host and port
just because the names being operated on are different or
happen to fall within different zones.
This is to reduce unnecessary connection load on the DNS server.</t>

<t>However, server implementers and operators should be aware that connection
sharing may not be possible in all cases.
A single client device may be home to multiple independent client software
instances that don’t coordinate with each other.
Similarly, multiple independent client devices behind the same NAT gateway
will also typically appear to the DNS server as different source ports on
the same client IP address.
Because of these constraints, a DNS server MUST be prepared to accept
multiple connections from different source ports on the same client IP address.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="dso-opcode-registration" title="DSO OPCODE Registration">

<t>IANA are directed to assign a value (tentatively 6)
in the DNS OPCODEs Registry for the DSO OPCODE.</t>

</section>
<section anchor="dso-rcode-registration" title="DSO RCODE Registration">

<t>IANA are directed to assign a value (tentatively 11)
in the DNS RCODE Registry for the DSONOTIMP error code.</t>

</section>
<section anchor="dso-type-codes-registry" title="DSO Type Codes Registry">

<t>IANA are directed to create the 15-bit DSO Type Codes
Registry, with initial values as follows:</t>

<texttable>
      <ttcol align='right'>Type</ttcol>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Status</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>0x0000</c>
      <c>RetryDelay</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0001</c>
      <c>KeepAlive</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0002</c>
      <c>Encryption Padding</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0003 - 0x003F</c>
      <c>Unassigned, reserved for DSO session management TLVs</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x0040 - 0x77FF</c>
      <c>Unassigned</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x7800 - 0x7BFF</c>
      <c>Reserved for local / experimental use</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x7C00 - 0x7FFF</c>
      <c>Reserved for future expansion</c>
      <c>&#160;</c>
      <c>&#160;</c>
</texttable>

<t>Registration of additional DSO Type Codes requires publication
of an appropriate IETF “Standards Action” or “IESG Approval” document <xref target="RFC5226"/>.</t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>If this mechanism is to be used with DNS over TLS, then these messages
are subject to the same constraints as any other DNS over TLS messages
and MUST NOT be sent in the clear before the TLS session is established.</t>

<t>The data field of the “Encryption Padding” TLV could be used as a covert channel.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to
Tim Chown,
Ralph Droms,
Jan Komissar,
Manju Shankar Rao,
and Ted Lemon
for their helpful contributions to this document.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC1035;
&RFC7766;
&RFC6891;
&RFC7828;
&RFC2119;
&RFC7830;
&RFC1034;
&RFC2136;
&RFC2132;
&RFC1918;
&RFC5226;


    </references>

    <references title='Informative References'>

<reference anchor="NagleDA" target="http://www.stuartcheshire.org/papers/nagledelayedack/">
  <front>
    <title>TCP Performance problems caused by interaction between Nagle's Algorithm and Delayed ACK</title>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization></organization>
    </author>
    <date year="2005" month="May" day="20"/>
  </front>
</reference>
&RFC7858;
&RFC6763;
&I-D.ietf-dnssd-push;
&RFC0768;
&I-D.ietf-dprive-padding-policy;


    </references>



  </back>

<!-- ##markdown-source:
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
AMUk8AAA

-->

</rfc>

