<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.7 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC7766 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7766.xml">
<!ENTITY RFC6891 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6891.xml">
<!ENTITY RFC7828 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7828.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC7830 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7830.xml">
<!ENTITY RFC1034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC2136 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2136.xml">
<!ENTITY RFC2132 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2132.xml">
<!ENTITY RFC1918 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1918.xml">
<!ENTITY RFC5226 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5226.xml">
<!ENTITY RFC7858 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7858.xml">
<!ENTITY RFC6763 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6763.xml">
<!ENTITY I-D.ietf-dnssd-push SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dnssd-push.xml">
<!ENTITY RFC0768 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.0768.xml">
<!ENTITY I-D.ietf-dprive-padding-policy SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dprive-padding-policy.xml">
]>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-dnsop-session-signal-05" category="std" updates="RFC 7766, RFC 1035">

  <front>
    <title>DNS Stateful Operations</title>

    <author initials="R." surname="Bellis" fullname="Ray Bellis">
      <organization abbrev="ISC">Internet Systems Consortium, Inc.</organization>
      <address>
        <postal>
          <street>950 Charter Street</street>
          <city>Redwood City</city>
          <code>CA 94063</code>
          <country>USA</country>
        </postal>
        <phone>+1 650 423 1200</phone>
        <email>ray@isc.org</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>1 Infinite Loop</street>
          <city>Cupertino</city>
          <code>CA 95014</code>
          <country>USA</country>
        </postal>
        <phone>+1 408 974 3207</phone>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="J." surname="Dickinson" fullname="John Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>jad@sinodun.com</email>
      </address>
    </author>
    <author initials="S." surname="Dickinson" fullname="Sara Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>sara@sinodun.com</email>
      </address>
    </author>
    <author initials="A." surname="Mankin" fullname="Allison Mankin">
      <organization>Salesforce</organization>
      <address>
        <email>allison.mankin@gmail.com</email>
      </address>
    </author>
    <author initials="T." surname="Pusateri" fullname="Tom Pusateri">
      <organization>Unaffiliated</organization>
      <address>
        <postal>
          <street></street>
          <city>Raleigh</city>
          <code>NC 27608</code>
          <country>USA</country>
        </postal>
        <phone>+1 919 867 1330</phone>
        <email>pusateri@bangj.com</email>
      </address>
    </author>

    <date year="2017" month="November" day="19"/>

    <area>Internet</area>
    <workgroup>DNSOP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document defines a new DNS OPCODE, for DNS Stateful Operations (DSO).
DSO messages are used to communicate operations within persistent
stateful sessions, expressed using type-length-value (TLV) syntax.
This document defines an initial set of TLVs, including ones
used to manage session timeouts and termination.
This mechanism is intended to reduce the overhead of existing 
“per-packet” signaling mechanisms with “per-message” semantics as well as 
defining new stateful operations not defined in EDNS(0).</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The use of transports for DNS other than UDP is being increasingly specified,
for example, DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> and DNS over TLS <xref target="RFC7858"/>.
Such transports can offer persistent, long-lived sessions and therefore when
using them for transporting DNS messages it is of benefit to have a mechanism
that can establish parameters associated with those sessions, such as timeouts.
In such situations it is also advantageous to support server initiated messages.</t>

<t>The existing EDNS(0) Extension Mechanism for DNS <xref target="RFC6891"/> is explicitly
defined to only have “per-message” semantics. Whilst EDNS(0) has been used to
signal at least one session-related parameter (the EDNS(0) TCP Keepalive option
<xref target="RFC7828"/>) the result is less than optimal due to the restrictions
imposed by the EDNS(0) semantics and the lack of server-initiated signalling. 
For example, a server cannot arbitrarily 
instruct a client to close a connection because the server can only send EDNS(0) options 
in responses to queries that contained EDNS(0) options.</t>

<t>This document defines a new DNS OPCODE, for DNS Stateful Operations (DSO).
DSO messages are used to communicate operations within persistent
stateful sessions, expressed using type-length-value (TLV) syntax.
This document defines an initial set of TLVs, including ones
used to manage session timeouts and termination.</t>

<t>All three of the TLVs defined here are mandatory for all implementations of DSO.
Additional TLVs may be defined in additional specifications.</t>

<t>It should be noted that the message format for DNS Stateful Operations
(see <xref target="format"/>) differs from the traditional DNS packet
format used for standard queries and responses.
The standard twelve-octet header is used, but the four count fields
(QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) are set to zero and their
corresponding sections are not present.
The actual data pertaining to DNS Stateful Operations
(expressed in TLV format) is appended to the end of the DNS message header.
When displayed using packet analyzer tools that have not been
updated to recognize the DNS Stateful Operations format, this
will result in the Stateful Operations data being displayed
as unknown additional data after the end of the DNS message.
It is likely that future updates to these tools will add the ability
to recognize, decode, and display the Stateful Operations data.</t>

<t>This new format has distinct advantages over an RR-based format because it
is more explicit and more compact. Each TLV definition is specific
to the use case, and as a result contains no redundant or overloaded fields.
Importantly, it completely avoids conflating DNS Stateful Operations in anyway 
with normal DNS operations or with existing EDNS(0) based functionality.
A goal of this approach is to avoid the operational issues that have
befallen EDNS(0), particularly relating to middle-box behaviour.</t>

<t>With EDNS(0), multiple options may be packed into a single OPT pseudo-RR,
and there is no generalized mechanism for a client to be able to tell
whether a server has processed or otherwise acted upon each individual
option within the combined OPT RR.
The specifications for each individual option need to define how each
different option is to be acknowledged, if necessary.</t>

<t>In contrast to EDNS(0), with DNS Stateful Operations there is no
compelling motivation to pack multiple operations into a single
message for efficiency reasons, because DNS Stateful Operations
always operates using a connection-oriented transport protocol.
Each Stateful operation is communicated in its own separate
DNS message, and the transport protocol can take care of packing
separate DNS messages into a single IP packet if appropriate.
For example, TCP can pack multiple small DNS messages into a single TCP segment.
This simplification allows for clearer semantics.
Each DSO request message communicates just one primary operation,
and the RCODE in the corresponding response message indicates the
success or failure of that operation.</t>

</section>
<section anchor="terminology" title="Terminology">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and
“OPTIONAL” in this document are to be interpreted as described in
“Key words for use in RFCs to Indicate Requirement Levels” <xref target="RFC2119"/>.</t>

<t>“DSO” is used to mean DNS Stateful Operation.</t>

<t>The term “connection” means a bidirectional byte stream of reliable,
in-order messages, such as provided by using
DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> or DNS over TLS <xref target="RFC7858"/>.</t>

<t>The unqualified term “session” in the context of this document means the exchange of
DNS messages over a connection where:</t>

<t><list style="symbols">
  <t>The connection between client and server is persistent and relatively
long-lived (i.e., minutes or hours, rather than seconds).</t>
  <t>Either end of the connection may initiate messages to the other.</t>
</list></t>

<t>A “DSO session” is established between two endpoints that
acknowledge persistent DNS state via the exchange of DSO messages
over the connection. This is distinct from, for example a DNS-over-TCP session
as described in RC7766.</t>

<t>A “DSO session” is terminated when the underlying connection is closed.</t>

<t>The term “server” means the software with a listening socket, awaiting
incoming connection requests.</t>

<t>The term “client” means the software which initiates a connection
to the server’s listening socket.</t>

<t>The terms “initiator” and “responder” correspond respectively to the
initial sender and subsequent receiver of a DSO request message,
regardless of which was the “client” and “server” in the usual DNS sense.</t>

<t>The term “sender” may apply to either an initiator
(when sending a DNS Stateful Operation request message)
or a responder (when sending a DNS Stateful Operation response message).</t>

<t>Likewise, the term “receiver” may apply to either a responder
(when receiving a DNS Stateful Operation request message)
or an initiator (when receiving a DNS Stateful Operation response message).</t>

<t>DNS Stateful Operations are expressed using type-length-value (TLV) syntax.</t>

<t>Two timers (elapsed time since an event) are defined in this document:</t>

<t><list style="symbols">
  <t>an inactivity timer (see <xref target="keepalive"/> and <xref target="inactivetimer"/>)</t>
  <t>a keepalive timer (see <xref target="keepalive"/> and <xref target="keepalivetimer"/>)</t>
</list></t>

<t>The timeouts associated with these timers are called the inactivity timeout and 
the keepalive interval respectively. 
The term “Session Timeouts” is used to refer to this pair of timeout values.</t>

<t>Reseting a timer means resetting the timer value to zero and starting the timer 
again. Clearing a timer means resetting the timer value to zero but NOT starting 
the time again.</t>

</section>
<section anchor="discussion" title="Discussion">

<t>There are several use cases for DNS Stateful operations that can 
be described here.</t>

<t>Firstly, establishing session parameters such as server defined timeouts is of 
great use in the 
general management of persistent connections. For example, using DSO sessions 
for stub to recursive DNS-over-TLS <xref target="RFC7858"/> is more flexible for both the 
client and the server than attempting to manage sessions using just the EDNS(0)
TCP Keepalive option
<xref target="RFC7828"/>. The simple set of TLVs defined in this document is
sufficient to greatly enhance connection management for this use case.</t>

<t>Secondly, DNS-SD <xref target="RFC6763"/> has evolved into a naturally session based mechanism where,
for example, long-lived subscriptions lend themselves to ‘push’ mechanisms as 
opposed to polling. Long-lived stateful connections and server initiated 
messages align with this use case <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>A general use case is that DNS traffic is often bursty but session establishment 
can be expensive. One challenge with long-lived connections is to maintain 
sufficient traffic to maintain NAT and firewall state.
To mitigate this issue this document introduces a
new concept for the DNS, that is DSO “Keepalive traffic”.
This traffic carries no DNS data and is not considered ‘activity’
in the classic DNS sense, but serves to maintain state in middle boxes,
and to assure client and server that they still have connectivity to each other.</t>

<t>There are a myriad of other potential use cases for DSO given the versatility 
and extensibility of this specification.</t>

<t><xref target="details"/> of this document describes the protocol details of DNS Stateful
Operations including definitions of three TLVs for session management and 
encryption padding. <xref target="lifecycle"/> presents a
detailed discussion of the DSO Session lifecycle including an
in-depth discussion of keepalive traffic and session termination.</t>

</section>
<section anchor="details" title="Protocol Details">

<section anchor="establishment" title="DSO Session Establishment">

<t>DSO messages MUST only be carried in protocols and in
environments where a session may be established according to the definition above.
Standard DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/>, and DNS over TLS <xref target="RFC7858"/>
are suitable protocols.</t>

<t>DNS over plain UDP <xref target="RFC0768"/> is not appropriate since it fails on the requirement for
in-order message delivery, and, in the presence of NAT gateways and firewalls
with short UDP timeouts, it fails to provide a persistent bi-directional
communication channel unless an excessive amount of keepalive traffic is used.</t>

<t>DSO messages relate only to the specific “DSO session” in which
they are being carried. A “DSO session” is established over a connection when
either side of the connection sends the first DSO
TLV and it is acknowledged by the other side. The DSO message format <xref target="dsodata"/> 
includes an option to specify that a DSO request does not require a 
response acknowledgement. Session establishment can only be performed using a 
DSO message that requires a response acknowledgement.</t>

<t>A client MAY attempt to initiate DSO messages at any time
on a connection; receiving a NOTIMP response in reply indicates that the
server does not implement DSO, and the client SHOULD NOT
issue further DSO messages on that connection.</t>

<t>A server SHOULD NOT initiate DSO messages until a
client-initiated DSO message is received first,
unless in an environment where it is known in advance by other
means that the client supports DSO.
This requirement is to ensure that the clients that do not support
DSO do not receive unsolicited inbound DSO
messages that they would not know how to handle.</t>

<t>On a session between a client and server that support DSO,
once the client has sent at least one DSO message (or it is
known in advance by other means that the client supports DSO)
either end may unilaterally send DSO messages at any time,
and therefore either client or server may be the initiator of a message.</t>

<t>From this point on it is considered that a “DSO session” is in progress.
Clients and servers should behave as described in this specification with
regard to inactivity timeouts and connection close, not as prescribed in
the previous specification for DNS over TCP <xref target="RFC7766"/>.</t>

<section anchor="middle-box-considerations" title="Middle-box Considerations">

<t>Where an application-layer middle box (e.g., a DNS proxy, forwarder, or
session multiplexer) is in the path the middle box MUST NOT blindly
forward DSO messages in either direction, and MUST treat the inbound
and outbound connections as separate sessions.  This does not preclude
the use of DSO messages in the presence of an IP-layer middle box such
as a NAT that rewrites IP-layer and/or transport-layer headers, but
otherwise preserves the effect of a single session between the client
and the server.</t>

<t>To illustrate the above, consider a network where a middle box
terminates one or more TCP connections from clients and multiplexes the
queries therein over a single TCP connection to an upstream server.  The
DSO messages and any associated state are specific to the individual
TCP connections.  A DSO-aware middle box MAY in some circumstances be
able to retain associated state and pass it between the client and
server (or vice versa) but this would be highly TLV-specific.  For
example, the middle box may be able to maintain a list of which clients
have made Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/> and
make its own subscription(s) on their behalf, relaying any subsequent
notifications to the client (or clients) that have subscribed to that
particular notification.</t>

</section>
</section>
<section anchor="format" title="Message Format">

<t>A DSO message begins with
the standard twelve-octet DNS message header <xref target="RFC1035"/>
with the OPCODE field set to the DSO OPCODE (tentatively 6).
However, unlike standard DNS messages, the question section, answer section,
authority records section and additional records sections are not present.
The corresponding count fields (QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) MUST be
set to zero on transmission.</t>

<t>If a DSO message is received where any of the count fields are
not zero, then a FORMERR MUST be returned,
unless a future document specifies otherwise.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                          MESSAGE ID                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |QR |    OPCODE     |            Z              |     RCODE     |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     QDCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ANCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     NSCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ARCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                           DSO Data                            /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<section anchor="header" title="Header">

<t>In a request the MESSAGE ID field MUST be set to a unique value, that the
initiator is not currently using for any other active operation on this 
connection.
For the purposes here, a MESSAGE ID is in use in this DSO session if the
initiator has used it in a request for which it has not yet received a
response, or if the client has used it to setup state that it has not yet
deleted. For example, state could be a subscription <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>In a response the MESSAGE ID field MUST contain a copy of the value of the
MESSAGE ID field in the request being responded to.</t>

<t>In a request the DNS Header QR bit MUST be zero (QR=0).
If the QR bit is not zero the message is not a request.</t>

<t>In a response the DNS Header QR bit MUST be one (QR=1).
If the QR bit is not one the message is not a response.</t>

<t>The DNS Header OPCODE field holds the DSO OPCODE value (tentatively 6).</t>

<t>The Z bits are currently unused in DSO messages,
and in both DSO requests and DSO responses the
Z bits MUST be set to zero (0) on transmission and MUST be silently ignored
on reception, unless a future document specifies otherwise.</t>

<t>In a request message (QR=0) the RCODE is generally set to zero on transmission,
and silently ignored on reception, except where specified otherwise
(for example, the Retry Delay operation (see <xref target="delay"/>), where the RCODE indicates the reason
for termination).</t>

<t>The RCODE value in a response may be one of the following values:</t>

<texttable>
      <ttcol align='right'>Code</ttcol>
      <ttcol align='left'>Mnemonic</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>0</c>
      <c>NOERROR</c>
      <c>Operation processed successfully</c>
      <c>1</c>
      <c>FORMERR</c>
      <c>Format error</c>
      <c>2</c>
      <c>SERVFAIL</c>
      <c>Server failed to process request due to a problem with the server</c>
      <c>3</c>
      <c>NXDOMAIN</c>
      <c>Name Error — Named entity does not exist (TLV-dependent)</c>
      <c>4</c>
      <c>NOTIMP</c>
      <c>DSO not supported</c>
      <c>5</c>
      <c>REFUSED</c>
      <c>Operation declined for policy reasons</c>
      <c>9</c>
      <c>NOTAUTH</c>
      <c>Not Authoritative (TLV dependent)</c>
      <c>11</c>
      <c>DSONOTIMP</c>
      <c>DSO type code not supported</c>
</texttable>

<t>Use of the above RCODEs is likely to be common in DSO but 
does not preclude the definition and use of other codes in future documents that 
make use of DSO.</t>

<t>If a document describing a DSO makes use of either NXDOMAIN (Name Error)
or NOTAUTH then that document MUST explain the meaning.</t>

</section>
<section anchor="dsodata" title="DSO Data">

<t>The standard twelve-octet DNS message header is followed by the DSO Data.</t>

<t>The first TLV in a DSO request message is called the Operation 
TLV. Any subsequent TLVs after this initial Operation TLV are called Modifier TLVs.</t>

<t>Depending on the operation a DSO response can contain:</t>

<t><list style="symbols">
  <t>No TLVs</t>
  <t>Only an Operation TLV</t>
  <t>An Operation TLV followed by one or more Modifier TLVs</t>
  <t>Only Modifier TLVs</t>
</list></t>

<section anchor="tlv-format" title="TLV Format">

<t>Operation and modifier TLVs both use the same encoding format.</t>

<t>Operation TLVs SHOULD normally require a response and, therefore, set the TLV
Acknowledgement bit in a request. However, for some Operation TLVs, this may be
undesirable and the TLV Acknowledgement bit MAY be cleared in the request. Each
Operation TLV definition should stipulate whether an acknowledgement is
REQUIRED. If the TLV Acknowledgement bit is cleared in a request, a response
MUST NOT be sent. Modifier TLVs MUST NEVER set the Acknowledgement bit. The
Acknowledgement bit is NEVER set in the response to an Operation TLV.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   | A |                        DSO-TYPE                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                        DSO DATA LENGTH                        |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                      TYPE-DEPENDENT DATA                      /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='A:'>
  A 1-bit TLV Response flag indicating whether or not an Operation TLV requires
a response Acknowledgement.</t>
  <t hangText='DSO-TYPE:'>
  A 15-bit field in network order giving the type of the current DSO TLV per
the IANA DSO Type Codes Registry.</t>
  <t hangText='DSO DATA LENGTH:'>
  A 16-bit field in network order giving the size in octets of
the TYPE-DEPENDENT DATA.</t>
  <t hangText='TYPE-DEPENDENT DATA:'>
  Type-code specific format.</t>
</list></t>

<t>Where domain names appear within TYPE-DEPENDENT DATA, they MAY be compressed 
using standard DNS name compression. However, the compression MUST NOT point
outside of the TYPE-DEPENDENT DATA section and offsets MUST be from the start
of the TYPE-DEPENDENT DATA.</t>

</section>
<section anchor="operation-tlvs" title="Operation TLVs">

<t>An “Operation TLV” specifies the operation to be performed.</t>

<t>A DSO message MUST contain at most one Operation TLV.</t>

<t>In all cases a DSO request message MUST contain exactly one 
Operation TLV, indicating the operation to be performed.</t>

<t>Depending on the operation, a DSO response message MAY contain no 
Operation TLV, because it is simply a response to a previous request message,
and the MESSAGE ID in the header is sufficient to identify the request in 
question. Or it may contain a single corresponding response Operation TLV, with 
the same DSO-TYPE as in the request message. The specification for each DSO
type determines whether a response for that operation type 
is required to carry the Operation TLV.</t>

<t>If a DSO response is received for an operation which requires
that the response carry an Operation TLV, and the required Operation TLV is not
the first DSO TLV in the response message, then this is a fatal 
error and the recipient of the defective response message MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
<section anchor="modifier-tlvs" title="Modifier TLVs">

<t>A “Modifier TLV” specifies additional parameters
relating to the operation. Immediately following the Operation TLV, if present,
a DSO message MAY contain one or more Modifier TLVs.</t>

</section>
<section anchor="unrecognized-tlvs" title="Unrecognized TLVs">

<t>If a DSO request is received containing an unrecognized
Operation TLV, the receiver MUST send a response with matching
MESSAGE ID, and RCODE DSONOTIMP (tentatively 11). The response MUST NOT contain 
an Operation TLV.</t>

<t>If a DSO message (request or response) is received
containing one or more unrecognized Modifier TLVs, the unrecognized
Modifier TLVs MUST be silently ignored, and the remainder of the message
is interpreted and handled as if the unrecognized parts were not present.</t>

</section>
</section>
<section anchor="edns0-and-tsig" title="EDNS(0) and TSIG">

<t>Since the ARCOUNT field MUST be zero, a DSO message
MUST NOT contain an EDNS(0) option in the additional records section.
If functionality provided by current or future EDNS(0) options is desired
for DSO messages, an Operation TLV or
Modifier TLV needs to be defined to carry the necessary information.</t>

<t>For example, the EDNS(0) Padding Option <xref target="RFC7830"/> used for security purposes
is not permitted in a DSO message,
so if message padding is desired for DSO messages
then the Encryption Padding TLV described in <xref target="padding"/> MUST be used.</t>

<t>Similarly, a DSO message MUST NOT contain a TSIG record.
A TSIG record in a conventional DNS message is added as the last record
in the additional records section, and carries a signature computed over
the preceding message content. Since DSO data appears
after the additional records section, it would not be included in the
signature calculation. 
If use of signatures with DSO messages becomes necessary in the 
future, an explicit Modifier TLV needs to be defined to 
perform this function.</t>

<t>Note however that, while DSO <spanx style="emph">messages</spanx> cannot include
EDNS(0) or TSIG records, a DSO <spanx style="emph">session</spanx> is typically used to 
carry a whole series of DNS messages of different kinds, including DSO
messages, and other DNS message types like Query <xref target="RFC1034"/> 
<xref target="RFC1035"/> and Update <xref target="RFC2136"/>, and those messages can carry EDNS(0) and 
TSIG records.</t>

<t>This specification explicitly prohibits use of the
EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>
in <spanx style="emph">any</spanx> messages sent on a DSO session (because it duplicates
the functionality provided by the DSO Keepalive operation),
but messages may contain other EDNS(0) options as appropriate.</t>

</section>
</section>
<section anchor="message-handling" title="Message Handling">

<t>The initiator MUST set the value of the QR bit in the DNS header to
zero (0), and the responder MUST set it to one (1).
Every DSO request message (QR=0) with the Acknowledgement bit set in the
operation TLV MUST elicit a response (QR=1), which MUST have the same
MESSAGE ID in the DNS message header as in the corresponding request.
DSO request messages sent by the client with the Acknowledgement
bit set in the operation TLV elicit a response from the server, and
DSO request messages sent by the server with the Acknowledgement
bit set in the operation TLV elicit a response from the client.</t>

<t>With most TCP implementations, the TCP data acknowledgement (generated because 
data has been received by TCP), the TCP window update (generated because TCP has 
delivered that data to the receiving software) and the DSO 
response (generated by the receiving software itself)
are all combined into a single packet, so in practice the requirement that every
DSO request message MUST elicit a 
DSO response incurs minimal extra cost on the network.
Requiring that every request elicit a corresponding response also avoids
performance problems caused by interaction between
Nagle’s Algorithm and Delayed Ack <xref target="NagleDA"/>.</t>

<t>The namespaces of 16-bit MESSAGE IDs are disjoint in each direction.
For example, it is <spanx style="emph">not</spanx> an error for both client and server to send a request
message with the same ID. In effect, the 16-bit MESSAGE ID combined with the 
identity of the initiator (client or server) serves as a 17-bit unique 
identifier for a particular operation on a DSO session.</t>

<t>As described in <xref target="header"/> An initiator MUST NOT reuse a MESSAGE ID that is 
already in use for an 
outstanding request, unless specified otherwise by the relevant specification 
for the DSO in question. At the very least, this means 
that a MESSAGE ID MUST NOT be reused in a particular direction
on a particular DSO session while the initiator is waiting for a response to a 
previous request using that MESSAGE ID on that DSO session,
unless specified otherwise by the relevant 
specification for the DSO in question.
(For a long-lived state the MESSAGE ID for the operation
MUST NOT be reused whilst that state remains active.)</t>

<t>If a client or server receives a response (QR=1) where the MESSAGE ID does not
match any of its outstanding operations, this is a fatal error and it MUST 
immediately terminate the connection with a TCP RST (or equivalent for other 
protocols).</t>

</section>
</section>
<section anchor="keepalive" title="Keepalive Operation TLV">

<t>The Keepalive Operation TLV (DSO-TYPE=1) performs two functions: to reset the
keepalive timer for the DSO session and to establish the values for the Session Timeouts.</t>

<t>The Keepalive Operation TLV resets only the keepalive timer, not the inactivity timer.
The reason for this is that periodic Keepalive Operation TLVs are sent for the
sole purpose of keeping a DSO session alive, because that DSO session has current
or recent non-maintenance activity that warrants keeping the DSO session alive.
If sending keepalive traffic itself were to reset the inactivity timer, then 
that would create a circular livelock where keepalive traffic would be sent 
indefinitely to keep a DSO session alive, where the only activity on that DSO 
session would be the keepalive traffic keeping the DSO session alive so that further 
keepalive traffic can be sent.</t>

<t>Sending keepalive traffic is considered a maintenance activity
that is performed in service of other client activities.
Sending keepalive traffic itself is not considered a client activity.
For a DSO session to be considered active, it must be carrying something more than just keepalive traffic.
This is why merely sending a Keepalive Operation TLV does not reset the inactivity timer.</t>

<t>When sent by a client, the Keepalive Operation TLV MUST have the Acknowledgement bit set.
It resets a DSO session’s keepalive timer, and at the same time requests what the
Session Timeout values should be from this point forward in the DSO session.
If a server receives a Keepalive Operation TLV without the Acknowledgement bit set
then this is a fatal error and the server MUST immediately terminate
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>Once a DSO session is in progress (see <xref target="details"/>) the Keepalive TLV also MAY be initiated by a server.
When sent by a server, the Keepalive Operation TLV MUST NOT have the Acknowledgement bit set.
It resets a DSO session’s keepalive timer, and unilaterally informs the client of
the new Session Timeout values to use from this point forward in this DSO session.
No client response to this unilateral declaration is required.
If a client receives a Keepalive Operation TLV with the Acknowledgement bit set
then this is a fatal error and the client MUST immediately terminate
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>It is not required that the Keepalive TLV be used in every DSO session.
While many DNS Stateful operations
will be used in conjunction with a long-lived session state,
not all DNS Stateful operations require long-lived session state,
and in some cases the default 15-second value for both the inactivity timeout
and keepalive interval may be perfectly appropriate. However, it can be noted 
that for clients that implement only the TLVs defined in this document it is
the only way for a client to initiate a DSO session.</t>

<t>The TYPE-DEPENDENT DATA for the the Keepalive TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 INACTIVITY TIMEOUT (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 KEEPALIVE INTERVAL (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='INACTIVITY TIMEOUT:'>
  the inactivity timeout for the current DSO session, specified as a
32-bit word in network (big endian) order in units of milliseconds.
This is the timeout at which the client MUST close an inactive DSO session.
If the client does not gracefully close an inactive DSO session,
then after twice this interval the server will forcibly terminate
the connection with a TCP RST (or equivalent for other protocols).</t>
  <t hangText='KEEPALIVE INTERVAL:'>
  the keepalive interval for the current DSO session, specified as a
32-bit word in network (big endian) order in units of milliseconds.
This is the interval at which a client MUST generate keepalive
traffic to maintain connection state.
If the client does not generate the necessary keepalive traffic,
then after twice this interval the server will forcibly terminate
the connection with a TCP RST (or equivalent for other protocols).</t>
</list></t>

<t>In a client-initiated DSO Keepalive message,
the Session Timeouts contain the client’s requested values.
In a server response to a client-initiated message, the Session Timeouts contain 
the server’s chosen values, which the client MUST respect.
This is modeled after the DHCP protocol, where the client
requests a certain lease lifetime using DHCP option 51 <xref target="RFC2132"/>,
but the server is the ultimate authority
for deciding what lease lifetime is actually granted.</t>

<t>In a server-initiated DSO Keepalive message, the Session Timeouts
unilaterally inform the client of the new values from this point
forward in this DSO session. The client MUST NOT generate a
response to the server-initiated DSO Keepalive message.</t>

<t>When a client is sending its second and subsequent Keepalive DSO 
requests to the server, the client SHOULD continue to request its preferred 
values each time. This allows flexibility, so that if conditions change during 
the lifetime of a DSO session, the server can adapt its responses to better fit 
the client’s needs.</t>

<section anchor="client-handling-of-received-session-timeout-values" title="Client handling of received Session Timeout values">

<t>When a client receives a response to its client-initiated DSO Keepalive message,
or receives a server-initiated DSO Keepalive message, the client has then 
received Session Timeout values dictated by the server. The two timeout values 
contained in the DSO Keepalive TLV from the server may each be higher, lower, or 
the same as the respective Session Timeout values the client previously had for 
this DSO session.</t>

<t>In the case of the keepalive timer, the handling of the received value is 
straightforward. The act of receiving the message containing the DSO Keepalive 
TLV itself resets the keepalive timer and updates the keepalive interval for the 
DSO session. The new keepalive interval indicates the 
maximum time that may elapse before another message must be sent
or received on this DSO session, if the DSO session is to remain alive.</t>

<t>In the case of the inactivity timeout, the handling of the received value 
is a little more subtle, though the meaning of the inactivity 
timeout is unchanged – it still indicates the maximum permissible time allowed 
without activity on a DSO session.
The act of receiving the message containing the DSO Keepalive TLV does not
itself reset the inactivity timer. The time elapsed since the last useful
activity on this DSO session is unaffected by exchange of DSO Keepalive messages.
The act of receiving the message containing the DSO Keepalive TLV does update 
the timeout associated with the running inactivity timer; that
becomes the new maximum permissible time without activity on a DSO session.</t>

<t><list style="symbols">
  <t>If the current inactivity timer value is not greater than the new inactivity timeout, 
then the DSO session may remain open for now. When the inactivity timer value 
exceeds the new inactivity timeout, the client MUST then close the DSO session,
as described above.</t>
  <t>If the current inactivity timer value is already greater than the new inactivity 
timeout, then this DSO session has already been inactive
for longer than the server permits, and the client MUST immediately close this DSO session.</t>
  <t>If the current inactivity timer value is more than twice the new inactivity timeout, 
then this DSO session is eligible to be
forcibly terminated by the server and and the client MUST immediately close this 
DSO session. However if a server abruptly reduces the
inactivity timeout in this way the server SHOULD give the client a grace period
of one quarter of the new inactivity timeout, to give the client time to close
the connection gracefully before the server resorts to terminating it forcibly.</t>
</list></t>

</section>
<section anchor="relation-to-edns0-tcp-keepalive-option" title="Relation to EDNS(0) TCP Keepalive Option">

<t>The inactivity timeout value in the Keepalive TLV (DSO-TYPE=1) has similar
intent to the EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>.
A client/server pair that supports DSO MUST NOT use the
EDNS(0) TCP KeepAlive option within any message after a DSO 
session has been established.
Once a DSO session has been established, if either
client or server receives a DNS message over the DSO session that contains an
EDNS(0) TCP Keepalive option, this is an error and the receiver of the
EDNS(0) TCP Keepalive option MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="delay" title="Retry Delay TLV">

<t>The Retry Delay TLV (DSO-TYPE=0) can be used as an Operation TLV or as
a Modifier TLV.</t>

<t>The TYPE-DEPENDENT DATA for the the Retry Delay TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     RETRY DELAY (32 bits)                     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='RETRY DELAY:'>
  a time value, specified as a 32-bit word in network order in units of 
milliseconds, within which the client MUST NOT retry this operation, or retry 
connecting to this server.</t>
</list></t>

<t>The RECOMMENDED value is 10 seconds.</t>

<section anchor="use-as-an-operation-tlv" title="Use as an Operation TLV">

<t>When sent in a DSO request message, from server to client, the 
Retry Delay TLV (0) is considered an Operation TLV. It is used by a server 
to request that a client close the DSO session and underlying connection, and 
not to reconnect for the indicated time interval.</t>

<t>In this case it applies to the DSO session as a whole, and the client MUST close the 
DSO session, as described in section <xref target="retry"/>. The RCODE in the message header 
MUST indicate the reason for the termination:</t>

<t><list style="symbols">
  <t>NOERROR indicates a routine shutdown.</t>
  <t>SERVFAIL indicates that the server is overloaded due to resource exhaustion.</t>
  <t>REFUSED indicates that the server has been reconfigured and is no longer able 
to perform one or more of the functions 
currently being performed on this DSO session (for example, a DNS Push Notification 
server could be reconfigured such that is is no longer accepting DNS Push 
Notification requests for one or more of the currently subscribed names).</t>
</list></t>

<t>This document specifies only these three RCODE values for Retry Delay request.
Servers sending Retry Delay requests SHOULD use one of these three values.
However, future circumstances may create situations where other RCODE values
are appropriate in Retry Delay requests, so clients MUST be prepared
to accept Retry Delay requests with any RCODE value.</t>

<t>An acknowledgement is not desired for a Retry Delay Operation TLV and the TLV
Acknowledgement bit MUST be cleared in the request.</t>

</section>
<section anchor="use-as-a-modifier-tlv" title="Use as a Modifier TLV">

<t>When appended to a DSO response message for some client request,
the Retry Delay TLV (0) is considered a Modifier TLV.
The indicated time interval during which the client SHOULD NOT retry
applies only to the failed operation, not to the DSO session as a whole.</t>

<t>In the case of a client request that returns a nonzero RCODE value, the server 
MAY append a Retry Delay TLV (0) to the response, indicating the time interval
during which the client SHOULD NOT attempt this operation again.</t>

</section>
</section>
<section anchor="padding" title="Encryption Padding TLV">

<t>The Encryption Padding TLV (DSO-TYPE=2) can only be used as a Modifier TLV.
It is only applicable when the DSO Transport layer uses encryption
such as TLS.</t>

<t>The TYPE-DEPENDENT DATA for the the Padding TLV is optional and is a
variable length field containing non-specified values. A DATA LENGTH
of 0 essentially provides for 4 octets of padding (the minimum amount).</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   /                                                               /
   /                   VARIABLE NUMBER OF OCTETS                   /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t>As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
the PADDING octets SHOULD be set to 0x00.  Other values MAY be used,
for example, in cases where there is a concern that the padded
message could be subject to compression before encryption.
PADDING octets of any value MUST be accepted in the messages received.</t>

<t>The Encryption Padding TLV may be included in either a DSO request, response, or both.
As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
if a request is received with a Encryption Padding TLV,
then the response MUST also include an Encryption Padding TLV.</t>

<t>The length of padding is intentionally not specified in this document and
is a function of current best practices with respect to the type and length
of data in the preceding TLVs <xref target="I-D.ietf-dprive-padding-policy"/>.</t>

</section>
<section anchor="lifecycle" title="DSO Session Lifecycle and Timers">

<section anchor="dso-session-initiation" title="DSO Session Initiation">

<t>A session begins when a client makes a new connection to a server.</t>

<t>A DSO session begin as described in <xref target="establishment"/>.</t>

<t>The client may perform as many DNS operations as it wishes using the
newly created DSO session. Operations SHOULD be pipelined (i.e., the
client doesn’t need wait for a response before sending the next message).
The server MUST act on messages in the order they are transmitted, but
responses to those messages MAY be sent out of order, if appropriate.</t>

</section>
<section anchor="sessiontimeouts" title="DSO Session Timeouts">

<t>Two timeout values are associated with a DSO session: the inactivity timeout, and 
the keepalive interval.</t>

<t>The first timeout value, the inactivity timeout, is the maximum time for which
a client may speculatively keep a DSO session open in the expectation that
it may have future requests to send to that server.</t>

<t>The second timeout value, the keepalive interval, is the maximum permitted
interval between client messages to the server if the client wishes to keep
the DSO session alive.</t>

<t>The two timeout values are independent. The inactivity timeout may be lower, the 
same, or higher than the keepalive interval, though in most cases the inactivity 
timeout is expected to be shorter than the keepalive interval.</t>

<t>Only when the client has a very long-lived low-traffic state does the 
keepalive interval come into play, to ensure that a sufficient residual
amount of traffic is generated to maintain NAT and firewall state
and to assure client and server that they still have connectivity to each other.</t>

<t>On a new DSO session, if no explicit DSO Keepalive message exchange has taken 
place, the default value for both timeouts is 15 seconds.
For both timeouts, lower values of the timeout result in higher network traffic
and higher CPU load on the server.</t>

</section>
<section anchor="inactivetimer" title="Inactive DSO Sessions">

<t>At both servers and clients, the generation or reception of any complete
DNS message, including DNS requests, responses, updates, or DSO
messages, resets both timers for that DSO session, with the exception
that a DSO Keepalive message resets only the keepalive timer, not the inactivity 
timeout timer.</t>

<t>In addition, for as long as the client has an outstanding operation in progress,
the inactivity timer remains cleared, and an inactivity 
timeout cannot occur.</t>

<t>For short-lived DNS operations like traditional queries and updates,
an operation is considered in progress for the time between request and 
response, typically a period of a few hundred milliseconds at most.
At the client, the inactivity timer is cleared upon transmission of a 
request and remains cleared until reception of the corresponding response.
At the server, the inactivity timer is cleared upon reception of a request
and remains cleared until transmission of the corresponding response.</t>

<t>For long-lived DNS Stateful operations, an operation is considered in progress
for as long as the state is active, until it is cancelled.
This means that a DSO session can exist, with a state 
active, with no messages flowing in either direction, for far longer than the 
inactivity timeout, and this is not an error. This is why there are two separate 
timers: the inactivity timeout, and the keepalive interval. Just because a DSO 
session has no traffic for an extended period of time
does not automatically make that DSO session “inactive”,
if it has an active state that is awaiting events.</t>

</section>
<section anchor="the-inactivity-timeout" title="The Inactivity Timeout">

<t>The purpose of the inactivity timeout is for the server to balance its trade off 
between the costs of setting up new DSO sessions and the costs of maintaining inactive 
DSO sessions. A server with abundant DSO session capacity can offer a high inactivity timeout, 
to permit clients to keep a speculative DSO session open for a long time, to save 
the cost of establishing a new DSO session for future communications with that 
server. A server with scarce memory resources can offer a low inactivity timeout,
to cause clients to promptly close DSO sessions whenever they have no outstanding
operations with that server, and then create a new DSO session later when needed.</t>

<section anchor="closing-inactive-dso-sessions" title="Closing Inactive DSO Sessions">

<t>A client is NOT required to wait until the inactivity timeout expires
before closing a DSO session.
A client MAY close a DSO session at any time, at the client’s discretion.
If a client determines that it has no current or reasonably anticipated
future need for an inactive DSO session, then the client SHOULD close that connection.</t>

<t>If, at any time during the life of the DSO session,
the inactivity timeout value (i.e., 15 seconds by default) elapses
without there being any operation active on the DSO session,
the client MUST gracefully close the connection with a
TLS close_notify followed by a TCP FIN (or equivalent for other protocols).</t>

<t>If, at any time during the life of the DSO session, twice the inactivity timeout value
(i.e., 30 seconds by default) elapses without there being any operation
active on the DSO session, the server SHOULD consider the client delinquent,
and forcibly abort the DSO session.
For DSO sessions over TCP (or over TLS over TCP),
to avoid the burden of having a connection in TIME-WAIT state, instead of
closing the connection gracefully the server SHOULD abort
the connection with a TCP RST (or equivalent for other protocols).
(In the BSD Sockets API this is achieved by setting the
SO_LINGER option to zero before closing the socket.)</t>

<t>In this context, an operation being active on a DSO session includes
a query waiting for a response, an update waiting for a response,
or active state,
but not a DSO Keepalive message exchange itself.
A DSO Keepalive message exchange resets only the keepalive
interval timer, not the inactivity timeout timer.</t>

<t>If the client wishes to keep an inactive DSO session open for longer than
the default duration without having to send traffic every 15 seconds,
then it uses the DSO Keepalive message to request
longer timeout values, as described in <xref target="keepalive"/>.</t>

</section>
<section anchor="values-for-the-inactivity-timeout" title="Values for the Inactivity Timeout">

<t>For the inactivity timeout value, lower values result in more frequent DSO session 
teardown and re-establishment. Higher values result in lower traffic and CPU
load on the server, but a larger memory burden to maintain state for inactive 
DSO sessions.</t>

<t>A shorter inactivity timeout with a longer keepalive interval signals to the client 
that it should not speculatively keep inactive DSO sessions open for very long without
reason, but when it does have an active reason to keep a DSO session open, it 
doesn’t need to be sending an aggressive level of keepalive traffic.</t>

<t>A longer inactivity timeout with a shorter keepalive interval signals to the client
that it may speculatively keep inactive DSO sessions open for a long time, but it
should be sending a lot of keepalive traffic on those inactive DSO sessions.
This configuration is expected to be less common.</t>

<t>To avoid repeated teardown and re-establishment of sessions,
the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with an inactivity timeout value less than ten seconds.
If a client receives a Keepalive message specifying an inactivity timeout value
less than ten seconds this is an error and the client MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

<t>This does not mean that a client is forced to keep an idle connection open for
ten seconds if it doesn’t need that — a client is free to close an idle connection whenever it chooses —
it means that servers cannot <spanx style="emph">require</spanx> a client to close an idle connection in under ten seconds.</t>

<t>[Do we really want this restriction? How soon does the client reconnect after tearing down the connection? –SC]</t>

</section>
</section>
<section anchor="keepalivetimer" title="The Keepalive Interval">

<t>The purpose of the keepalive interval is to manage the generation of
sufficient messages to maintain state in middle boxes (such at NAT gateways
or firewalls) and for the client and server to periodically verify that they
still have connectivity to each other. This allows them to clean up state
when connectivity is lost, and attempt re-connection if appropriate.</t>

<section anchor="keepalive-interval-expiry" title="Keepalive Interval Expiry">

<t>If, at any time during the life of the DSO session,
the keepalive interval value (i.e., 15 seconds by default) elapses
without any DNS messages being sent or received on a DSO session,
the client MUST take action to keep the DSO session alive,
by sending a DSO Keepalive message (see <xref target="keepalive"/>).
A DSO Keepalive message exchange resets only the keepalive timer, 
not the inactivity timer.</t>

<t>If a client disconnects from the network abruptly,
without cleanly closing its DSO session,
leaving long-lived state uncanceled,
the server learns of this after failing to
receive the required keepalive traffic from that client.
If, at any time during the life of the DSO session,
twice the keepalive interval value (i.e., 30 seconds by default) elapses
without any DNS messages being sent or received on a DSO session,
the server SHOULD consider the client delinquent,
and forcibly abort the connection with a TCP RST (or equivalent for other 
protocols).</t>

</section>
<section anchor="values-for-the-keepalive-interval" title="Values for the Keepalive Interval">

<t>For the keepalive interval value, lower values result in higher volume keepalive 
traffic. Higher values of the keepalive interval reduce traffic and CPU load, 
but have minimal effect on the memory burden
at the server, because clients keep a DSO session open for the same length of time
(determined by the inactivity timeout) regardless of the level of keepalive traffic 
required.</t>

<t>It may be appropriate for clients and servers to select different keepalive 
interval values depending on the nature of the network they are on.</t>

<t>A corporate DNS server that knows it is serving only clients on the internal 
network, with no intervening NAT gateways or firewalls, can impose a higher 
keepalive interval, because frequent keepalive traffic is not required.</t>

<t>A public DNS server that is serving primarily residential consumer clients, 
where it is likely there will be a NAT gateway on the path, may impose a lower 
keepalive interval, to generate more frequent keepalive traffic.</t>

<t>A smart client may be adaptive to its environment. A client using
a private IPv4 address <xref target="RFC1918"/> to communicate with a DNS server
at an address outside that IPv4 private address block,
may conclude that there is likely to be a NAT gateway on the path,
and accordingly request a lower keepalive interval.</t>

<t>For environments where there is a NAT gateway or firewalls on the path, it is
RECOMMENDED that clients request, and servers grant, a keepalive interval of 15
minutes. In other environments it is RECOMMENDED that clients request, and 
servers grant, a keepalive interval of 60 minutes.</t>

<t>Note that the lower the keepalive interval value, the higher the load on client
and server. For example, an keepalive interval value of 100ms would result in a
continuous stream of at least ten messages per second, in both directions,
to keep the DSO session alive. And, in this extreme example, a single packet loss and
retransmission over a long path could introduce a momentary pause in the stream of messages,
long enough to cause the server to overzealously abort the connection.</t>

<t>Because of this concern, the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with an keepalive interval value less than ten seconds.
If a client receives an Keepalive message specifying an keepalive interval value
less than ten seconds this is an error and the client MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="server-initiated-termination-on-error" title="Server-Initiated Termination on Error">

<t>After sending an error response to a client, the server MAY close the DSO session,
or may allow the DSO session to remain open. For error conditions
that only affect the single operation in question, the server SHOULD return an
error response to the client and leave the DSO session open for further operations.
For error conditions that are likely to make all operations unsuccessful in the
immediate future, the server SHOULD return an error response to the client and 
then close the DSO session by sending a Retry Delay request message, as described in 
<xref target="delay"/>.</t>

</section>
<section anchor="error" title="Client Behaviour in Receiving an Error">

<t>Upon receiving an error response from the server, a client SHOULD NOT
automatically close the DSO session. An error relating to one particular operation
on a DSO session does not necessarily imply that all other operations on that
DSO session have also failed, or that future operations will fail. The client
should assume that the server will make its own decision about whether or not to
close the DSO session, based on the server’s determination of whether the error
condition pertains to this particular operation, or would also apply to any
subsequent operations. If the server does not close the DSO session then the client
SHOULD continue to use that DSO session for subsequent operations.</t>

</section>
<section anchor="server-initiated-termination-on-overload" title="Server-Initiated Termination on Overload">

<t>A server MUST NOT close a DSO session with a client,
except in certain exceptional circumstances, as outlined below.
In normal operation, closing a DSO session is the client’s responsibility.
The client makes the determination of when to close a DSO
session based on an evaluation of both its own needs,
and the inactivity timeout value dictated by the server.</t>

<t>Situations where a server may terminate a DSO session include:</t>

<t><list style="symbols">
  <t>The server is undergoing reconfiguration or maintenance procedures
that require clients to be disconnected.</t>
  <t>The server application software or underlying operating system
is shutting down or restarting.</t>
  <t>The server application software terminates unexpectedly
(perhaps due to a bug that makes it crash).</t>
  <t>The client fails to meets its obligation to generate keepalive
traffic or close an inactive session within twice the respective
time intervals dictated by the server (see <xref target="sessiontimeouts"/>).</t>
  <t>The client sends a grossly invalid or malformed request that is
indicative of a seriously defective client implementation (see <xref target="error"/>).</t>
  <t>The server is over capacity and needs to shed some load (see <xref target="retry"/>).</t>
</list></t>

<t>When a server has to close a DSO session with a client
(because of exceptional circumstances such as those outlined above)
the server SHOULD, whenever possible, send a Retry Delay Operation TLV
(see below) informing the client of the reason for the DSO session
being closed, and allow the client five seconds to receive it
before the server resorts to forcibly aborting the connection.</t>

</section>
<section anchor="retry" title="Retry Delay Operation TLV">

<t>There may be rare cases where a server is overloaded and wishes to shed load.
If a server is low on resources it MAY simply terminate a client connection with 
a TCP RST (or equivalent for other protocols).
However, the likely behavior of the client may be simply to to treat this as a
network failure and connect
immediately, putting more burden on the server.</t>

<t>Therefore to avoid this reconnection implosion, a server SHOULD instead choose 
to shed client load by sending a Retry Delay request message, with an RCODE of 
SERVFAIL, to inform the client of the overload situation. After sending a Retry 
Delay request message, the server MUST NOT send any further messages on that 
DSO session.</t>

<t>After sending the Retry Delay request the server SHOULD allow the
client five seconds to close the connection, and if the client has not
closed the connection after five seconds then the server SHOULD abort
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>Upon receipt of a Retry Delay request from the server, the client MUST
make note of the reconnect delay for this server, and then immediately
close the connection. This is to place the burden of TCP’s TIME-WAIT state on 
the client.</t>

<t>A Retry Delay request message MUST NOT be initiated by a client.
If a server receives a Retry Delay request message this is an error
and the server MUST immediately terminate the connection with a TCP RST
(or equivalent for other protocols).</t>

<section anchor="outstanding-operations" title="Outstanding Operations">

<t>At the moment a server chooses to initiate a Retry Delay request message
there may be DNS requests already in flight from client to server on this 
DSO session, which will arrive at the server after its Retry Delay request message 
has been sent.
The server MUST silently ignore such incoming requests, and MUST NOT generate
any response messages for them. When the Retry Delay request message from the
server arrives at the client, the client will determine that any DNS requests
it previously sent on this DSO session, that have not yet received a response, now 
will certainly not be receiving any response. Such requests should be considered
failed, and should be retried at a later time, as appropriate.</t>

<t>In the case where some, but not all, of the existing operations on a DSO session 
have become invalid (perhaps because the server has been reconfigured and is no 
longer authoritative for some of the names),
but the server is terminating all DSO sessions en masse with a REFUSED (5) RCODE,
the RECONNECT DELAY MAY be zero, indicating that the clients SHOULD immediately
attempt to re-establish operations.
It is likely that some of the attempts will be successful and some will not.</t>

<t>In the case where a server is terminating a large number of DSO sessions at once
(e.g., if the system is restarting) and the server doesn’t want to be inundated 
with a flood of simultaneous retries, it SHOULD send different RECONNECT delay 
values to each client.
These adjustments MAY be selected randomly, pseudorandomly, or deterministically
(e.g., incrementing the time value by one tenth of a second for each successive
client, yielding a post-restart reconnection rate of ten clients per second).</t>

</section>
<section anchor="client-reconnection" title="Client Reconnection">

<t>After a DSO session is closed by the server, the client SHOULD try to reconnect,
to that server, or to another suitable server, if more than one is available.
If reconnecting to the same server, the client MUST respect the indicated delay
before attempting to reconnect.</t>

<t>If a particular server does not want a client to reconnect (it is being
de-commissioned), it SHOULD set the retry delay to the maximum value (which is
approximately 497 days). If the server will only be out of service for a maintenance
period, it should use a value closer to the expected maintenance window and
not default to a very large delay value or clients may not attempt to reconnect
after it resumes service.</t>

</section>
</section>
</section>
<section anchor="sharing" title="Connection Sharing">

<t>As previously specified for DNS over TCP <xref target="RFC7766"/>,
to mitigate the risk of unintentional server overload, DNS clients
MUST take care to minimize the number of concurrent TCP connections
made to any individual server.  It is RECOMMENDED that for any given
client/server interaction there SHOULD be no more than one connection
for regular queries, one for zone transfers, and one for each
protocol that is being used on top of TCP (for example, if the
resolver was using TLS).
However, it is noted that certain primary/secondary configurations
with many busy zones might need to use more than one TCP
connection for zone transfers for operational reasons
(for example, to support concurrent transfers of multiple zones).</t>

<t>A single server may support multiple services, including DNS Updates 
<xref target="RFC2136"/>, DNS Push Notifications <xref target="I-D.ietf-dnssd-push"/>,
and other services, for one or more DNS zones.
When a client discovers that the target server for several different operations
is the same target hostname and port, the client SHOULD use a single
shared DSO session for all those operations.
A client SHOULD NOT open multiple connections to the same target host and port
just because the names being operated on are different or
happen to fall within different zones.
This is to reduce unnecessary connection load on the DNS server.</t>

<t>However, server implementers and operators should be aware that connection
sharing may not be possible in all cases.
A single client device may be home to multiple independent client software
instances that don’t coordinate with each other.
Similarly, multiple independent client devices behind the same NAT gateway
will also typically appear to the DNS server as different source ports on
the same client IP address.
Because of these constraints, a DNS server MUST be prepared to accept
multiple connections from different source ports on the same client IP address.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="dso-opcode-registration" title="DSO OPCODE Registration">

<t>IANA are directed to assign a value (tentatively 6)
in the DNS OPCODEs Registry for the DSO OPCODE.</t>

</section>
<section anchor="dso-rcode-registration" title="DSO RCODE Registration">

<t>IANA are directed to assign a value (tentatively 11)
in the DNS RCODE Registry for the DSONOTIMP error code.</t>

</section>
<section anchor="dso-type-codes-registry" title="DSO Type Codes Registry">

<t>IANA are directed to create the 15-bit DSO Type Codes
Registry, with initial values as follows:</t>

<texttable>
      <ttcol align='right'>Type</ttcol>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Status</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>0x0000</c>
      <c>RetryDelay</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0001</c>
      <c>KeepAlive</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0002</c>
      <c>Encryption Padding</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0003 - 0x003F</c>
      <c>Unassigned, reserved for DSO session management TLVs</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x0040 - 0x77FF</c>
      <c>Unassigned</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x7800 - 0x7BFF</c>
      <c>Reserved for local / experimental use</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x7C00 - 0x7FFF</c>
      <c>Reserved for future expansion</c>
      <c>&#160;</c>
      <c>&#160;</c>
</texttable>

<t>Registration of additional DSO Type Codes requires publication
of an appropriate IETF “Standards Action” or “IESG Approval” document <xref target="RFC5226"/>.</t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>If this mechanism is to be used with DNS over TLS, then these messages
are subject to the same constraints as any other DNS over TLS messages
and MUST NOT be sent in the clear before the TLS session is established.</t>

<t>The data field of the “Encryption Padding” TLV could be used as a covert channel.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to
Tim Chown,
Ralph Droms,
Jan Komissar,
Manju Shankar Rao,
and Ted Lemon
for their helpful contributions to this document.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC1035;
&RFC7766;
&RFC6891;
&RFC7828;
&RFC2119;
&RFC7830;
&RFC1034;
&RFC2136;
&RFC2132;
&RFC1918;
&RFC5226;


    </references>

    <references title='Informative References'>

<reference anchor="NagleDA" target="http://www.stuartcheshire.org/papers/nagledelayedack/">
  <front>
    <title>TCP Performance problems caused by interaction between Nagle's Algorithm and Delayed ACK</title>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization></organization>
    </author>
    <date year="2005" month="May" day="20"/>
  </front>
</reference>
&RFC7858;
&RFC6763;
&I-D.ietf-dnssd-push;
&RFC0768;
&I-D.ietf-dprive-padding-policy;


    </references>



  </back>

<!-- ##markdown-source:
H4sIAB6oFVoAA+1963Icx5Xm/3yKXPCHAE13C+BV4sTGGAJBCTZJ0AAoj2d3
Y6K6uwCU2F3VrqoGCJOMmAeZfbl5kj3XzJNV1QBk0R7H7FCmCXRX5eXkyZPn
+uV4PHZt0S7y5/7Fm1N/2mZtfr5e+ONVXmdtUZWNm1ezMlvCA/M6O2/HRd6e
j+dlU63GTd408Mi4KS7KbDHefeLm8Ppz/3B379l4b2+8950rVvVz39brpn24
u/vd7kOX1Xn23B+VbV6XeeuuL6jj47f+D1X9vigv/A91tV6599fxofEL7NjN
sva5b9q5W6+wm+a5P3l54J89e/p0RD/t7T564tysmkMrz/0aRvmtWxXPnfdj
31Yz+re5Wdb5ecM/V3VLv7hs3V5WNT0Jf70vSmx84r/PF4uioY+YAifZjf2w
qi/iKP3pTdPmy8YfANGg6WK9HMGXswk9mk2ndX4FT58e0O8NdJ3DfL57susP
LrMa2gDi42f09axob6C7fH5dVXN/AL/xx9UcRnGw7797vPv0kXy0LtsaHn53
uk8frC6rEh76hz3/FNp+/PCR3wPS01f5MisWz32d3fymaGYTGH465dMJjCVv
Los6N5M+bdcwvvQbmvn+arXI4xR1Snvw0XlRFm3uX1XVysznYA1c1RZl1ZnM
k929x3dN5vHut/67Z4/9o4e7z+xkZjKs32Q4msmsWqZz+u3EvyhmwFlNVZpJ
/ba6LDtf0JxOYXTzdRlX9SyfXZbVoroo8iZZSXnSTp1+HvvX2UU2zxZ56Q9y
mE4uHx9/OK/quT+dFXk5y/3brH5vaMPfGsIc//Nj//iH/Q5dkKxz/ztg8TnN
NNDh52z+m4aH1CfC6TARTrM6+y9FhAYmtJkK+xMYVQmTNSTYx81clfYLJgEM
vYHBzHLbfsZPT5b09G8u8NN+P2cT/3bdgIiqC9PTWbVMP6Z+3pXZ+XmxKODj
ebKLtrasIIDRFBeXhjBvDvzDZ093v71r23y3953/9ukzv/foUSIDVjKS30yz
8uJnmoMrSpjwEqT+VY6r+Ca7WOQv9nlB26y+wGFdtu3q+TffXF9fTxqSC7r/
UJp8s8pggzfflPjmPF9kN/k8m73/hlvgU+bs4K1/m9fUE3LAqq6mCxSbs2zd
wKpOb4CIMLJshqePn+btdQ5MRIP5qoH1uqjqor1c+qyc+xfch98/+B2zZRDk
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
8wAA

-->

</rfc>

