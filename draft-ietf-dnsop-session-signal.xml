<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.7 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC7766 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7766.xml">
<!ENTITY RFC6891 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6891.xml">
<!ENTITY RFC7828 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7828.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC8174 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY RFC2136 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2136.xml">
<!ENTITY RFC7830 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7830.xml">
<!ENTITY RFC1034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC1918 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1918.xml">
<!ENTITY RFC5382 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5382.xml">
<!ENTITY RFC2132 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2132.xml">
<!ENTITY RFC5226 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5226.xml">
<!ENTITY RFC7858 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7858.xml">
<!ENTITY RFC2782 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2782.xml">
<!ENTITY RFC6335 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6335.xml">
<!ENTITY I-D.ietf-dnssd-push SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dnssd-push.xml">
<!ENTITY I-D.sctl-dnssd-mdns-relay SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.sctl-dnssd-mdns-relay.xml">
<!ENTITY RFC6763 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6763.xml">
<!ENTITY RFC0768 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.0768.xml">
<!ENTITY RFC7413 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7413.xml">
<!ENTITY I-D.ietf-tls-tls13 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-tls-tls13.xml">
<!ENTITY RFC1122 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1122.xml">
<!ENTITY I-D.ietf-dprive-padding-policy SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dprive-padding-policy.xml">
]>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-dnsop-session-signal-06" category="std" updates="RFC 7766, RFC 1035">

  <front>
    <title>DNS Stateful Operations</title>

    <author initials="R." surname="Bellis" fullname="Ray Bellis">
      <organization abbrev="ISC">Internet Systems Consortium, Inc.</organization>
      <address>
        <postal>
          <street>950 Charter Street</street>
          <city>Redwood City</city>
          <code>CA 94063</code>
          <country>USA</country>
        </postal>
        <phone>+1 650 423 1200</phone>
        <email>ray@isc.org</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>1 Infinite Loop</street>
          <city>Cupertino</city>
          <code>CA 95014</code>
          <country>USA</country>
        </postal>
        <phone>+1 408 974 3207</phone>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="J." surname="Dickinson" fullname="John Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>jad@sinodun.com</email>
      </address>
    </author>
    <author initials="S." surname="Dickinson" fullname="Sara Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>sara@sinodun.com</email>
      </address>
    </author>
    <author initials="T." surname="Lemon" fullname="Ted Lemon">
      <organization>Barefoot Consulting</organization>
      <address>
        <postal>
          <street>Brattleboro</street>
          <code>VT 05301</code>
          <country>USA</country>
        </postal>
        <email>mellon@fugue.com</email>
      </address>
    </author>
    <author initials="T." surname="Pusateri" fullname="Tom Pusateri">
      <organization>Unaffiliated</organization>
      <address>
        <postal>
          <street></street>
          <city>Raleigh</city>
          <code>NC 27608</code>
          <country>USA</country>
        </postal>
        <phone>+1 919 867 1330</phone>
        <email>pusateri@bangj.com</email>
      </address>
    </author>

    <date year="2018" month="January" day="26"/>

    <area>Internet</area>
    <workgroup>DNSOP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document defines a new DNS OPCODE for DNS Stateful Operations (DSO).
DSO messages communicate operations within persistent
stateful sessions, using type-length-value (TLV) syntax.
Three TLVs are defined that manage session timeouts,
termination, and encryption padding, and 
a framework is defined for extensions to enable new stateful operations.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The use of transports for DNS other than UDP is being increasingly specified,
for example, DNS over TCP <xref target="RFC1035"/> <xref target="RFC7766"/> and DNS over TLS <xref target="RFC7858"/>.
Such transports can offer persistent, long-lived sessions and therefore when
using them for transporting DNS messages it is of benefit to have a mechanism
that can establish parameters associated with those sessions, such as timeouts.
In such situations it is also advantageous to support server-initiated messages.</t>

<t>The existing EDNS(0) Extension Mechanism for DNS <xref target="RFC6891"/> is explicitly
defined to only have “per-message” semantics. While EDNS(0) has been used to
signal at least one session-related parameter (the EDNS(0) TCP Keepalive option
<xref target="RFC7828"/>) the result is less than optimal due to the restrictions
imposed by the EDNS(0) semantics and the lack of server-initiated signalling. 
For example, a server cannot arbitrarily 
instruct a client to close a connection because the server can only send EDNS(0) options 
in responses to queries that contained EDNS(0) options.</t>

<t>This document defines a new DNS OPCODE, DSO (tentatively 6), for DNS Stateful Operations.
DSO messages are used to communicate operations within persistent
stateful sessions, expressed using type-length-value (TLV) syntax.
This document defines an initial set of three TLVs,
used to manage session timeouts, termination, and encryption padding.</t>

<t>The three TLVs defined here are all mandatory for all implementations of DSO.
Further TLVs may be defined in additional specifications.</t>

<t>The format for DSO messages
(<xref target="format"/>) differs somewhat from the traditional DNS message
format used for standard queries and responses.
The standard twelve-byte header is used, but the four count fields
(QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) are set to zero and accordingly their
corresponding sections are not present.
The actual data pertaining to DNS Stateful Operations
(expressed in TLV syntax) is appended to the end of the DNS message header.
When displayed using packet analyzer tools that have not been
updated to recognize the DSO format, this
will result in the DSO data being displayed
as unknown additional data after the end of the DNS message.
It is likely that future updates to these tools will add the ability
to recognize, decode, and display the DSO data.</t>

<t>This new format has distinct advantages over an RR-based format because it
is more explicit and more compact. Each TLV definition is specific
to its use case, and as a result contains no redundant or overloaded fields.
Importantly, it completely avoids conflating DNS Stateful Operations in any way 
with normal DNS operations or with existing EDNS(0)-based functionality.
A goal of this approach is to avoid the operational issues that have
befallen EDNS(0), particularly relating to middlebox behaviour.</t>

<t>With EDNS(0), multiple options may be packed into a single OPT pseudo-RR,
and there is no generalized mechanism for a client to be able to tell
whether a server has processed or otherwise acted upon each individual
option within the combined OPT pseudo-RR.
The specifications for each individual option need to define how each
different option is to be acknowledged, if necessary.</t>

<t>In contrast to EDNS(0), with DSO there is no
compelling motivation to pack multiple operations into a single
message for efficiency reasons, because DSO
always operates using a connection-oriented transport protocol.
Each DSO operation is communicated in its own separate
DNS message, and the transport protocol can take care of packing
several DNS messages into a single IP packet if appropriate.
For example, TCP can pack multiple small DNS messages into a single TCP segment.
This simplification allows for clearer semantics.
Each DSO request message communicates just one primary operation,
and the RCODE in the corresponding response message indicates the
success or failure of that operation.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="terminology" title="Terminology">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and
“OPTIONAL” in this document are to be interpreted as described in
“Key words for use in RFCs to Indicate Requirement Levels” <xref target="RFC2119"/> <xref target="RFC8174"/>.</t>

<t>“DSO” is used to mean DNS Stateful Operation.</t>

<t>The term “connection” means a bidirectional byte (or message) stream,
where the bytes (or messages) are delivered reliably and in-order,
such as provided by using
DNS over TCP <xref target="RFC1035"/> <xref target="RFC7766"/> or DNS over TLS <xref target="RFC7858"/>.</t>

<t>At present, DSO is specified only for DNS over TCP, and for DNS over TLS over TCP.
Any use of DSO over some other connection technology needs to be
specified in an appropriate document.</t>

<t>Determining whether a given connection is using DNS over TCP, or DNS over TLS over TCP,
is outside the scope of this specification, and must be determined using some out-of-band
configuration information. There is no provision within the DSO specification to turn
TLS on or off during the lifetime of a connection.
For service types where the service instance is discovered using a DNS SRV record <xref target="RFC2782"/>,
the specification for that service type SRV name <xref target="RFC6335"/>
will state whether the connection uses plain TCP, or TLS over TCP.
For example, the specification for the
“_dns‑push‑tls._tcp” service <xref target="I-D.ietf-dnssd-push"/>,
states that it uses TLS.
It is a common convention that protocols specified to run over TLS
are given IANA service type names ending in “‑tls”.</t>

<t>The unqualified term “session” in the context of this document means the exchange of
DNS messages over a connection where:</t>

<t><list style="symbols">
  <t>The connection between client and server is persistent and relatively
long-lived (i.e., minutes or hours, rather than seconds).</t>
  <t>Either end of the connection may initiate messages to the other.</t>
</list></t>

<t>In this document the term “session” is used exclusively as described
above, and is in no way related to the anachronistic term “session”
as used in the obsolete “seven-layer model” that shaped the design
of the failed OSI protocols of the 1980s.</t>

<t>A “DSO Session” is established between two endpoints that acknowledge
persistent DNS state via the exchange of DSO messages over the connection.
This is distinct from a DNS-over-TCP session as described in
the previous specification for DNS over TCP <xref target="RFC7766"/>.</t>

<t>A “DSO Session” is terminated when the underlying connection is closed.
The underlying connection can be closed in two ways:</t>

<t>Where this specification says, “close gracefully,”
that means sending a TLS close_notify followed by a TCP FIN,
or the equivalents for other protocols.
Where this specification requires a connection to be closed gracefully,
the requirement to initiate that graceful close is placed on the client,
to place the burden of TCP’s TIME-WAIT state on the client rather than the server.</t>

<t>Where this specification says, “forcibly abort,”
that means sending a TCP RST,
or the equivalent for other protocols.
In the BSD Sockets API this is achieved by setting the
SO_LINGER option to zero before closing the socket.</t>

<t>In protocol implementation there are generally two kinds of errors
that software writers have to deal with.
The first is situations that arise due to factors in the environment,
such as temporary loss of connectivity. While undesirable, these
situations do not indicate a flaw in the software, and they are
situations that software should generally be able to recover from.
The second is situations that should never happen when communicating
with a correctly-implemented peer.
If they do happen, they indicate a serious flaw in the protocol implementation,
beyond what it is reasonable to expect software to recover from.
This document describes this latter form of error condition as a
“fatal error” and specifies that an implementation encountering
a fatal error condition “MUST forcibly abort the connection immediately”.
Given that these fatal error conditions signify defective software,
and given that defective software is likely to remain defective for
some time until it is fixed, after forcibly aborting a connection,
a client SHOULD refrain from automatically reconnecting to that same
server for at least one hour.</t>

<t>The term “server” means the software with a listening socket, awaiting
incoming connection requests.</t>

<t>The term “client” means the software which initiates a connection
to the server’s listening socket.</t>

<t>The terms “initiator” and “responder” correspond respectively to the
initial sender and subsequent receiver of a DSO request message,
regardless of which was the “client” and “server” in the usual DNS sense.</t>

<t>The term “sender” may apply to
either an initiator (when sending a DSO request message)
or a responder (when sending a DSO response message).</t>

<t>Likewise, the term “receiver” may apply to
either a responder (when receiving a DSO request message)
or an initiator (when receiving a DSO response message).</t>

<t>The term “long-lived operations” refers to operations
such as Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/>,
Discovery Relay interface subscriptions <xref target="I-D.sctl-dnssd-mdns-relay"/>,
and other future long-lived DNS operations that choose to use
DSO as their basis, that establish state that persists beyond
the lifetime of a traditional brief request/response transaction.
This document, the base specification for DNS Stateful Operations,
defines a framework for supporting long-lived operations,
but does not itself define any long-lived operations.
Nonetheless, to appreciate the design rationale behind
DNS Stateful Operations, it is helpful to understand
the kind of long-lived operations that it is intended to support.</t>

<t>DNS Stateful Operations uses three kinds of message:
“DSO request messages”, “DSO response messages”, and
“DSO unacknowledged messages”.
A DSO request message elicits a DSO response message.
DSO unacknowledged messages are unidirectional messages and do not generate any response.</t>

<t>Both DSO request messages and DSO unacknowledged messages are formatted as DNS
request messages (the header QR bit is set to zero, as described in <xref target="format"/>).
One difference is that in DSO request messages the MESSAGE ID field is nonzero;
in DSO unacknowledged messages it is zero.</t>

<t>The content of DSO messages is expressed using type-length-value (TLV) syntax.</t>

<t>In a DSO request message or DSO unacknowledged message
the first TLV is referred to as the “Primary TLV”
and determines the nature of the operation being performed,
including whether it is an acknowledged or unacknowledged operation;
any other TLVs in a DSO request message are referred to as “Additional TLVs”
and serve additional non-primary purposes, which may be related to
the primary purpose, or not, as in the case of the encryption padding TLV.</t>

<t>A DSO response message may contain no TLVs, or it may contain one
or more TLVs as appropriate to the information being communicated.
In the context of DSO response messages,
one or more TLVs with the same DSO-TYPE as the Primary TLV in the
corresponding DSO request message are referred to as “Response Primary TLVs”.
Any other TLVs with different DSO-TYPEs are referred to as “Response Additional TLVs”.
The Response Primary TLV(s), if present, MUST occur first in the response message,
before any Response Additional TLVs.</t>

<t>Two timers (elapsed time since an event) are defined in this document:</t>

<t><list style="symbols">
  <t>an inactivity timer (see <xref target="inactivetimer"/> and <xref target="keepalive"/>)</t>
  <t>a keepalive timer (see <xref target="keepalivetimer"/> and <xref target="keepalive"/>)</t>
</list></t>

<t>The timeouts associated with these timers are called
the inactivity timeout and 
the keepalive interval, respectively. 
The term “Session Timeouts” is used to refer to this pair of timeout values.</t>

<t>Resetting a timer means resetting the timer value to zero and starting the timer again.
Clearing a timer means resetting the timer value to zero but NOT starting the timer again.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="discussion" title="Discussion">

<t>There are several use cases for DNS Stateful operations that can 
be described here.</t>

<t>Firstly, establishing session parameters such as server-defined timeouts is of 
great use in the 
general management of persistent connections. For example, using DSO sessions 
for stub-to-recursive DNS-over-TLS <xref target="RFC7858"/> is more flexible for both the 
client and the server than attempting to manage sessions using just the EDNS(0)
TCP Keepalive option <xref target="RFC7828"/>.
The simple set of TLVs defined in this document is
sufficient to greatly enhance connection management for this use case.</t>

<t>Secondly, DNS-SD <xref target="RFC6763"/> has evolved into a naturally session-based mechanism where,
for example, long-lived subscriptions lend themselves to ‘push’ mechanisms as 
opposed to polling. Long-lived stateful connections and server-initiated 
messages align with this use case <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>A general use case is that DNS traffic is often bursty but session establishment 
can be expensive. One challenge with long-lived connections is to maintain 
sufficient traffic to maintain NAT and firewall state.
To mitigate this issue this document introduces a
new concept for the DNS, that is DSO “Keepalive traffic”.
This traffic carries no DNS data and is not considered ‘activity’
in the classic DNS sense, but serves to maintain state in middleboxes,
and to assure client and server that they still have connectivity to each other.</t>

<t>There are a myriad of other potential use cases for DSO given the versatility 
and extensibility of this specification.</t>

<t><xref target="details"/> of this document describes the protocol details of DNS Stateful Operations
including definitions of three TLVs for session management and encryption padding.
<xref target="lifecycle"/> presents a detailed discussion of the DSO Session lifecycle
including an in-depth discussion of keepalive traffic and session termination.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="details" title="Protocol Details">

<section anchor="establishment" title="DSO Session Establishment">

<t>DSO messages MUST be carried in only protocols and in
environments where a session may be established according to the definition
given above in the Terminology section (<xref target="terminology"/>).
Standard DNS over TCP <xref target="RFC1035"/> <xref target="RFC7766"/>, and DNS over TLS <xref target="RFC7858"/>
are suitable protocols.</t>

<t>DNS over plain UDP <xref target="RFC0768"/> is not appropriate since it fails on the requirement for
in-order message delivery, and, in the presence of NAT gateways and firewalls
with short UDP timeouts, it fails to provide a persistent bi-directional
communication channel unless an excessive amount of keepalive traffic is used.</t>

<t>In some environments it may be known in advance by external means
that both client and server support DSO, and in these cases either
client or server may initiate DSO messages at any time.</t>

<t>However, in the typical case a server will not know in advance whether a
client supports DSO, so in general, unless it is known in advance by other means
that a client does support DSO, a server MUST NOT initiate DSO request messages
until a DSO Session has been mutually established, as described below.
Similarly, unless it is known in advance by other means that a server
does support DSO, a client MUST NOT initiate non-response-requiring
DSO request messages until after a DSO Session has been mutually established.</t>

<t>Whether or not a given DSO request message elicits a response is
determined by whether or not the first DSO TLV (<xref target="tlvsyntax"/>)
in the message (the Primary TLV) is one that is specified to generate a response.
Whether a Primary TLV will be specified to elicit a response will depend
on the intended use pattern for that particular TLV.</t>

<t>A DSO Session is established over a connection by the client
sending a DSO request message of a kind that requires a response,
such as the DSO Keepalive TLV (<xref target="keepalive"/>),
and receiving a response, with matching MESSAGE ID, and RCODE
set to NOERROR (0), indicating that the DSO request was successful.</t>

<t>If the RCODE is set to DSONOTIMP (tentatively 11) this indicates
that the server does support DSO, but does not support the particular
operation the client requested.
A server MUST NOT return DSONOTIMP for the DSO Keepalive TLV,
but in the future if a client attempts to establish a DSO Session
using a newly-defined response-requiring DSO TLV that the server
does not understand, that would result in a DSONOTIMP response.
If the server returns DSONOTIMP then a DSO Session is not
considered established, but the client is permitted to continue
sending DNS messages on the connection,
including other response-requiring DSO messages such as the DSO Keepalive,
which may result in a successful NOERROR response,
yielding the establishment of a DSO Session.</t>

<t>If the RCODE is set to any value other than NOERROR (0) or DSONOTIMP
(tentatively 11), then the client should assume that the server does
not support DSO. In this case the client is permitted to continue
sending DNS messages on that connection, but the client SHOULD NOT
issue further DSO messages on that connection.</t>

<t>When the server receives a response-requiring DSO request message
from a client, and transmits a successful NOERROR response to that
request, the server considers the DSO Session established.</t>

<t>When the client receives the server’s NOERROR response to its
DSO request message, the client considers the DSO Session established.</t>

<t>Once a DSO Session has been established,
either end may unilaterally send DSO messages at any time,
and therefore either client or server may be the initiator of a message.</t>

<t>Once a DSO Session has been established,
clients and servers should behave as described in this specification with
regard to inactivity timeouts and session termination, not as previously
prescribed in the earlier specification for DNS over TCP <xref target="RFC7766"/>.</t>

<t>Note that for clients that implement only the TLVs defined in this base specification,
sending a DSO Keepalive TLV is the only response-requiring
DSO request message they have available to initiate a DSO Session.
Even for clients that do implement other DSO TLVs, for simplicity
they MAY elect to always send an initial DSO Keepalive
request message as their way of initiating a DSO Session.</t>

<t><vspace blankLines='999' /></t>

<section anchor="sharing" title="Connection Sharing">

<t>As previously specified for DNS over TCP <xref target="RFC7766"/>:</t>

<figure><artwork><![CDATA[
   To mitigate the risk of unintentional server overload, DNS
   clients MUST take care to minimize the number of concurrent
   TCP connections made to any individual server.  It is RECOMMENDED
   that for any given client/server interaction there SHOULD be
   no more than one connection for regular queries, one for zone
   transfers, and one for each protocol that is being used on top
   of TCP (for example, if the resolver was using TLS). However,
   it is noted that certain primary/secondary configurations
   with many busy zones might need to use more than one TCP
   connection for zone transfers for operational reasons (for
   example, to support concurrent transfers of multiple zones).
]]></artwork></figure>

<t>A single server may support multiple services, including DNS Updates 
<xref target="RFC2136"/>, DNS Push Notifications <xref target="I-D.ietf-dnssd-push"/>,
and other services, for one or more DNS zones.
When a client discovers that the target server for several different operations
is the same target hostname and port, the client SHOULD use a single
shared DSO Session for all those operations.
A client SHOULD NOT open multiple connections to the same target host and port
just because the names being operated on are different or
happen to fall within different zones.
This requirement is to reduce unnecessary connection load on the DNS server.</t>

<t>However, server implementers and operators should be aware that connection
sharing may not be possible in all cases.
A single host device may be home to multiple independent client software
instances that don’t coordinate with each other.
Similarly, multiple independent client devices behind the same NAT gateway
will also typically appear to the DNS server as different source ports on
the same client IP address.
Because of these constraints, a DNS server MUST be prepared to accept
multiple connections from different source ports on the same client IP address.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="zero-round-trip-operation" title="Zero Round-Trip Operation">

<t>There is increased awareness today of the performance benefits
of eliminating round trips in session establishment.
Technologies like TCP Fast Open <xref target="RFC7413"/>
and TLS 1.3 <xref target="I-D.ietf-tls-tls13"/>
provide mechanisms to reduce or eliminate
round trips in session establishment.</t>

<t>Similarly, DSO supports zero round-trip operation.</t>

<t>Having initiated a connection to a server, possibly using
zero round-trip TCP Fast Open and/or
zero round-trip TLS 1.3, a client MAY send multiple
response-requiring DSO request messages to the server in succession
without having to wait for a response to the first request message
to confirm successful establishment of a DSO session.</t>

<t>However, a client MUST NOT send non-response-requiring DSO request
messages until after a DSO Session has been mutually established.</t>

<t>Similarly, a server MUST NOT send DSO request messages until it
has received a response-requiring DSO request message from a
client and transmitted a successful NOERROR response for that request.</t>

</section>
<section anchor="middlebox-considerations" title="Middlebox Considerations">

<t>Where an application-layer middlebox (e.g., a DNS proxy, forwarder, or
session multiplexer) is in the path, the middlebox MUST NOT blindly
forward DSO messages in either direction, and MUST treat the inbound
and outbound connections as separate sessions.  This does not preclude
the use of DSO messages in the presence of an IP-layer middlebox, such
as a NAT that rewrites IP-layer and/or transport-layer headers but
otherwise preserves the effect of a single session between the client
and the server.</t>

<t>To illustrate the above, consider a network where a middlebox
terminates one or more TCP connections from clients and multiplexes the
queries therein over a single TCP connection to an upstream server.
The DSO messages and any associated state are specific to the individual
TCP connections.  A DSO-aware middlebox MAY in some circumstances be
able to retain associated state and pass it between the client and
server (or vice versa) but this would be highly TLV-specific.  For
example, the middlebox may be able to maintain a list of which clients
have made Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/> and
make its own subscription(s) on their behalf, relaying any subsequent
notifications to the client (or clients) that have subscribed to that
particular notification.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="format" title="Message Format">

<t>A DSO message begins with
the standard twelve-byte DNS message header <xref target="RFC1035"/>
with the OPCODE field set to the DSO OPCODE (tentatively 6).
However, unlike standard DNS messages, the question section, answer section,
authority records section and additional records sections are not present.
The corresponding count fields (QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) MUST be
set to zero on transmission.</t>

<t>If a DSO message is received where any of the count fields are
not zero, then a FORMERR MUST be returned,
unless a future IETF Standard specifies otherwise.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                          MESSAGE ID                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |QR |    OPCODE     |            Z              |     RCODE     |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     QDCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ANCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     NSCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ARCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                           DSO Data                            /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><vspace blankLines='999' /></t>

<section anchor="header" title="DNS Header Fields in DSO Messages">

<t>In an unacknowledged message the MESSAGE ID field MUST be set to zero.
In an acknowledged request message the MESSAGE ID field MUST
be set to a unique nonzero value, that the initiator is not
currently using for any other active operation on this connection.
For the purposes here, a MESSAGE ID is in use in this DSO Session if the
initiator has used it in a request for which it is still awaiting a response,
or if the client has used it to setup a long-lived operation that has not yet been cancelled.
For example, a long-lived operation could be
a Push Notification subscription <xref target="I-D.ietf-dnssd-push"/> or
a Discovery Relay interface subscription <xref target="I-D.sctl-dnssd-mdns-relay"/>.</t>

<t>Whether a message is acknowledged or unacknowledged is
determined only by the specification for the Primary TLV.
An acknowledgment cannot be requested by including a nonzero message ID
in a message the primary TLV of which is specified to be unacknowledged,
nor can an acknowledgment be prevented by sending a message ID of zero
in a message with a primary TLV that is specified to be acknowledged.
A responder that receives either such malformed message MUST treat it
as a fatal error and forcibly abort the connection immediately.</t>

<t>In a request or unacknowledged message the DNS Header QR bit MUST be zero (QR=0).
If the QR bit is not zero the message is not a request or unacknowledged message.</t>

<t>In a response message the DNS Header QR bit MUST be one (QR=1).<vspace />
If the QR bit is not one the message is not a response message.</t>

<t>In a response message (QR=1) the MESSAGE ID field MUST contain a copy of the value of
the MESSAGE ID field in the request message being responded to.
In a response message (QR=1) the MESSAGE ID field MUST NOT be zero.
If a response message (QR=1) is received where the MESSAGE ID is zero
this is a fatal error and the receiver MUST forcibly abort the connection immediately.</t>

<t>The DNS Header OPCODE field holds the DSO OPCODE value (tentatively 6).</t>

<t>The Z bits are currently unused in DSO messages,
and in both DSO requests and DSO responses the
Z bits MUST be set to zero (0) on transmission and MUST be silently ignored
on reception, unless a future IETF Standard specifies otherwise.</t>

<t><vspace blankLines='999' /></t>

<t>In a DNS request message (QR=0) the RCODE is set according to the definition of the request.
For example, in a Retry Delay request message (<xref target="retry"/>) the RCODE indicates the reason for termination.
However, in most cases, except where clearly specified otherwise,
in a DNS request message (QR=0) the RCODE is set to zero on transmission,
and silently ignored on reception.</t>

<t>The RCODE value in a response message (QR=1) may be one of the following values:</t>

<texttable>
      <ttcol align='right'>Code</ttcol>
      <ttcol align='left'>Mnemonic</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>0</c>
      <c>NOERROR</c>
      <c>Operation processed successfully</c>
      <c>1</c>
      <c>FORMERR</c>
      <c>Format error</c>
      <c>2</c>
      <c>SERVFAIL</c>
      <c>Server failed to process request due to a problem with the server</c>
      <c>3</c>
      <c>NXDOMAIN</c>
      <c>Name Error — Named entity does not exist (TLV-dependent)</c>
      <c>4</c>
      <c>NOTIMP</c>
      <c>DSO not supported</c>
      <c>5</c>
      <c>REFUSED</c>
      <c>Operation declined for policy reasons</c>
      <c>9</c>
      <c>NOTAUTH</c>
      <c>Not Authoritative (TLV-dependent)</c>
      <c>11</c>
      <c>DSONOTIMP</c>
      <c>DSO type code not supported</c>
</texttable>

<t>Use of the above RCODEs is likely to be common in DSO but 
does not preclude the definition and use of other codes in future documents that 
make use of DSO.</t>

<t>If a document defining a new DSO TLV makes use of NXDOMAIN (Name Error)
or NOTAUTH (Not Authoritative) then that document MUST specify the specific
interpretation of these RCODE values in the context of that new DSO TLV.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="dsodata" title="DSO Data">

<t>The standard twelve-byte DNS message header with its
zero-valued count fields is followed by the DSO Data,
expressed using TLV syntax, as described below <xref target="tlvsyntax"/>.</t>

<t>A DSO message may be a request message, a response message, or an unacknowledged message.</t>

<t>A DSO request message or DSO unacknowledged message MUST contain at least one TLV.
The first TLV in a DSO request message or DSO unacknowledged message is referred to as the “Primary TLV”
and determines the nature of the operation being performed,
including whether it is an acknowledged or unacknowledged operation.
In some cases it may be appropriate to include other TLVs in a request message,
such as the Encryption Padding TLV (<xref target="padding"/>),
and these extra TLVs are referred to as the “Additional TLVs”.</t>

<t>A DSO response message may contain no TLVs,
or it may be specified to contain one or more TLVs
appropriate to the information being communicated.</t>

<t>A DSO response message may contain one or more TLVs with
DSO-TYPE the same as the Primary TLV from the corresponding DSO request message,
in which case those TLV(s) are referred to as “Response Primary TLVs”.
A DSO response message is not required to carry Response Primary TLVs.
The MESSAGE ID field in the DNS message header is sufficient to identify
to which DSO request message this response message relates.</t>

<t>A DSO response message may contain one or more TLVs with
DSO-TYPEs different from the Primary TLV from the corresponding DSO request message,
in which case those TLV(s) are referred to as “Response Additional TLVs”.</t>

<t>Response Primary TLV(s), if present, MUST occur first in the response message,
before any Response Additional TLVs.</t>

<t>It is anticipated that most DSO operations will be specified
to use request messages, which generate corresponding responses.
In some specialized high-traffic use cases,
it may be appropriate to specify unacknowledged messages.
Unacknowledged messages can be more efficient on the network,
because they don’t generate a stream of corresponding reply messages.
Using unacknowledged messages can also simplify software
in some cases, by removing need for an initiator to maintain
state while it waits to receive replies it doesn’t care about.
When the specification for a particular TLV states that,
when used as a Primary TLV (i.e., first) in an outgoing DNS request message (i.e., QR=0),
that message is to be unacknowledged,
the MESSAGE ID field MUST be set to zero and
the receiver MUST NOT generate any response message
corresponding to this unacknowledged message.</t>

<t>The previous point, that the receiver MUST NOT generate responses to
unacknowledged messages, applies even in the case of errors.
When a DSO message is received where both the QR bit and the MESSAGE ID field
are zero, the receiver MUST NOT generate any response.
For example, if the DSO-TYPE in the Primary TLV is unrecognized,
then a DSONOTIMP error MUST NOT be returned; instead the receiver
MUST forcibly abort the connection immediately.</t>

<t>Unacknowledged messages MUST NOT be used “speculatively”
in cases where the sender doesn’t know if the receiver supports
the Primary TLV in the message, because there is no way to receive
any response to indicate success or failure of the request message
(the request message does not contain a unique MESSAGE ID with
which to associate a response with its corresponding request).
Unacknowledged messages are only appropriate in cases
where the sender already knows that the receiver supports,
and wishes to receive, these messages.</t>

<t>For example, after a client has subscribed for Push Notifications
<xref target="I-D.ietf-dnssd-push"/>, the subsequent event notifications are
then sent as unacknowledged messages, and this is appropriate
because the client initiated the message stream by virtue of its
Push Notification subscription, thereby indicating its support of
Push Notifications, and its desire to receive those notifications.</t>

<t>Similarly, after an mDNS Relay client has subscribed to receive inbound
mDNS traffic from an mDNS Relay, the subsequent stream of received
packets is then sent using unacknowledged messages, and this
is appropriate because the client initiated the message stream
by virtue of its mDNS Relay link subscription, thereby indicating
its support of mDNS Relay, and its desire to receive inbound mDNS
packets over that DSO session <xref target="I-D.sctl-dnssd-mdns-relay"/>.</t>

<t><vspace blankLines='999' /></t>

<section anchor="tlvsyntax" title="TLV Syntax">

<t>All TLVs, whether used as “Primary”, “Additional”, “Response Primary”,
or “Response Additional”, use the same encoding syntax.</t>

<t>The specification for a TLV states whether that DSO-TYPE may be used in
“Primary”, “Additional”, “Response Primary”, or “Response Additional” TLVs.
The specification for a TLV also states whether,
when used as the Primary (i.e., first) TLV in a DNS request message (i.e., QR=0),
that DSO message is to be acknowledged.
If the DSO message is to be acknowledged, the specification
also states which TLVs, if any, are to be included in the response.
The Primary TLV may or may not be contained in the response,
depending on what is stated in the specification for that TLV.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                            DSO-TYPE                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                        DSO DATA LENGTH                        |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                      TYPE-DEPENDENT DATA                      /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='DSO-TYPE:'>
  A 16-bit unsigned integer, in network (big endian) byte order,
giving the type of the current DSO TLV per the IANA DSO Type Code Registry.</t>
  <t hangText='DSO DATA LENGTH:'>
  A 16-bit unsigned integer, in network (big endian) byte order,
giving the size in bytes of the TYPE-DEPENDENT DATA.</t>
  <t hangText='TYPE-DEPENDENT DATA:'>
  Type-code specific format. The generic DSO machinery treats the
TYPE-DEPENDENT DATA as an opaque “blob” without attempting to interpret it.
Interpretation of the meaning of the TYPE-DEPENDENT DATA for a particular
DSO-TYPE is the responsibility of the software that implements that DSO-TYPE.</t>
</list></t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="request-tlvs" title="Request TLVs">

<t>The first TLV in a DSO request message is the “Primary TLV”
and indicates the operation to be performed.
A DSO request message MUST contain at at least one TLV, the Primary TLV.</t>

<t>Immediately following the Primary TLV, a DSO request message
MAY contain one or more “Additional TLVs”, which specify
additional parameters relating to the operation.</t>

</section>
<section anchor="response-tlvs" title="Response TLVs">

<t>Depending on the operation, a DSO response message MAY contain no TLVs,
because it is simply a response to a previous request message, and the
MESSAGE ID in the header is sufficient to identify the request in question.
Or it may contain a single response TLV, with the same DSO-TYPE as the
Primary TLV in the request message.
Alternatively it may contain one or more TLVs of other
types, or a combination of the above, as appropriate
for the information that needs to be communicated.
The specification for each DSO TLV determines
what TLVs are required in a response to a request using that TLV.</t>

<t>If a DSO response is received for an operation where the specification
requires that the response carry a particular TLV or TLVs,
and the required TLV(s) are not present, then this is a fatal
error and the recipient of the defective response message MUST
forcibly abort the connection immediately.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="unrecognized-tlvs" title="Unrecognized TLVs">

<t>If DSO request is received containing an unrecognized Primary TLV,
with a nonzero MESSAGE ID (indicating that a response is expected),
then the receiver MUST send a response with matching MESSAGE ID,
and RCODE DSONOTIMP (tentatively 11).
The response MUST NOT contain a copy of the unrecognized Primary TLV.</t>

<t>If DSO request is received containing an unrecognized Primary TLV,
with a zero MESSAGE ID (indicating that no response is expected),
then this is a fatal error and the receiver
MUST forcibly abort the connection immediately.</t>

<t>If a DSO request message is received where the Primary TLV is recognized,
containing one or more unrecognized Additional TLVs, the unrecognized
Additional TLVs MUST be silently ignored, and the remainder of the message
is interpreted and handled as if the unrecognized parts were not present.</t>

<t>Similarly, if a DSO response message is received containing one
or more unrecognized TLVs, the unrecognized TLVs MUST be silently
ignored, and the remainder of the message is interpreted and
handled as if the unrecognized parts were not present.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="edns0-and-tsig" title="EDNS(0) and TSIG">

<t>Since the ARCOUNT field MUST be zero, a DSO message
MUST NOT contain an EDNS(0) option in the additional records section.
If functionality provided by current or future EDNS(0) options
is desired for DSO messages, one or more new DSO TLVs
need to be defined to carry the necessary information.</t>

<t>For example, the EDNS(0) Padding Option <xref target="RFC7830"/> used for security purposes
is not permitted in a DSO message,
so if message padding is desired for DSO messages
then the Encryption Padding TLV described in <xref target="padding"/> MUST be used.</t>

<t>Similarly, a DSO message MUST NOT contain a TSIG record.
A TSIG record in a conventional DNS message is added as the last record in
the additional records section, and carries a signature computed over the
preceding message content. Since DSO data appears <spanx style="strong">after</spanx> the additional
records section, it would not be included in the signature calculation. 
If use of signatures with DSO messages becomes necessary in the 
future, a new DSO TLV needs to be defined to perform this function.</t>

<t>Note however that, while DSO <spanx style="strong">messages</spanx> cannot include
EDNS(0) or TSIG records, a DSO <spanx style="strong">session</spanx> is typically used to 
carry a whole series of DNS messages of different kinds, including DSO
messages, and other DNS message types like Query <xref target="RFC1034"/> 
<xref target="RFC1035"/> and Update <xref target="RFC2136"/>, and those messages can carry EDNS(0) and 
TSIG records.</t>

<t>This specification explicitly prohibits use of the
EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>
in <spanx style="strong">any</spanx> messages sent on a DSO Session (because it is obsoleted by
the functionality provided by the DSO Keepalive operation),
but messages may contain other EDNS(0) options as appropriate.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="message-handling" title="Message Handling">

<t>The initiator MUST set the value of the QR bit in the DNS header to
zero (0), and the responder MUST set it to one (1).
Every DSO request message (QR=0) with a nonzero MESSAGE ID field
MUST elicit a corresponding response (QR=1), which MUST have the same
MESSAGE ID in the DNS message header as in the corresponding request.
DSO request messages sent by the client with a nonzero MESSAGE ID field
elicit a response from the server, and
DSO request messages sent by the server with a nonzero MESSAGE ID field
elicit a response from the client.</t>

<t>A DSO request message (QR=0) with a zero MESSAGE ID field MUST NOT elicit a response.</t>

<t>The namespaces of 16-bit MESSAGE IDs are disjoint in each direction.
For example, it is <spanx style="strong">not</spanx> an error for both client and server to send a request
message with the same ID. In effect, the 16-bit MESSAGE ID combined with the 
identity of the initiator (client or server) serves as a 17-bit unique 
identifier for a particular operation on a DSO Session.</t>

<t>As described in <xref target="header"/>, an initiator MUST NOT reuse a
MESSAGE ID that is already in use for an outstanding request
(unless specified otherwise by the relevant specification for the DSO in question).
At the very least, this means that a MESSAGE ID MUST NOT
be reused in a particular direction on a particular DSO
Session while the initiator is waiting for a response to a
previous request using that MESSAGE ID on that DSO Session
(unless specified otherwise by the relevant specification for the DSO in question),
and for a long-lived operation the MESSAGE ID for the operation
MUST NOT be reused while that operation remains active.</t>

<t>If a client or server receives a response (QR=1) where the MESSAGE ID is zero, or is
any other value that does not match the MESSAGE ID of any of its outstanding operations,
this is a fatal error and the recipient MUST forcibly abort the connection immediately.</t>

<section anchor="error-responses" title="Error Responses">

<t>When a DSO unacknowledged message is unsuccessful for some reason,
the responder immediately aborts the connection.</t>

<t>When a DSO request message is unsuccessful for some reason,
the responder returns an error code to the initiator.</t>

<t>In the case of a server returning an error code to a client
in response to an unsuccessful DSO request message, the server MAY choose
to end the DSO Session, or MAY choose to allow the DSO Session to remain open.
For error conditions that only affect the single operation in question, the server SHOULD
return an error response to the client and leave the DSO Session open for further operations.</t>

<t>For error conditions that are likely to make all operations unsuccessful in the
immediate future, the server SHOULD return an error response to the client and then
end the DSO Session by sending a Retry Delay request message, as described in <xref target="retry"/>.</t>

<t>Upon receiving an error response from the server, a client SHOULD NOT
automatically close the DSO Session. An error relating to one particular operation
on a DSO Session does not necessarily imply that all other operations on that
DSO Session have also failed, or that future operations will fail. The client
should assume that the server will make its own decision about whether or not to
end the DSO Session, based on the server’s determination of whether the error
condition pertains to this particular operation, or would also apply to any
subsequent operations. If the server does not end the DSO Session by
sending the client a Retry Delay message (<xref target="retry"/>) then the client
SHOULD continue to use that DSO Session for subsequent operations.</t>

</section>
</section>
<section anchor="dso-response-generation" title="DSO Response Generation">

<t>With most TCP implementations, for DSO requests that generate a response,
the TCP data acknowledgement (generated because data has been received by TCP),
the TCP window update (generated because TCP has delivered that data to the receiving software),
and the DSO response (generated by the receiving application-layer software itself)
are all combined into a single IP packet.
Combining these three elements into a single IP packet
can give a significant improvement in network efficiency.</t>

<t>For DSO requests that do not generate a response,
the TCP implementation generally doesn’t have any way to know
that no response will be forthcoming, so it waits fruitlessly
for the application-layer software to generate a response,
until the Delayed ACK timer fires <xref target="RFC1122"/> (typically 200 milliseconds)
and only then does it send the TCP ACK and window update.
In conjunction with Nagle’s Algorithm at the sender,
this can delay the sender’s transmission of its next
(non-full-sized) TCP segment, while the sender is waiting for
its previous (non-full-sized) TCP segment to be acknowledged,
which won’t happen until the Delayed ACK timer fires.
Nagle’s Algorithm exists to combine multiple small
application writes into more-efficient large TCP segments,
to guard against wasteful use of the network by applications
that would otherwise transmit a stream of small TCP segments,
but in this case Nagle’s Algorithm (created to improve network efficiency)
can interact badly with TCP’s Delayed ACK feature
(also created to improve network efficiency) <xref target="NagleDA"/>
with the result of delaying some messages by up to 200 milliseconds.</t>

<t>Possible mitigations for this problem include:</t>

<t><list style="symbols">
  <t>Disable Nagle’s Algorithm at the sender. This is not great,<vspace />
because it results in less efficient use of the network.</t>
  <t>Disable Delayed ACK at the receiver. This is not great,<vspace />
because it results in less efficient use of the network.</t>
  <t>Use a networking API that lets the receiver signal to the TCP
implementation that the receiver has received and processed a client
request for which it will not be generating any immediate response.
This allows the TCP implementation to operate efficiently in both cases;
for requests that generate a response, the TCP ACK, window update, and
DSO response are transmitted together in a single TCP segment,
and for requests that do not generate a response,
the application-layer software informs the TCP implementation
that it should go ahead and send the TCP ACK and window update
immediately, without waiting for the Delayed ACK timer.
Unfortunately it is not known at this time which (if any) of the
widely-available networking APIs currently include this capability.</t>
</list></t>

</section>
<section anchor="cancellation" title="Responder-Initiated Operation Cancellation">

<t>This document, the base specification for DNS Stateful Operations,
does not itself define any long-lived operations,
but it defines a framework for supporting long-lived operations,
such as Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/> and
Discovery Relay interface subscriptions <xref target="I-D.sctl-dnssd-mdns-relay"/>.</t>

<t>Generally speaking, a long-lived operation is initiated by the initiator,
and, if successful, remains active until the initiator terminates the operation.</t>

<t>However, it is possible that a long-lived operation may be valid
at the time it was initiated, but then a later change of circumstances
may render that previously valid operation invalid.</t>

<t>For example, a long-lived client operation may pertain to a name
that the server is authoritative for, but then the server configuration
is changed such that it is no longer authoritative for that name.</t>

<t>In such cases, instead of terminating the entire session
it may be desirable for the responder to be able to cancel
selectively only those operations that have become invalid.</t>

<t>The responder performs this selective cancellation by sending
a new response message, with the MESSAGE ID field containing the
MESSAGE ID of the long-lived operation that is to be terminated
(that it had previously acknowledged with a NOERROR RCODE), and the
RCODE field of the new response message giving the reason for cancellation.</t>

<t>After a response message with nonzero RCODE has been sent,
that operation has been terminated from the responder’s point of view,
and the responder sends no more messages relating to that operation.</t>

<t>After a response message with nonzero RCODE has been received by the initiator,
that operation has been terminated from the initiator’s point of view,
and the cancelled operation’s MESSAGE ID is now free for reuse.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="lifecycle" title="DSO Session Lifecycle and Timers">

<section anchor="dso-session-initiation" title="DSO Session Initiation">

<t>A DSO Session begins as described in <xref target="establishment"/>.</t>

<t>The client may perform as many DNS operations as it wishes using the
newly created DSO Session. Operations SHOULD be pipelined (i.e., the
client doesn’t need wait for a response before sending the next message).
The server MUST act on messages in the order they are transmitted, but
responses to those messages SHOULD be sent out of order when appropriate.</t>

</section>
<section anchor="sessiontimeouts" title="DSO Session Timeouts">

<t>Two timeout values are associated with a DSO Session:
the inactivity timeout, and the keepalive interval. 
Both values are communicated in the same TLV, the DSO Keepalive TLV (<xref target="keepalive"/>).</t>

<t>The first timeout value, the inactivity timeout, is the maximum time for which
a client may speculatively keep a DSO Session open in the expectation that
it may have future requests to send to that server.</t>

<t>The second timeout value, the keepalive interval, is the maximum permitted
interval between messages if the client wishes to keep the DSO Session alive.</t>

<t>The two timeout values are independent. The inactivity timeout may be lower,
the same, or higher than the keepalive interval, though in most cases the
inactivity timeout is expected to be shorter than the keepalive interval.</t>

<t>A shorter inactivity timeout with a longer keepalive interval signals
to the client that it should not speculatively keep an inactive DSO
Session open for very long without reason, but when it does have an
active reason to keep a DSO Session open, it doesn’t need to be sending
an aggressive level of keepalive traffic to maintain that session.</t>

<t>A longer inactivity timeout with a shorter keepalive interval
signals to the client that it may speculatively keep an inactive
DSO Session open for a long time, but to maintain that inactive
DSO Session it should be sending a lot of keepalive traffic.
This configuration is expected to be less common.</t>

<t>In the usual case where the inactivity timeout is shorter than the keepalive
interval, it is only when a client has a very long-lived, low-traffic, operation
that the keepalive interval comes into play, to ensure that a sufficient
residual amount of traffic is generated to maintain NAT and firewall state
and to assure client and server that they still have connectivity to each other.</t>

<t>On a new DSO Session, if no explicit DSO Keepalive message exchange has taken 
place, the default value for both timeouts is 15 seconds.</t>

<t>For both timeouts, lower values of the timeout result in higher network traffic
and higher CPU load on the server.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="inactive-dso-sessions" title="Inactive DSO Sessions">

<t>At both servers and clients, the generation or reception of any complete
DNS message, including DNS requests, responses, updates, or DSO
messages, resets both timers for that DSO Session, with the exception
that a DSO Keepalive message resets only the keepalive timer,
not the inactivity timeout timer.</t>

<t>In addition, for as long as the client has an outstanding operation in progress,
the inactivity timer remains cleared, and an inactivity timeout cannot occur.</t>

<t>For short-lived DNS operations like traditional queries and updates,
an operation is considered in progress for the time between request and 
response, typically a period of a few hundred milliseconds at most.
At the client, the inactivity timer is cleared upon transmission of a 
request and remains cleared until reception of the corresponding response.
At the server, the inactivity timer is cleared upon reception of a request
and remains cleared until transmission of the corresponding response.</t>

<t>For long-lived DNS Stateful operations (such as
a Push Notification subscription <xref target="I-D.ietf-dnssd-push"/> or
a Discovery Relay interface subscription <xref target="I-D.sctl-dnssd-mdns-relay"/>),
an operation is considered in progress
for as long as the operation is active, until it is cancelled.
This means that a DSO Session can exist, with active operations,
with no messages flowing in either direction, for far longer than the 
inactivity timeout, and this is not an error.
This is why there are two separate timers:
the inactivity timeout, and the keepalive interval.
Just because a DSO Session has no traffic for an extended period of time
does not automatically make that DSO Session “inactive”,
if it has an active operation that is awaiting events.</t>

</section>
<section anchor="inactivetimer" title="The Inactivity Timeout">

<t>The purpose of the inactivity timeout is for the server to balance its trade off 
between the costs of setting up new DSO Sessions and the costs of maintaining inactive 
DSO Sessions. A server with abundant DSO Session capacity can offer a high inactivity timeout, 
to permit clients to keep a speculative DSO Session open for a long time, to save 
the cost of establishing a new DSO Session for future communications with that 
server. A server with scarce memory resources can offer a low inactivity timeout,
to cause clients to promptly close DSO Sessions whenever they have no outstanding
operations with that server, and then create a new DSO Session later when needed.</t>

<section anchor="closing-inactive-dso-sessions" title="Closing Inactive DSO Sessions">

<t>When a connection’s inactivity timeout is reached the client MUST
begin closing the idle connection, but a client is NOT REQUIRED to
keep an idle connection open until the inactivity timeout is reached.
A client MAY close a DSO Session at any time, at the client’s discretion.
If a client determines that it has no current or reasonably
anticipated future need for a currently inactive DSO Session,
then the client SHOULD gracefully close that connection.</t>

<t>If, at any time during the life of the DSO Session,
the inactivity timeout value (i.e., 15 seconds by default) elapses
without there being any operation active on the DSO Session,
the client MUST close the connection gracefully.</t>

<t>If, at any time during the life of the DSO Session,
twice the inactivity timeout value (i.e., 30 seconds by default),
or five seconds, if twice the inactivity timeout value is less than five seconds,
elapses without there being any operation active on the DSO Session,
the server SHOULD consider the client delinquent,
and SHOULD forcibly abort the DSO Session.</t>

<t>In this context, an operation being active on a DSO Session includes
a query waiting for a response, an update waiting for a response,
or an active long-lived operation, but not a DSO Keepalive message exchange itself.
A DSO Keepalive message exchange resets only the keepalive
interval timer, not the inactivity timeout timer.</t>

<t>If the client wishes to keep an inactive DSO Session open for longer
than the default duration then it uses the DSO Keepalive message
to request longer timeout values, as described in <xref target="keepalive"/>.</t>

</section>
<section anchor="values-for-the-inactivity-timeout" title="Values for the Inactivity Timeout">

<t>For the inactivity timeout value, lower values result in
more frequent DSO Session teardown and re-establishment.
Higher values result in lower traffic and lower CPU load on the server,
but higher memory burden to maintain state for inactive DSO Sessions.</t>

<t>A server may dictate any value it chooses for the inactivity timeout
(either in a response to a client-initiated request, or in a server-initiated message)
including values under one second, or even zero.</t>

<t>An inactivity timeout of zero informs the client that it
should not speculatively maintain idle connections at all, and
as soon as the client has completed the operation or operations relating
to this server, the client should immediately begin closing this session.</t>

<t>A server will abort an idle client session after twice the
inactivity timeout value, or five seconds, whichever is greater.
In the case of a zero inactivity timeout value, this means that
if a client fails to close an idle client session then the server
will forcibly abort the idle session after five seconds.</t>

<t>An inactivity timeout of 0xFFFFFFFF (2^32-1 milliseconds, approximately 49.7 days)
informs the client that it may keep an idle connection open as long as it wishes.
Note that after granting an unlimited inactivity timeout in this way,
at any point the server may revise that inactivity timeout by sending
a new Keepalive request message dictating new Session Timeout values to the client.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="keepalivetimer" title="The Keepalive Interval">

<t>The purpose of the keepalive interval is to manage the generation of
sufficient messages to maintain state in middleboxes (such at NAT gateways
or firewalls) and for the client and server to periodically verify that they
still have connectivity to each other. This allows them to clean up state
when connectivity is lost, and attempt re-connection if appropriate.</t>

<section anchor="keepalive-interval-expiry" title="Keepalive Interval Expiry">

<t>If, at any time during the life of the DSO Session,
the keepalive interval value (i.e., 15 seconds by default) elapses
without any DNS messages being sent or received on a DSO Session,
the client MUST take action to keep the DSO Session alive,
by sending a DSO Keepalive message (<xref target="keepalive"/>).
A DSO Keepalive message exchange resets only the keepalive timer, 
not the inactivity timer.</t>

<t>If a client disconnects from the network abruptly,
without cleanly closing its DSO Session,
perhaps leaving a long-lived operation uncancelled,
the server learns of this after failing to
receive the required keepalive traffic from that client.
If, at any time during the life of the DSO Session,
twice the keepalive interval value (i.e., 30 seconds by default) elapses
without any DNS messages being sent or received on a DSO Session,
the server SHOULD consider the client delinquent,
and SHOULD forcibly abort the DSO Session.</t>

</section>
<section anchor="values-for-the-keepalive-interval" title="Values for the Keepalive Interval">

<t>For the keepalive interval value, lower values result in a higher volume of keepalive 
traffic. Higher values of the keepalive interval reduce traffic and CPU load, 
but have minimal effect on the memory burden
at the server, because clients keep a DSO Session open for the same length of time
(determined by the inactivity timeout) regardless of the level of keepalive traffic 
required.</t>

<t>It may be appropriate for clients and servers to select different keepalive 
interval values depending on the nature of the network they are on.</t>

<t>A corporate DNS server that knows it is serving only clients on the internal 
network, with no intervening NAT gateways or firewalls, can impose a higher 
keepalive interval, because frequent keepalive traffic is not required.</t>

<t>A public DNS server that is serving primarily residential consumer clients, 
where it is likely there will be a NAT gateway on the path, may impose a lower 
keepalive interval, to generate more frequent keepalive traffic.</t>

<t>A smart client may be adaptive to its environment. A client using
a private IPv4 address <xref target="RFC1918"/> to communicate with a DNS server
at an address outside that IPv4 private address block,
may conclude that there is likely to be a NAT gateway on the path,
and accordingly request a lower keepalive interval.</t>

<t>By default it is RECOMMENDED that clients request,
and servers grant, a keepalive interval of 60 minutes.
This keepalive interval provides for reasonably timely detection if
a client abruptly disconnects without cleanly closing the session,
and is sufficient to maintain state in firewalls and NAT gateways
that follow the IETF recommended Best Current Practice that the
“established connection idle-timeout” used by middleboxes
be at least 2 hours 4 minutes <xref target="RFC5382"/>.</t>

<t>Note that the lower the keepalive interval value, the higher the load on client
and server. For example, a hypothetical keepalive interval value of 100ms would result
in a continuous stream of at least ten messages per second, in both directions,
to keep the DSO Session alive. And, in this extreme example, a single packet loss and
retransmission over a long path could introduce a momentary pause in the stream of messages,
long enough to cause the server to overzealously abort the connection.</t>

<t>Because of this concern, the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with a keepalive interval value less than ten seconds.
If a client receives a Keepalive message specifying a keepalive interval value
less than ten seconds this is a fatal error and the client MUST
forcibly abort the connection immediately.</t>

<t>A keepalive interval value of 0xFFFFFFFF (2^32-1 milliseconds, approximately 49.7 days)
informs the client that it should generate no keepalive traffic.
Note that after signaling that the client should generate no keepalive traffic in this way,
at any point the server may revise that keepalive traffic requirement by sending
a new Keepalive request message dictating new Session Timeout values to the client.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="server-initiated-session-termination" title="Server-Initiated Session Termination">

<t>In addition to cancelling individual long-lived operations selectively (<xref target="cancellation"/>)
there are also occasions where a server may need to terminate one or more entire sessions.
An entire session may need to be terminated if the client is defective in some way,
or departs from the network without closing its session.
Sessions may also need to be terminated if the server becomes overloaded,
or if the server is reconfigured and lacks the ability to be selective about
which operations need to be cancelled.</t>

<t>This section discusses various reasons a session may be terminated,
and the mechanisms for doing so.</t>

<t>Normally a server MUST NOT close a DSO Session with a client.
A server only causes a DSO Session to be ended in the exceptional circumstances outlined below.
In normal operation, closing a DSO Session is the client’s responsibility.
The client makes the determination of when to close a DSO
Session based on an evaluation of both its own needs,
and the inactivity timeout value dictated by the server.</t>

<t>Some of the exceptional situations in which a server may terminate a DSO Session include:</t>

<t><list style="symbols">
  <t>The server application software or underlying operating system
is shutting down or restarting.</t>
  <t>The server application software terminates unexpectedly
(perhaps due to a bug that makes it crash).</t>
  <t>The server is undergoing a reconfiguration or maintenance
procedure, that, due to the way the server software is
implemented, requires clients to be disconnected.
For example, some software is implemented such that it reads
a configuration file at startup, and changing the server’s
configuration entails modifying the configuration file
and then killing and restarting the server software,
which generally entails a loss of network connections.</t>
  <t>The client fails to meets its obligation to generate the required
keepalive traffic, or to close an inactive session by the prescribed time
(twice the time interval dictated by the server, or five seconds,
whichever is greater, as described in <xref target="sessiontimeouts"/>).</t>
  <t>The client sends a grossly invalid or malformed request that
is indicative of a seriously defective client implementation.</t>
  <t>The server is over capacity and needs to shed some load.</t>
</list></t>

<section anchor="retry" title="Server-Initiated Retry Delay Request Message">

<t>In the cases described above where a server elects to terminate a
DSO Session, it could do so simply by forcibly aborting the connection.
However, if it did this the likely behavior of the client might be simply to to treat
this as a network failure and reconnect immediately, putting more burden on the server.</t>

<t>Therefore, to avoid this reconnection implosion, a server SHOULD instead choose to
shed client load by sending a Retry Delay request message, with an appropriate RCODE
value informing the client of the reason the DSO Session needs to be terminated.
For example, an RCODE value of SERVFAIL indicates that the server is overloaded
due to resource exhaustion, or is restarting.
An RCODE value of NOTAUTH indicates that the server has been reconfigured and is
no longer able to perform one or more of the functions currently being performed
on this DSO Session because it no longer has authority over the names in question.
An RCODE value of REFUSED indicates a policy change regarding this session.
An RCODE value of FORMERR indicates that the client requests are
too badly malformed for the session to continue.
The format of the Retry Delay TLV is described in <xref target="delay"/>.
After sending a Retry Delay request message,
the server MUST NOT send any further messages on that DSO Session.</t>

<t>Upon receipt of a Retry Delay request message from the server,
the client MUST make note of the reconnect delay for this server,
and then immediately close the connection gracefully.</t>

<t>After sending a Retry Delay request message the server SHOULD allow the
client five seconds to close the connection, and if the client has not
closed the connection after five seconds then the server SHOULD
forcibly abort the connection.</t>

<t>A Retry Delay request message MUST NOT be initiated by a client.
If a server receives a Retry Delay request message this is a fatal error
and the server MUST forcibly abort the connection immediately.</t>

<section anchor="outstanding-operations" title="Outstanding Operations">

<t>At the instant a server chooses to initiate a Retry Delay request message
there may be DNS requests already in flight from client to server on this 
DSO Session, which will arrive at the server after its Retry Delay request message 
has been sent.
The server MUST silently ignore such incoming requests, and MUST NOT generate
any response messages for them. When the Retry Delay request message from the
server arrives at the client, the client will determine that any DNS requests
it previously sent on this DSO Session, that have not yet received a response, now 
will certainly not be receiving any response. Such requests should be considered
failed, and should be retried at a later time, as appropriate.</t>

<t>In the case where some, but not all, of the existing operations on a DSO Session 
have become invalid (perhaps because the server has been reconfigured and is no 
longer authoritative for some of the names),
but the server is terminating all affected DSO Sessions en masse
by sending them all a Retry Delay request message,
the RECONNECT DELAY MAY be zero, indicating that the clients SHOULD immediately
attempt to re-establish operations.</t>

<t>It is likely that some of the attempts will be successful and some will not,
depending on the nature of the reconfiguration.</t>

<t>In the case where a server is terminating a large number of DSO Sessions at once
(e.g., if the system is restarting) and the server doesn’t want to be inundated 
with a flood of simultaneous retries, it SHOULD send different RECONNECT delay 
values to each client.
These adjustments MAY be selected randomly, pseudorandomly, or deterministically
(e.g., incrementing the time value by one tenth of a second for each successive
client, yielding a post-restart reconnection rate of ten clients per second).</t>

</section>
<section anchor="client-reconnection" title="Client Reconnection">

<t>After a DSO Session is ended by the server
(either by sending the client a Retry Delay request message,
or by forcibly aborting the underlying transport connection)
the client SHOULD try to reconnect,
to that server, or to another suitable server, if more than one is available.
If reconnecting to the same server, the client MUST respect the indicated delay,
if available, before attempting to reconnect.</t>

<t>If a particular server does not want a client to reconnect (the server is being
de-commissioned), it SHOULD set the retry delay to the maximum value (which is
approximately 49.7 days). If the server will only be out of service for a maintenance
period, it should use a value closer to the expected maintenance window and
not default to a very large delay value or clients may not attempt to reconnect
after it resumes service.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
</section>
</section>
<section anchor="base-tlvs-for-dns-stateful-operations" title="Base TLVs for DNS Stateful Operations">

<t>This section describes the three base TLVs for DNS Stateful Operations:
Keepalive, Retry Delay, and Encryption Padding.</t>

<section anchor="keepalive" title="Keepalive TLV">

<t>The Keepalive TLV (DSO-TYPE=1) performs two functions:
to reset the keepalive timer for the DSO Session,
and to establish the values for the Session Timeouts.</t>

<t>The TYPE-DEPENDENT DATA for the the Keepalive TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 INACTIVITY TIMEOUT (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 KEEPALIVE INTERVAL (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='INACTIVITY TIMEOUT:'>
  The inactivity timeout for the current DSO Session, specified as
a 32-bit unsigned integer, in network (big endian) byte order, in units of milliseconds.
This is the timeout at which the client MUST begin closing an inactive DSO Session.
The inactivity timeout can be any value of the server’s choosing.
If the client does not gracefully close an inactive DSO
Session, then after twice this interval, or five seconds,
whichever is greater, the server will forcibly abort the connection.</t>
  <t hangText='KEEPALIVE INTERVAL:'>
  The keepalive interval for the current DSO Session, specified as
a 32-bit unsigned integer, in network (big endian) byte order, in units of milliseconds.
This is the interval at which a client MUST generate keepalive
traffic to maintain connection state.
The keepalive interval MUST NOT be less than ten seconds.
If the client does not generate the mandated keepalive traffic,
then after twice this interval the server will forcibly abort the connection.
Since the minimum allowed keepalive interval is ten seconds, the
minimum time at which a server will forcibly disconnect a client for
failing to generate the mandated keepalive traffic is twenty seconds.</t>
</list></t>

<t>The transmission or reception of DSO Keepalive messages
(i.e., messages where the Keepalive TLV is the first TLV)
reset only the keepalive timer, not the inactivity timer.
The reason for this is that periodic Keepalive messages are sent for the sole
purpose of keeping a DSO Session alive, when that DSO Session has current
or recent non-maintenance activity that warrants keeping that DSO Session alive.
Sending keepalive traffic itself is not considered a client activity;
it is considered a maintenance activity that is performed
in service of other client activities.
If keepalive traffic itself were to reset the inactivity timer,
then that would create a circular livelock where keepalive traffic
would be sent indefinitely to keep a DSO Session alive, where the only
activity on that DSO Session would be the keepalive traffic keeping
the DSO Session alive so that further keepalive traffic can be sent.
For a DSO Session to be considered active, it must be carrying
something more than just keepalive traffic.
This is why merely sending or receiving a Keepalive message
does not reset the inactivity timer.</t>

<t>When sent by a client, the Keepalive request message MUST
be sent as an acknowledged request, with a nonzero MESSAGE ID.
If a server receives a Keepalive DSO message with a zero MESSAGE ID then
this is a fatal error and the server MUST forcibly abort the connection immediately.
The Keepalive request message resets a DSO Session’s keepalive timer,
and at the same time communicates to the server the the client’s
requested Session Timeout values.
In a server response to a client-initiated Keepalive request message,
the Session Timeouts contain the server’s chosen values from
this point forward in the DSO Session, which the client MUST respect.
This is modeled after the DHCP protocol, where the client requests a certain
lease lifetime using DHCP option 51 <xref target="RFC2132"/>, but the server is the
ultimate authority for deciding what lease lifetime is actually granted.</t>

<t>When a client is sending its second and subsequent Keepalive DSO requests to
the server, the client SHOULD continue to request its preferred values each time.
This allows flexibility, so that if conditions change during the lifetime of a
DSO Session, the server can adapt its responses to better fit the client’s needs.</t>

<t>Once a DSO Session is in progress (<xref target="establishment"/>)
a Keepalive message MAY be initiated by a server.
When sent by a server, the Keepalive message MUST be
sent as an unacknowledged message, with the MESSAGE ID set to zero.
The client MUST NOT generate a response to a server-initiated DSO Keepalive message.
If a client receives a Keepalive request message with a nonzero MESSAGE ID then
this is a fatal error and the client MUST forcibly abort the connection immediately.
The Keepalive unacknowledged message from the server resets a DSO Session’s keepalive timer,
and at the same time unilaterally informs the client of the new
Session Timeout values to use from this point forward in this DSO Session.
No client DSO response message to this unilateral declaration is required or allowed.</t>

<t>The Keepalive TLV is not used as an Additional TLV.</t>

<t>In response messages the Keepalive TLV is used only as a Response Primary TLV,
replying to a Keepalive request message from the client.
A Keepalive TLV MUST NOT be added as to other responses a Response Additional TLV.
If the server wishes to update a client’s Session Timeout values
other than in response to a Keepalive request message from the client,
then it does so by sending an unacknowledged Keepalive message
of its own, as described above.</t>

<t>It is not required that the Keepalive TLV be used in every DSO Session.
While many DNS Stateful operations
will be used in conjunction with a long-lived session state,
not all DNS Stateful operations require long-lived session state,
and in some cases the default 15-second value for both the inactivity timeout
and keepalive interval may be perfectly appropriate.
However, note that for clients that implement only the TLVs defined in this document,
a Keepalive request message is the only way for a client to initiate a DSO Session.</t>

<section anchor="client-handling-of-received-session-timeout-values" title="Client handling of received Session Timeout values">

<t>When a client receives a response to its client-initiated DSO Keepalive message,
or receives a server-initiated DSO Keepalive message, the client has then 
received Session Timeout values dictated by the server. The two timeout values 
contained in the DSO Keepalive TLV from the server may each be higher, lower, or 
the same as the respective Session Timeout values the client previously had for 
this DSO Session.</t>

<t>In the case of the keepalive timer, the handling of the received value is 
straightforward. The act of receiving the message containing the DSO Keepalive 
TLV itself resets the keepalive timer and updates the keepalive interval for the 
DSO Session. The new keepalive interval indicates the 
maximum time that may elapse before another message must be sent
or received on this DSO Session, if the DSO Session is to remain alive.</t>

<t><vspace blankLines='999' /></t>

<t>In the case of the inactivity timeout, the handling of the received
value  is a little more subtle, though the meaning of the inactivity
timeout remains as specified — it still indicates the maximum
permissible time allowed  without useful activity on a DSO Session.
The act of receiving the message containing the DSO Keepalive TLV does not
itself reset the inactivity timer. The time elapsed since the last useful
activity on this DSO Session is unaffected by exchange of DSO Keepalive messages.
The new inactivity timeout value in the DSO Keepalive TLV in the received message
does update the timeout associated with the running inactivity timer;
that becomes the new maximum permissible time without activity on a DSO Session.</t>

<t><list style="symbols">
  <t>If the current inactivity timer value is less than the
new inactivity timeout, then the DSO Session may remain open for now.
When the inactivity timer value reaches the new inactivity timeout,
the client MUST then begin closing the DSO Session, as described above.</t>
  <t>If the current inactivity timer value is equal to the
new inactivity timeout, then this DSO Session has been
inactive for exactly as long as the server will permit,
and now the client MUST immediately begin closing this DSO Session.</t>
  <t>If the current inactivity timer value is already greater
than the new inactivity timeout, then this DSO Session has
already been inactive for longer than the server permits,
and the client MUST immediately begin closing this DSO Session.</t>
  <t>If the current inactivity timer value is already more than twice the
new inactivity timeout, then the client is immediately considered delinquent
(this DSO Session is immediately eligible to be forcibly terminated by the server)
and the client MUST immediately begin closing this DSO Session.
However if a server abruptly reduces the inactivity timeout in this
way, then, to give the client time to close the connection gracefully
before the server resorts to forcibly aborting it, the server
SHOULD give the client an additional grace period of one quarter
of the new inactivity timeout, or five seconds, whichever is greater.</t>
</list></t>

</section>
<section anchor="relation-to-edns0-tcp-keepalive-option" title="Relation to EDNS(0) TCP Keepalive Option">

<t>The inactivity timeout value in the Keepalive TLV (DSO-TYPE=1) has similar
intent to the EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>.
A client/server pair that supports DSO MUST NOT use the
EDNS(0) TCP KeepAlive option within any message after a DSO 
Session has been established.
Once a DSO Session has been established, if either
client or server receives a DNS message over the DSO Session that contains an
EDNS(0) TCP Keepalive option, this is a fatal error and the receiver of the
EDNS(0) TCP Keepalive option MUST forcibly abort the connection immediately.</t>

</section>
</section>
<section anchor="delay" title="Retry Delay TLV">

<t>The Retry Delay TLV (DSO-TYPE=2) can be used as
a Primary TLV (unacknowledged) in a server-to-client message,
or as a Response Additional TLV in either direction.</t>

<t>The TYPE-DEPENDENT DATA for the the Retry Delay TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     RETRY DELAY (32 bits)                     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='RETRY DELAY:'>
  A time value, specified as
a 32-bit unsigned integer, in network (big endian) byte order, in units of milliseconds,
within which the initiator MUST NOT retry this operation, or retry connecting to this server.</t>
</list></t>

<t>The RECOMMENDED value is 10 seconds.</t>

<section anchor="retry-delay-tlv-used-as-a-primary-tlv" title="Retry Delay TLV used as a Primary TLV">

<t>When sent from server to client, the
Retry Delay TLV is used as the Primary TLV in an unacknowledged message.
It is used by a server
to instruct a client to close the DSO Session and underlying connection,
and not to reconnect for the indicated time interval.</t>

<t>In this case it applies to the DSO Session as a whole, and the client MUST begin closing the 
DSO Session, as described in <xref target="retry"/>. The RCODE in the message header 
MUST indicate the reason for the termination:</t>

<t><list style="symbols">
  <t>NOERROR indicates a routine shutdown.</t>
  <t>FORMERR indicates that the client requests are too badly malformed for the session to continue.</t>
  <t>SERVFAIL indicates that the server is overloaded due to resource exhaustion, or is restarting.</t>
  <t>REFUSED indicates that the server has been reconfigured
and due to a policy change is no longer able to perform one or more
of the functions currently being performed on this DSO Session</t>
  <t>NOTAUTH indicates that the server has been reconfigured
and is no longer able to perform one or more
of the functions currently being performed on this DSO Session
because it no longer has authority over the names in question
(for example, a DNS Push Notification server could be reconfigured
such that is is no longer accepting DNS Push Notification
requests for one or more of the currently subscribed names).</t>
</list></t>

<t>This document specifies only these RCODE values for Retry Delay request.
Servers sending Retry Delay requests SHOULD use one of these values.
However, future circumstances may create situations where other RCODE values
are appropriate in Retry Delay requests, so clients MUST be prepared
to accept Retry Delay requests with any RCODE value.</t>

<t>A Retry Delay message from server to client is an unacknowledged message;
the MESSAGE ID MUST be set to zero in the outgoing message
and the client MUST NOT send a response.</t>

<t>A client MUST NOT send a Retry Delay DSO request message or DSO unacknowledged message to a server.
If a server receives a DNS request message (i.e., QR=0) where the Primary TLV is the Retry Delay TLV,
this is a fatal error and the server MUST forcibly abort the connection immediately.</t>

</section>
<section anchor="retry-delay-tlv-used-as-a-response-additional-tlv" title="Retry Delay TLV used as a Response Additional TLV">

<t>In the case of a request that returns a nonzero RCODE value,
the responder MAY append a Retry Delay TLV to the response,
indicating the time interval during which the initiator
SHOULD NOT attempt this operation again.</t>

<t>The indicated time interval during which the initiator SHOULD NOT retry
applies only to the failed operation, not to the DSO Session as a whole.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="padding" title="Encryption Padding TLV">

<t>The Encryption Padding TLV (DSO-TYPE=3) can only be used as
an Additional or Response Additional TLV.
It is only applicable when the DSO Transport layer uses encryption
such as TLS.</t>

<t>The TYPE-DEPENDENT DATA for the the Padding TLV is optional and is a
variable length field containing non-specified values. A DATA LENGTH
of 0 essentially provides for 4 bytes of padding (the minimum amount).</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   /                                                               /
   /                   VARIABLE NUMBER OF BYTES                    /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t>As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
the PADDING bytes SHOULD be set to 0x00.  Other values MAY be used,
for example, in cases where there is a concern that the padded
message could be subject to compression before encryption.
PADDING bytes of any value MUST be accepted in the messages received.</t>

<t>The Encryption Padding TLV may be included in either a DSO request, response, or both.
As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
if a request is received with an Encryption Padding TLV,
then the response MUST also include an Encryption Padding TLV.</t>

<t>The length of padding is intentionally not specified in this document and
is a function of current best practices with respect to the type and length
of data in the preceding TLVs <xref target="I-D.ietf-dprive-padding-policy"/>.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="summary-highlights" title="Summary Highlights">

<t>This section summarizes some noteworthy highlights about
various components of the DSO protocol.</t>

<section anchor="message-id" title="MESSAGE ID">

<t>In DSO Request Messages the MESSAGE ID may be either
nonzero (signaling that the responder MUST generate a response)
or zero (signaling that the responder MUST NOT generate a response).</t>

<t>In DSO Response Messages the MESSAGE ID MUST NOT be zero
(since this would be a response to a request that had
indicated that a response is not allowed).</t>

<t>The table below illustrates the legal combinations:</t>

<figure><artwork><![CDATA[
                          +--------------------+-------------------+
                          | Nonzero MESSAGE ID |  Zero MESSAGE ID  |
   +----------------------+--------------------+-------------------+
   | DSO Request Message  |         X          |         X         |
   +----------------------+--------------------+-------------------+
   | DSO Response Message |         X          |                   |
   +----------------------+--------------------+-------------------+
]]></artwork></figure>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="tlv-usage" title="TLV Usage">

<t>The table below indicates, for each of the three TLVs defined in this
document, whether they are valid in each of ten different contexts.</t>

<t>The first five contexts are requests from client to server,
and the corresponding responses from server back to client:</t>

<t><list style="symbols">
  <t>C-P - Primary TLV, sent in DSO Request message, from client to server,
with nonzero MESSAGE ID indicating that this request MUST generate response message.</t>
  <t>C-U - Primary TLV, sent in DSO Unacknowledged message, from client to server,
with zero MESSAGE ID indicating that this request MUST NOT generate response message.</t>
  <t>C-A - Additional TLV, optionally added to request message or unacknowledged message from client to server.</t>
  <t>CRP - Response Primary TLV, included in response message sent to back the client
(in response to a client “C-P” request with nonzero MESSAGE ID indicating that a response is required)
where the DSO-TYPE of the Response TLV matches the DSO-TYPE of the Primary TLV in the request.</t>
  <t>CRA - Response Additional TLV, included in response message sent to back the client
(in response to a client “C-P” request with nonzero MESSAGE ID indicating that a response is required)
where the DSO-TYPE of the Response TLV does not match the DSO-TYPE of the Primary TLV in the request.</t>
</list></t>

<t>The second five contexts are their counterparts in the opposite direction:
requests from server to client, and the corresponding responses from client back to server.</t>

<figure><artwork><![CDATA[
              +-------------------------+-------------------------+
              | C-P  C-U  C-A  CRP  CRA | S-P  S-U  S-A  SRP  SRA |
 +------------+-------------------------+-------------------------+
 | KeepAlive  |  X              X       |       X                 |
 +------------+-------------------------+-------------------------+
 | RetryDelay |                      X  |       X                 |
 +------------+-------------------------+-------------------------+
 | Padding    |            X         X  |            X         X  |
 +------------+-------------------------+-------------------------+
]]></artwork></figure>

<t>Note that some of the columns in this table are currently empty.
The table is provided as a template for future TLV definitions to follow.
It is recommended that definitions of future TLVs include a
similar table summarizing the contexts where the new TLV is valid.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="inactivity-timeout" title="Inactivity Timeout">

<t>The Inactivity Timeout may have any 32-bit unsigned integer value.</t>

<t>The value zero informs the client that it
should not speculatively maintain idle connections at all, and
as soon as the client has completed the operation or operations relating
to this server, the client should immediately begin closing this session.</t>

<t>The maximum possible value,
0xFFFFFFFF (2^32-1 milliseconds, approximately 49.7 days),
informs the client that it may keep an idle connection open as long as it wishes.</t>

<t>The Inactivity timer is reset by any message <spanx style="strong">except</spanx> the Keepalive TLV,
and remains cleared any time that an operation is outstanding.</t>

</section>
<section anchor="keepalive-interval" title="Keepalive Interval">

<t>The Keepalive Interval is a 32-bit unsigned integer value,
with a minimum value of 10,000 milliseconds (10 seconds).</t>

<t>The maximum possible value,
0xFFFFFFFF (2^32-1 milliseconds, approximately 49.7 days),
informs the client that it should generate no keepalive traffic.</t>

<t>Any message exchange (including the Keepalive TLV) resets the Keepalive timer.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="dso-opcode-registration" title="DSO OPCODE Registration">

<t>The IANA is requested to record the value (tentatively) 6 for the DSO OPCODE
in the DNS OPCODE Registry.</t>

</section>
<section anchor="dso-rcode-registration" title="DSO RCODE Registration">

<t>The IANA is requested to record the value (tentatively) 11 for the DSONOTIMP error code
in the DNS RCODE Registry.</t>

</section>
<section anchor="dso-type-code-registry" title="DSO Type Code Registry">

<t>The IANA is requested to create the 16-bit DSO Type Code Registry,
with initial (hexadecimal) values as shown below:</t>

<texttable>
      <ttcol align='left'>Type</ttcol>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Status</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>0000</c>
      <c>Reserved</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0001</c>
      <c>KeepAlive</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0002</c>
      <c>RetryDelay</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0003</c>
      <c>EncryptionPadding</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0004-003F</c>
      <c>Unassigned, reserved for    DSO session-management TLVs</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0040-F7FF</c>
      <c>Unassigned</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>F800-FBFF</c>
      <c>Reserved for experimental/local use</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>FC00-FFFF</c>
      <c>Reserved for future expansion</c>
      <c>&#160;</c>
      <c>&#160;</c>
</texttable>

<t>DSO Type Code zero is reserved and is not currently intended for allocation.</t>

<t>Registrations of new DSO Type Codes in
the “Reserved for DSO session-management” range 0004-003F
and the “Reserved for future expansion” range FC00-FFFF
require publication of an IETF Standards Action document <xref target="RFC5226"/>.</t>

<t>Requests to register additional new DSO Type Codes
in the “Unassigned” range 0040-F7FF
are to be recorded by IANA after consultation with the
registry’s Designated Expert <xref target="RFC5226"/> at that time.
At the time of publication of this document, the Designated Expert
for the newly created DSO Type Code registry is [<spanx style="strong">TBD</spanx>].</t>

<t>DSO Type Codes in the “experimental/local” range F800-FBFF
may be used as Experimental Use or Private Use values <xref target="RFC5226"/>
and may be used freely for development purposes,
or for other purposes within a single site.
No attempt is made to prevent multiple sites from using
the same value in different (and incompatible) ways.
There is no need for IANA to review such assignments
(since IANA does not record them) and assignments
are not generally useful for broad interoperability.
It is the responsibility of the sites making use of
“experimental/local” values to ensure that no
conflicts occur within the intended scope of use.</t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>If this mechanism is to be used with DNS over TLS, then these messages
are subject to the same constraints as any other DNS-over-TLS messages
and MUST NOT be sent in the clear before the TLS session is established.</t>

<t>The data field of the “Encryption Padding” TLV could be used as a covert channel.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to
Stephane Bortzmeyer,
Tim Chown,
Ralph Droms,
Paul Hoffman,
Jan Komissar,
Edward Lewis,
Allison Mankin,
Rui Paulo,
David Schinazi,
Manju Shankar Rao,
and Bernie Volz
for their helpful contributions to this document.</t>

<t><vspace blankLines='999' /></t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC1035;
&RFC7766;
&RFC6891;
&RFC7828;
&RFC2119;
&RFC8174;
&RFC2136;
&RFC7830;
&RFC1034;
&RFC1918;
&RFC5382;
&RFC2132;
&RFC5226;


    </references>

    <references title='Informative References'>

<reference anchor="NagleDA" target="http://www.stuartcheshire.org/papers/nagledelayedack/">
  <front>
    <title>TCP Performance problems caused by interaction between Nagle's Algorithm and Delayed ACK</title>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization></organization>
    </author>
    <date year="2005" month="May" day="20"/>
  </front>
</reference>
&RFC7858;
&RFC2782;
&RFC6335;
&I-D.ietf-dnssd-push;
&I-D.sctl-dnssd-mdns-relay;
&RFC6763;
&RFC0768;
&RFC7413;
&I-D.ietf-tls-tls13;
&RFC1122;
&I-D.ietf-dprive-padding-policy;


    </references>



  </back>

<!-- ##markdown-source:
H4sIAFOwnFoAA+W963YbR7Ym+D+eIof6YVIHgElJlmXV6tVFi5TNU7oVSdlV
p3vmrASQILMMZOJkJkTBktaaV5g36GfpR5knmX2N2JEXkJJd1TWnfVpdEpCI
jMuOff323uPx2DV5s8yeJievLpKLJm2yxWaZvF5nVdrkZVG7eTkr0hU8MK/S
RTPOs2Yxnhd1uR7XWV3DI+M6vyrS5fjwsZvDz58mDw6PnoyPxg8eu3xdPU2a
alM3Dw4Pvzt84NIqS58mZ0WTVUXWuJsreu/rN8nPZfVLXlwlP1TlZu1+uQkP
jU/wvW6WNk+Tupm7zRrfUj9Nzp8/S7799vHjEf3t6PDhN87NyjmM8jTZwCSf
uHX+1CXJOGnKGf1vvV1V2aLmv5dVQ/9w6aa5Lit6Ev4kSV7g4JPk+2y5zGv6
iDfgPN3aD8vqKswyudjWTbaqk2ewZzB0vlmN4MvZhB5Np9MqewdPXzyjf9fw
6gzW8903h8mz67SCMWDv8TP6epY3W3hdNr8py3nyDP7FH5dzmMWz4+S7R4eP
H8pHm6Kp4OG3F8f0wfq6LOChfzlKHsPYjx48TI5g6+mrbJXmy6dJlW7/mNez
CUw/XvLFBOaS1dd5lZlFXzQbmF/8Da38eL1eZmGJuqQj+GiRF3mTJS/Kcm3W
82wDRNXkRdlazDeHR49uW8yjwyfJd98+Sh4+OPzWLmYm0/pjirOZzMpVvKZ/
nSQn+Qwoqy4Ls6h/La+L1he0pguY3XxThFO9zGbXRbksr/Ksjk5SnrRLp7+P
k5fpVTpPl1mRPMtgOZl8/Pr9oqzmycUsz4pZlrxJq1/M3vC3ZmNe/+VR8uiH
49a+4LbOkz8Bic9ppX4f/pbO/1jzlLqbcNG/CRdplf6n2oQaFjS8C5eT5EW2
inbgEsYJn9HivwcOtSjLhu7xZgnkehWR9/fAFoFdTsvKkvFPl8nhNw8Pj/rJ
WKa3AtZRFn9cbK42PZQK03uzqYGzVbmdYbmKP6ZJvi3SxSJf5vDxPJrd3p7l
H7D/+dW1mearZ8mDbx8fPrnttn139F3y5PG3ydHDhxHrWMtM/jhNi6u/0Rpc
XsChrUBWvMvw8F+lV8vs5JjpoEmrK5zWddOsn3799c3NzaQmdqLXFpnQ1+sU
+EL9dYG/nGfLdJvN09kvX/MILJsun71J3mQVvQkJZ12V0yVy21m6qeEQp1vY
RJhZOkOZlUyz5iYD2qPJfFUnx8urssqb61WSFvPkhN+RHD/7E1Oz5/+7ud4A
m1SZd/jNGP7fg0PnxuMxXBE4E5iOc5fXeZ2AEN2s4CYk8wyYY1YnaVJkNyRz
X7959vrkNIG1DYngZP/k4vXBxMH/D0RU1+kVDACbv9oUOYjFLCnDozewzLxI
cEdzEEhF42odUMR1PUo2NYraZrvOxnBFr5rr8bt0ucmS/csXPx2AlCya9P0E
Jg5ElcBHMNsqk5nPk+Y6bRI4BpiFDgnHtMrKTVOPHBzCKi9oMiPabbjo1XZN
x7JO5yid+XOXJosK9voGBH+COyTD4z5k72HmNFcQ3TBCCodN++XXElY84f1e
5fP5MnPuHrKtCjgAUQLufgbLhS1agB6SFvUaZHPtN7tsrkHywoqK5O3JG5zG
NMOtyWHSWYq7tNwm9Tqb5Ys8m48cTy5dgawZ8QDv4PdInR8+/B+ghaAS8umT
/AN1E/gHkZx/9MUFfPtf8dsn3zz59GniLjazazu1GcylXCzg2XCGowQYx9V4
CXds7o+RBsb5A7+C47m5zgonB3udrWiJflj8FOfgqSdvcLGwKdOsgI1vcJ+v
03cZ0OUKuH1a5PXK0UnjfDLY9ymoPddwhHhmcMjw+rouZ8SCiOjgrWWdGSKr
cWFp7Wlj4s4K/rDO4XYxufI80mVdJun8XQqEdwUP07HXmzVOHUasYOfGqFLw
23QREz7d7D1sEi7wFFa4f3iQnCr1JC91Kf7A+WQeP/nuCE4G3py9Xy9zYJfL
rfP0XSZlAcdO27EHhzCWF+7BVIDum3xWT5Kfr3OgSX3ldYqUAxyHuFFTOlaJ
E9i/JdBRAyP6rRlXwH9wHX4vk304MT8WUtOfsmyd4nEDoRMdK808AJo5wANO
qgzFE65hCeMyDePDK3jtHO4yLEMea6p8xqp8vlqXwi7tG/2ylKSSJTBgpI7O
3vO6lrDdk8Q9t7chlYeRYAqQn2k1zYH+qhy2EoQEzAKuJDw1W+bIB2F6syUS
DHxSFkWmjJsYOs0hDMfnUWcwOZ0yb0uNI+MS1/D3jKjmPzYgn7KauRSM3KR0
qK3fTe7KluGWA9Pdx0tIIg7m8fhgtItZt9g0ck4hit/EsoFQYZ040F2Zd+/y
ioTPEoduiCl6Jj9yOs8h5p7cgbnLpQzDesaOnIq2A+gHXwFys6y2tJX4SY5k
tOJ9xl2BucFGTtzzTUVMmsZagQU2DaIIdg3fij/AFTGfnqXhiLOElRM+MHMu
bv/DB/4K79M8R4Zbg00I8ggJZ1GB3oVECBTsxzcM1MmwtGM4NpwYLAhUW6U/
3B1PmBOain8GlJPlu2w83QIdXGfpHFYHh4VjjZLppqEXL8pNxSpaAqJnOYcZ
//nk2eu3ry5HyfEr+curC/3knP5yQPuLJwun+GtWlTSNdDYDtZplGQydV2Al
Vzw3/BSeZ/ZAP8ari5QGB8GzBh1mgywlbVIkUbxPRH/loMNgP9AqHBCcmxDl
AbH69RruMdMZrhMvNZFhZvdXtmXifgapBsdTr1llY9pfA3eCNQKVLre/ovwu
y6XceGLauAbkxuIqoHdV2ay8KvJfmbcgKfARAlHDTXE3OZCgstTCP0OrZpXA
T8IBr98UvxTlTUR99Gi6aEifGFoXyEBm2fkvGZ0G0tqm2SCTYLeG7AvyQFoV
TQxeQyOlU1D6m62z6xnBbUDtni+kzDJagDI75GxCtyiv5iQ2kSer4K1ZRwEm
cX4+nqZC2/i88uW8cTDQCvUNlZz0WvoE2BucTDNJTlMQ8njudE9pg3DRej9x
+nlDBA/cvZaZp8h85QSEb8OUcaFgzc1hgmD60PyWZYr0w7cCNnSFWgJ8v9yO
UJ3AWSxBqsL2pu/KfI6acrEAias6UJ+CjYyk2CY3sHOOlJkC181X3nBqmAF9
21Y5dLM2xYypAQ5p4o6TqxLGICpgyq9K3JmcDpkmR+fkXwAP53W9yQwtu2m2
AO4Il0BeNUK1AWT1ZplWsETSJeQ+sgo8Ld/DccFvc+AgcPQ/44T9j1do0qLf
RgWocFS6UnhfcWYJKb4ZiMDLZF1nm3k5Pj8fOa9v4grgZK5Adaxgrb+STmY1
LSvlp0i2S9ZHwAB2oKcSP/f6AtIi7MyMOQYeMn5/k9fEe/DSA6NKMto5YFjv
8jnwI8fzV9mJ2wgHPyWpEE1bWG8kGtjGiAeUDYFLwvyCRUxyXd7Qk45FBK5J
HuRTxNXNkBeA6XqF/DtfwBC4lrQCEkCVF4m5Qh0QHvfnQGSEF9RsqEPSzUi5
ggsF2gbNFn+Gp2OPztCtOS+nzJOWt4DlopcFaSStSYfQWwzvdekSiL2WsbJa
OKtVxsZgMsN6cTvUjMBzaspZuZw4uuO4AD8bXITRcIj54zVHPllnqOw2mTO8
cOS1ze74pPU16S/IICoy3nAL0BdTZ++Q6FrWTES2Z29UQsBh0K1bV6i9TmKF
FfVsfE28ufUKlZEdo+PP6uxqJQIS+RqqLp66UJkpb5jGZqD8V0DiwW4I+1Zl
oCoAVeihma2rk79txGaAma+AksIu+2uYnJPbwBO/leiqePjBkc55ZHjYgRGG
FIp3bZHmyw3vMPEc/x6g3fv376M9fUlKH7r/tsmHe0341yfWsH7JgHGCglEn
ey/fXlzujfh/k1ev6e/np39+e3Z+eoJ/v/jx+MUL/xd+wsE/Xr99Id/j38Iv
n71++fL01Qn/GD5NWh+9PP7rHpGR24NLf/b61fGLPd4Rq/wiBfFVJR8R6CZI
nSgBs3pW5VMiVbf3J78OPDqSdgVGFuien8kGJudwbHlFimryAmhxWe+JUfng
6Og7b/s/Ofr2EVr3bg/Oek/VO+LSGdBcvxxS3Rm2ONkLF3GPfoPicZrP4d0i
YxLSH/dhrnLKB+QGTFcj5LEVKzr4TG0fqg/EmYPWJchWlCA5MOgt3cYcbz0o
XiOn1jvcHmCQbDMSj3B3dHuoh6Xf6+GOvZrJJlbQD1AIoL23iEZ49ob5xaI9
rn4N8rbYqquHGBN+gRq9eHmMmdmoQ3tL/F44uQsTIH3A8g5PTTD1k4wvAd60
IM2uYD8L+5JcmWq8iKH5j1CzQjMLdpvt3xlcRq89RBKMt2KFTIKsIZ6P1495
0ZtmXC5AM4HbgRpQfrVRPq0eW6C45NIIdDrruiVWcSujl5Mk31SFo9kXJLEX
i2S+qcT3BNrtIkOjESdvJQozYBT7+SwjC7ZOAqnq5+grICdvTjrqrGQ6VQFF
V+f8J1KAwZZisnrw7ZMHnz6NXNOW9ewGQ85mX0sDoKNXfv74IdIvGwFke/tz
Zd7qz3SDXgZQsNGukcOMaTCSMEOzydzev8+L+v/9v/+f9aa+hv9plvXk35vZ
es/PEuZ1Nj6ZaLC1no/xUVwizU80xLzhGcEc1LJISZCURIlAkHxg+KyKVnvP
0I7YFJ4WMTordHx2/Oo43jLcrhrNGvaPJns87z1hWpviP0CLkmGJgYn7YC+I
KOC+7xtP0Z4/M3cjo+k9apFXSDguEsFsl9iTILp56twYKTh2IbHvXzRQvCii
aMI7g49FDPSleHVcYl2s+/kkm4CynBcb3Gs4tGtQpkGDghvkHcZgNoO4rQ8m
MIfTnD43Rp+ZEarY6kELSxL7l3gTK4rxrjReEoSNFCkC27SE60DeKCvGXDqF
jWLmkJNRA5cabRr1OMo7wXCeXVdlgUbMrPUSsm7FdKf5TesSzSl8AghjjCYw
CBMwOJd7crGu03XGKgnMJL8qnGwB6haojl+cGeKT746+e3KILprjBAVkcmGW
6J3NKHTkMJsbDAPM1yVIcKF9o3Y7c6xINnyF3+Vpm6giFxATVXxWotHlxjom
VxCxnTH+YMz6H3vG2joEDgZSDU2vuufm90hOFpb9G6HeNnSwoxukoWsG0nm5
xTsYixpyps4nchf7HkJdF6QFP0jHe0PUUcMt+lm4cFvQJDV8D4oWu2qvqnSG
GgtY2nscHOCrWwtXSIkZ0rP/XoABs0Ahjtowqw8prfv52auRK8VJArrUO4wS
S0iGBbUnlsnwvCpWw+qYKbCWJys0s3XsCQ+aG3og9EbSQvRhcUrnxOVnpIow
iRA3GaHrgr5g5WoDuhJGa3BhXwEbPnt5Ov75+OxSKDD6bcQ7gn97cvvmw87M
ctLQpmAjDW497O35xWXP3vZv7RnP4vuLk+SiRGupTo7fnPE0UI7MrvPsHR9c
nTWNyHZ38frfX5y9+uH0XO1g9TROOQyF+6d6QE3jMnPzll3s5xX7lwQPuxPQ
LQaECcbenLhFVlVlVfOa63LR3OCzN1VOMShy95G1DvowKi18ARZ5VZM0NJEm
ZhoVuhUkPLJIZw0MrZwuK97lwBRXdM4+eJWhewktMFgXzUfJ7R36eCQMhBeu
ziv0c4zYe+fMm+cleSTVBoOzWizTG32trsmbw1vcDdeeuV96DaJoOTe7ZRws
qBMhf0GeJY4PElJ9WyHjFBn7YNAty2wmGKKo7ZOjImX7ctYst2N/fhjBypCA
zxY87Xkp44z432bBQOvEE+3CByhi5KbZFud8IxoOzJ09GLrK7D3cErMjPQuP
Yx/MoWumbZCE6KNFFdiTFx4qO3LJDen2FmkDBEXf7bEKITqT0lHRpuOsIGd9
hkowhrbDAGZwNozj+9zWFvLVKpsjY1puQbf6gbQxeid7hXsHrikuh/x2ni2I
OA1dkcPgKozTfcR6pHEvV6jfhsdgvo5MCtLpYZH5Us5lkb9Hnxd7veNltb1J
MA1lhGLlV9miwhexgN00JZokMyJpPE7+IXs2mWBBAXWiypGT0cZWr9nZeWmU
JnxwzyiXgXkwSS9JY2B7CfkUrOMmzYnoQfCXq5b4FH9NHRvptKL+t1zn5GBk
KRMLKieKGE/yq7ozF/OSOtmTQZQW98TTg8sLfh9y+vCJ8Tkitw7BPnycKXkz
rXEpKJGyWYZeALbTepxSI1dlV2k1pwgzPMRrukl5qX71NCndcLndm3ojXjp4
d521zoYnj4ox4vZwui5jFdpHKGG5yT4xpCDjeqZ44Mjf7Ldk4DexPwx0dvcC
CB6dzCOjaeuGDEyt8xZ+/pa5dRfU/Vl3emG3jF0SPL97eH1QAiJaIYTeVGy9
AWMxeYUqmNcl4NiBDYrXf9i8PBGLe5ucI0yKXWYL1Hh6R6hBJsgIK/gfwjZs
cRykCdY5JL5lltGKqnCo/rosKeiF1geF0JnK8iqZpqDcj/ixgERhFYtNW1b/
EYKBksN1fRA2jDut8myhR/W133tyQqfWClAJwhSCIZ4Bnb4nojRyAVEQYE4U
KWZYC55+78mC/NsAky6zmrWGps6WCw1HYJCq91cT9wrYIMwTr+qI4ktrsERm
ouGqaZZooCnDGBEIaDc0f+HwMOAav8FzQcKnGDZtMCpouLm90/HuCTJDGx/x
lcWjE20gEkf+DEYPeBVQrsVTcqa2L1mNjuC+W1Sraxi/3BQ2TBMewShdnzc+
o9hmPXBBGeMxMCZDPorIVRu+wxgt64OswTV8qPoG2Jnvy6Y3QsA/vu3F7NoT
BzdssuuMQmAjgR38+TyZ8ikZ0MCobdcmBisxca+BDjUaxl46Puyif9L4tpen
FxfHP5wmZycctmV/Y4Ev+4OTHw4tiqeHjwpXJD9S0XTMeUZzfRZIBg2TXs6d
CFykf1JE/2xjYJSbFFTYjoppXKXjGwndwCN7xA69n5YfAMveR15MUE/gBmtG
uyLoELSR5WZuvc2Cmiui2CPOuTVfP+gfHBJZGYA0+dDCkYZaq9k7DigH/DGv
huS9BUDAgY41XLXeVIg0AzbCKoNEmYMfSlwl0dPkToWbQfSnTsO09lvUBRvh
dMh30ndJ6aWCJEBHGGGc8BV5E30FfBPlNEEYGOxaR55/0dWM11yOyAY7vT1t
vJy9TAns84LIK7xP0JMZabj4q/HlX9+cKh0ZMpJNacF37nqK5zoVMyIxwJgy
aDYh2q3TqXeP2SYRtj77XrlfH1CU3Ed/yCYqZ7NNpXZ7ocjFaOvQMCQXA5Ly
0IuRR9yUZKmAcrQP9LamuBtqAsASZvjrBB2ZzUEEam4HDZ8mzt1n3S0VY58H
TfbrDN3z8jnpGJWgfD98+EVxm8Ap8feJ/yD+tf94x89ZBRTsXQ/aljBCvE5c
CVpOGYvm1pzh94y4JrHtJ0SaHXDFUWQ5TBKjeoo3MrmUWUSBTKIFvh3oLktz
siP0hcRu8TjgpMR9lMoesLFUZcatJN8wj7bYNdA3qtZD6RXc2ol7hrH1LxkW
1SuMJQ8PrZFv1IU3tAN0GOKnUgSCwpfqrh7YUW6BkBxF6lSo4miw1e45Ujwi
l7xiy4g83neDtlbNXhC5Hqys9MFobndVZQxL1FvkxFEkoM6VSE7jMQ9maT1J
oviVhC8xAKiYc8dgx8103JSg7MOlxTiE8Y63Ir2JwsUWy+x9jg4cHGBaCsdz
JkoTDGL2kaIWs1p7cFOESdXQKuEkmgBldn3g6cSCp8UtRt4bxcBGMNUOfCBH
s0rQNKQj0R6DZZgV1xSnjEI9fpM51JcHmBvQ1QV54/C4ccMuTjT8+O3jh7BV
CITK3pXLdwGIRToCuUQUPM5IswC3ojhYKzHBJgtERtsy431e1QhAJePxKzT8
vgoDkvhz5ZqB4ujuLgXu/cKMqoRuaMdE2gxe3AXldIn2h/Ausy2DtigJdqVe
/7Sqm3jfwGTDc2HaB1pGh3wNTA9vuF4hf6/oUJwEQdCFWCDlThJUZ2HtiLG7
Et+Q2T+7QEZ8oXOM9IaIKmQm9vtXx5eMWAA74CbVyDLQHyL1mvyKLTPytteb
rE10ksSCG+cQuAkTmWVrJSu6cWISw8/wiu4FspfZ7Ikdq5ObpRVBkwuG7jJg
tRBlnPgAYg9Qun+l8uMrp3rYEgQQjOEdOiPZ5UroyC+b7XL4i4cjotJDFxx1
hnpTZT2xWfVwAqE3GIUnx751tZPjF7FTGjANDDlNVltQ1cgalTBHiZwt7zJp
2Cf1hGYJvLcGLo1gzYQmKGlHDLLtR17Aiz98AEU+zZc1glzasWzrbDYubvkF
aYUDqOmg5QfUbB0j9Nl/IIRtWM0QEv/DB/SCzLazJSgUqnChTcvTyQguLBLO
g5VDEDLxvzaTI5UIxM+atET761/a9CfnK0kEIXUgCNg3uj8nsj8f7unewtf3
osmcRhf5w73oYsPjkS1IOuU0E5Inpk6YohCHZrSTM0EfxaKkZovJarEBaY+l
V7MgHJZjyqIYvEpfi50TmH2y/+GDBdGhSX2hmQF3w1aNdueUEYyj3uQNBUxM
yC9AtxjCgilv/MPDbx+LsKbUHWP9sNIMJtOCCVh18xBLxfCA4sa8ASL4si1N
dRRCPkiCM7LokD0iDyQYquWTNcec6msMjuAUQ/6Jn0ZTKjAtSa0uM83Hxu3i
TCgLA+Ag4YoMeEJB/mw0BN4jDhJJNl1RqkUvGYvOy+4CCoREVCPmJBAK5wRQ
Uso70gymW+IpFbuAQD3lMCapP10eqAlvQMmC4ShEzWcOxm5oVZkESYV7bvEl
cfJRQ8YSbiDM/sfyBlVXfxrNdo3xFparHo5NICikAlyNXYyHuukMZL41T7jG
kLrK65FuMnsq+jaGObXZFR8fIt9nvBk6OQWWxutt+5wcx6jSiH/4FL3VBhNa
UH8L97rl8ppmy/IGrmW+yglm/3nLkRChzNn1LUdW2l1OQfmBbNuO+ZYR5rLP
syarpODbZ6yVEQc0Xfa3ePDibkeot8dBITaQQ1j7TTxc8I7hgOi3QJa3fMde
NzRthQD1HfstPwclCqGbRPWbCLEW/KbGa/qzx2FafwnR8jSLf59J2kpYED0G
Ig20YycMzjutUYFYU8jYYAlDCkbkgdLtb4GYuuA1yb9kKnA741scvyBnO73a
AF90/gatIAI8qIKy+9axwMqYjUH5gVj9XaXNjMzQ4LZlfkSIcyee4levT8/P
X58nlM4goX62plmTixaDIUNBnYPag5yUtQ3BsHv3M/wGrsPZyzdxyuXR0YGo
yopjd/41whm6tywKo+g3JIX86bngdbVAHZ403pTjDuOpMsS+mol6hby97xzI
EVKXIFi+CJdf7FtOcfdhregiOwW9ggWw3Hqjv8sg/E1rbYvzGxCiN2I23BD8
I6S8pWZN4V7JOcku8OJr82SD8cy0Tf3wQmfMiYjRaoKj7AKDMsEgajRHFrha
scn8rYhxoN7J6mEFQTVlFjywOX6IwbuCsHn1VdttCXTraT7cvC2GM9SJFNua
PqguGzNM9Sij2Udl6hGY+yXRCN5y174ZIz4Es6cC7UFja5W1SYLuhLN3AtNs
E8WfkjLw284ntT6lzoGHHA/Hhu9CEnxjbGZnIBZbRUyOFK63vLB16i1m6gTM
KWg+djth3HfFIm7HUSsMReNpIzsRpfVAVRdt94PK3RankQVEYJC+V8P8+pSA
kR3trrN4TW7wfoXBXlXFPaDTCC8FaNIYvlF/lAQj+5RNkytIHnsZqFdznWYi
cBUjQffGB1rvPlse3fqhar0JlA+ZdcKaPZBLFIACemGQaNuTXg9ZtSNWpWoP
AF5uHdo79nWwE6BO5qjrfxY4+FWpUAfOKuOFsnakMDQ2cMno7HNnduELo5bi
ESsNOVMRDXo3hZTdN7zR78BKU7ie121b3PAUVc7OeualXZJnDBy8I/8HZdvN
KA0aX/jy+K+g0iEgEDkpZzUScZpaB9Hy2hHxADRBqDxQn0w47Exg4Oy3uHcP
q0OpMndxzXGID/dq/tsn0ActGRj1c+dBP3VSZiiJXYRgbuc1leOAG0ixb453
ySXSnGhyKusIuqekt4RESsoSLsCskTz4YrOaMv4L/YubCkN+fhKYH2ncn6t0
nqm0MnmzAmNOEs4/MRl6OpAnXPylpEnR9L7WxAxTuomYhgqJqRZeQp8lhRG4
zEkROd1xaLiypI5L+YURPYNf/IrhXZ0IsnpETTHn10fIrehddWpzcIyXgl2E
cl7rKAz3TvYjl3u+0Jgl+u8rUnhZebt8cXEwSdT21kHYkASOoQWVZlxaQWPi
XzNwFw2ZKHmr1gFEUy/Q211vaZlwRPnVdeNTmNF0iTcN5u0JJN6/X8nc0v1h
xLhJS5cUYlq0jhDSnEKtnkBFZjBE8Gh6Lc3zgCwmyac1okBHCcm4nICEnh+v
5eH1eSu1EpxmXj4krxh+1UG+7QK7BZBaeBMt3YTocVCatRSjCG4KQcrVQcPi
emeJAalqsNCmjweXbx3C/vLT67JuKDENp4abEUl4uRYb9tdw0jcynWweyUct
qcIVmSxI7LirheH3Rdhye+MVpdqan5+b+xtnIIaaPZwkxldHUsvp+lCoPWxB
5QRwTij85VLzDcMjsuMUv7DORo7BYE2IGYKsfKq9pWdkhmopcLxCEi28A0z5
joeyVyzWecqlVRwQFFxlbWXUCasnsuVyI7AjsPso83LKAWen3SQQOm3dPKOM
OlF8rglVXYbdB75KbghS50SZF0Cx07xILyiLr3BK5I6mlEWqTGFCJMZ9tesF
PKVaAIHhxI2DljMjqUqXOA2XBI8FbUaJJGw0qVn+IOtyU2HBPnIUlpwiRcPL
28/eIIYIUVsT971QEociaiJGrKKHSV8jSf209viUPMrrVAEpM4yQuV5SJsV/
cFbJrlkFof9vCB84L8GUHl9W+TpEbzQaRR4KqhyHoQI8tYJqc5XzdKsBlrUp
YyjF12rMmMuWOauSmL+P7wAOmq8JCNUby4TLYcpyEn6f86sQEv8aL5fEBB4d
PcSYAAyIgYKjycOIITbLGv/QM+pSN8HgcNlQ2skUQYW60wQtBRKKQB3GhMOg
McY4RlR14Mf0HWeYagi5neGljtWR3jhNTG+PGu8GbMDXwHg6D/GeWKcsKJSk
QCohubsZl4Ffqlaj9iRSCN5OxMVc8/IaTL3LRS1qGZnqPW0br2x9w3cra6gO
OB1qr7N6rtd1O9My+13OdoXud3A5G1LoevO9MTng484bh+OLuTy/s70vuSUR
ykTMfaasXQa/9/bKoBNmAi99lZ1nYm+LNJc8Pq4bsBTtQ/Nl/Y/2s8nVRJkZ
XLj3W1I5gFdg2QUUjT76KOT3PqsOJJ2XvZfNNSsFYVC/kbDfiC9xMmILIFuo
Ie5jZKwIs5FAyCE2xad4P1g72jT0jxjpUfuCLh6QAwaAgObF4Yjoc1DZGCxr
yjLY6bRjgrB3Z2/aW8aVJB3Vh0KZJGdCKYB1eJ7vd6glIx8z0LlGL5QLhYXo
pZV6XrIFpjrx3fFaKR+CT0AO7voYq4RIBDBZl8sNSiqx1yQPWx0y5MBtKANA
Q8x+db5galZHamfb+iJKti6OQB5c1CUUPoQ35IVGHUzVmhYbLZLNmguG+KVc
XrcDiGRHby36kPEdFGIWb0JAyPrqTK3ZA3FQhGTMypQhXOC1uQRVZ3k126xU
xwHTL2Q1kmXUnQOqoSlH5brnRNh/YTRY/4T0LoJ8HIhLEqj1RrW8a7CclhQ0
GuuyYNLP4TpG1RzCzEWD0zl6+AvnlYVkKTkyR34RMqG/NDeHFrRCU95XVTK/
268PRJHBjJnsOl0uRoS33jJqY2sSv1wR2UdyfLJt+8Ejc5CEmnryrqlWEUgb
Z6JgdsCgMSUvhQ0/5ypyH+5JGoEGzJRNT7OrXAphsoLYVymxWx4wQkg4D6PW
gsqUaSAudvWIynetgp6TICQ3BWlStUVkeOw2DUPCgI4t8ND6hmxIzXSkgtLo
NOQiJbXHftB9Cojl1tcDFRhjuLetCZncqSak6MrO1oVEUmFJaGITaXQouRG4
wrYKr8VGs0DrBGfNySMSEnr++vwlSFSvqXPsCB21ir/QoNjZ6eXzxENgQqat
Z9cT7xi7+39HfX/CMIfy0QP48xD+PII/38Cfx/DnW/jzBP58N/ScDvMv4/H4
N/3RgT4Or8Okzgz/9/H3n9Gfz3lWcmE6s/y31gzo/z8Pz/6D9kjoP9lXMkMa
PPgH7VHvjOQi/hPNSDjCP9GMhDX9E83o7v/5GX294yHkoyeIr93x39d3Gegu
/339++1R8HWg3PuRpexz5vKSp/dSdcMP91gKf+I0umIgWY7ERScBUA/eyKSJ
DBMN0hNj6h/MhcFSjJPAzzTFkGPro+CmDbFGxSqwz1o9CT5Ywb5hTvQxGXql
xspblc3InJHMN8rwQDvPzJaNOJ+cIcBtj5sgyerC5K59KSZBIuhm4PSkvADD
owgyrdULImQQrnFh1Ts7KDruQSqvUWntyeJV7Y/tuW3GRZUxmWWWYa7RpF0A
vneQmajYLr1F8x1WfEELT5O7JabfkpdusG+pVXRuyaOMEW8UExUIV295N4tB
w/w6Mzw5aaRC/jQLUCPuYOJB1p50dY5nJ45IwN6DtUG6eXujjZabZq3FjEBV
46r6aWdi7FB9x8VdpltTRSHMA1+FU4vnIzU17JR6wXuternoHg9FFcSyF0yE
+CoIr7MCc4ayYf0Ljc8ib9g5YEujSKnIu9VZ0URgvV9dArDbbjijpE9bKQYq
+fl/OTzwyKmQYa0acgR9VMT17e8Ok2ylue6eE/oUcEpHB2DP9k+KkZa9c2qn
vQ9MgV+wg9Nrri36ctfeiBDM08L1/tCngcYSgINLSjRIVJMvnRV5zDIVPosd
Y3RtodaokqLufPmsDjXyWqTgyufVAZLEd3PIkYl7XaJ4blm4ku7etnNpoH/D
05es0SD5Ci37Zz1AHCOFD6etqgShGoFpvwHiS8buke+MZIvtzuB+xGfzJU8l
vwIWlREWF3dszVb2l5iNpM5wkj9sXpuU+Kp2IXk7kjyUdL1POBKBROHnWQMc
kJpMdd/44UOFX2sTF63hbKozS6ydZYlNmrHw/RXGEinAOKIkhnUjZEkVpyPI
id+OEXPsz9mIAW8BE0X7uBJ7XEJp54YW812XVNxp5AGV6pFUORAPgVOJnzr3
MXlWzjPQ4F8W2LQtn8FfT7Ig+z+6j2P87yn/D/1n/or/gjEO4Vfq7P8YYnim
Bn2ICsDq8CdH8KD6Mz6qN4uvNn79AD68OD3/6fnx2Qv8q4T/OcWKU1Wo3rZu
u9SfS7WNmakAwD/FQR/iNP9y8vrl8dkr/CtGJ0/plbAO+icmfTXoZfI+d+pL
QDUuxj7Me0CjPaJFE2T3I91aAwCFgfCRb+Cb89Pnby9OT6J9mWegOmpnrnW5
zENJefrddzz08dvLH/FvMO6x+L+I8fRO5+iIpxFNicrMYiuLzuTc21AFgvOr
iLDquHDZNNPat8LE0M3rOgGJ9o1GWpb4hBaKnnN4QhiNJvdJ4J19sCGiob6z
uNmOx217aDb+rNbf+ZPdDwdL5aJ0J/c7G3mgOF8K/su7iHfyZY8VUudrnaeG
b9XRlQxVNmxp3rSx07bxb2/Vfrg3r0vMH5US8Hf11xKdY7wbuQpXZJnHrkQs
KmdKhqpQw7eOXLu8S2gt05e/k0RJJ5O2z1kd+F1IbZdLUdmQQQvXVCD5jCIy
LcXIFrOjbb+8jmrMfFGhmv8/lKaZ+Kw6znIL6XStIiz8rqxTxaZTs84i/E9D
WuybUDMG5bBkyfqEGL4dcAuqNPQ87Nu8bqmTzylA40IBmnZikilIExWIcV9Q
jeYuU+otRON8/RmPiekpROP7Y91aioa0DgmFcWoBYtK4DsznlanpX5AYK4IR
431Mq2rbW3tGGnENmRo9HAsVoaj4Q45CDJgtojF4Wf1QaLp5rbly+aP69zgd
C7Hyh/GPPqGem/C/pOKPVL7HDiv5OvWQWlKST2yLmrqbEegEKNtGnmjlKp9t
2N9hpQ7si4aUdkgYTh5r/rCvQQA7PcTcVIQPVEGbuLcD5dGkoAW35PKEKpA2
QR3gPnqM5laQgyaNUlAAhAKPF4kFMM0cSOoOFWojlxJCBKUfztZCFw2HH6Fg
r0CBJyAUgZUX7TqZJqLutCEDFlrOG4JNCS6NjGmaZc6CA3U9QkVSWYhpuWkm
Jmmo46pLW4mciemtQE1UpJ8neZfs5ZL+AES8B9IsBF52VSpAuWNg8Q/IzBpp
/W7PwPrddHf1mydakTH2LqBzo7fEoMeTxYethZwGdZzLa1PcnirxG5f6jnfb
9pxugHhGjJlCrx+mB7SKv3EJcI+/3h2k9rWFxMmlvpf2VlKVBB+xvuvmtQ1+
XzSDZaZMPKrZhlvqu/XxucbZlmxIWo+Uxsr/QM1QQBJFU3Sf7T0aYh72nUTp
e3hJNtoUYw8vLmtltk0L+Wr1qnGVgEW8hwr0dJ3NiBK/Q0eyxnShwSyccL1d
RLqkBkpV8aEuVh1e7vb7/IjeLgy+SQkbGUohmcuCgKvXMAIpTh5nm6bDO+l1
B8OcmxqbFQyk9qJAN9x1NjxdApOeb2nD656Lp3vO2uwN4i4tm5S69Iabt6I3
guk0YSID+UFu2c2scIOZFTzxUGmaYgpJDDtCwdBIrWZKnBvmDXSFxbEaNstK
NZ+u6mHD1qMtAg7kzru8asjnTGbo7oDUiMly6ivZEy65CWnm5aI7gkwXH6Oe
AJkVVaxaRdvQgsbyKRTJCqUIB7r6T8SMqnjNla2JxchXO1DnUILYVxbquG9e
Ldl/cjSbXWI/nI6LTyf5zNNx7dOxe7DMi19uPRsXn0209OEzkd2jp/36S1+T
ymCpb48tqqfkHjG7C3I9YM8874YAzX+5lGRGtZhVxVCrHOsZBx2XGuG1lOo9
siL79PC9UeLbZ6dUqGZWco9frXh7OaAJGfUn9L5KQ/1P1VslSOA+Z7bJ0GyN
TTY0J9Yoo4m1VDMrY2LFLDhO7qaStRSLvnDlWaiStfPJnuZfLl5Kzj1ya1Ii
QMiNoj6F5OqYtw0j3iorUPFUysqmIYWe560fY0nytQR0qYGWhGcbbdY5FM9O
G3EEfjYy5T8LCC8J12D4v38gVIlcoseXx8mL01c/XP74TzCjO/53G3gKt3h8
cvoG84dfXfIae//7pwRPKZE8dU+T4+To8Rjtj02Bhfe5pGd2JfE7TQfYn+ZX
1FMvLQ64n6e037zi2jx4JSksorBbSa7VmMJaOphRuz76EB+mKNl5dpWDZEX1
v0Uuv+/0aswlxwAxdRqVefacI8qe7qc4F5zzmOI+PqOAnZvUnZLtMCw9iTwX
21IVCAIi6AeHnPuIJiUfdLlOUaHfmy7L6V6iKVhxYVkfJwH9AJ05PVETKutF
bHNwdR1/QvCj5rVlw1F1SdMuJi7mUMfCN1ItzkWQkWv4rmGCfMjzH8eeDfaL
BJF39Q/1SWgHMdpxjFEXD+XOgm1qoryt50b9C3GYMdLnIu245dWBJ541Z2D3
pqyy7Z8ebcDE77aoLbzdJ1aERj8IE245de2MfRRAlWMB8OHBb1uJgGnwtnRD
VOzUcBaBwvO5zW8dGcjwG81mmLjXncr4PnuoMpsw2l2v3vWY+63pAy0tqSii
4FK69fhjx7cGZh11jOVYnHR7j26pdr+MjUTF5NmIiQQ5feffVvCkXx/NtHM3
riwEzNyNKEgaMZJARAx3oPPUfZDmFEGxOlu0icf6tcQ7Gu6m8Q1ECqavDWe8
AzIex0Q6Ds+yEnoMCCWZvvH/m4QUX2sqQjm5DsopX+eSjSrBdmkl1r0cCN39
HFdW4INvjVdNbufZIuIZdhOFuqSErfXIRVxH+90p/tJcsP12kbuoJKJ0pcvm
B+Lh6zoVuSpNy3PUV2zP+WJ7OwriMZn6wbwrrx9qN7Tgye+5abfuWFHesmV3
Ac99vvvzbKC92QCsr+W9tb5bsyGWTUU70xJEo87+u9YTgwC4kVk7hkPmXKrH
+E6c9FfyTe3h+Wv4/5ZsGuc9h48cAOzPrJ1pZt1QeYcf9e1YvBmudzP6d6B/
2e7Oy066y3ZfumyPbpEWAvTyy4uzH3BHCun0qgkrcRBGmiVZb4Dr3sPCjyzt
CEQqDucBkpthsSmkjDGqi1KagUAxagSUvrda/ALyxLGja+7Lngd/nSVcA/Sp
ndYNmoa2KD6aztFELbZiO8i7bs9znY4iLl4rNJ9qXT15ePjpE3tvuEIOrIeW
KJkTTkL6oexg3or6jBwWG/Z9wXw3oB3LDjx5ABHS6nfl0SH+sKUEdFTHwLqB
ehgwUpGcLerP5p+JMGht0S6tEm1Gwnwe3FvLlMpByC/dburh66PF/lNqDcp4
HtBy1ptGK9KisoaYuIz2QF8t3bUmCRM/rpAbBVC1lzq5f5981Pfvt2jYdWaR
a41RcUy1nVpmXumSg05AToRRF5Ccf0K6EkWp6aBBl1hsyFIljev4Uoxa8Dur
7hnyFguHZY/eOS25d82QWw4ISwgax7t/X6cB+yDZHLI85+9iZQ+8VnK5f1+8
yfBLNMp8OR1tq+NUVbu5LrkEVp75xgGhPubCAECoUV5UI+vitYsd9FJJz9AY
KdNcNubPG7SofTL1I6B6FxWfxxG45lYSV9xiRl2auBLBAHgJlqE6uxfkhu6U
XgRtgOr6cZn+65xw5KEckN/YuMVLi7dgixeMWgKZFlvY4lD2VWARcdWS/dgO
02b3yGa5ydsgE1YvsG02I/r5AVf+9a+OjBs6hxa/bpksPQn0P6JwwxAHKX0B
JyF6Jes/mk5ho98G2SSWYVM6ReNbQas5OH5Ezg+j9BFUNk8p9apPiRLw+LDi
zOF2GtjX3u5H0wgaXE13+gm3+BZrs8fg7QFtmfZxfTHZSX85daKQqDL3rWvq
lhL3sCutUYSqya2v86X3v/h1POFBJGp8Rr2jBwHWeY2Ejai42zqdMfsR/2EY
ppYqb/XfEBtC1WbQYva1ZtrQCbpx9+8D77xPndZY2/ftoXp6xJTBhIrqErU8
EmcnVM6Yq7qwRtKZrPgPstBNLXHsIgm+OdO2t1259kA73xA06OhbcaUSfEDG
WeTap9oa3VESabu66HGn7aZk2BKnbV97rkZOtQDttdC0O8ULSMapOhE2DYG1
zXVw+5JZ05MzogRaZcvsXYox4958R1yG8SUBuzgWloRMgxyCI5awUYMEM2td
kSP0i2YiRVvnCYm3znyD4k45Ogvp+Piw0IvkxnbrbaWu42Yz/hkzRfUbmTP7
O2wdG/88zYGk3BjLJOP4B1wMJKKt1E1JTflJMa5qSW9WM7lTo7mnyLYm7ezK
hONOm7XpOypd+Dh9QbA35P1oj0CFoLaKArAUa7sk3+osEB/UZ3sLyBakwdT3
WzsLPRuG2m8KU0+MbBsEPXKuzMjFcta8kydVt2Y1iV7a47n4nLdp4X7PZinc
4rHkclE4v7MxyLs0UAEOII6geAilGVS7ootVxFPsgx5b6Ud+cuoCjphc6VRn
bxuRVHiK6z1jokfrOUZ3rEjdWmcqd2TOxVw6a/FtIPwVl/9im4T83eGSmKsZ
TZbrpzrpBuH3pF3Izwgx4IKiyNipUvHVBVnyXAXfVmvdMXEUtSHziTKSsOao
QTpHe8/qkPNEl6iN1FlS8hlLQpva9RxUnDq+Ix+yr9O05EcianEtGYXSp6Qz
o66y1dNkIN00Jboq2MqaLcu6cwqT5DiMHeJBqPv2iW7XMSM8P1NjNEcnHsV0
+LTwaFrHq/LE2YG4ejriRDh7kEie62ezp6cNZcfHOEyqzWR29n6g30Q1xObA
KDkTF+HSnVY+Zd/5jhLuQqmFU7VxgQZFfFQmIIky3l/n6RgN74bkT+gg291q
Wj97EWhXECW8lSLkzkDZzK1J4pYlITeyl059DXxL2hHJDqTuRiUBhdy0N4YW
326rC8yle2ft2935eOMPDD9GenM/U6QA0xnQ+PVRYgUcqrPLp2bTi3v6JLFY
wDHYpxPkGCUT7utP5h68R8/52p7e9QsXHEY5COPd5MUcOPGGnQQ9A+FD13Tb
qTGc5mjQ+MJZwlXXqHhIzYq90Xb8beu33eKbPsYONJ8tFweE/KYKzWoDSLdV
4f5nbxLGAU7cM3pC6INOFHsxZhqkH/gddRm9orZy5MMira+g8H5VvpNC1gFl
oWkbs62w/O5Zzkui4Z1HGpOFdmJbbj1Um5kLaFaCsMbDd524jGbIAFE117BD
sDZu7qapF4tqkzeo9XKdUfYDDm96f8eukfRoo6PFe4aBk2d/kj7MC4picv3i
o6MHDz59SvaDp+zB4WGyglnmXCO/PuBKpdL+Qrhx3rCxqLuDgzMw2hAqJe/A
GH8TNw8bg69SOE1gZ8fLK0y+vV4lnokWhH6RRjnIPJFDhK++quPqBqLCFtl7
sLKwzi6mlI8RMTNnP1adUeGVkTFbBO4d2ywEbfV2yq6h+rCIgmC/KZkKqPL6
rds/cd19oPzymnMV6eqYUv0rOBtn6CCRAq10RzDYMA7pSUssJm9njfo80MkG
c4ipCTf3DOMmqcEH6K/MdGtJTrqBsZwIBpiW+o0ynGierVf7Pl3a/6i78n2s
6i0tkOQa99zfA7r52s4CpOQcaJJoCl4I49mtXmTk2nb7JNjuNjxcCZraybGt
dynNqtAlrPU+yRQIrvIt0DsO3b45wG/eaNV6aThCqoXvXa0FCsS5/dS5+1iI
iaqe3nJNJlwPWII51DN7lCQW+MLzJl8dGdGBPronPrFvttvYSoP4O7z1LXVb
kE9wc4/fnDFXXmZNHb2dIxZLFWjYbqPFlbt5G3Fhayxp6+tQeMuqt/CXb9Q5
zZTDaqnXoOdb5DA5hZacPdIrMlDn5aYNYVeWW1/9hRJT/uC43cptmoZlvKOY
61qnqAgdEhSmMndTXkk6uUEhWYbpvSSfJyd3KQcU0xzaG+Ywue+tdgVyH51z
4p+8TdA4Y+6PPBDROqV6OTEmD6Ec3hTsKAg1m7gFaSpljPFhIYx9RpMfaNTk
JgemsB2HjkwxIdemApAm2AsfXKcMVWTd9Fx9CeMzn8QRaoQ845pw/I8P92bm
n58k2KMlK5gyuu2ofG+knubYo1DFg3U4ieARsfd5yZSpSzEO8l4tEPRHHJXV
cMoTwW0YGEDLCPymes13q1pX355a8oNX52DX0l9IKxvwEBI4Qs9I9GPv46Gb
QwiP4B4YtXyBRjkwKbmhTnnkb4waC3O/QBUp4ubtnaSkk7xLl/ncafscJOOc
u4X6FfgGglRbG/vPUSNn7owa1Qx33LkxlJIzLbjoPZFfhz7pZMHZyaorNJqz
mK3s+MKISKcTKbLZqAAOkJtZhHky6uyEsAde2Jxr3inH4axInBeGttoj82M4
EelPvZE8fgoIc/IosgI1zLVVJZxw5cvcm7x0AlAQo1CuZOrzlbbkOV9yMKCX
DO6DXRYdPO46lIQi4hyzN5t/GY0vsfiaOZAfOLHsxPiWHAf4u8VavGbUiXEZ
yFITw2dF8A/XwfRpPv4izDGxlM/oOp1baoscxBJ005JThOsLoVd3biq5ee2j
u6rEQO5NhTC7NRhBkizOzq9pEhpY5Fd6q56Ana4VHfDfhuUGf5s/sq8kExxn
/i7PbiyQVE8VT6v2Ddy8Uhojr+27v3Qd1jvR4nmfszj/s+HF+RKoYUx4OA6C
YF70Ar0FrKVsQj26e5FP6EW+yGbb2ZL7GVyi2Mfaukv9+JN3DekvRACTZyhu
PC119LtO1ahJDMmT4DJUtkYwmLTmpnLUpDBc4bRmjZOSijU8ljlqS+xtl8ij
GoR3aOaXrPN1xrXEJPsOBzFd39E+JRRaX28cqQViHXZoWCtpCCDWtpZBGwzZ
tpKcgAIohwX/tm3rncSmfbsfcU1G6JawFgaUbIg6eETKSoxxHK2Tu9Qeoh/u
CefVrqKoJd2U2mRUy3ORoyq0vRBOYkZ86phi211KA7LDd/5m1QMGniTue1Tn
zTss/N3DszCU7jM4YqhLT1fxiU1FiZYxSobmKEkpq/R9vtqsWPx7E8ellj6j
ugS0qJYLngIp2mSVcMWBd6t4IxkkjvRgNwiqQNlQaOtC1IR2ct96uvvaWY8H
MDp9xLcpCSQZFWcOWfu0wra7mt4nM2v6qcX0d+OwQHffVdJjkbVq5Buykasd
69ZoA+qhVaLtcnUdV6Hk6FL3VQbkLdIT7Keq2f0K7g4pz/UMKtdANKLu78UK
r10csWpZcFRjsIeqCn1lFuEKfKCOIQ0lljwTM05CrqTiEQ+QSjTqcHWpJj+Q
2NbT7dLvyNawMWhcr+8ACVxdYQk8HG4JOvcSuU/YAU3+tw1phKg9xkT3bXhj
deu7O+tkZ5P+nR26qGFLXW/sk8+SO0ezotyef+/vw1mGPaKxmt5dERdIpHT3
ECg5hbiOZIiHb2psdUu+wQB66Kf3YQJ3hlMw3BDV5Zuoqeg1AYo8jbEqOsK7
quWkRiYQ6U2PnkvA6Fjyvq65+gMG1etN5e2ykCCGIo+7+aYrqsaIiqjQEswz
RFvswWAvLvLCgCFxg05VyiRnHYlqpRC0t4vikjlvpWw9XRKFPfBmllEbS/e6
MFBeH4IEzgk6pYJGWwJK1cXsvdiKuK/YBrlIHOzGTJj4PFuk6DplaIqHnvlW
37D2o2+S4Cx93n5ixFxUObDo70oN4piFvRK+qi5d2VvaK/nq2Zu3UeNSL4YU
CnpmuJLuQu0QaEUz0o7nhP3m9k28xisfR0xKRvOsNTyLih5iwhHy6gyOst1u
V2XlyCtj8Fd2bHE6Xow3xtQK2Dy/UVUdDNXoCL2dxiWMPUW3+5GH+nk0sG90
bq44vmZETYgGbqb406gYtIDWOXAKhEHcR6D29h4W/eCjhNo0l8SIR30KWOX9
KVSOWTNaAh+0ExP4OJXDExIjFiJWaEsRJ7w2kI8H/2vbN6piK0fiomxB5nnU
iI61O527t/BJ8VLVRH3NhNo27tzQ9xUVm7ycMz5oAffyelPMcWwbWkikAJ+H
AvLG9iqD5DORrYJFtGuE03ucnVdre8VfFdE2vbIXZOxnpKiRO80ovjgeOzk8
m/YSdk2ITt24HiI3qDn9ffFJ/lP00ji4K525nmsW/YwZ28g3+0w4vKpdRi47
wFGrBWDEjeKSwk/a3VpqSU8syqB1LyTnvLcjJqGx0kr1JC/He/TbuDQVNU0Q
IJHMGqO418SsKgly3JShdyYzxy+y4dy/2tbb3VassFpfCYqRv2AqZ9QwIdxe
fFHwrMdAKQIJdQAse6qI7Y1cvmDPl1T7bfXI8TBkDXJQCTABuqBhchYWLGYx
WMU6PO2MFJeWvLCAyu7TupSVBaj4NF1Sj2WqFllh48VyscBIoGkUWaIBiEHh
rKE5btZtPaP2h+AfVgWICUgWbhXTepIcx5D+KTDItGhadLtOZ7gKJOASU3ng
GFEZ6CUFx6lKGM3WJqDBjjA6dz+4MFKw0eBFncvpqqjEojqI4rrlFrgkhnPw
FQgKrRFXtTTbbC++nqXYanuVrcqKKvlR6+06WjaCOHtWTR2PicDNmoGrrNaN
h/JFZ4W6tCRsZWLuw0UwQtxF+DmducnVYB89e7R69oHjD6Syo31GGYGIF34G
c8GdG1DSBMgbwL1f1QN0XKHmK/XRTLdmR549WrL6vvJ51OKcDSdvR8BQCAE/
P/3z27Pz0xME8nlbLP4hU4mN+OyYF6YxmjbZfAQx90EGXWyF1lIr+xEhCIKn
ynyOq59uVH9cXerExUyyK9vPQKZbZ2v9Cl2GQrJRSLN7HiY/P0aLXlUgAbnp
g8JE0yZGZJ8tRnaByXxT6Xmgw1Z5VPttfZsqDVrYDxqsDHRei1lykICgXVMx
SPE0sBzhet8EkffsVvlv0f9+2/g7QGANEYS1f+kqb/LZoFkcrfXhYd9aqaTd
AtcgX3Jx1dtHxRYQqMySnI4GcLJ9yW/evhgh7ds6m51FWGNBqE6OEsijPXkH
ccrPWWglhx0YRnGhD5mqn1x80yRej9rgf1AGZ3+Sy4hbPRMwc+AJxyqCvKgv
BsbshdtC3WJqc4ReCwbteHDQnAv+UrbrkrvYdbscqS2nXldAsq7nvK6njoH5
xqsz7NfbiLOzf22OMg/YTlH1MfLR9gHejRddpMlP7E1QnaarKTnfbnDoWrQc
E94T4SgIt6gEgRxlTYD1MidUCdk04yhmNHE/sp+iPaC8R5VNynSgT/odGozL
EJ+H6ATTTTXPisi3xDW/cQP6zo0r6MulRKfjPJ81WqlZuEIjWSJhG7tb5fZF
+++p1cOENA5ACjlXzmsqfGaMeUIDUaYrhuzWhmtYFMqbaBCqdM29x7BHYM9J
Sqe9CJoUu1zdoDPbb2VL3JNhDho+g7CwpmyJjKXj/FC/0LxlrpVRDoMGcZ2C
+K1NLaPJFG3CU1uboR8GD7VNVmDG6dUWGVJ1DQoTeyHRF4GQ29ARLhRjygSv
QThBZCOd9CfZ/6FhWzmNLjc6DaZmMFaWtaT+JbQwIY6zOrpig34br9suaBcN
Hb5/Lv8l+w/+r4cPxkeRp2bEMcv3+YoP59F3k2+TebqtkZCHCI+u3U6N0hj8
PnQ84bIKbMXTGkDvKBpfX2iZg4FDfLGrg4qgvEm3IyfKCUfnjYBmANC7XHW3
nnE68JHAxDsVwomrcJOCm3YMV692FAkx7lq0XMPQZyrQPtzz7H6Hjdvjzmf4
ySottOWj9esunCn25r0cXYaKMbt8Dqc1Ld9n3p3UkCv/Ch6Aza1ZD2OXfn2g
jTQtCcQp2exOEK8BfMY15sTH7+7m409a4NQVX5uMFBeJK5DRFY2Bml9Zi59E
ijqi4LKZnYtOQP5e37Gcvl/n1fbL9fueA/sS/V6RF6bICaG5vQEkAJe2KthV
8hvKCJwprHc4nDxyUbJev8rWifV/uW6nKt2Qr75qJSKjxcjnWQeIjsZR0mm1
QV/AyO8gEY0YcFquPdooINdr2HRKx9R4YQ/ka1N4B2RkAqCLt5BAD5IsM2Lg
9IxkcqHSu6ml1w3QykrSxjOO32Zz3UZ//TbX70x/fz8rqUcp7l7ioBQP7caQ
UiyON/ymXGLaZBQ+dho/TmIVeJhXw5lvZlmkE6s2DIRPCjAyxBWojivMXOf8
41J7YxilWJGxqlapw1f9YUNAGO8ORRDPMiuummvv8N03raw9Uq4tJw9gEVdg
D5BprdjIYcCBlp6cczemnh5HBFaUWQcBIvAbBHraekZh7+MDRNupVX81blXn
A6wK7hKNclaCfCWfO5K3jURzOw0pwwqf89DLrZ+svIcmggE3p02VFIso556R
Q9hK0sRK0hE5PPPVmj1mQm+uD2Cjh+yttO5+t7qe0RrXG7DWZp0FmnVxd27M
TaZ4P2KACShQYK6wPx4gUcY48KZoljl9pMmBqV2obtE6ba5HdPZ+mXzfeldp
8wJjo7QHuYFGAUxd2aUnsHm6JuMQ06bgrLLiXV6VBRmsifdUEl7RUXPyd/i2
szfvHmEQmGKgUufqu6Mnnz5JYptC4Tzezu8oK57+t+hYzueia9Ko+gp9Yros
Z7+MnFSA0vSKVF1R7falw9tK7NL3JV6GTHrd414Y1fee18thnp8+e/3yJdat
PrHix5c+kc6+cjdJOUdQfA+Pgwv3GJPJig11tCMFrucxKZlVCwpWHbjEZjA1
FViRamoB8KdiPRL+QxKe2aPpS9wpfdxVgv2tJFYUab+cbF/6uhLUZRrrloH5
SuGz73HXn4lX+g3m+bEQ5kN1e95twhUyvSYKrHQszHWPi70B8zXaOFa+8dWz
HySwVjiBR7rDQqffPHzygNxEwY4izsw+mJ2iD7/18L7Mu2Ykwywc+yRpZURc
b9eopVNgcFjRwIpQh4dgK3IWJstWp2UOMS0eM1dDHqZfamPhkGvCi7OLRNPO
fGiWk0R3ICOTY/kd6WbYyjPDHihhKZJIxlnaaDwQAWAVjyhY/y7zITO8fNih
lppENlVJgj0FhkWZYSCn15xXKDa8X17on07DZAVhJn08Kw5V4gt/zdKlJA/0
lKjBuyxSQVVP5CcgkeISKlr6R+pkdR2U6vH6LHfXLl+X8MhBugi++YZSDcRb
YVV8U2Goa1FI+XZW1Yfe4nrfkuwuEWTDa59TH+h45yX4uzhbNOlQ5WVR9gnJ
tm+FwZq+lFXXJbdzvC/zuHSHER1lJeXu/iHOF+7AbjIV/e9DfZIIChbymZYc
1p+DNkyAyN7kwMQmPYFxHOU7fjpwAe9Byd3lbJb6AHWVhapK1LZHcL4+FSUq
0BvnacHFwUo10WfRIFF6UgtcTtVxtRC7duSkw4WXzTMukNwxsYPYDQa199X6
wDvOgZa6cyKyaq3cimwPxRCa2OhUjx6SwtuM1ZXM6CXwbb4fkprq8dGaKUZF
bKTcgTkuMyuDK5IipHLJUdfY1BgweAc6MpeD4yb3abTV0cpCStAqQ89HXq9Y
1ZmXnIZPorpaCXCuzab74ufCUJWmvTecjZKUAlDxL3hhrJ34DAhBq6F+b3Mk
UWflDBzqkU4e74ImaGN9etiteKPlTV/5/sa5pglfBlrjXvccSevWBCqMVzwC
2fuyQohXwjvuf0WagNYsolK+YesHQ8MSFprHZTaxiHO58iaj3ao6bzZCMr4n
cnRZwyXtDcVSfYTLQMS2HIZPNC8rjgcttwZVSi3a6iZbOYKQbxiPROE4rnjV
pJSsPLnLG0yq7qZQePty6/bV+TXfiNifbkQ48IFh1KxK6+uD9mtyiWFxh9vU
XE0fFSItOyuQyhyVMJhLgTGswCAvxP2+Se1hmPz7OtRKQMSsb2ZhsD/TzJgE
eIUjVZW7MIfxEjNenFKLlTExbB4vYoElWBAOhHu9WUsdbfRnBjuDK125+Ieo
CmKsZ1XORVURBaI1uPMAo19yFjQcatXD7dsXLd4Syvno21JWYIGMlVebKJ8/
wHYwapVRf0e8SWClXPnCD14XsJ5L1xHnXJDMxrQ0Pqs8Uu4aFtjXVpXkdQrO
Sk7zVs2p/5J2I3auL2LXF09vZ9Z9OmhvBmekpjBIiVWMNB+ZqXjJDY+8QsJx
vTrRXhbvQmFEyfYNUlUlbVQ6oucukYXhAYBIBL46OdmNRMkoGsX32dFnbIEy
7QeltaI/3OM6ZVExR7tL1CenrYqQCK1jRSS1qEZKWmFLaF4m2uZ7i8cWa8+G
/r31EioEEGh0ngtqlt3bv3BM+Dp9l5e+1YNKEjBZG+4SsZLab/j/8Pi5DhMl
zOgN0EbAfK9kBklUfGMtvJXUK4EetHMuLnFvMNuU3FTpu1Ln68dks2CNcpJb
P8XOb82895UqHfsDeE1ke9+9RiJrBFFqKac+O8E6kOHQKmLnWyFzzlnLXrbF
8IM20+Kn8ErOsPbGzcXp+U/Pj89eJLZrWKf6QdDrnPB9RX3C2NegwfjKfrSj
QbQdd14IStLx28sfd7zPZn/H2iIIFFM3QYoWaJ6z1bFlq7TWuy2JwvEP3wXN
lWITxUnXvrZQeB/BoqVWw9b3W+AS2knUdqu76PPT528vTk/MolMwvEDMbxMf
XUPffBc70R3r+evzl6fn530b6K1vSYSlfsxlKVWrAiMM0GqvbmqhQ9b5uBeI
bqMlZemg02LQcy1qwln+d7sFNsLUcnOAXarVU0N/hG6x5qii6LphLr7jlZ3y
op0gK2HkC7S6/W1TlsOV4XwdLR3BKwAWDXM7IPMzNsreDWFGvkiuptpbuRqE
eTwBaZkc8WKG5DaOnp+3Z9wFpSQtcItWzd3pbSEPy64F2vrWUZ2bYDSdRZWL
vXdp97b1+Iq8iWEJ7zNrSd9LXpskslAWwWkaEsqKlMqOalkYAa5Rc0pe3+7J
i79BrFObsWerwC+WJEqJqtW/VAbrkncglvhSN5BwWFVFBnbEfPnIUZnctbUu
qjTSLdPQanvFqjpYVFR70iQf4mH4w1d9lQqMt8uE+DDxapL8rDR4l6vudGG0
2jrGr0eoNtoUH0kVt5uEz3XKWHfAVIXRFiRtCcJGkqYrNMk28z5R2y9uRCVF
GCA24ypES9/12ZZJDvsxSS5wLz01hHTpkKnltNIwhQD8A6hDYj17ruBEaQ8C
6W/3KrGYOVYqUX01gGEEG3pjO6+buJJ7F9fsemoFJd52tW3l76ADoEx2g8WT
auMIINksvVtihcYWT8JEZy4YHlc8weAj3MC6ziygBkmQf3K7cMPY3KtXp88u
k5PTF8d/pQQL32Ss3UkvUKKvSWI4j1M0FOleAckbVxw+i+O7aPma7ZAhah/z
NeXEiVTIfSg1CFu9xbuB+ZbDoJds0qEtl3qhxWY1zcg+iBO08FLNMLQxuZqM
vBuRvCmxhnmQtPi51lq4SX3hVFBrijlJFA1tLJYlp8uBBbJZAqvO2DmI96Mm
q0gOgLSRgGII58nKgAtOa4K+qbC6pMrC6fxvoBhzWWE5eXZroikK0y5XZLzU
2WZehn+T55b3Ci8WgfD8RhQzdrurZUB2N2uG0y1pwNjp61rNWap04hudymkj
Gl+53xZrVPGBrMu6GcvGxkYR+RCo4FjhCTRE9Q5UJj5jLnpufhqqPrWcjuzZ
jNwDPo4V37X+Ct6d21ZWw1arcc1RUBCLBBr5fmCVQDl3fBNdNHls5OJaMuoz
SQuuAV9v8obsEf0aW9mVXJeB29+iHqIFG0mbCVscWhUTtqcHb00iEiWANjVQ
3X/OhEiZm374kdZVirti+xcqHM9UZ29XVr9h7SXoFEEN3o8ZKZlTwCrGGE7n
aCt2/4zukJZHxV2V+sq8Xi2rI8A2qYNau6GAWrsSPPEq8qLD3RJoNCFjZtId
J3ZhEqx1ZKJvnGjLbycNuNKZ+QoiZgCt/4nxZdwkxWGQ25XrexBT4yWKvRYg
UhTUKX2v8mhXnapdFGVfZbUuIxQY+z6VjtW7qmq2AyBipbFXhiudT+8yzlPn
w3gje/FYpej2W+Qc4LialMFFCyS6VW3qRNpMY9+ZUCfwpgxm+1POvlEKaiFO
o4Y7HrYoxUqCgMQn3sVIw3bxrknCExzqAs+7114Ae6oYWAJTdcmO/456/u9B
z/89TB76cQ7pmYfJo+Sb5HHybfIk+e5zPtNx/mX8G/9PB/rYWdXZq+Nnl2c/
nV3+Nbk8e3n6+u1lsv/wAXapqw+6e/DxHzCjP52evjl+cfbTKczt8vT8p+MX
/6AZue5ePHVPh+p1efi9gI4i0yF0nqKyEA8fSCsyDP5zZ4PsimRM6DewP80R
kQK6YnEAgrCRinj0zKbIJcs9KhOuxQxUjSCwcCP2YVv2xNk9A7l3EzewWoRJ
Tm0qV2m5+Fc1m8fERuKcPy+POnm8AzW9pJl5nESknYUJo3jHGERbyNzm3+jS
nZ5+D7Lkn+z0/bz88afR4fs4Usjm7KtKZjRGQuUxOfQs33p7hrFEvWRgI1qr
VLT6bkTL7aaCzz3d0DSa8N2bFfvfoldHWT1hKVwPU39G6rrZ5d45hHCoSTwr
KxdSEu66DzSXG/j91uSU4aHE2LhWCaneNJDaSdqBd8eEomkdqUiud6oaCR8c
OBbgw3kjw2kjl9dRZdzGE23a+CSlnrkSTKeWfePDLpeg/4WMLJxDFw0h+g7D
Gdp1UiiDki+sky0r0BtSjK2KGFZA7SvSCvG2tX9fZ1Sp/3ghBk/PEXJxdEGH
m2o8AVorr/yDkzI79pnhueW1CYIgdkj0Zqx9SjZNPHye8bUcnCH1YY/UtfZ5
+ioNvrGHL8pBgBY0RHBkBFgLeXXe5m5MdUBM9KBi8HkjgOue5IlwqEKuSIjO
z6wnqpD4d7TIVRYsh+naETh+qhZDUeMX3d+LOGTP6fOybR4LqMmcotRSwhRN
LhHE3ZhxDuiyaa598JM4KXodBmslSvkiOI5sGQxtnwnEl6ILMvUsePh4tbuh
dsFNIx/rMCxQiqHw77T0kCm27WGrg710B6MD4aUnpq37QMtcJM5bWlB+Yczg
cuf6Ja8uIoKv6g6b5HSBJvgJSJiY3AaPnfSpIpkRol/VWm7NYicj7CUhx8w2
7gQTD66HPZ+d8sjaLbut98Gpe+usKld8AIxJhR2+we5BeSfYPRpQU8VFEkh9
VYIxjleIVQEc5cdnbzCFoSln5dKyhU7sVD3yDkHtnLJHW861smkcbvadfHMU
eqg/wM6+Pf5m0AKwr9KK+J2PIhOuEPQ9uoQ314KgNy/jUmobQglR7gahHH+O
CoySwc/3mKGc5PYjh25oTBdfBVMq2URhI59TTwM8PWnpXLWAywF7K6dHLkac
c9yXZrHM3guccOR5Y76w3S8lAt5Kj6Tlox/TteIqodcC5e2ka55QVOJ7mjUc
uWwVKyKQBNUfnXXwfnVUSHG/U2H9wPWB2cWx24paKuykxRDtNvcMxZaWM4yw
vzFtfzsE4sullJ+4bN0MG1/rZAp0UgF6VcA7IPzbrG24+/kdmK2d/hcz24HO
vi0cwG/jwcB/KZpGl7QH8h9aQLh+xqvNJWVW/QwwDjBiaoCOH7Vd8sFvqd4R
JoeMZpmGEo0+lxn3nO2ZSZ+fTlRPym9iqjye+1ql8AAHfrrx2l7TYMNoYDxJ
Dt/Lr95QHiPBS0YgqNbiri93kpc/xYCsjl9oLc10PucFYHYOaWaBY5iJtNfW
djhrESKpvpQG3tJ/to7fRYpZu5vy3ZcmqrNWIQc+arFmHT7R1d+08/ZN0cJX
EnLQRw5tBmqISsabOs0Sbeaekdc7IsufqeuhbzjRU/LUafRRR+l0a4wS+BWj
RD4FrgeM0deheqoy+x0jUBBZciV8pXvvzD/6ZiwCtF1Bute3RaP1eAEEuIEW
FjCp5TYOsHvsZOHze2wyNctIRZwGy5m89tz9KjAF34TL7aInscq5PLnAmGx8
x6BSunn6zxQrVMzJA1EuAphhgOpbKkpfx3lJ8O1olr3CZ+TKSLO/m8iKFJrr
VNBL7pbJDyUZkDuvp0mDE902i1TV+NK0BQ7SB2lMU03hlEoG5KH0HRy0ipMo
tjjakAgJCzX4FGxitOAB2/KjXRip1zWDH9pjl7g/754v1udqsDERiSQCi3eK
WrUopahmp/QYd21qbZgjYcFuBZHMfeEfUx+79X3H02p1SJ4dpqD1ee8MqBJ+
FvUxkayKrdTY8FFWiQHr0tRGr42nSEtsdHFCeacIiNQFknb32iCEooA9R9ZX
WXbXqQnAmNUu0MqbpeTqg63QLDPfC4QPKy3MEOFVLpTDlyZztfFbj8djirFS
naB4Q2U/HdW91ZZy5BQVh6pPTgPhQLAU46dJu8GGL6cxJDF1ajhLa/2+Db77
OFM+/DkmHotTeIk5zzzfll+pBSsmdcwjjYC5+No6g25XXiYS63C1zCGeI194
+ot8OaK/RNGfVlsi+vGmsFWR/Yb8gbPqNe9P9Nu4T449X1+OZvg83X2N7mtc
pFPBvac8aMM9q4buQRcnz+mtdLd8XZUC0+Y8qnDgtVwvN6y1t7pxy26hGXQL
/UYcoFcd+4y9AEnv+9PethUtglSUnfOxtAVnC7DKEtd3t8EKrlvNulQhZRXs
um+pDPjF567YV4nTheqen71up0MRyjBaf7tKvCyc12ySFP+RCw7e3VAa8Vay
D/6hCJsePMuheBP2PexyK/szePQql5QL7iXPFrnJCY7UpYPfvE+iJVPFNw9P
1joiXJCp7ruwpragu6E2OdfYiAnjZlrHSxVfEuv9aHkTc3Yi6WOHQVlxclUX
dJY31k/ltBZ16+VpyFWH+0tvM4X8ETMGFxv7DjnTQ7LvvO9YCJNU+fNs6fMD
T8GG2j/kVvNBcrzmri1DsfxI5uwA9CBrqfNVvkwrqvjEZgb+aNdrxY/67ZMH
TyibRPbqa72CaS4lkKTXL1OMN/MFROzarzimV4i3FkURKlbF1msKqUEpujZz
DFAidJD0eA77HiTFjgGNmqJRVj0RClOaLaQURdEgKVjesJ5VdNaWmrVJ9dJB
l5rvUC6dpHeN9SWZEZ1MoQ/3ODOIyan9bSCYBwcaFRM3E7ZDCS6hZD92cBxE
5XqbcqyZhcZYTHe4dZKeLiGTu0HAenKh/jcHgeF/56eX538VkPsOvNXvDLky
b0W0zbGBQ/9jcDRcpNLXFWBZpN21PVdi4CvdTFOQgSxD/KINA/a5ZUKRtsCX
1wuOfPVHz9hjuvTuWnuPbISWPBKhYJGJ1boeGtfhcIn2YhIjHfCyT8SpqJWx
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
LeiID6oGC6oL+Z3c/wc7uXVqDWMBAA==

-->

</rfc>

