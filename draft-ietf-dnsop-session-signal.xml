<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.3 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC7766 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7766.xml">
<!ENTITY RFC6891 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6891.xml">
<!ENTITY RFC7828 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7828.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC7830 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7830.xml">
<!ENTITY RFC1034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC2136 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2136.xml">
<!ENTITY RFC2132 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2132.xml">
<!ENTITY RFC1918 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1918.xml">
<!ENTITY RFC5226 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5226.xml">
<!ENTITY RFC7858 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7858.xml">
<!ENTITY RFC0768 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.0768.xml">
<!ENTITY I-D.ietf-dnssd-push SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dnssd-push.xml">
<!ENTITY I-D.ietf-dprive-padding-policy SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dprive-padding-policy.xml">
]>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-dnsop-session-signal-04" category="std" updates="RFC 7766, RFC 1035">

  <front>
    <title>DNS Stateful Operations</title>

    <author initials="R." surname="Bellis" fullname="Ray Bellis">
      <organization abbrev="ISC">Internet Systems Consortium, Inc.</organization>
      <address>
        <postal>
          <street>950 Charter Street</street>
          <city>Redwood City</city>
          <code>CA 94063</code>
          <country>USA</country>
        </postal>
        <phone>+1 650 423 1200</phone>
        <email>ray@isc.org</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>1 Infinite Loop</street>
          <city>Cupertino</city>
          <code>CA 95014</code>
          <country>USA</country>
        </postal>
        <phone>+1 408 974 3207</phone>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="J." surname="Dickinson" fullname="John Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>jad@sinodun.com</email>
      </address>
    </author>
    <author initials="S." surname="Dickinson" fullname="Sara Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>sara@sinodun.com</email>
      </address>
    </author>
    <author initials="A." surname="Mankin" fullname="Allison Mankin">
      <organization>Salesforce</organization>
      <address>
        <email>allison.mankin@gmail.com</email>
      </address>
    </author>
    <author initials="T." surname="Pusateri" fullname="Tom Pusateri">
      <organization>Unaffiliated</organization>
      <address>
        <phone>+1 843 473 7394</phone>
        <email>pusateri@bangj.com</email>
      </address>
    </author>

    <date year="2017" month="July" day="18"/>

    <area>Internet</area>
    <workgroup>DNSOP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document defines a new DNS Stateful Operations OPCODE used to communicate 
persistent “per-session” operations, expressed using type-length-value (TLV) 
syntax, and defines an initial set of TLVs used to manage session timeouts and 
termination. This mechanism is intended to reduce the overhead of existing 
“per-packet” signaling mechanisms with “per-message” semantics as well as 
defining new stateful operations not defined in EDNS(0).</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The use of transports for DNS other than UDP is being increasingly specified,
for example, DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> and DNS over TLS <xref target="RFC7858"/>.
Such transports can offer persistent, long-lived sessions and therefore when
using them for transporting DNS messages it is of benefit to have a mechanism
that can establish parameters associated with those sessions, such as timeouts.
In such situations it is also advantageous to support server initiated messages.</t>

<t>The existing EDNS(0) Extension Mechanism for DNS <xref target="RFC6891"/> is explicitly
defined to only have “per-message” semantics. Whilst EDNS(0) has been used to
signal at least one session related parameter (the EDNS(0) TCP Keepalive option
<xref target="RFC7828"/>) the result is less than optimal due to the restrictions
imposed by the EDNS(0) semantics and the lack of server-initiated signalling.</t>

<t>This document defines a new DNS Stateful Operations OPCODE used to carry persistent
“per-session” operations, expressed using type-length-value (TLV) syntax, and
defines an initial set of TLVs used to manage session timeouts and termination.</t>

<t>With EDNS(0), multiple options may be packed into a single OPT pseudo-RR,
and there is no generalized mechanism for a client to be able to tell
whether a server has processed or otherwise acted upon each individual
option within the combined OPT RR.
The specifications for each individual option need to define how each
different option is to be acknowledged, if necessary.</t>

<t>With Stateful Operations, in contrast, there is no compelling motivation
to pack multiple operations into a single message for efficiency reasons.
Each Stateful operation is communicated in its own separate
DNS message, and the transport protocol can take care of packing
separate DNS messages into a single IP packet if appropriate.
For example, TCP can pack multiple small DNS messages into a single TCP segment.
The RCODE in each response message indicates the success or failure of the operation in question.</t>

<t>It should be noted that the message format for DNS Stateful Operations
(see <xref target="format"/>) differs from the traditional DNS packet
format used for standard queries and responses.
The standard twelve-octet header is used, but the four count fields
(QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) are set to zero and their
corresponding sections are not present.
The actual data pertaining to DNS Stateful Operations is
appended to the end of the DNS message header.
When displayed using today’s packet analyzer tools that have not been updated
to recognize the DNS Stateful Operations format, this will result
in the Stateful Operations data being displayed as unknown additional
data after the end of the DNS message. It is likely that future updates
to these tools will add the ability to recognize, decode, and display the
Stateful Operations data.</t>

</section>
<section anchor="terminology" title="Terminology">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and
“OPTIONAL” in this document are to be interpreted as described in
“Key words for use in RFCs to Indicate Requirement Levels” <xref target="RFC2119"/>.</t>

<t>The term “connection” means a bidirectional byte stream of reliable,
in-order messages, such as provided by using
DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> or DNS over TLS <xref target="RFC7858"/>.</t>

<t>The term “session” in the context of this document means the exchange of
DNS messages over a connection where:</t>

<t><list style="symbols">
  <t>The connection between client and server is persistent and relatively
long-lived (i.e., minutes or hours, rather than seconds).</t>
  <t>Either end of the connection may initiate messages to the other.</t>
</list></t>

<t>The term “server” means the software with a listening socket, awaiting
incoming connection requests.</t>

<t>The term “client” means the software which initiates a connection
to the server’s listening socket.</t>

<t>The terms “initiator” and “responder” correspond respectively to the
initial sender and subsequent receiver of a Session Signaling request message,
regardless of which was the “client” and “server” in the usual DNS sense.</t>

<t>The term “sender” may apply to either an initiator
(when sending a DNS Stateful Operation request message)
or a responder (when sending a DNS Stateful Operation response message).</t>

<t>Likewise, the term “receiver” may apply to either a responder
(when receiving a DNS Stateful Operation request message)
or an initiator (when receiving a DNS Stateful Operation response message).</t>

<t>DNS Stateful Operations are expressed using type-length-value (TLV) syntax.</t>

<t>“DSO” is used to mean DNS Stateful Operation.</t>

<t>A DSO “Session” is established between two endpoints that
acknowledge persistent DNS state via the exchange of DSO messages
over the connection. This is distinct from, for example a DNS-over-TCP session
as described in RC7766.</t>

<t>Two timers are defined in this document: an inactivity timeout and a keepalive
interval. The term “Session Timers” is used to refer to this pair of values.</t>

</section>
<section anchor="discussion" title="Discussion">

<t>TODO: Discuss that this draft introduces 2 session timers and their functions. 
Discuss that this draft introduces “Keepalive traffic” this is special because
it does not reset the inactivity timeout. Possibly move some of the text from 
“Session Lifestyle and Timers” here.</t>

</section>
<section anchor="details" title="Protocol Details">

<section anchor="session-establishment" title=" Session Establishment">

<t>DSO messages MUST only be carried in protocols and in
environments where a session may be established according to the definition above.
Standard DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/>, and DNS over TLS <xref target="RFC7858"/>
are suitable protocols.</t>

<t>DNS over plain UDP <xref target="RFC0768"/> is not appropriate since it fails on the requirement for
in-order message delivery, and, in the presence of NAT gateways and firewalls
with short UDP timeouts, it fails to provide a persistent bi-directional
communication channel unless an excessive amount of keepalive traffic is used.</t>

<t>DSO messages relate only to the specific “session” in which
they are being carried. A “session” is established over a connection when
either side of the connection sends the first DSO
TLV and it is acknowledged by the other side. While this specification defines
an initial set of three TLVs, additional TLVs may be defined in
additional specifications. All three of the TLVs defined are mandatory to implement.</t>

<t>A client MAY attempt to initiate DSO messages at any time
on a connection; receiving a NOTIMP response in reply indicates that the
server does not implement DSO, and the client SHOULD NOT
issue further DSO messages on that connection.</t>

<t>A server SHOULD NOT initiate DSO messages until a
client-initiated DSO message is received first,
unless in an environment where it is known in advance by other
means that the client supports DSO.
This requirement is to ensure that the clients that do not support
DSO do not receive unsolicited inbound DSO
messages that they would not know how to handle.</t>

<t>On a session between a client and server that support DSO,
once the client has sent at least one DSO message (or it is
known in advance by other means that the client supports DSO)
either end may unilaterally send Session Signaling messages at any time,
and therefore either client or server may be the initiator of a message.</t>

<t>From this point on it is considered that a “DSO session” is in
progress. Clients and servers should behave as described in this specification
with regard to inactivity timeouts and connection close, not as prescribed in <xref target="RFC7766"/>.</t>

<section anchor="middle-box-considerations" title="Middle-box Considerations">

<t>Where an application-layer middle box (e.g., a DNS proxy, forwarder, or
session multiplexer) is in the path the middle box MUST NOT blindly
forward DSO messages in either direction, and MUST treat the inbound
and outbound connections as separate sessions.  This does not preclude
the use of DSO messages in the presence of an IP-layer middle box such
as a NAT that rewrites IP-layer and/or transport-layer headers, but
otherwise preserves the effect of a single session between the client
and the server.</t>

<t>To illustrate the above, consider a network where a middle box
terminates one or more TCP connections from clients and multiplexes the
queries therein over a single TCP connection to an upstream server.  The
DSO messages and any associated state are specific to the individual
TCP connections.  A DSO-aware middle box MAY in some circumstances be
able to retain associated state and pass it between the client and
server (or vice versa) but this would be highly TLV-specific.  For
example, the middle box may be able to maintain a list of which clients
have made Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/> and
make its own subscription(s) on their behalf, relaying any subsequent
notifications to the client (or clients) that have subscribed to that
particular notification.</t>

</section>
</section>
<section anchor="format" title="Message Format">

<t>A DSO message begins with
the standard twelve-octet DNS message header <xref target="RFC1035"/>
with the OPCODE field set to the Session Signaling OPCODE (tentatively 6).
However, unlike standard DNS messages, the question section, answer section,
authority records section and additional records sections are not present.
The corresponding count fields (QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) MUST be
set to zero on transmission.</t>

<t>If a DSO message is received where any of the count fields are
not zero, then a FORMERR MUST be returned.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                          MESSAGE ID                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |QR |    OPCODE     |            Z              |     RCODE     |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     QDCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ANCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     NSCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ARCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                           DSO Data                            /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<section anchor="header" title="Header">

<t>In a request the MESSAGE ID field MUST be set to a unique value, that the
initiator is not currently using for any other active operation on this 
connection.
For the purposes here, a MESSAGE ID is in use in this session if the
initiator has used it in a request for which it has not yet received a
response, or if the client has used it to setup state that it has not yet ready
to delete. For example state could be a subscription as defined in 
<xref target="I-D.ietf-dnssd-push"/>.</t>

<t>In a response the MESSAGE ID field MUST contain a copy of the value of the
MESSAGE ID field in the request being responded to.</t>

<t>In a request the DNS Header QR bit MUST be zero (QR=0).
If the QR bit is not zero the message is not a request.</t>

<t>In a response the DNS Header QR bit MUST be one (QR=1).
If the QR bit is not one the message is not a response.</t>

<t>The DNS Header OPCODE field holds the DSO OPCODE value (tentatively 6).</t>

<t>The Z bits are currently unused, and in both requests and responses the
Z bits MUST be set to zero (0) on transmission and MUST be silently ignored
on reception, unless a future document specifies otherwise.</t>

<t>In a request message (QR=0) the RCODE is generally set to zero on transmission,
and silently ignored on reception, except where specified otherwise
(for example, the Retry Delay operation, where the RCODE indicates the reason 
for termination).</t>

<t>The RCODE value in a response may be one of the following values:</t>

<texttable>
      <ttcol align='right'>Code</ttcol>
      <ttcol align='left'>Mnemonic</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>0</c>
      <c>NOERROR</c>
      <c>Operation processed successfully</c>
      <c>1</c>
      <c>FORMERR</c>
      <c>Format error</c>
      <c>2</c>
      <c>SERVFAIL</c>
      <c>Server failed to process request due to a problem with the server</c>
      <c>3</c>
      <c>NXDOMAIN</c>
      <c>TLV dependent</c>
      <c>4</c>
      <c>NOTIMP</c>
      <c>DSO not supported</c>
      <c>5</c>
      <c>REFUSED</c>
      <c>Operation declined for policy reasons</c>
      <c>9</c>
      <c>NOTAUTH</c>
      <c>Not Authoritative (TLV dependent)</c>
      <c>11</c>
      <c>DSONOTIMP</c>
      <c>DSO type code not supported</c>
</texttable>

<t>Use of the above RCODE’s is likely to be common in DSO but 
does not preclude the definition and use of other codes in future documents that 
make use of DSO.</t>

<t>If a document describing a DSO makes use of either NXDOMAIN 
or NOTAUTH then that document MUST explain the meaning.</t>

</section>
<section anchor="dso-data" title="DSO Data">

<t>The standard twelve-octet DNS message header is followed by the DSO Data.</t>

<t>The first TLV in a DSO request message is called the Operation 
TLV. Any subsequent TLVs after this initial Operation TLV are called Modifier TLVs.</t>

<t>Depending on the operation a DSO response can contain:</t>

<t><list style="symbols">
  <t>No TLVs</t>
  <t>Only an Operation TLV</t>
  <t>An Operation TLV followed by one or more Modifier TLVs</t>
  <t>Only Modifier TLVs</t>
</list></t>

<section anchor="operation-tlvs" title="Operation TLVs">

<t>An “Operation TLV” specifies the operation to be performed.</t>

<t>A DSO message MUST contain at most one Operation TLV.</t>

<t>In all cases a DSO request message MUST contain exactly one 
Operation TLV, indicating the operation to be performed.</t>

<t>Depending on the operation, a DSO response message MAY contain no 
Operation TLV, because it is simply a response to a previous request message,
and the message ID in the header is sufficient to identify the request in 
question. Or it may contain a single corresponding response Operation TLV, with 
the same DSO-TYPE as in the request message. The specification for each DSO
type determines whether a response for that operation type 
is required to carry the Operation TLV.</t>

<t>If a DSO response is received for an operation which requires
that the response carry an Operation TLV, and the required Operation TLV is not
the first DSO TLV in the response message, then this is a fatal 
error and the recipient of the defective response message MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
<section anchor="modifier-tlvs" title="Modifier TLVs">

<t>A “Modifier TLV” specifies additional parameters
relating to the operation. Immediately following the Operation TLV, if present,
a DSO message MAY contain one or more Modifier TLVs.</t>

</section>
<section anchor="unrecognized-tlvs" title="Unrecognized TLVs">

<t>If a DSO request is received containing an unrecognized
Operation TLV, the receiver MUST send a response with matching
MESSAGE ID, and RCODE DSONOTIMP (tentatively 11). The response MUST NOT contain 
an Operation TLV.</t>

<t>If a DSO message (request or response) is received
containing one or more unrecognized Modifier TLVs, the unrecognized
Modifier TLVs MUST be silently ignored, and the remainder of the message
is interpreted and handled as if the unrecognized parts were not present.</t>

</section>
</section>
<section anchor="edns0-and-tsig" title="EDNS(0) and TSIG">

<t>Since the ARCOUNT field MUST be zero, a DSO message
MUST NOT contain an EDNS(0) option in the additional records section.
If functionality provided by current or future EDNS(0) options is desired
for DSO messages, an Operation TLV or
Modifier TLV needs to be defined to carry the necessary information.</t>

<t>For example, the EDNS(0) Padding Option <xref target="RFC7830"/> used for security purposes
is not permitted in a DSO message,
so if message padding is desired for DSO messages
then the Encryption Padding TLV described in <xref target="padding"/> MUST be used.</t>

<t>Similarly, a DSO message MUST NOT contain a TSIG record.
A TSIG record in a conventional DNS message is added as the last record
in the additional records section, and carries a signature computed over
the preceding message content. Since DSO data appears
after the additional records section, it would not be included in the
signature calculation. 
If use of signatures with DSO messages becomes necessary in the 
future, an explicit Modifier TLV needs to be defined to 
perform this function.</t>

<t>Note however that, while DSO <spanx style="emph">messages</spanx> cannot include
EDNS(0) or TSIG records, a DSO <spanx style="emph">session</spanx> is typically used to 
carry a whole series of DNS messages of different kinds, including DSO
messages, and other DNS message types like Query <xref target="RFC1034"/> 
<xref target="RFC1035"/> and Update <xref target="RFC2136"/>, and those messages can carry EDNS(0) and 
TSIG records.</t>

<t>This specification explicitly prohibits use of the
EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>
in <spanx style="emph">any</spanx> messages sent on a DSO session (because it duplicates
the functionality provided by the DSO Keepalive operation),
but messages may contain other EDNS(0) options as appropriate.</t>

</section>
</section>
<section anchor="tlv-format" title="TLV Format">

<t>Operation and modifier TLVs both use the same encoding format.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                            DSO-TYPE                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                        DSO DATA LENGTH                        |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                      TYPE-DEPENDENT DATA                      /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='DSO-TYPE:'>
  A 16 bit field in network order giving the type of the current DSO TLV per
the IANA DSO Type Codes Registry.</t>
  <t hangText='DSO DATA LENGTH:'>
  A 16 bit field in network order giving the size in octets of
the TYPE-DEPENDENT DATA.</t>
  <t hangText='TYPE-DEPENDENT DATA:'>
  Type-code specific format.</t>
</list></t>

<t>Where domain names appear within TYPE-DEPENDENT DATA, they MAY be compressed 
using standard DNS name compression. However, the compression MUST NOT point
outside of the TYPE-DEPENDENT DATA section and offsets MUST be from the start
of the TYPE-DEPENDENT DATA.</t>

</section>
<section anchor="message-handling" title="Message Handling">

<t>The initiator MUST set the value of the QR bit in the DNS header to zero
(0), and the responder MUST set it to one (1). Every DSO request 
message (QR=0) MUST elicit a response (QR=1), 
which MUST have the same MESSAGE ID in the DNS message header as in the 
corresponding request. DSO request messages sent by the client 
elicit a response from the server, and DSO request messages sent 
the server elicit a response from the client.</t>

<t>With most TCP implementations, the TCP data acknowledgement (generated because 
data has been received by TCP), the TCP window update (generated because TCP has 
delivered that data to the receiving software) and the DSO 
response (generated by the receiving software itself)
are all combined into a single packet, so in practice the requirement that every
DSO request message MUST elicit a 
DSO response incurs minimal extra cost on the network.
Requiring that every request elicit a corresponding response also avoids
performance problems caused by interaction between
Nagle’s Algorithm and Delayed Ack <xref target="NagleDA"/>.</t>

<t>The namespaces of 16-bit MESSAGE IDs are disjoint in each direction.
For example, it is <spanx style="emph">not</spanx> an error for both client and server to send a request
message with the same ID. In effect, the 16-bit MESSAGE ID combined with the 
identity of the initiator (client or server) serves as a 17-bit unique 
identifier for a particular operation on a session.</t>

<t>As described in <xref target="header"/> An initiator MUST NOT reuse a MESSAGE ID that is 
already in use for an 
outstanding request, unless specified otherwise by the relevant specification 
for the DSO in question. At the very least, this means 
that a MESSAGE ID MUST NOT be reused in a particular direction
on a particular session while the initiator is waiting for a response to a 
previous request on that session, unless specified otherwise by the relevant 
specification for the DSO in question.
(For a long-lived state the MESSAGE ID for the operation
MUST NOT be reused whilst that state remains active.)</t>

<t>If a client or server receives a response (QR=1) where the MESSAGE ID does not
match any of its outstanding operations, this is a fatal error and it MUST 
immediately terminate the connection with a TCP RST (or equivalent for other 
protocols).</t>

</section>
</section>
<section anchor="keepalive" title="Keepalive Operation TLV">

<t>The Keepalive Operation TLV (DSO-TYPE=1) performs two functions: to reset the
keepalive timer for the session and to establish the values for the Session Timers.</t>

<t>The Keepalive Operation TLV resets only the keepalive timer, not the inactivity timer.
The reason for this is that periodic Keepalive Operation TLVs are sent for the
sole purpose of keeping a session alive because that session has current or recent
activity that warrants keeping the session alive.
If sending keepalive traffic itself were to reset the inactivity timer, then that would
create a circular livelock where keepalive traffic would be sent indefinitely to keep
a session alive, where the only activity on that session would be keepalive traffic
keeping the session alive so that further keepalive traffic can be sent.</t>

<t>Sending keepalive traffic is considered a maintenance activity
that is performed in service of other client activities.
Sending keepalive traffic itself is not considered a client activity.
For a session to be considered active, it must be carrying something more than just keepalive traffic.
This is why merely sending a Keepalive Operation TLV does not reset the inactivity timer.</t>

<t>When sent by a client, the Keepalive Operation TLV resets a session’s keepalive timer,
and at the same time requests what the Session Timer timeout values should be from this point forward in the session.</t>

<t>Once a DSO session is in progress (see <xref target="details"/>)
the Keepalive TLV also MAY be initiated by a server.
When sent by a server, it resets a session’s keepalive timer,
and unilaterally informs the client of the new Session Timer values to use from 
this point forward in this session.</t>

<t>It is not required that the Keepalive TLV be used in every session.
While many DNS Stateful operations
will be used in conjunction with a long-lived session state,
not all DNS Stateful operations require long-lived session state,
and in some cases the default 15-second value for both the inactivity timeout
and keepalive interval may be perfectly appropriate.</t>

<t>The TYPE-DEPENDENT DATA for the the Keepalive TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 INACTIVITY TIMEOUT (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 KEEPALIVE INTERVAL (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='INACTIVITY TIMEOUT:'>
  the inactivity timeout for the current session, specified as a 32
bit word in network (big endian) order in units of milliseconds.
This is the timeout at which the client MUST close an inactive session.
If the client does not gracefully close an inactive session then after
twice this interval the server will forcibly terminate the connection
with a TCP RST (or equivalent for other protocols).</t>
  <t hangText='KEEPALIVE INTERVAL:'>
  the keepalive interval for the current session, specified as a 32-bit
word, in network (big endian) order, in units of milliseconds.
This is the interval at which a client MUST generate keepalive
traffic to maintain connection state.
If the client does not generate the necessary keepalive traffic then after
twice this interval the server will forcibly terminate the connection
with a TCP RST (or equivalent for other protocols).</t>
</list></t>

<t>In a client-initiated DSO Keepalive message,
the inactivity timeout and keepalive interval contain the client’s requested values.
In a server response to a client-initiated message, the inactivity timeout and 
keepalive interval contain the server’s chosen values, which the client MUST 
respect. This is modeled after the DHCP protocol, where the client
requests a certain lease lifetime using DHCP option 51 <xref target="RFC2132"/>,
but the server is the ultimate authority
for deciding what lease lifetime is actually granted.</t>

<t>In a server-initiated DSO Keepalive message, the inactivity timeout and 
keepalive interval unilaterally inform the client of the new values from this 
point forward in this session. The client MUST generate a response to the 
server-initiated DSO Keepalive message.
The Message ID in the response message MUST match the ID from the 
server-initiated DSO Keepalive message, and the response message 
MUST NOT contain any Operation TLV.</t>

<t>TODO: We may wish to change this, now that we’ve decided that we don’t need
all requests to generate responses.</t>

<t>When a client is sending its second and subsequent Keepalive DSO 
requests to the server, the client SHOULD continue to request its preferred 
values each time. This allows flexibility, so that if conditions change during 
the lifetime of a session, the server can adapt its responses to better fit the
client’s needs.</t>

<section anchor="client-handling-of-received-session-timer-values" title="Client handling of received Session Timer values">

<t>When a client receives a response to its client-initiated DSO Keepalive message,
or receives a server-initiated DSO Keepalive message, the client has then received
Session Timer values dictated by the server. The two time values contained in the
DSO Keepalive TLV from the server may each be higher, lower, or the same as the
respective Session Timer values the client previously had for this session.</t>

<t>In the case of the keepalive timer, the handling of the received value is straightforward.
The act of receiving the message containing the DSO Keepalive TLV itself resets
the keepalive timer, and the keepalive interval given in the DSO Keepalive TLV
indicates the maximum time that may elapse before another message must be sent
or received on this session, if the session is to remain alive.</t>

<t>In the case of the inactivity timeout, the handling of the received value superficially
appears a little more subtle, though the meaning of the inactivity timeout is unchanged –
it still indicates the maximum permissible time allowed without activity on a session.
The act of receiving the message containing the DSO Keepalive TLV does not
itself reset the inactivity timer. The time elapsed since the last useful
activity on this session is unaffected by exchange of DSO Keepalive messages.
Upon reception of an inactivity timeout value from the server, that
becomes the new maximum permissible time without activity on a session.</t>

<t><list style="symbols">
  <t>If the time since the last non-keepalive activity on this session is not
greater than the inactivity timeout, then the session may remain open for now.
When such time comes that the time since the last non-keepalive activity on this session exceeds
the inactivity timeout dictated by the server, the client MUST then close the session,
as described above.</t>
  <t>If more than the maximum permissible time has already elapsed since the last
non-keepalive activity on this session, then this session has already been inactive
for longer than the server permits, and the client MUST immediately close this session.</t>
  <t>If more than twice the new maximum permissible time has already elapsed since the last
non-keepalive activity on this session, then this session is eligible to be
forcibly terminated by the server, though if a server abruptly reduces the
inactivity timeout in this way the server SHOULD give the client a grace period
of one quarter of the new inactivity timeout, to give the client time to close
the connection gracefully before the server resorts to terminating it forcibly.</t>
</list></t>

</section>
<section anchor="relation-to-edns0-tcp-keepalive-option" title="Relation to EDNS(0) TCP Keepalive Option">

<t>The inactivity timeout value in the Keepalive TLV (DSO-TYPE=1) has similar
intent to the EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>.
A client/server pair that supports DSO MUST NOT use the
EDNS(0) TCP KeepAlive option within any message after a DSO 
session has been established.
Once a DSO session has been established, if either
client or server receives a DNS message over the session that contains an
EDNS(0) TCP Keepalive option, this is an error and the receiver of the
EDNS(0) TCP Keepalive option MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="delay" title="Retry Delay TLV">

<t>The Retry Delay TLV (DSO-TYPE=0) can be used as an Operation TLV or as
a Modifier TLV.</t>

<t>The TYPE-DEPENDENT DATA for the the Retry Delay TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     RETRY DELAY (32 bits)                     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='RETRY DELAY:'>
  a time value, specified as a 32 bit word in network order in units of 
milliseconds, within which the client MUST NOT retry this operation, or retry 
connecting to this server.</t>
</list></t>

<t>The RECOMMENDED value is 10 seconds.</t>

<section anchor="use-as-an-operational-tlv" title="Use as an Operational TLV">

<t>When sent in a DSO request message, from server to client, the 
Retry Delay TLV (0) is considered an Operation TLV. It is used by a server 
to request that a client close the session, and not to reconnect for the 
indicated time interval.</t>

<t>In this case it applies to the session as a whole, and the client MUST close the 
session, as described in section <xref target="retry"/>. The RCODE in the message header 
MUST indicate the reason for the termination:</t>

<t><list style="symbols">
  <t>NOERROR indicates a routine shutdown.</t>
  <t>SERVFAIL indicates that the server is overloaded due to resource exhaustion.</t>
  <t>REFUSED indicates that the server has been reconfigured and is no longer able 
to perform one or more of the functions 
currently being performed on this session (for example, a DNS Push Notification 
server could be reconfigured such that is is no longer accepting DNS Push 
Notification requests for one or more of the currently subscribed names).</t>
</list></t>

<t>This document specifies only these three RCODE values for Retry Delay request.
Servers sending Retry Delay requests SHOULD use one of these three values.
However, future circumstances may create situations where other RCODE values
are appropriate in Retry Delay requests, so clients MUST be prepared
to accept Retry Delay requests with any RCODE value.</t>

</section>
<section anchor="use-as-a-modifier-tlv" title="Use as a Modifier TLV">

<t>When appended to a DSO response message for some client request,
the Retry Delay TLV (0) is considered a Modifier TLV.
The indicated time interval during which the client SHOULD NOT retry
applies only to the failed operation, not to the session as a whole.</t>

<t>In the case of a client request that returns a nonzero RCODE value, the server 
MAY append a Retry Delay TLV (0) to the response, indicating the time interval
during which the client SHOULD NOT attempt this operation again.</t>

</section>
</section>
<section anchor="padding" title="Encryption Padding TLV">

<t>The Encryption Padding TLV (DSO-TYPE=2) can only be used as a Modifier TLV.
It is only applicable when the DSO Transport layer uses encryption
such as TLS.</t>

<t>The TYPE-DEPENDENT DATA for the the Padding TLV is optional and is a
variable length field containing non-specified values. A DATA LENGTH
of 0 essentially provides for 4 octets of padding (the minimum amount).</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   /                                                               /
   /                   VARIABLE NUMBER OF OCTETS                   /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t>As in <xref target="RFC7830"/> the PADDING octets SHOULD be set to 0x00.  Other values MAY be used,
for example, in cases where there is a concern that the padded
message could be subject to compression before encryption.
PADDING octets of any value MUST be accepted in the messages received.</t>

<t>The Encryption Padding TLV may be included in either a DSO
request, response, or both. If a request is received with a Encryption
Padding TLV, then the response SHOULD also include an Encryption Padding TLV.</t>

<t>The length of padding is intentionally not specified in this document and
is a function of current best practices with respect to the type and length
of data in the preceding TLVs. See <xref target="I-D.ietf-dprive-padding-policy"/></t>

</section>
<section anchor="lifecycle" title="Session Lifecycle and Timers">

<section anchor="session-initiation" title="Session Initiation">

<t>A session begins when a client makes a new connection to a server.</t>

<t>A DSO session MAY begin as described in <xref target="details"/>…..</t>

<t>The client may perform as many DNS operations as it wishes using the
newly created session. Operations SHOULD be pipelined (i.e., the
client doesn’t need wait for a response before sending the next message).
The server MUST act on messages in the order they are received, but
responses to those messages MAY be sent out of order, if appropriate.</t>

</section>
<section anchor="timers" title="Timers">

<t>Two timer values are associated with a session: the inactivity timeout, and the
keepalive interval.</t>

<t>The first timer value, the inactivity timeout, is the maximum time for which
a client may speculatively keep a session open in the expectation that
it may have future requests to send to that server.</t>

<t>The second timer value, the keepalive interval, is the maximum permitted
interval between client messages to the server if the client wishes to keep
the session alive.</t>

<t>The two timer values are independent. The inactivity timeout may be lower, the same,
or higher than the keepalive interval, though in most cases the inactivity timeout is 
expected to be shorter than the keepalive interval.</t>

<t>Only when the client has a very long-lived low-traffic state does the 
keepalive interval timer come into play, to ensure that a sufficient residual
amount of traffic is generated to maintain NAT and firewall state.</t>

<t>On a new session, before any explicit DSO
Keepalive message exchange, the default value for both timers is 15 seconds.
For both timers, lower values of the timer result in higher network traffic
and higher CPU load on the server.</t>

</section>
<section anchor="inactive-sessions" title="Inactive Sessions">

<t>At both servers and clients, the generation or reception of any complete
DNS message, including DNS requests, responses, updates, or Session Signaling
messages, resets both timers for that session <xref target="RFC7766"/>, with the exception
that a DSO Keepalive message resets only the keepalive interval 
timer, not the inactivity timeout timer.</t>

<t>In addition, for as long as the client has an outstanding operation in progress,
the inactivity timeout timer remains conceptually fixed at zero, and an inactivity timeout cannot
occur.</t>

<t>For short-lived DNS operations like traditional queries and updates,
an operation is considered in progress for the time between request and 
response, typically a period of a few hundred milliseconds at most.
At the client, the inactivity timeout timer is cleared upon transmission of a 
request and remains cleared until reception of the corresponding response.
At the server, the inactivity timeout timer is cleared upon reception of a request
and remains cleared until transmission of the corresponding response.</t>

<t>For long-lived DNS Stateful operations, an operation is considered in progress for
as long as the state is active, until it is cancelled.
This means that a session can exist, with a state 
active, with no messages flowing in either direction, for far longer than the 
inactivity timeout, and this is not an error. This is why there are two separate 
timers: the inactivity timeout, and the keepalive interval. Just because a session has 
no traffic for an extended period of time
does not automatically make that session “inactive”, if it has an active state 
that is awaiting for events.</t>

</section>
<section anchor="the-inactivity-timeout" title="The Inactivity Timeout">

<t>The purpose of the inactivity timeout is for the server to balance its trade off 
between the costs of setting up new sessions and the costs of maintaining inactive 
sessions. A server with abundant session capacity can offer a high inactivity timeout, 
to permit clients to keep a speculative session open for a long time, to save 
the cost of establishing a new session for future communications with that 
server. A server with scarce memory resources can offer a low inactivity timeout,
to cause clients to promptly close sessions whenever they have no outstanding
operations with that server, and then create a new session later when needed.</t>

<section anchor="closing-inactive-sessions" title="Closing Inactive Sessions">

<t>A client is NOT required to wait until the inactivity timeout timer expires
before closing a session.
A client MAY close a session at any time, at the client’s discretion.
If a client determines that it has no current or reasonably anticipated
future need for an inactive session, then the client SHOULD close that connection.</t>

<t>If, at any time during the life of the session,
the inactivity timeout value (i.e., 15 seconds by default) elapses
without there being any operation active on the session,
the client MUST gracefully close the connection with a TCP FIN
(or equivalent for other protocols).</t>

<t>If, at any time during the life of the session, twice the inactivity timeout value
(i.e., 30 seconds by default) elapses without there being any operation
active on the session, the server SHOULD consider the client delinquent,
and forcibly abort the session.
For sessions over TCP (or over TLS over TCP),
to avoid the burden of having a connection in TIME-WAIT state, instead of
closing the connection gracefully with a TCP FIN the server SHOULD abort
the connection with a TCP RST (or equivalent for other protocols).
(In the BSD Sockets API this is achieved by setting the
SO_LINGER option to zero before closing the socket.)</t>

<t>In this context, an operation being active on a session includes
a query waiting for a response, an update waiting for a response,
or active state,
but not a DSO Keepalive message exchange itself.
A DSO Keepalive message exchange resets only the keepalive
interval timer, not the inactivity timeout timer.</t>

<t>If the client wishes to keep an inactive session open for longer than
the default duration without having to send traffic every 15 seconds,
then it uses the DSO Keepalive message to request
longer timeout values, as described in <xref target="keepalive"/>.</t>

</section>
<section anchor="values-for-the-inactivity-timeout" title="Values for the Inactivity Timeout">

<t>For the inactivity timeout value, lower values result in more frequent session 
teardown and re-establishment. Higher values result in lower traffic and CPU
load on the server, but a larger memory burden to maintain state for inactive 
sessions.</t>

<t>A shorter inactivity timeout with a longer keepalive interval signals to the client 
that it should not speculatively keep inactive sessions open for very long for no 
reason, but when it does have an active reason to keep a session open, it 
doesn’t need to be sending an agressive level of keepalive traffic.</t>

<t>A longer inactivity timeout with a shorter keepalive interval signals to the client
that it may speculatively keep inactive sessions open for a long time, but it
should be sending a lot of keepalive traffic on those inactive sessions.
This configuration is expected to be less common.</t>

<t>To avoid excessive traffic the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with an inactivity timeout value less than ten seconds.
If a client receives an Keepalive message specifying an inactivity timeout value
less than ten seconds this is an error and the client MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="the-keepalive-interval" title="The Keepalive Interval">

<t>The purpose of the keepalive interval is to manage the generation of
sufficient messages to maintain state in middle-boxes (such at NAT gateways
or firewalls) and for the client and server to periodically verify that they
still have connectivity to each other. This allows them to clean up state
when connectivity is lost, and attempt re-connection if appropriate.</t>

<section anchor="keepalive-interval-expiry" title="Keepalive Interval Expiry">

<t>If, at any time during the life of the session,
the keepalive interval value (i.e., 15 seconds by default) elapses
without any DNS messages being sent or received on a session,
the client MUST take action to keep the session alive.
To keep the session alive the client MUST send a
DSO Keepalive message (see <xref target="keepalive"/>).
A DSO Keepalive message exchange resets only the keepalive
interval timer, not the inactivity timeout timer.</t>

<t>If a client disconnects from the network abruptly,
without cleanly closing its session,
leaving long-lived state uncanceled,
the server learns of this after failing to
receive the required keepalive traffic from that client.
If, at any time during the life of the session,
twice the keepalive interval value (i.e., 30 seconds by default) elapses
without any DNS messages being sent or received on a session,
the server SHOULD consider the client delinquent,
and forcibly abort the connection with a TCP RST (or equivalent for other 
protocols).</t>

</section>
<section anchor="values-for-the-keepalive-interval" title="Values for the Keepalive Interval">

<t>For the keepalive interval value, lower values result in higher volume keepalive 
traffic. Higher values of the keepalive interval reduce traffic and CPU load, 
but have minimal effect on the memory burden
at the server, because clients keep a session open for the same length of time
(determined by the inactivity timeout) regardless of the level of keepalive traffic 
required.</t>

<t>It may be appropriate for clients and servers to select different keepalive 
interval values depending on the nature of the network they are on.</t>

<t>A corporate DNS server that knows it is serving only clients on the internal 
network, with no intervening NAT gateways or firewalls, can impose a higher 
keepalive interval, because frequent keepalive traffic is not required.</t>

<t>A public DNS server that is serving primarily residential consumer clients, 
where it is likely there will be a NAT gateway on the path, may impose a lower 
keepalive interval, to generate more frequent keepalive traffic.</t>

<t>A smart client may be adaptive to its environment. A client using
a private IPv4 address <xref target="RFC1918"/> to communicate with a DNS server
at an address that is not in the same IPv4 private address block,
may conclude that there is likely to be a NAT gateway on the path,
and accordingly request a lower keepalive interval.</t>

<t>For environments where there is a NAT gateway or firewalls on the path, it is
RECOMMENDED that clients request, and servers grant, a keepalive interval of 15
minutes. In other environments it is RECOMMENDED that clients request, and 
servers grant, a keepalive interval of 60 minutes.</t>

<t>Note that the lower the keepalive interval value, the higher the load on client
and server. For example, an keepalive interval value of 100ms would result in a
continuous stream of at least ten messages per second, in both directions,
to keep the session alive. And, in this extreme example, a single packet loss and
retransmission over a long path could introduce a momentary pause in the stream of messages,
long enough to cause the server to overzealously abort the connection.</t>

<t>Because of this concern, the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with an keepalive interval value less than ten seconds.
If a client receives an Keepalive message specifying an keepalive interval value
less than ten seconds this is an error and the client MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="server-initiated-termination-on-error" title="Server-Initiated Termination on Error">

<t>After sending an error response to a client, the server MAY close the session,
or may allow the session to remain open. For error conditions
that only affect the single operation in question, the server SHOULD return an
error response to the client and leave the session open for further operations.
For error conditions that are likely to make all operations unsuccessful in the
immediate future, the server SHOULD return an error response to the client and 
then close the session by sending a Retry Delay request message, as described in 
<xref target="delay"/>.</t>

</section>
<section anchor="client-behaviour-in-receiving-an-error" title="Client Behaviour in Receiving an Error">

<t>Upon receiving an error response from the server, a client SHOULD NOT
automatically close the session. An error relating to one particular operation
on a session does not necessarily imply that all other operations on that
session have also failed, or that future operations will fail. The client
should assume that the server will make its own decision about whether or not to
close the session, based on the server’s determination of whether the error
condition pertains to this particular operation, or would also apply to any
subsequent operations. If the server does not close the session then the client
SHOULD continue to use that session for subsequent operations.</t>

</section>
<section anchor="server-initiated-termination-on-overload" title="Server-Initiated Termination on Overload">

<t>Apart from the cases where:</t>

<t><list style="symbols">
  <t>Session Timer expire (see Section xx)</t>
  <t>On error (see Section xx)</t>
  <t>When under load (see below)</t>
</list></t>

<t>a server MUST NOT close a session with a client, except in extraordinary error 
conditions. Closing the session is the
client’s responsibility, to be done at the client’s discretion, when it so 
chooses. A server only closes a session under exceptional circumstances, such as
when the server application software or underlying operating system is
restarting, the server application terminated unexpectedly (perhaps due to a
bug that makes it crash), or the server is undergoing maintenance procedures.
When possible, a server SHOULD send a Retry Delay message informing the
client of the reason for the session being closed, and allow the client
five seconds to receive it before the server resorts to forcibly aborting the 
connection.</t>

</section>
<section anchor="retry" title="Retry Delay Operation TLV">

<t>There may be rare cases where a server is overloaded and wishes to shed load.
If a server is low on resources it MAY simply terminate a client connection with 
a TCP RST (or equivalent for other protocols).
However, the likely behavior of the client may be simply to to treat this as a
network failure and connect
immediately, putting more burden on the server.</t>

<t>Therefore to avoid this reconnection implosion, a server SHOULD instead choose 
to shed client load by sending a Retry Delay request message, with an RCODE of 
SERVFAIL, to inform the client of the overload situation. After sending a Retry 
Delay request message, the server MUST NOT send any further messages on that 
session.</t>

<t>After sending the Retry Delay request the server SHOULD allow the
client five seconds to close the connection, and if the client has not
closed the connection after five seconds then the server SHOULD abort
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>Upon receipt of a Retry Delay request from the server, the client MUST
make note of the reconnect delay for this server, and then immediately
close the connection. This is to place the burden of TCP’s TIME-WAIT state on 
the client.</t>

<t>A Retry Delay request message MUST NOT be initiated by a client.
If a server receives a Retry Delay request message this is an error
and the server MUST immediately terminate the connection with a TCP RST
(or equivalent for other protocols).</t>

<section anchor="outstanding-operations" title="Outstanding Operations">

<t>At the moment a server chooses to initiate a Retry Delay request message
there may be DNS requests already in flight from client to server on this 
session, which will arrive at the server after its Retry Delay request message 
has been sent.
The server MUST silently ignore such incoming requests, and MUST NOT generate
any response messages for them. When the Retry Delay request message from the
server arrives at the client, the client will determine that any DNS requests
it previously sent on this session, that have not yet received a response, now 
will certainly not be receiving any response. Such requests should be considered
failed, and should be retried at a later time, as appropriate.</t>

<t>In the case where some, but not all, of the existing operations on a session 
have become invalid (perhaps because the server has been reconfigured and is no 
longer authoritative for some of the names),
but the server is terminating all sessions en masse with a REFUSED (5) RCODE,
the RECONNECT DELAY MAY be zero, indicating that the clients SHOULD immediately
attempt to re-establish operations.
It is likely that some of the attempts will be successful and some will not.</t>

<t>In the case where a server is terminating a large number of sessions at once
(e.g., if the system is restarting) and the server doesn’t want to be inundated 
with a flood of simultaneous retries, it SHOULD send different RECONNECT delay 
values to each client.
These adjustments MAY be selected randomly, pseudorandomly, or deterministically
(e.g., incrementing the time value by one tenth of a second for each successive
client, yielding a post-restart reconnection rate of ten clients per second).</t>

</section>
<section anchor="client-reconnection" title="Client Reconnection">

<t>After a session is closed by the server, the client SHOULD try to reconnect,
to that server, or to another suitable server, if more than one is available.
If reconnecting to the same server, the client MUST respect the indicated delay
before attempting to reconnect.</t>

<t>If a particular server does not want a client to reconnect (it is being
de-commissioned), it SHOULD set the retry delay to the maximum value (which is
approximately 497 days). If the server will only be out of service for a maintenance
period, it should use a value closer to the expected maintenance window and
not default to a very large delay value or clients may not attempt to reconnect
after it resumes service.</t>

</section>
</section>
</section>
<section anchor="sharing" title="Connection Sharing">

<t>As in <xref target="RFC7766"/>, to mitigate the risk of unintentional server overload, DNS clients
MUST take care to minimize the number of concurrent TCP connections
made to any individual server.  It is RECOMMENDED that for any given
client/server interaction there SHOULD be no more than one connection
for regular queries, one for zone transfers, and one for each
protocol that is being used on top of TCP (for example, if the
resolver was using TLS).  However, it is noted that certain primary/
secondary configurations with many busy zones might need to use more
than one TCP connection for zone transfers for operational reasons
(for example, to support concurrent transfers of multiple zones).</t>

<t>A single server may support multiple services, including DNS Updates 
<xref target="RFC2136"/>, DNS Push Notifications <xref target="I-D.ietf-dnssd-push"/>,
and other services, for one or more DNS zones.
When a client discovers that the target server for several different operations
is the same target hostname and port, the client SHOULD use a single
shared session for all those operations.
A client SHOULD NOT open multiple connections to the same target host and port
just because the names being operated on are different or
happen to fall within different zones.
This is to reduce unnecessary connection load on the DNS server.</t>

<t>However, server implementers and operators should be aware that connection
sharing may not be possible in all cases.
A single client device may be home to multiple independent client software
instances that don’t coordinate with each other.
Similarly, multiple independent client devices behind the same NAT gateway
will also typically appear to the DNS server as different source ports on
the same client IP address.
Because of these constraints, a DNS server MUST be prepared to accept
multiple connections from different source ports on the same client IP address.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="dso-opcode-registration" title="DSO OPCODE Registration">

<t>IANA are directed to assign a value (tentatively 6)
in the DNS OPCODEs Registry for the DSO OPCODE.</t>

</section>
<section anchor="dso-rcode-registration" title="DSO RCODE Registration">

<t>IANA are directed to assign a value (tentatively 11)
in the DNS RCODE Registry for the DSONOTIMP error code.</t>

</section>
<section anchor="dso-type-codes-registry" title="DSO Type Codes Registry">

<t>IANA are directed to create the DSO Type Codes
Registry, with initial values as follows:</t>

<texttable>
      <ttcol align='right'>Type</ttcol>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Status</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>0x0000</c>
      <c>RetryDelay</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0001</c>
      <c>KeepAlive</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0002</c>
      <c>Encryption Padding</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0003 - 0x003F</c>
      <c>Unassigned, reserved for session management TLVs</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x0040 - 0xF7FF</c>
      <c>Unassigned</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0xF800 - 0xFBFF</c>
      <c>Reserved for local / experimental use</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0xFC00 - 0xFFFF</c>
      <c>Reserved for future expansion</c>
      <c>&#160;</c>
      <c>&#160;</c>
</texttable>

<t>Registration of additional DSO Type Codes requires publication
of an appropriate IETF “Standards Action” or “IESG Approval” document <xref target="RFC5226"/>.</t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>If this mechanism is to be used with DNS over TLS, then these messages
are subject to the same constraints as any other DNS over TLS messages
and MUST NOT be sent in the clear before the TLS session is established.</t>

<t>The data field of the “Encryption Padding” TLV could be used as a covert channel.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to
Tim Chown,
Ralph Droms,
Jan Komissar,
and Manju Shankar Rao
for their helpful contributions to this document.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC1035;
&RFC7766;
&RFC6891;
&RFC7828;
&RFC2119;
&RFC7830;
&RFC1034;
&RFC2136;
&RFC2132;
&RFC1918;
&RFC5226;


    </references>

    <references title='Informative References'>

<reference anchor="NagleDA" target="http://www.stuartcheshire.org/papers/nagledelayedack/">
  <front>
    <title>TCP Performance problems caused by interaction between Nagle's Algorithm and Delayed ACK</title>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization></organization>
    </author>
    <date year="2005" month="May" day="20"/>
  </front>
</reference>
&RFC7858;
&RFC0768;
&I-D.ietf-dnssd-push;
&I-D.ietf-dprive-padding-policy;


    </references>



  </back>

<!-- ##markdown-source:
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
yabv3f8Fpuom2IbZAAA=

-->

</rfc>

