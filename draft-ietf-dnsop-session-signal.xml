<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.7 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC7766 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7766.xml">
<!ENTITY RFC6891 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6891.xml">
<!ENTITY RFC7828 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7828.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC7830 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7830.xml">
<!ENTITY RFC1034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC2136 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2136.xml">
<!ENTITY RFC1918 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1918.xml">
<!ENTITY RFC2132 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2132.xml">
<!ENTITY RFC5226 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5226.xml">
<!ENTITY RFC7858 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7858.xml">
<!ENTITY RFC6763 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6763.xml">
<!ENTITY I-D.ietf-dnssd-push SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dnssd-push.xml">
<!ENTITY RFC0768 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.0768.xml">
<!ENTITY I-D.ietf-dprive-padding-policy SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dprive-padding-policy.xml">
]>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-dnsop-session-signal-05" category="std" updates="RFC 7766, RFC 1035">

  <front>
    <title>DNS Stateful Operations</title>

    <author initials="R." surname="Bellis" fullname="Ray Bellis">
      <organization abbrev="ISC">Internet Systems Consortium, Inc.</organization>
      <address>
        <postal>
          <street>950 Charter Street</street>
          <city>Redwood City</city>
          <code>CA 94063</code>
          <country>USA</country>
        </postal>
        <phone>+1 650 423 1200</phone>
        <email>ray@isc.org</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>1 Infinite Loop</street>
          <city>Cupertino</city>
          <code>CA 95014</code>
          <country>USA</country>
        </postal>
        <phone>+1 408 974 3207</phone>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="J." surname="Dickinson" fullname="John Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>jad@sinodun.com</email>
      </address>
    </author>
    <author initials="S." surname="Dickinson" fullname="Sara Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>sara@sinodun.com</email>
      </address>
    </author>
    <author initials="A." surname="Mankin" fullname="Allison Mankin">
      <organization>Salesforce</organization>
      <address>
        <email>allison.mankin@gmail.com</email>
      </address>
    </author>
    <author initials="T." surname="Pusateri" fullname="Tom Pusateri">
      <organization>Unaffiliated</organization>
      <address>
        <postal>
          <street></street>
          <city>Raleigh</city>
          <code>NC 27608</code>
          <country>USA</country>
        </postal>
        <phone>+1 919 867 1330</phone>
        <email>pusateri@bangj.com</email>
      </address>
    </author>

    <date year="2017" month="November" day="19"/>

    <area>Internet</area>
    <workgroup>DNSOP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document defines a new DNS OPCODE, for DNS Stateful Operations (DSO).
DSO messages are used to communicate operations within persistent
stateful sessions, expressed using type-length-value (TLV) syntax.
This document defines an initial set of TLVs, including ones
used to manage session timeouts and termination.
This mechanism is intended to reduce the overhead of existing 
“per-packet” signaling mechanisms with “per-message” semantics as well as 
defining new stateful operations not defined in EDNS(0).</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The use of transports for DNS other than UDP is being increasingly specified,
for example, DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> and DNS over TLS <xref target="RFC7858"/>.
Such transports can offer persistent, long-lived sessions and therefore when
using them for transporting DNS messages it is of benefit to have a mechanism
that can establish parameters associated with those sessions, such as timeouts.
In such situations it is also advantageous to support server initiated messages.</t>

<t>The existing EDNS(0) Extension Mechanism for DNS <xref target="RFC6891"/> is explicitly
defined to only have “per-message” semantics. Whilst EDNS(0) has been used to
signal at least one session-related parameter (the EDNS(0) TCP Keepalive option
<xref target="RFC7828"/>) the result is less than optimal due to the restrictions
imposed by the EDNS(0) semantics and the lack of server-initiated signalling. 
For example, a server cannot arbitrarily 
instruct a client to close a connection because the server can only send EDNS(0) options 
in responses to queries that contained EDNS(0) options.</t>

<t>This document defines a new DNS OPCODE, for DNS Stateful Operations (DSO).
DSO messages are used to communicate operations within persistent
stateful sessions, expressed using type-length-value (TLV) syntax.
This document defines an initial set of TLVs, including ones
used to manage session timeouts and termination.</t>

<t>All three of the TLVs defined here are mandatory for all implementations of DSO.
Additional TLVs may be defined in additional specifications.</t>

<t>It should be noted that the message format for DNS Stateful Operations
(see <xref target="format"/>) differs from the traditional DNS packet
format used for standard queries and responses.
The standard twelve-octet header is used, but the four count fields
(QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) are set to zero and their
corresponding sections are not present.
The actual data pertaining to DNS Stateful Operations
(expressed in TLV format) is appended to the end of the DNS message header.
When displayed using packet analyzer tools that have not been
updated to recognize the DNS Stateful Operations format, this
will result in the Stateful Operations data being displayed
as unknown additional data after the end of the DNS message.
It is likely that future updates to these tools will add the ability
to recognize, decode, and display the Stateful Operations data.</t>

<t>This new format has distinct advantages over an RR-based format because it
is more explicit and more compact. Each TLV definition is specific
to the use case, and as a result contains no redundant or overloaded fields.
Importantly, it completely avoids conflating DNS Stateful Operations in anyway 
with normal DNS operations or with existing EDNS(0) based functionality.
A goal of this approach is to avoid the operational issues that have
befallen EDNS(0), particularly relating to middle-box behaviour.</t>

<t>With EDNS(0), multiple options may be packed into a single OPT pseudo-RR,
and there is no generalized mechanism for a client to be able to tell
whether a server has processed or otherwise acted upon each individual
option within the combined OPT RR.
The specifications for each individual option need to define how each
different option is to be acknowledged, if necessary.</t>

<t>In contrast to EDNS(0), with DNS Stateful Operations there is no
compelling motivation to pack multiple operations into a single
message for efficiency reasons, because DNS Stateful Operations
always operates using a connection-oriented transport protocol.
Each Stateful operation is communicated in its own separate
DNS message, and the transport protocol can take care of packing
separate DNS messages into a single IP packet if appropriate.
For example, TCP can pack multiple small DNS messages into a single TCP segment.
This simplification allows for clearer semantics.
Each DSO request message communicates just one primary operation,
and the RCODE in the corresponding response message indicates the
success or failure of that operation.</t>

</section>
<section anchor="terminology" title="Terminology">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and
“OPTIONAL” in this document are to be interpreted as described in
“Key words for use in RFCs to Indicate Requirement Levels” <xref target="RFC2119"/>.</t>

<t>“DSO” is used to mean DNS Stateful Operation.</t>

<t>The term “connection” means a bidirectional byte stream of reliable,
in-order messages, such as provided by using
DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> or DNS over TLS <xref target="RFC7858"/>.</t>

<t>The unqualified term “session” in the context of this document means the exchange of
DNS messages over a connection where:</t>

<t><list style="symbols">
  <t>The connection between client and server is persistent and relatively
long-lived (i.e., minutes or hours, rather than seconds).</t>
  <t>Either end of the connection may initiate messages to the other.</t>
</list></t>

<t>A “DSO session” is established between two endpoints that
acknowledge persistent DNS state via the exchange of DSO messages
over the connection. This is distinct from, for example a DNS-over-TCP session
as described in RC7766.</t>

<t>A “DSO session” is terminated when the underlying connection is closed.</t>

<t>The term “server” means the software with a listening socket, awaiting
incoming connection requests.</t>

<t>The term “client” means the software which initiates a connection
to the server’s listening socket.</t>

<t>The terms “initiator” and “responder” correspond respectively to the
initial sender and subsequent receiver of a DSO request message,
regardless of which was the “client” and “server” in the usual DNS sense.</t>

<t>The term “sender” may apply to either an initiator
(when sending a DNS Stateful Operation request message)
or a responder (when sending a DNS Stateful Operation response message).</t>

<t>Likewise, the term “receiver” may apply to either a responder
(when receiving a DNS Stateful Operation request message)
or an initiator (when receiving a DNS Stateful Operation response message).</t>

<t>DNS Stateful Operations are expressed using type-length-value (TLV) syntax.</t>

<t>Two timers (elapsed time since an event) are defined in this document:</t>

<t><list style="symbols">
  <t>an inactivity timer (see <xref target="keepalive"/> and <xref target="inactivetimer"/>)</t>
  <t>a keepalive timer (see <xref target="keepalive"/> and <xref target="keepalivetimer"/>)</t>
</list></t>

<t>The timeouts associated with these timers are called the inactivity timeout and 
the keepalive interval respectively. 
The term “Session Timeouts” is used to refer to this pair of timeout values.</t>

<t>Reseting a timer means resetting the timer value to zero and starting the timer 
again. Clearing a timer means resetting the timer value to zero but NOT starting 
the time again.</t>

</section>
<section anchor="discussion" title="Discussion">

<t>There are several use cases for DNS Stateful operations that can 
be described here.</t>

<t>Firstly, establishing session parameters such as server defined timeouts is of 
great use in the 
general management of persistent connections. For example, using DSO sessions 
for stub to recursive DNS-over-TLS <xref target="RFC7858"/> is more flexible for both the 
client and the server than attempting to manage sessions using just the EDNS(0)
TCP Keepalive option
<xref target="RFC7828"/>. The simple set of TLVs defined in this document is
sufficient to greatly enhance connection management for this use case.</t>

<t>Secondly, DNS-SD <xref target="RFC6763"/> has evolved into a naturally session based mechanism where,
for example, long-lived subscriptions lend themselves to ‘push’ mechanisms as 
opposed to polling. Long-lived stateful connections and server initiated 
messages align with this use case <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>A general use case is that DNS traffic is often bursty but session establishment 
can be expensive. One challenge with long-lived connections is to maintain 
sufficient traffic to maintain NAT and firewall state.
To mitigate this issue this document introduces a
new concept for the DNS, that is DSO “Keepalive traffic”.
This traffic carries no DNS data and is not considered ‘activity’
in the classic DNS sense, but serves to maintain state in middle boxes,
and to assure client and server that they still have connectivity to each other.</t>

<t>There are a myriad of other potential use cases for DSO given the versatility 
and extensibility of this specification.</t>

<t><xref target="details"/> of this document describes the protocol details of DNS Stateful
Operations including definitions of three TLVs for session management and 
encryption padding. <xref target="lifecycle"/> presents a
detailed discussion of the DSO Session lifecycle including an
in-depth discussion of keepalive traffic and session termination.</t>

</section>
<section anchor="details" title="Protocol Details">

<section anchor="establishment" title="DSO Session Establishment">

<t>DSO messages MUST only be carried in protocols and in
environments where a session may be established according to the definition above.
Standard DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/>, and DNS over TLS <xref target="RFC7858"/>
are suitable protocols.</t>

<t>DNS over plain UDP <xref target="RFC0768"/> is not appropriate since it fails on the requirement for
in-order message delivery, and, in the presence of NAT gateways and firewalls
with short UDP timeouts, it fails to provide a persistent bi-directional
communication channel unless an excessive amount of keepalive traffic is used.</t>

<t>In some environments it may be known in advance by external means
that both client and server support DSO, and in these cases either
client or server may initiate DSO messages at any time.</t>

<t>However, in the typical case a server will not know in advance whether a
client supports DSO, so in general, unless it is known in advance by other means
that a client does support DSO, a server MUST NOT initiate DSO messages until
a DSO session has been mutually established, as described below.</t>

<t>A client MAY attempt to initiate DSO messages at any time
on a connection; receiving a NOTIMP response in reply indicates that the
server does not implement DSO, and the client SHOULD NOT
issue further DSO messages on that connection.</t>

<t>The DSO message format (see <xref target="tlvformat"/>) includes a bit in the TLV structure
that indicates whether or not a particular DSO request message from the
initiator requires a corresponding DSO response message from the responder.
A “DSO session” is established over a connection by the client
sending a DSO request message of a kind that has the acknowledgement bit set,
indicating that it is a request message of a kind that requires a response.</t>

<t>When the server receives a response-requiring DSO request message
from a client, and transmits its response, the server considers
the DSO session established.</t>

<t>When the client receives the server’s DSO response,
the client considers the DSO session established.</t>

<t>Apart from cases where it is known in advance by external means
that both client and server support DSO,
session establishment can only be performed by the client sending
a DSO request message of a kind that requires a response.</t>

<t>Currently the only suitable such messages are the 
DSO Keepalive Operation TLV (see <xref target="keepalive"/>) and the
DSO Encryption Padding TLV (see <xref target="padding"/>).</t>

<t>If future documents define other client-initiated
response-requiring DSO request messages, then one of these
messages may also be used to establish a DSO session.</t>

<t>Clients MAY send non-response-requiring DSO request messages at any time
on a connection, but a “DSO session” is only considered established after:</t>

<t><list style="symbols">
  <t>the client has sent its first response-requiring DSO request message, and</t>
  <t>(at the server) the server has received this request and transmitted its response</t>
  <t>(at the client) the client has received the server’s response</t>
</list></t>

<t>Once a “DSO session” has been established,
either end may unilaterally send DSO messages at any time,
and therefore either client or server may be the initiator of a message.</t>

<t>Once a “DSO session” has been established,
clients and servers should behave as described in this specification with
regard to inactivity timeouts and connection close, not as prescribed in
the previous specification for DNS over TCP <xref target="RFC7766"/>.</t>

<section anchor="middle-box-considerations" title="Middle-box Considerations">

<t>Where an application-layer middle box (e.g., a DNS proxy, forwarder, or
session multiplexer) is in the path the middle box MUST NOT blindly
forward DSO messages in either direction, and MUST treat the inbound
and outbound connections as separate sessions.  This does not preclude
the use of DSO messages in the presence of an IP-layer middle box such
as a NAT that rewrites IP-layer and/or transport-layer headers, but
otherwise preserves the effect of a single session between the client
and the server.</t>

<t>To illustrate the above, consider a network where a middle box
terminates one or more TCP connections from clients and multiplexes the
queries therein over a single TCP connection to an upstream server.  The
DSO messages and any associated state are specific to the individual
TCP connections.  A DSO-aware middle box MAY in some circumstances be
able to retain associated state and pass it between the client and
server (or vice versa) but this would be highly TLV-specific.  For
example, the middle box may be able to maintain a list of which clients
have made Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/> and
make its own subscription(s) on their behalf, relaying any subsequent
notifications to the client (or clients) that have subscribed to that
particular notification.</t>

</section>
</section>
<section anchor="format" title="Message Format">

<t>A DSO message begins with
the standard twelve-octet DNS message header <xref target="RFC1035"/>
with the OPCODE field set to the DSO OPCODE (tentatively 6).
However, unlike standard DNS messages, the question section, answer section,
authority records section and additional records sections are not present.
The corresponding count fields (QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) MUST be
set to zero on transmission.</t>

<t>If a DSO message is received where any of the count fields are
not zero, then a FORMERR MUST be returned,
unless a future document specifies otherwise.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                          MESSAGE ID                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |QR |    OPCODE     |            Z              |     RCODE     |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     QDCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ANCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     NSCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ARCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                           DSO Data                            /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<section anchor="header" title="Header">

<t>In a request the MESSAGE ID field MUST be set to a unique value, that the
initiator is not currently using for any other active operation on this 
connection.
For the purposes here, a MESSAGE ID is in use in this DSO session if the
initiator has used it in a request for which it has not yet received a
response, or if the client has used it to setup state that it has not yet
deleted. For example, state could be a subscription <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>In a response the MESSAGE ID field MUST contain a copy of the value of the
MESSAGE ID field in the request being responded to.</t>

<t>In a request the DNS Header QR bit MUST be zero (QR=0).
If the QR bit is not zero the message is not a request.</t>

<t>In a response the DNS Header QR bit MUST be one (QR=1).
If the QR bit is not one the message is not a response.</t>

<t>The DNS Header OPCODE field holds the DSO OPCODE value (tentatively 6).</t>

<t>The Z bits are currently unused in DSO messages,
and in both DSO requests and DSO responses the
Z bits MUST be set to zero (0) on transmission and MUST be silently ignored
on reception, unless a future document specifies otherwise.</t>

<t>In a request message (QR=0) the RCODE is generally set to zero on transmission,
and silently ignored on reception, except where specified otherwise
(for example, the Retry Delay operation (see <xref target="delay"/>), where the RCODE indicates the reason
for termination).</t>

<t>The RCODE value in a response may be one of the following values:</t>

<texttable>
      <ttcol align='right'>Code</ttcol>
      <ttcol align='left'>Mnemonic</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>0</c>
      <c>NOERROR</c>
      <c>Operation processed successfully</c>
      <c>1</c>
      <c>FORMERR</c>
      <c>Format error</c>
      <c>2</c>
      <c>SERVFAIL</c>
      <c>Server failed to process request due to a problem with the server</c>
      <c>3</c>
      <c>NXDOMAIN</c>
      <c>Name Error — Named entity does not exist (TLV-dependent)</c>
      <c>4</c>
      <c>NOTIMP</c>
      <c>DSO not supported</c>
      <c>5</c>
      <c>REFUSED</c>
      <c>Operation declined for policy reasons</c>
      <c>9</c>
      <c>NOTAUTH</c>
      <c>Not Authoritative (TLV dependent)</c>
      <c>11</c>
      <c>DSONOTIMP</c>
      <c>DSO type code not supported</c>
</texttable>

<t>Use of the above RCODEs is likely to be common in DSO but 
does not preclude the definition and use of other codes in future documents that 
make use of DSO.</t>

<t>If a document describing a DSO makes use of either NXDOMAIN (Name Error)
or NOTAUTH then that document MUST explain the meaning.</t>

</section>
<section anchor="dsodata" title="DSO Data">

<t>The standard twelve-octet DNS message header is followed by the DSO Data.</t>

<t>The first TLV in a DSO request message is called the Operation 
TLV. Any subsequent TLVs after this initial Operation TLV are called Modifier TLVs.</t>

<t>Depending on the operation a DSO response can contain:</t>

<t><list style="symbols">
  <t>No TLVs</t>
  <t>Only an Operation TLV</t>
  <t>An Operation TLV followed by one or more Modifier TLVs</t>
  <t>Only Modifier TLVs</t>
</list></t>

<section anchor="tlvformat" title="TLV Format">

<t>Operation and modifier TLVs both use the same encoding format.</t>

<t>Operation TLVs SHOULD normally require a response and, therefore, set the TLV
Acknowledgement bit in a request. However, for some Operation TLVs, this may be
undesirable and the TLV Acknowledgement bit MAY be cleared in the request. Each
Operation TLV definition should stipulate whether an acknowledgement is
REQUIRED. If the TLV Acknowledgement bit is cleared in a request, a response
MUST NOT be sent. Modifier TLVs MUST NEVER set the Acknowledgement bit. The
Acknowledgement bit is NEVER set in the response to an Operation TLV.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   | A |                        DSO-TYPE                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                        DSO DATA LENGTH                        |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                      TYPE-DEPENDENT DATA                      /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='A:'>
  A 1-bit TLV Response flag indicating whether or not an Operation TLV requires
a response Acknowledgement.</t>
  <t hangText='DSO-TYPE:'>
  A 15-bit field in network order giving the type of the current DSO TLV per
the IANA DSO Type Codes Registry.</t>
  <t hangText='DSO DATA LENGTH:'>
  A 16-bit field in network order giving the size in octets of
the TYPE-DEPENDENT DATA.</t>
  <t hangText='TYPE-DEPENDENT DATA:'>
  Type-code specific format.</t>
</list></t>

<t>Where domain names appear within TYPE-DEPENDENT DATA, they MAY be compressed 
using standard DNS name compression. However, the compression MUST NOT point
outside of the TYPE-DEPENDENT DATA section and offsets MUST be from the start
of the TYPE-DEPENDENT DATA.</t>

</section>
<section anchor="operation-tlvs" title="Operation TLVs">

<t>An “Operation TLV” specifies the operation to be performed.</t>

<t>A DSO message MUST contain at most one Operation TLV.</t>

<t>In all cases a DSO request message MUST contain exactly one 
Operation TLV, indicating the operation to be performed.</t>

<t>Depending on the operation, a DSO response message MAY contain no 
Operation TLV, because it is simply a response to a previous request message,
and the MESSAGE ID in the header is sufficient to identify the request in 
question. Or it may contain a single corresponding response Operation TLV, with 
the same DSO-TYPE as in the request message. The specification for each DSO
type determines whether a response for that operation type 
is required to carry the Operation TLV.</t>

<t>If a DSO response is received for an operation which requires
that the response carry an Operation TLV, and the required Operation TLV is not
the first DSO TLV in the response message, then this is a fatal 
error and the recipient of the defective response message MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
<section anchor="modifier-tlvs" title="Modifier TLVs">

<t>A “Modifier TLV” specifies additional parameters
relating to the operation. Immediately following the Operation TLV, if present,
a DSO message MAY contain one or more Modifier TLVs.</t>

</section>
<section anchor="unrecognized-tlvs" title="Unrecognized TLVs">

<t>If a DSO request is received containing an unrecognized
Operation TLV, the receiver MUST send a response with matching
MESSAGE ID, and RCODE DSONOTIMP (tentatively 11). The response MUST NOT contain 
an Operation TLV.</t>

<t>If a DSO message (request or response) is received
containing one or more unrecognized Modifier TLVs, the unrecognized
Modifier TLVs MUST be silently ignored, and the remainder of the message
is interpreted and handled as if the unrecognized parts were not present.</t>

</section>
</section>
<section anchor="edns0-and-tsig" title="EDNS(0) and TSIG">

<t>Since the ARCOUNT field MUST be zero, a DSO message
MUST NOT contain an EDNS(0) option in the additional records section.
If functionality provided by current or future EDNS(0) options is desired
for DSO messages, an Operation TLV or
Modifier TLV needs to be defined to carry the necessary information.</t>

<t>For example, the EDNS(0) Padding Option <xref target="RFC7830"/> used for security purposes
is not permitted in a DSO message,
so if message padding is desired for DSO messages
then the Encryption Padding TLV described in <xref target="padding"/> MUST be used.</t>

<t>Similarly, a DSO message MUST NOT contain a TSIG record.
A TSIG record in a conventional DNS message is added as the last record
in the additional records section, and carries a signature computed over
the preceding message content. Since DSO data appears
after the additional records section, it would not be included in the
signature calculation. 
If use of signatures with DSO messages becomes necessary in the 
future, an explicit Modifier TLV needs to be defined to 
perform this function.</t>

<t>Note however that, while DSO <spanx style="emph">messages</spanx> cannot include
EDNS(0) or TSIG records, a DSO <spanx style="emph">session</spanx> is typically used to 
carry a whole series of DNS messages of different kinds, including DSO
messages, and other DNS message types like Query <xref target="RFC1034"/> 
<xref target="RFC1035"/> and Update <xref target="RFC2136"/>, and those messages can carry EDNS(0) and 
TSIG records.</t>

<t>This specification explicitly prohibits use of the
EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>
in <spanx style="emph">any</spanx> messages sent on a DSO session (because it duplicates
the functionality provided by the DSO Keepalive operation),
but messages may contain other EDNS(0) options as appropriate.</t>

</section>
</section>
<section anchor="message-handling" title="Message Handling">

<t>The initiator MUST set the value of the QR bit in the DNS header to
zero (0), and the responder MUST set it to one (1).
Every DSO request message (QR=0) with the Acknowledgement bit set in the
operation TLV MUST elicit a response (QR=1), which MUST have the same
MESSAGE ID in the DNS message header as in the corresponding request.
DSO request messages sent by the client with the Acknowledgement
bit set in the operation TLV elicit a response from the server, and
DSO request messages sent by the server with the Acknowledgement
bit set in the operation TLV elicit a response from the client.</t>

<t>With most TCP implementations, the TCP data acknowledgement (generated because 
data has been received by TCP), the TCP window update (generated because TCP has 
delivered that data to the receiving software) and the DSO 
response (generated by the receiving software itself)
are all combined into a single packet, so in practice the requirement that every
DSO request message MUST elicit a 
DSO response incurs minimal extra cost on the network.
Requiring that every request elicit a corresponding response also avoids
performance problems caused by interaction between
Nagle’s Algorithm and Delayed Ack <xref target="NagleDA"/>.</t>

<t>The namespaces of 16-bit MESSAGE IDs are disjoint in each direction.
For example, it is <spanx style="emph">not</spanx> an error for both client and server to send a request
message with the same ID. In effect, the 16-bit MESSAGE ID combined with the 
identity of the initiator (client or server) serves as a 17-bit unique 
identifier for a particular operation on a DSO session.</t>

<t>As described in <xref target="header"/> An initiator MUST NOT reuse a MESSAGE ID that is 
already in use for an 
outstanding request, unless specified otherwise by the relevant specification 
for the DSO in question. At the very least, this means 
that a MESSAGE ID MUST NOT be reused in a particular direction
on a particular DSO session while the initiator is waiting for a response to a 
previous request using that MESSAGE ID on that DSO session,
unless specified otherwise by the relevant 
specification for the DSO in question.
(For a long-lived state the MESSAGE ID for the operation
MUST NOT be reused whilst that state remains active.)</t>

<t>If a client or server receives a response (QR=1) where the MESSAGE ID does not
match any of its outstanding operations, this is a fatal error and it MUST 
immediately terminate the connection with a TCP RST (or equivalent for other 
protocols).</t>

</section>
</section>
<section anchor="lifecycle" title="DSO Session Lifecycle and Timers">

<section anchor="dso-session-initiation" title="DSO Session Initiation">

<t>A session begins when a client makes a new connection to a server.</t>

<t>A DSO session begin as described in <xref target="establishment"/>.</t>

<t>The client may perform as many DNS operations as it wishes using the
newly created DSO session. Operations SHOULD be pipelined (i.e., the
client doesn’t need wait for a response before sending the next message).
The server MUST act on messages in the order they are transmitted, but
responses to those messages MAY be sent out of order, if appropriate.</t>

</section>
<section anchor="sessiontimeouts" title="DSO Session Timeouts">

<t>Two timeout values are associated with a DSO session: the inactivity timeout, and 
the keepalive interval.</t>

<t>The first timeout value, the inactivity timeout, is the maximum time for which
a client may speculatively keep a DSO session open in the expectation that
it may have future requests to send to that server.</t>

<t>The second timeout value, the keepalive interval, is the maximum permitted
interval between client messages to the server if the client wishes to keep
the DSO session alive.</t>

<t>The two timeout values are independent. The inactivity timeout may be lower, the 
same, or higher than the keepalive interval, though in most cases the inactivity 
timeout is expected to be shorter than the keepalive interval.</t>

<t>Only when the client has a very long-lived low-traffic state does the 
keepalive interval come into play, to ensure that a sufficient residual
amount of traffic is generated to maintain NAT and firewall state
and to assure client and server that they still have connectivity to each other.</t>

<t>On a new DSO session, if no explicit DSO Keepalive message exchange has taken 
place, the default value for both timeouts is 15 seconds.
For both timeouts, lower values of the timeout result in higher network traffic
and higher CPU load on the server.</t>

</section>
<section anchor="inactivetimer" title="Inactive DSO Sessions">

<t>At both servers and clients, the generation or reception of any complete
DNS message, including DNS requests, responses, updates, or DSO
messages, resets both timers for that DSO session, with the exception
that a DSO Keepalive message resets only the keepalive timer, not the inactivity 
timeout timer.</t>

<t>In addition, for as long as the client has an outstanding operation in progress,
the inactivity timer remains cleared, and an inactivity 
timeout cannot occur.</t>

<t>For short-lived DNS operations like traditional queries and updates,
an operation is considered in progress for the time between request and 
response, typically a period of a few hundred milliseconds at most.
At the client, the inactivity timer is cleared upon transmission of a 
request and remains cleared until reception of the corresponding response.
At the server, the inactivity timer is cleared upon reception of a request
and remains cleared until transmission of the corresponding response.</t>

<t>For long-lived DNS Stateful operations, an operation is considered in progress
for as long as the state is active, until it is cancelled.
This means that a DSO session can exist, with a state 
active, with no messages flowing in either direction, for far longer than the 
inactivity timeout, and this is not an error. This is why there are two separate 
timers: the inactivity timeout, and the keepalive interval. Just because a DSO 
session has no traffic for an extended period of time
does not automatically make that DSO session “inactive”,
if it has an active state that is awaiting events.</t>

</section>
<section anchor="the-inactivity-timeout" title="The Inactivity Timeout">

<t>The purpose of the inactivity timeout is for the server to balance its trade off 
between the costs of setting up new DSO sessions and the costs of maintaining inactive 
DSO sessions. A server with abundant DSO session capacity can offer a high inactivity timeout, 
to permit clients to keep a speculative DSO session open for a long time, to save 
the cost of establishing a new DSO session for future communications with that 
server. A server with scarce memory resources can offer a low inactivity timeout,
to cause clients to promptly close DSO sessions whenever they have no outstanding
operations with that server, and then create a new DSO session later when needed.</t>

<section anchor="closing-inactive-dso-sessions" title="Closing Inactive DSO Sessions">

<t>A client is NOT required to wait until the inactivity timeout expires
before closing a DSO session.
A client MAY close a DSO session at any time, at the client’s discretion.
If a client determines that it has no current or reasonably anticipated
future need for an inactive DSO session, then the client SHOULD close that connection.</t>

<t>If, at any time during the life of the DSO session,
the inactivity timeout value (i.e., 15 seconds by default) elapses
without there being any operation active on the DSO session,
the client MUST gracefully close the connection with a
TLS close_notify followed by a TCP FIN (or equivalent for other protocols).</t>

<t>If, at any time during the life of the DSO session, twice the inactivity timeout value
(i.e., 30 seconds by default) elapses without there being any operation
active on the DSO session, the server SHOULD consider the client delinquent,
and forcibly abort the DSO session.
For DSO sessions over TCP (or over TLS over TCP),
to avoid the burden of having a connection in TIME-WAIT state, instead of
closing the connection gracefully the server SHOULD abort
the connection with a TCP RST (or equivalent for other protocols).
(In the BSD Sockets API this is achieved by setting the
SO_LINGER option to zero before closing the socket.)</t>

<t>In this context, an operation being active on a DSO session includes
a query waiting for a response, an update waiting for a response,
or active state,
but not a DSO Keepalive message exchange itself.
A DSO Keepalive message exchange resets only the keepalive
interval timer, not the inactivity timeout timer.</t>

<t>If the client wishes to keep an inactive DSO session open for longer than
the default duration without having to send traffic every 15 seconds,
then it uses the DSO Keepalive message to request
longer timeout values, as described in <xref target="keepalive"/>.</t>

</section>
<section anchor="values-for-the-inactivity-timeout" title="Values for the Inactivity Timeout">

<t>For the inactivity timeout value, lower values result in more frequent DSO session 
teardown and re-establishment. Higher values result in lower traffic and CPU
load on the server, but a larger memory burden to maintain state for inactive 
DSO sessions.</t>

<t>A shorter inactivity timeout with a longer keepalive interval signals to the client 
that it should not speculatively keep inactive DSO sessions open for very long without
reason, but when it does have an active reason to keep a DSO session open, it 
doesn’t need to be sending an aggressive level of keepalive traffic.</t>

<t>A longer inactivity timeout with a shorter keepalive interval signals to the client
that it may speculatively keep inactive DSO sessions open for a long time, but it
should be sending a lot of keepalive traffic on those inactive DSO sessions.
This configuration is expected to be less common.</t>

<t>To avoid repeated teardown and re-establishment of sessions,
the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with an inactivity timeout value less than ten seconds.
If a client receives a Keepalive message specifying an inactivity timeout value
less than ten seconds this is an error and the client MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

<t>This does not mean that a client is forced to keep an idle connection open for
ten seconds if it doesn’t need that — a client is free to close an idle connection whenever it chooses —
it means that servers cannot <spanx style="emph">require</spanx> a client to close an idle connection in under ten seconds.</t>

<t>[Do we really want this restriction? How soon does the client reconnect after tearing down the connection? –SC]</t>

</section>
</section>
<section anchor="keepalivetimer" title="The Keepalive Interval">

<t>The purpose of the keepalive interval is to manage the generation of
sufficient messages to maintain state in middle boxes (such at NAT gateways
or firewalls) and for the client and server to periodically verify that they
still have connectivity to each other. This allows them to clean up state
when connectivity is lost, and attempt re-connection if appropriate.</t>

<section anchor="keepalive-interval-expiry" title="Keepalive Interval Expiry">

<t>If, at any time during the life of the DSO session,
the keepalive interval value (i.e., 15 seconds by default) elapses
without any DNS messages being sent or received on a DSO session,
the client MUST take action to keep the DSO session alive,
by sending a DSO Keepalive message (see <xref target="keepalive"/>).
A DSO Keepalive message exchange resets only the keepalive timer, 
not the inactivity timer.</t>

<t>If a client disconnects from the network abruptly,
without cleanly closing its DSO session,
leaving long-lived state uncanceled,
the server learns of this after failing to
receive the required keepalive traffic from that client.
If, at any time during the life of the DSO session,
twice the keepalive interval value (i.e., 30 seconds by default) elapses
without any DNS messages being sent or received on a DSO session,
the server SHOULD consider the client delinquent,
and forcibly abort the connection with a TCP RST (or equivalent for other 
protocols).</t>

</section>
<section anchor="values-for-the-keepalive-interval" title="Values for the Keepalive Interval">

<t>For the keepalive interval value, lower values result in higher volume keepalive 
traffic. Higher values of the keepalive interval reduce traffic and CPU load, 
but have minimal effect on the memory burden
at the server, because clients keep a DSO session open for the same length of time
(determined by the inactivity timeout) regardless of the level of keepalive traffic 
required.</t>

<t>It may be appropriate for clients and servers to select different keepalive 
interval values depending on the nature of the network they are on.</t>

<t>A corporate DNS server that knows it is serving only clients on the internal 
network, with no intervening NAT gateways or firewalls, can impose a higher 
keepalive interval, because frequent keepalive traffic is not required.</t>

<t>A public DNS server that is serving primarily residential consumer clients, 
where it is likely there will be a NAT gateway on the path, may impose a lower 
keepalive interval, to generate more frequent keepalive traffic.</t>

<t>A smart client may be adaptive to its environment. A client using
a private IPv4 address <xref target="RFC1918"/> to communicate with a DNS server
at an address outside that IPv4 private address block,
may conclude that there is likely to be a NAT gateway on the path,
and accordingly request a lower keepalive interval.</t>

<t>For environments where there is a NAT gateway or firewalls on the path, it is
RECOMMENDED that clients request, and servers grant, a keepalive interval of 15
minutes. In other environments it is RECOMMENDED that clients request, and 
servers grant, a keepalive interval of 60 minutes.</t>

<t>Note that the lower the keepalive interval value, the higher the load on client
and server. For example, an keepalive interval value of 100ms would result in a
continuous stream of at least ten messages per second, in both directions,
to keep the DSO session alive. And, in this extreme example, a single packet loss and
retransmission over a long path could introduce a momentary pause in the stream of messages,
long enough to cause the server to overzealously abort the connection.</t>

<t>Because of this concern, the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with an keepalive interval value less than ten seconds.
If a client receives an Keepalive message specifying an keepalive interval value
less than ten seconds this is an error and the client MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="server-initiated-termination-on-error" title="Server-Initiated Termination on Error">

<t>After sending an error response to a client, the server MAY close the DSO session,
or may allow the DSO session to remain open. For error conditions
that only affect the single operation in question, the server SHOULD return an
error response to the client and leave the DSO session open for further operations.
For error conditions that are likely to make all operations unsuccessful in the
immediate future, the server SHOULD return an error response to the client and 
then close the DSO session by sending a Retry Delay request message, as described in 
<xref target="delay"/>.</t>

</section>
<section anchor="error" title="Client Behaviour in Receiving an Error">

<t>Upon receiving an error response from the server, a client SHOULD NOT
automatically close the DSO session. An error relating to one particular operation
on a DSO session does not necessarily imply that all other operations on that
DSO session have also failed, or that future operations will fail. The client
should assume that the server will make its own decision about whether or not to
close the DSO session, based on the server’s determination of whether the error
condition pertains to this particular operation, or would also apply to any
subsequent operations. If the server does not close the DSO session then the client
SHOULD continue to use that DSO session for subsequent operations.</t>

</section>
<section anchor="server-initiated-termination-on-overload" title="Server-Initiated Termination on Overload">

<t>A server MUST NOT close a DSO session with a client,
except in certain exceptional circumstances, as outlined below.
In normal operation, closing a DSO session is the client’s responsibility.
The client makes the determination of when to close a DSO
session based on an evaluation of both its own needs,
and the inactivity timeout value dictated by the server.</t>

<t>Situations where a server may terminate a DSO session include:</t>

<t><list style="symbols">
  <t>The server is undergoing reconfiguration or maintenance procedures
that require clients to be disconnected.</t>
  <t>The server application software or underlying operating system
is shutting down or restarting.</t>
  <t>The server application software terminates unexpectedly
(perhaps due to a bug that makes it crash).</t>
  <t>The client fails to meets its obligation to generate keepalive
traffic or close an inactive session within twice the respective
time intervals dictated by the server (see <xref target="sessiontimeouts"/>).</t>
  <t>The client sends a grossly invalid or malformed request that is
indicative of a seriously defective client implementation (see <xref target="error"/>).</t>
  <t>The server is over capacity and needs to shed some load (see <xref target="retry"/>).</t>
</list></t>

<t>When a server has to close a DSO session with a client
(because of exceptional circumstances such as those outlined above)
the server SHOULD, whenever possible, send a Retry Delay Operation TLV
(see below) informing the client of the reason for the DSO session
being closed, and allow the client five seconds to receive it
before the server resorts to forcibly aborting the connection.</t>

</section>
<section anchor="retry" title="Retry Delay Operation TLV">

<t>There may be rare cases where a server is overloaded and wishes to shed load.
If a server is low on resources it MAY simply terminate a client connection with 
a TCP RST (or equivalent for other protocols).
However, the likely behavior of the client may be simply to to treat this as a
network failure and connect
immediately, putting more burden on the server.</t>

<t>Therefore to avoid this reconnection implosion, a server SHOULD instead choose 
to shed client load by sending a Retry Delay request message, with an RCODE of 
SERVFAIL, to inform the client of the overload situation. After sending a Retry 
Delay request message, the server MUST NOT send any further messages on that 
DSO session.</t>

<t>After sending the Retry Delay request the server SHOULD allow the
client five seconds to close the connection, and if the client has not
closed the connection after five seconds then the server SHOULD abort
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>Upon receipt of a Retry Delay request from the server, the client MUST
make note of the reconnect delay for this server, and then immediately
close the connection. This is to place the burden of TCP’s TIME-WAIT state on 
the client.</t>

<t>A Retry Delay request message MUST NOT be initiated by a client.
If a server receives a Retry Delay request message this is an error
and the server MUST immediately terminate the connection with a TCP RST
(or equivalent for other protocols).</t>

<section anchor="outstanding-operations" title="Outstanding Operations">

<t>At the moment a server chooses to initiate a Retry Delay request message
there may be DNS requests already in flight from client to server on this 
DSO session, which will arrive at the server after its Retry Delay request message 
has been sent.
The server MUST silently ignore such incoming requests, and MUST NOT generate
any response messages for them. When the Retry Delay request message from the
server arrives at the client, the client will determine that any DNS requests
it previously sent on this DSO session, that have not yet received a response, now 
will certainly not be receiving any response. Such requests should be considered
failed, and should be retried at a later time, as appropriate.</t>

<t>In the case where some, but not all, of the existing operations on a DSO session 
have become invalid (perhaps because the server has been reconfigured and is no 
longer authoritative for some of the names),
but the server is terminating all DSO sessions en masse with a REFUSED (5) RCODE,
the RECONNECT DELAY MAY be zero, indicating that the clients SHOULD immediately
attempt to re-establish operations.
It is likely that some of the attempts will be successful and some will not.</t>

<t>In the case where a server is terminating a large number of DSO sessions at once
(e.g., if the system is restarting) and the server doesn’t want to be inundated 
with a flood of simultaneous retries, it SHOULD send different RECONNECT delay 
values to each client.
These adjustments MAY be selected randomly, pseudorandomly, or deterministically
(e.g., incrementing the time value by one tenth of a second for each successive
client, yielding a post-restart reconnection rate of ten clients per second).</t>

</section>
<section anchor="client-reconnection" title="Client Reconnection">

<t>After a DSO session is closed by the server, the client SHOULD try to reconnect,
to that server, or to another suitable server, if more than one is available.
If reconnecting to the same server, the client MUST respect the indicated delay
before attempting to reconnect.</t>

<t>If a particular server does not want a client to reconnect (it is being
de-commissioned), it SHOULD set the retry delay to the maximum value (which is
approximately 497 days). If the server will only be out of service for a maintenance
period, it should use a value closer to the expected maintenance window and
not default to a very large delay value or clients may not attempt to reconnect
after it resumes service.</t>

</section>
</section>
</section>
<section anchor="sharing" title="Connection Sharing">

<t>As previously specified for DNS over TCP <xref target="RFC7766"/>,
to mitigate the risk of unintentional server overload, DNS clients
MUST take care to minimize the number of concurrent TCP connections
made to any individual server.  It is RECOMMENDED that for any given
client/server interaction there SHOULD be no more than one connection
for regular queries, one for zone transfers, and one for each
protocol that is being used on top of TCP (for example, if the
resolver was using TLS).
However, it is noted that certain primary/secondary configurations
with many busy zones might need to use more than one TCP
connection for zone transfers for operational reasons
(for example, to support concurrent transfers of multiple zones).</t>

<t>A single server may support multiple services, including DNS Updates 
<xref target="RFC2136"/>, DNS Push Notifications <xref target="I-D.ietf-dnssd-push"/>,
and other services, for one or more DNS zones.
When a client discovers that the target server for several different operations
is the same target hostname and port, the client SHOULD use a single
shared DSO session for all those operations.
A client SHOULD NOT open multiple connections to the same target host and port
just because the names being operated on are different or
happen to fall within different zones.
This is to reduce unnecessary connection load on the DNS server.</t>

<t>However, server implementers and operators should be aware that connection
sharing may not be possible in all cases.
A single client device may be home to multiple independent client software
instances that don’t coordinate with each other.
Similarly, multiple independent client devices behind the same NAT gateway
will also typically appear to the DNS server as different source ports on
the same client IP address.
Because of these constraints, a DNS server MUST be prepared to accept
multiple connections from different source ports on the same client IP address.</t>

</section>
<section anchor="base-tlvs-for-dns-stateful-operations" title="Base TLVs for DNS Stateful Operations">

<section anchor="delay" title="Retry Delay TLV">

<t>The Retry Delay TLV (DSO-TYPE=0) can be used as an Operation TLV or as
a Modifier TLV.</t>

<t>The TYPE-DEPENDENT DATA for the the Retry Delay TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     RETRY DELAY (32 bits)                     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='RETRY DELAY:'>
  a time value, specified as a 32-bit word in network order in units of 
milliseconds, within which the client MUST NOT retry this operation, or retry 
connecting to this server.</t>
</list></t>

<t>The RECOMMENDED value is 10 seconds.</t>

<section anchor="use-as-an-operation-tlv" title="Use as an Operation TLV">

<t>When sent in a DSO request message, from server to client, the 
Retry Delay TLV (0) is considered an Operation TLV. It is used by a server 
to request that a client close the DSO session and underlying connection, and 
not to reconnect for the indicated time interval.</t>

<t>In this case it applies to the DSO session as a whole, and the client MUST close the 
DSO session, as described in <xref target="retry"/>. The RCODE in the message header 
MUST indicate the reason for the termination:</t>

<t><list style="symbols">
  <t>NOERROR indicates a routine shutdown.</t>
  <t>SERVFAIL indicates that the server is overloaded due to resource exhaustion.</t>
  <t>REFUSED indicates that the server has been reconfigured and is no longer able 
to perform one or more of the functions 
currently being performed on this DSO session (for example, a DNS Push Notification 
server could be reconfigured such that is is no longer accepting DNS Push 
Notification requests for one or more of the currently subscribed names).</t>
</list></t>

<t>This document specifies only these three RCODE values for Retry Delay request.
Servers sending Retry Delay requests SHOULD use one of these three values.
However, future circumstances may create situations where other RCODE values
are appropriate in Retry Delay requests, so clients MUST be prepared
to accept Retry Delay requests with any RCODE value.</t>

<t>An acknowledgement is not desired for a Retry Delay Operation TLV and the TLV
Acknowledgement bit MUST be cleared in the request.</t>

</section>
<section anchor="use-as-a-modifier-tlv" title="Use as a Modifier TLV">

<t>When appended to a DSO response message for some client request,
the Retry Delay TLV (0) is considered a Modifier TLV.
The indicated time interval during which the client SHOULD NOT retry
applies only to the failed operation, not to the DSO session as a whole.</t>

<t>In the case of a client request that returns a nonzero RCODE value, the server 
MAY append a Retry Delay TLV (0) to the response, indicating the time interval
during which the client SHOULD NOT attempt this operation again.</t>

</section>
</section>
<section anchor="keepalive" title="Keepalive Operation TLV">

<t>The Keepalive Operation TLV (DSO-TYPE=1) performs two functions: to reset the
keepalive timer for the DSO session and to establish the values for the Session Timeouts.</t>

<t>The Keepalive Operation TLV resets only the keepalive timer, not the inactivity timer.
The reason for this is that periodic Keepalive Operation TLVs are sent for the
sole purpose of keeping a DSO session alive, because that DSO session has current
or recent non-maintenance activity that warrants keeping the DSO session alive.
If sending keepalive traffic itself were to reset the inactivity timer, then 
that would create a circular livelock where keepalive traffic would be sent 
indefinitely to keep a DSO session alive, where the only activity on that DSO 
session would be the keepalive traffic keeping the DSO session alive so that further 
keepalive traffic can be sent.</t>

<t>Sending keepalive traffic is considered a maintenance activity
that is performed in service of other client activities.
Sending keepalive traffic itself is not considered a client activity.
For a DSO session to be considered active, it must be carrying something more than just keepalive traffic.
This is why merely sending a Keepalive Operation TLV does not reset the inactivity timer.</t>

<t>When sent by a client, the Keepalive Operation TLV MUST have the Acknowledgement bit set.
It resets a DSO session’s keepalive timer, and at the same time requests what the
Session Timeout values should be from this point forward in the DSO session.
If a server receives a Keepalive Operation TLV without the Acknowledgement bit set
then this is a fatal error and the server MUST immediately terminate
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>Once a DSO session is in progress (see <xref target="details"/>) the Keepalive TLV also MAY be initiated by a server.
When sent by a server, the Keepalive Operation TLV MUST NOT have the Acknowledgement bit set.
It resets a DSO session’s keepalive timer, and unilaterally informs the client of
the new Session Timeout values to use from this point forward in this DSO session.
No client response to this unilateral declaration is required.
If a client receives a Keepalive Operation TLV with the Acknowledgement bit set
then this is a fatal error and the client MUST immediately terminate
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>It is not required that the Keepalive TLV be used in every DSO session.
While many DNS Stateful operations
will be used in conjunction with a long-lived session state,
not all DNS Stateful operations require long-lived session state,
and in some cases the default 15-second value for both the inactivity timeout
and keepalive interval may be perfectly appropriate. However, it can be noted 
that for clients that implement only the TLVs defined in this document it is
the only way for a client to initiate a DSO session.</t>

<t>The TYPE-DEPENDENT DATA for the the Keepalive TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 INACTIVITY TIMEOUT (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 KEEPALIVE INTERVAL (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='INACTIVITY TIMEOUT:'>
  the inactivity timeout for the current DSO session, specified as a
32-bit word in network (big endian) order in units of milliseconds.
This is the timeout at which the client MUST close an inactive DSO session.
If the client does not gracefully close an inactive DSO session,
then after twice this interval the server will forcibly terminate
the connection with a TCP RST (or equivalent for other protocols).</t>
  <t hangText='KEEPALIVE INTERVAL:'>
  the keepalive interval for the current DSO session, specified as a
32-bit word in network (big endian) order in units of milliseconds.
This is the interval at which a client MUST generate keepalive
traffic to maintain connection state.
If the client does not generate the necessary keepalive traffic,
then after twice this interval the server will forcibly terminate
the connection with a TCP RST (or equivalent for other protocols).</t>
</list></t>

<t>In a client-initiated DSO Keepalive message,
the Session Timeouts contain the client’s requested values.
In a server response to a client-initiated message, the Session Timeouts contain 
the server’s chosen values, which the client MUST respect.
This is modeled after the DHCP protocol, where the client
requests a certain lease lifetime using DHCP option 51 <xref target="RFC2132"/>,
but the server is the ultimate authority
for deciding what lease lifetime is actually granted.</t>

<t>In a server-initiated DSO Keepalive message, the Session Timeouts
unilaterally inform the client of the new values from this point
forward in this DSO session. The client MUST NOT generate a
response to the server-initiated DSO Keepalive message.</t>

<t>When a client is sending its second and subsequent Keepalive DSO 
requests to the server, the client SHOULD continue to request its preferred 
values each time. This allows flexibility, so that if conditions change during 
the lifetime of a DSO session, the server can adapt its responses to better fit 
the client’s needs.</t>

<section anchor="client-handling-of-received-session-timeout-values" title="Client handling of received Session Timeout values">

<t>When a client receives a response to its client-initiated DSO Keepalive message,
or receives a server-initiated DSO Keepalive message, the client has then 
received Session Timeout values dictated by the server. The two timeout values 
contained in the DSO Keepalive TLV from the server may each be higher, lower, or 
the same as the respective Session Timeout values the client previously had for 
this DSO session.</t>

<t>In the case of the keepalive timer, the handling of the received value is 
straightforward. The act of receiving the message containing the DSO Keepalive 
TLV itself resets the keepalive timer and updates the keepalive interval for the 
DSO session. The new keepalive interval indicates the 
maximum time that may elapse before another message must be sent
or received on this DSO session, if the DSO session is to remain alive.</t>

<t>In the case of the inactivity timeout, the handling of the received value 
is a little more subtle, though the meaning of the inactivity 
timeout is unchanged – it still indicates the maximum permissible time allowed 
without activity on a DSO session.
The act of receiving the message containing the DSO Keepalive TLV does not
itself reset the inactivity timer. The time elapsed since the last useful
activity on this DSO session is unaffected by exchange of DSO Keepalive messages.
The act of receiving the message containing the DSO Keepalive TLV does update 
the timeout associated with the running inactivity timer; that
becomes the new maximum permissible time without activity on a DSO session.</t>

<t><list style="symbols">
  <t>If the current inactivity timer value is not greater than the new inactivity timeout, 
then the DSO session may remain open for now. When the inactivity timer value 
exceeds the new inactivity timeout, the client MUST then close the DSO session,
as described above.</t>
  <t>If the current inactivity timer value is already greater than the new inactivity 
timeout, then this DSO session has already been inactive
for longer than the server permits, and the client MUST immediately close this DSO session.</t>
  <t>If the current inactivity timer value is more than twice the new inactivity timeout, 
then this DSO session is eligible to be
forcibly terminated by the server and and the client MUST immediately close this 
DSO session. However if a server abruptly reduces the
inactivity timeout in this way the server SHOULD give the client a grace period
of one quarter of the new inactivity timeout, to give the client time to close
the connection gracefully before the server resorts to terminating it forcibly.</t>
</list></t>

</section>
<section anchor="relation-to-edns0-tcp-keepalive-option" title="Relation to EDNS(0) TCP Keepalive Option">

<t>The inactivity timeout value in the Keepalive TLV (DSO-TYPE=1) has similar
intent to the EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>.
A client/server pair that supports DSO MUST NOT use the
EDNS(0) TCP KeepAlive option within any message after a DSO 
session has been established.
Once a DSO session has been established, if either
client or server receives a DNS message over the DSO session that contains an
EDNS(0) TCP Keepalive option, this is an error and the receiver of the
EDNS(0) TCP Keepalive option MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="padding" title="Encryption Padding TLV">

<t>The Encryption Padding TLV (DSO-TYPE=2) can only be used as a Modifier TLV.
It is only applicable when the DSO Transport layer uses encryption
such as TLS.</t>

<t>The TYPE-DEPENDENT DATA for the the Padding TLV is optional and is a
variable length field containing non-specified values. A DATA LENGTH
of 0 essentially provides for 4 octets of padding (the minimum amount).</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   /                                                               /
   /                   VARIABLE NUMBER OF OCTETS                   /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t>As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
the PADDING octets SHOULD be set to 0x00.  Other values MAY be used,
for example, in cases where there is a concern that the padded
message could be subject to compression before encryption.
PADDING octets of any value MUST be accepted in the messages received.</t>

<t>The Encryption Padding TLV may be included in either a DSO request, response, or both.
As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
if a request is received with a Encryption Padding TLV,
then the response MUST also include an Encryption Padding TLV.</t>

<t>[Need discussion here of whether the Ack bit is set in requests, responses, or both –SC]</t>

<t>The length of padding is intentionally not specified in this document and
is a function of current best practices with respect to the type and length
of data in the preceding TLVs <xref target="I-D.ietf-dprive-padding-policy"/>.</t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="dso-opcode-registration" title="DSO OPCODE Registration">

<t>IANA are directed to assign a value (tentatively 6)
in the DNS OPCODEs Registry for the DSO OPCODE.</t>

</section>
<section anchor="dso-rcode-registration" title="DSO RCODE Registration">

<t>IANA are directed to assign a value (tentatively 11)
in the DNS RCODE Registry for the DSONOTIMP error code.</t>

</section>
<section anchor="dso-type-codes-registry" title="DSO Type Codes Registry">

<t>IANA are directed to create the 15-bit DSO Type Codes
Registry, with initial values as follows:</t>

<texttable>
      <ttcol align='right'>Type</ttcol>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Status</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>0x0000</c>
      <c>RetryDelay</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0001</c>
      <c>KeepAlive</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0002</c>
      <c>Encryption Padding</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0003 - 0x003F</c>
      <c>Unassigned, reserved for DSO session management TLVs</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x0040 - 0x77FF</c>
      <c>Unassigned</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x7800 - 0x7BFF</c>
      <c>Reserved for local / experimental use</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x7C00 - 0x7FFF</c>
      <c>Reserved for future expansion</c>
      <c>&#160;</c>
      <c>&#160;</c>
</texttable>

<t>Registration of additional DSO Type Codes requires publication
of an appropriate IETF “Standards Action” or “IESG Approval” document <xref target="RFC5226"/>.</t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>If this mechanism is to be used with DNS over TLS, then these messages
are subject to the same constraints as any other DNS over TLS messages
and MUST NOT be sent in the clear before the TLS session is established.</t>

<t>The data field of the “Encryption Padding” TLV could be used as a covert channel.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to
Tim Chown,
Ralph Droms,
Jan Komissar,
Manju Shankar Rao,
and Ted Lemon
for their helpful contributions to this document.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC1035;
&RFC7766;
&RFC6891;
&RFC7828;
&RFC2119;
&RFC7830;
&RFC1034;
&RFC2136;
&RFC1918;
&RFC2132;
&RFC5226;


    </references>

    <references title='Informative References'>

<reference anchor="NagleDA" target="http://www.stuartcheshire.org/papers/nagledelayedack/">
  <front>
    <title>TCP Performance problems caused by interaction between Nagle's Algorithm and Delayed ACK</title>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization></organization>
    </author>
    <date year="2005" month="May" day="20"/>
  </front>
</reference>
&RFC7858;
&RFC6763;
&I-D.ietf-dnssd-push;
&RFC0768;
&I-D.ietf-dprive-padding-policy;


    </references>



  </back>

<!-- ##markdown-source:
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
yXv3fwEsCngkwPgAAA==

-->

</rfc>

