<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.1.1 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC7766 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7766.xml">
<!ENTITY RFC6891 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6891.xml">
<!ENTITY RFC7828 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7828.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC7830 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7830.xml">
<!ENTITY RFC1034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC2136 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2136.xml">
<!ENTITY RFC2132 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2132.xml">
<!ENTITY RFC1918 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1918.xml">
<!ENTITY RFC5226 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5226.xml">
<!ENTITY RFC7858 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7858.xml">
<!ENTITY I-D.ietf-dnssd-push SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dnssd-push.xml">
]>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-dnsop-session-signal-03" category="std" updates="RFC 7766">

  <front>
    <title>DNS Session Signaling</title>

    <author initials="R." surname="Bellis" fullname="Ray Bellis">
      <organization abbrev="ISC">Internet Systems Consortium, Inc.</organization>
      <address>
        <postal>
          <street>950 Charter Street</street>
          <city>Redwood City</city>
          <code>CA 94063</code>
          <country>USA</country>
        </postal>
        <phone>+1 650 423 1200</phone>
        <email>ray@isc.org</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>1 Infinite Loop</street>
          <city>Cupertino</city>
          <code>CA 95014</code>
          <country>USA</country>
        </postal>
        <phone>+1 408 974 3207</phone>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="J." surname="Dickinson" fullname="John Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>jad@sinodun.com</email>
      </address>
    </author>
    <author initials="S." surname="Dickinson" fullname="Sara Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>sara@sinodun.com</email>
      </address>
    </author>
    <author initials="A." surname="Mankin" fullname="Allison Mankin">
      <organization>Salesforce</organization>
      <address>
        <email>allison.mankin@gmail.com</email>
      </address>
    </author>
    <author initials="T." surname="Pusateri" fullname="Tom Pusateri">
      <organization>Unaffiliated</organization>
      <address>
        <phone>+1 843 473 7394</phone>
        <email>pusateri@bangj.com</email>
      </address>
    </author>

    <date year="2017" month="April" day="18"/>

    <area>Internet</area>
    <workgroup>DNSOP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document defines a new Session Signaling OPCODE used to communicate 
persistent “per-session” operations, expressed using type-length-value (TLV) 
syntax, and defines an initial set of TLVs used to manage session timeouts and termination. This mechanism is intended to reduce the overhead of existing “per-packet” signaling mechanisms with “per-message” semantics as well as defining new signaling operations not defined in EDNS(0).</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The use of transports for DNS other than UDP is being increasingly specified,
for example, DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> and DNS over TLS <xref target="RFC7858"/>.
Such transports can offer persistent, long-lived sessions and therefore when
using them for transporting DNS messages it is of benefit to have a mechanism
that can establish parameters associated with those sessions, such as timeouts.
In such situations it is also advantageous to support server initiated messages.</t>

<t>The existing EDNS(0) Extension Mechanism for DNS <xref target="RFC6891"/> is explicitly
defined to only have “per-message” semantics. Whilst EDNS(0) has been used to
signal at least one session related parameter (the EDNS(0) TCP Keepalive option
<xref target="RFC7828"/>) the result is less than optimal due to the restrictions
imposed by the EDNS(0) semantics and the lack of server-initiated signalling.</t>

<t>This document defines a new Session Signaling OPCODE used to carry persistent
“per-session” operations, expressed using type-length-value (TLV) syntax, and
defines an initial set of TLVs used to manage session timeouts and termination.</t>

<t>With EDNS(0), multiple options may be packed into a single OPT pseudo-RR,
and there is no generalized mechanism for a client to be able to tell
whether a server has processed or otherwise acted upon each individual
option within the combined OPT RR.
The specifications for each individual option need to define how each
different option is to be acknowledged, if necessary.</t>

<t>With Session Signaling, in contrast, there is no compelling motivation
to pack multiple operations into a single message for efficiency reasons.
Each Session Signaling operation is communicated in its own separate
DNS message, and the transport protocol can take care of packing
separate DNS messages into a single IP packet if appropriate.
For example, TCP can pack multiple small DNS messages into a single TCP segment.
The RCODE in each response message indicates the success or failure of the operation in question.</t>

<t>It should be noted that the message format for Session Signaling
operations (see <xref target="format"/>) differs from the traditional DNS packet
format used for standard queries and responses.
The standard twelve-octet header is used, but the four count fields
(QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) are set to zero and the
corresponding sections are not present.
The actual data pertaining to Session Signaling operations is
appended to the end of the DNS message header.
When displayed using today’s packet analyser tools that have not been updated
to recognize the DNS Session Signaling format, this will result
in the Session Signaling data being displayed as unknown additional
data after the end of the DNS message. It is likely that future updates
to these tools will add the ability to recognize, decode, and display the
Session Signaling data.</t>

</section>
<section anchor="terminology" title="Terminology">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and
“OPTIONAL” in this document are to be interpreted as described in
“Key words for use in RFCs to Indicate Requirement Levels” <xref target="RFC2119"/>.</t>

<t>The term “connection” means a bidirectional stream of reliable,
in-order messages, such as provided by using
DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> or DNS over TLS <xref target="RFC7858"/>.</t>

<t>(QUESTION: Should we use a different term here instead of stream since QUIC 
has ‘streams’?)</t>

<t>The term “session” in the context of this document means the exchange of
DNS messages over a connection where:</t>

<t><list style="symbols">
  <t>The connection between client and server is persistent and relatively
long-lived (i.e., minutes or hours, rather than seconds).</t>
  <t>Either end of the connection may initiate messages to the other.</t>
</list></t>

<t>The term “server” means the software with a listening socket, awaiting
incoming connection requests.</t>

<t>The term “client” means the software which initiates a connection
to the server’s listening socket.</t>

<t>The terms “initiator” and “responder” correspond respectively to the
initial sender and subsequent receiver of a Session Signaling request message,
regardless of which was the “client” and “server” in the usual DNS sense.</t>

<t>The term “sender” may apply to either an initiator
(when sending a Session Signaling request message)
or a responder (when sending a Session Signaling response message).</t>

<t>Likewise, the term “receiver” may apply to either a responder
(when receiving a Session Signaling request message)
or an initiator (when receiving a Session Signaling response message).</t>

<t>Session Signaling operations are expressed using type-length-value (TLV) syntax.</t>

<t>“SSOP” is used to mean Session Signalling Operation.</t>

<t>(QUESTION: Since the same code is used in Operation and Modifier TLVs should
we choose a different acronym e.g. “SS”)</t>

<t>(QUESTION: RFC7766 includes a definition of ‘idle timeout’ which is updated by 
this document. I think we should include new definitions of a ‘Session 
Signalling session” and “Session Signalling idle timeout’?)</t>

<t>Two timers are defined in this document: an idle timeout and a keepalive interval. The term “Session Timers” is used to refer to this pair of values.</t>

</section>
<section anchor="discussion" title="Discussion">

<t>TODO: Explicitly discuss how this updates RFC7766.</t>

<t>TODO: Discuss that this draft introduces 2 session timers and their functions. 
Discuss that this draft introduces “Keepalive traffic” this is special because
it does not reset the idle timeout. Possibly move some of the text from 
“Session Lifestyle and Timers” here.</t>

<t>TODO: Discuss DNS transactions (query/responses) compared to DNS operations 
(e.g. DNS Push subscription) since DNS operations are not described in RFC7766 
and change the meaning of idle time defined there. Perhaps we should add “DNS
operations” to the terminology?</t>

<t>TODO: Reference that DNS Push defines additional Operational TLVs. Future 
specifications may define additional Modifier TLVs.</t>

</section>
<section anchor="details" title="Protocol Details">

<t>Session Signaling messages MUST only be carried in protocols and in
environments where a session may be established according to the definition above.
Standard DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/>, and DNS over TLS <xref target="RFC7858"/>
are suitable protocols.
DNS over plain UDP is not appropriate since it fails on the requirement for
in-order message delivery, and, in the presence of NAT gateways and firewalls
with short UDP timeouts, it fails to provide a persistent bi-directional
communication channel unless an excessive amount of keepalive traffic is used.</t>

<t>(QUESTION: Given there are now two DNS-over-QUIC drafts should we include a
statement here about the applicability to QUIC?)</t>

<t>Session Signaling messages relate only to the specific session in which
they are being carried.  Where an application-layer middle box (e.g., a DNS 
proxy, forwarder, or session multiplexer) is in the path the middle box
MUST NOT blindly forward the message in either direction.  This does
not preclude the use of these messages in the presence of an IP-layer middle box
such as a NAT that rewrites IP-layer and/or transport-layer headers,
but otherwise preserves the effect of a single session.</t>

<t>TODO: State clearly what a proxy should do when in the path.</t>

<t>A client MAY attempt to initiate Session Signaling messages at any time
on a connection; receiving a NOTIMP response in reply indicates that the
server does not implement Session Signaling, and the client SHOULD NOT
issue further Session Signaling messages on that connection.</t>

<t>A server SHOULD NOT initiate Session Signaling messages until a
client-initiated Session Signaling message is received first,
unless in an environment where it is known in advance by other
means that the client supports Session Signaling.
This requirement is to ensure that the clients that do not support
Session Signaling do not receive unsolicited inbound Session Signaling
messages that they would not know how to handle.</t>

<t>On a session between a client and server that support Session Signaling,
once the client has sent at least one Session Signaling message (or it is
known in advance by other means that the client supports Session Signaling)
either end may unilaterally send Session Signaling messages at any time,
and therefore either client or server may be the initiator of a message.</t>

<t>From this point on it is considered that a “Session Signalling session”” is in 
progress. Clients and servers should behave as described in this specification
with regard to idle timeouts and connection close, not as prescribed in <xref target="RFC7766"/>.</t>

<section anchor="format" title="Message Format">

<t>A Session Signaling message begins with
the standard twelve-octet DNS message header <xref target="RFC1035"/>
with the OPCODE field set to the Session Signaling OPCODE (tentatively 6).
However, unlike standard DNS messages, the question section, answer section,
authority records section and additional records sections are not present.
The corresponding count fields (QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) MUST be
set to zero on transmission.</t>

<t>If a Session Signaling message is received where any of the count fields are
not zero, then a FORMERR MUST be returned.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                          MESSAGE ID                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |QR |    OPCODE     |            Z              |     RCODE     |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     QDCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ANCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     NSCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ARCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                     Session Signaling Data                    /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<section anchor="header" title="Header">

<t>In a request the MESSAGE ID field MUST be set to a unique value, that the
initiator is not currently using for any other active operation on this 
connection.
For the purposes here, a MESSAGE ID is in use in this session if the
initiator has used it in a request for which it has not yet received a
response, or if the client has used it for a subscription which it has
not yet cancelled <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>In a response the MESSAGE ID field MUST contain a copy of the value of the
MESSAGE ID field in the request being responded to.</t>

<t>In a request the DNS Header QR bit MUST be zero (QR=0).
If the QR bit is not zero the message is not a request.</t>

<t>In a response the DNS Header QR bit MUST be one (QR=1).
If the QR bit is not one the message is not a response.</t>

<t>The DNS Header OPCODE field holds the Session Signaling OPCODE value (tentatively 6).</t>

<t>The Z bits are currently unused, and in both requests and responses the
Z bits MUST be set to zero (0) on transmission and MUST be silently ignored
on reception, unless a future document specifies otherwise.</t>

<t>In a request message (QR=0) the RCODE is generally set to zero on transmission,
and silently ignored on reception, except where specified otherwise
(for example, the Retry Delay operation, where the RCODE indicates the reason 
for termination).</t>

<t>The RCODE value in a response may be one of the following values:</t>

<texttable>
      <ttcol align='right'>Code</ttcol>
      <ttcol align='left'>Mnemonic</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>0</c>
      <c>NOERROR</c>
      <c>Operation processed successfully</c>
      <c>1</c>
      <c>FORMERR</c>
      <c>Format error</c>
      <c>4</c>
      <c>NOTIMP</c>
      <c>Session Signaling not supported</c>
      <c>5</c>
      <c>REFUSED</c>
      <c>Operation declined for policy reasons</c>
      <c>11</c>
      <c>SSOPNOTIMP</c>
      <c>Session Signaling operation Type Code not supported</c>
</texttable>

</section>
<section anchor="session-signaling-data" title="Session Signaling Data">

<t>The standard twelve-octet DNS message header is followed by the Session 
Signaling Data.</t>

<t>The first TLV in a Session Signaling request message is the Operation 
TLV. Any subsequent TLVs after this initial Operation TLV are Modifier TLVs.</t>

<t>Depending on the operation a Session Signaling response can contain:</t>

<t><list style="symbols">
  <t>No TLVs</t>
  <t>Only an Operation TLV</t>
  <t>An Operation TLV followed by one or more Modifier TLVs</t>
  <t>Only Modifier TLVs</t>
</list></t>

<t>(QUESTION: Should we include a count of TLVs now that there are multiple ones?)</t>

<section anchor="operation-tlvs" title="Operation TLVs">

<t>A “Session Signaling Operation TLV” specifies the operation to be performed.</t>

<t>A Session Signaling message MUST contain at most one Operation TLV.</t>

<t>In all cases a Session Signaling request message MUST contain exactly one 
Operation TLV, indicating the operation to be performed.</t>

<t>Depending on the operation, a Session Signaling response message MAY contain no 
Operation TLV, because it is simply a response to a previous request message,
and the message ID in the header is sufficient to identify the request in 
question. Or it may contain a single corresponding response Operation TLV, with 
the same SSOP-TYPE as in the request message. The specification for each Session 
Signaling operation type determines whether a response for that operation type 
is required to carry the Operation TLV.</t>

<t>If a Session Signaling response is received for an operation which requires
that the response carry an Operation TLV, and the required Operation TLV is not
the first Session Signaling TLV in the response message, then this is a fatal 
error and the recipient of the defective response message MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
<section anchor="modifier-tlvs" title="Modifier TLVs">

<t>A “Session Signaling Modifier TLV” specifies additional parameters
relating to the operation. Immediately following the Operation TLV, if present,
a Session Signaling message MAY contain one or more Modifier TLVs.</t>

</section>
<section anchor="unrecognised-tlvs" title="Unrecognised TLVs">

<t>If a Session Signaling request is received containing an unrecognized
Operation TLV, the receiver MUST send a response with matching
MESSAGE ID, and RCODE SSOPNOTIMP (tentatively 11). The response MUST NOT contain 
an Operation TLV.</t>

<t>If a Session Signaling message (request or response) is received
containing one or more unrecognized Modifier TLVs, the unrecognized
Modifier TLVs MUST be silently ignored, and the remainder of the message
is interpreted and handled as if the unrecognized parts were not present.</t>

</section>
</section>
<section anchor="edns0-and-tsig" title="EDNS(0) and TSIG">

<t>Since the ARCOUNT field MUST be zero, a Session Signaling message
MUST NOT contain an EDNS(0) option in the additional records section.
If functionality provided by current or future EDNS(0) options is desired
for Session Signaling messages, a Session Signaling Operation TLV or
Modifier TLV needs to be defined to carry the necessary information.</t>

<t>For example, the EDNS(0) Padding Option <xref target="RFC7830"/> used for security purposes
is not permitted in a Session Signaling message,
so if message padding is desired for Session Signaling messages,
a Session Signaling Modifier TLV needs to be defined to perform this function.</t>

<t>Similarly, a Session Signaling message MUST NOT contain a TSIG record.
A TSIG record in a conventional DNS message is added as the last record
in the additional records section, and carries a signature computed over
the preceding message content. Since Session Signaling data appears
after the additional records section, it would not be included in the
signature calculation. 
If use of signatures with Session Signaling messages becomes necessary in the 
future, an explicit Session Signaling Modifier TLV needs to be defined to 
perform this function.</t>

<t>Note however that, while Session Signaling <spanx style="emph">messages</spanx> cannot include
EDNS(0) or TSIG records, a Session Signaling <spanx style="emph">session</spanx> is typically used to 
carry a whole series of DNS messages of different kinds, including Session 
Signaling messages, and other DNS message types like Query <xref target="RFC1034"/> 
<xref target="RFC1035"/> and Update <xref target="RFC2136"/>, and those messages can carry EDNS(0) and 
TSIG records.</t>

<t>This specification explicitly prohibits use of the
EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>
in <spanx style="emph">any</spanx> messages sent on a Session Signaling session (because it duplicates
the functionality provided by the Session Signaling Keepalive operation),
but messages may contain other EDNS(0) options as appropriate.</t>

</section>
</section>
<section anchor="tlv-format" title="TLV Format">

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                           SSOP-TYPE                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                          SSOP-LENGTH                          |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                           SSOP-DATA                           /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='SSOP-TYPE:'>
  A 16 bit field in network order giving the type of the current Session
Signaling TLV per the IANA DNS Session Signaling Type Codes Registry.</t>
  <t hangText='SSOP-LENGTH:'>
  A 16 bit field in network order giving the size in octets of
SSOP-DATA.</t>
  <t hangText='SSOP-DATA:'>
  Type-code specific.</t>
</list></t>

<t>Where domain names appear within SSOP-DATA, they MUST NOT be compressed using 
standard DNS name compression.</t>

</section>
<section anchor="message-handling" title="Message Handling">

<t>The initiator MUST set the value of the QR bit in the DNS header to zero
(0), and the responder MUST set it to one (1). Every Session Signaling request 
message (QR=0) MUST elicit a response (QR=1), 
which MUST have the same MESSAGE ID in the DNS message header as in the 
corresponding request. Session Signaling request messages sent by the client 
elicit a response from the server, and Session Signaling request messages sent 
the server elicit a response from the client.</t>

<t>With most TCP implementations, the TCP data acknowledgement (generated because 
data has been received by TCP), the TCP window update (generated because TCP has 
delivered that data to the receiving software) and the DNS Session Signaling 
response (generated by the receiving software itself)
are all combined into a single packet, so in practice the requirement that every
Session Signaling request message MUST elicit a 
Session Signaling response incurs minimal extra cost on the network.
Requiring that every request elicit a corresponding response also avoids
performance problems caused by interaction between
Nagle’s Algorithm and Delayed Ack <xref target="NagleDA"/>.</t>

<t>The namespaces of 16-bit MESSAGE IDs are disjoint in each direction.
For example, it is <spanx style="emph">not</spanx> an error for both client and server to send a request
message with the same ID. In effect, the 16-bit MESSAGE ID combined with the 
identity of the initiator (client or server) serves as a 17-bit unique 
identifier for a particular operation on a session.</t>

<t>As described in <xref target="header"/> An initiator MUST NOT reuse a MESSAGE ID that is 
already in use for an 
outstanding request, unless specified otherwise by the relevant specification 
for the Session Signaling operation in question. At the very least, this means 
that a MESSAGE ID MUST NOT be reused in a particular direction
on a particular session while the initiator is waiting for a response to a 
previous request on that session, unless specified otherwise by the relevant 
specification for the Session Signaling operation in question.
(For a long-lived operation, such as a DNS Push Notification
subscription <xref target="I-D.ietf-dnssd-push"/> the MESSAGE ID for the operation
MUST NOT be reused for a new subscription as long as the
existing subscription using that MESSAGE ID remains active.)</t>

<t>If a client or server receives a response (QR=1) where the MESSAGE ID does not
match any of its outstanding operations, this is a fatal error and it MUST 
immediately terminate the connection with a TCP RST (or equivalent for other 
protocols).</t>

</section>
</section>
<section anchor="keepalive" title="Keepalive Operation TLV">

<t>The Keepalive Operation TLV (SSOP-TYPE=1) performs two functions: to reset the
keepalive timer for the session and to establish the values for the Session Timers.</t>

<t>When sent by a client, it resets a session’s keepalive timer,
and at the same time requests what the Session Timer values should be from this point forward in the session.</t>

<t>Once a Session Signalling session is in progress (see <xref target="details"/>)
the Keepalive TLV also MAY be initiated by a server.
When sent by a server, it resets a session’s keepalive timer,
and unilaterally informs the client of the new Session Timer values to use from 
this point forward in this session.</t>

<t>It is not required that the Keepalive TLV be used in every session.
While many Session Signaling operations
(such as DNS Push Notifications <xref target="I-D.ietf-dnssd-push"/>)
will be used in conjunction with a long-lived session,
not all Session Signaling operations require a long-lived session,
and in some cases the default 15-second value for both idle timeout
and keepalive interval may be perfectly appropriate.</t>

<t>The SSOP-DATA for the the Keepalive TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                    IDLE TIMEOUT (32 bits)                     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 KEEPALIVE INTERVAL (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='IDLE TIMEOUT:'>
  the idle timeout for the current session, specified as a 32
bit word in network (big endian) order in units of milliseconds.
This is the timeout at which the client MUST close an idle session.
If the client does not gracefully close an idle session then after
twice this interval the server will forcibly terminate the connection
with a TCP RST (or equivalent for other protocols).</t>
  <t hangText='KEEPALIVE INTERVAL:'>
  the keepalive interval for the current session, specified as a 32-bit
word, in network (big endian) order, in units of milliseconds.
This is the interval at which a client MUST generate keepalive
traffic to maintain connection state.
If the client does not generate the necessary keepalive traffic then after
twice this interval the server will forcibly terminate the connection
with a TCP RST (or equivalent for other protocols).</t>
</list></t>

<t>(QUESTION: Both these timers are defined in milliseconds. Does this make sense
given that currently the minimum values are 10 seconds?)</t>

<t>In a client-initiated Session Signaling Keepalive message,
the idle timeout and keepalive interval contain the client’s requested values.
In a server response to a client-initiated message, the idle timeout and 
keepalive interval contain the server’s chosen values, which the client MUST 
respect. This is modeled after the DHCP protocol, where the client
requests a certain lease lifetime using DHCP option 51 <xref target="RFC2132"/>,
but the server is the ultimate authority
for deciding what lease lifetime is actually granted.</t>

<t>In a server-initiated Session Signaling Keepalive message, the idle timeout and 
keepalive interval unilaterally inform the client of the new values from this 
point forward in this session. The client MUST generate a response to the 
server-initiated Session Signaling Keepalive message.
The Message ID in the response message MUST match the ID from the 
server-initiated Session Signaling Keepalive message, and the response message 
MUST NOT contain any Operation TLV.</t>

<t>When a client is sending its second and subsequent Keepalive Session Signaling 
request to the server, the client SHOULD continue to request its preferred 
values each time. This allows flexibility, so that if conditions change during 
the lifefime of a session, the server can adapt its responses to better fit the
client’s needs.</t>

<section anchor="relation-to-edns0-tcp-keepalive-option" title="Relation to EDNS(0) TCP Keepalive Option">

<t>The idle timeout value in the Keepalive TLV (SSOP-TYPE=1) has similar intent to 
the EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>.
A client/server pair that supports Session Signaling MUST NOT use the
EDNS(0) TCP KeepAlive option within any message after a Session Signalling 
session has been established.
Once a Session Signalling session has been established, if either
client or server receives a DNS message over the session that contains an
EDNS(0) TCP Keepalive option, this is an error and the receiver of the
EDNS(0) TCP Keepalive option MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="delay" title="Retry Delay TLV">

<t>The Retry Delay TLV (SSOP-TYPE=0) can be used as an Operation TLV or as
a Modifier TLV.</t>

<t>The SSOP-DATA for the the Retry Delay TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     RETRY DELAY (32 bits)                     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='RETRY DELAY:'>
  a time value, specified as a 32 bit word in network order in units of 
milliseconds, within which the client MUST NOT retry this operation, or retry 
connecting to this server.</t>
</list></t>

<t>The RECOMMENDED value is 10 seconds.</t>

<section anchor="use-as-an-operational-tlv" title="Use as an Operational TLV">

<t>When sent in a Session Signaling request message, from server to client, the 
Retry Delay TLV (0) is considered an Operation TLV. It is used by a server 
to request that a client close the session, and not to reconnect for the 
indicated time interval.</t>

<t>In this case it applies to the session as a whole, and the client MUST close the 
session, as described in section <xref target="retry"/>. The RCODE in the message header 
MUST indicate the reason for the termination:</t>

<t><list style="symbols">
  <t>NOERROR indicates a routine shutdown.</t>
  <t>SERVFAIL indicates that the server is overloaded due to resource exhaustion.</t>
  <t>REFUSED indicates that the server has been reconfigured and is no longer able 
to perform one or more of the functions 
currently being performed on this session (for example, a DNS Push Notification 
server could be reconfigured such that is is no longer accepting DNS Push 
Notification requests for one or more of the currently subscribed names).</t>
</list></t>

<t>This document specifies only these three RCODE values for Retry Delay request.
Servers sending Retry Delay requests SHOULD use one of these three values.
However, future circumstances may create situations where other RCODE values
are appropriate in Retry Delay requests, so clients MUST be prepared
to accept Retry Delay requests with any RCODE value.</t>

</section>
<section anchor="use-as-a-modifier-tlv" title="Use as a Modifier TLV">

<t>When appended to a Session Signaling response message for some client request,
the Retry Delay TLV (0) is considered a Modifier TLV.
The indicated time interval during which the client SHOULD NOT retry
applies only to the failed operation, not to the session as a whole.</t>

<t>In the case of a client request that returns a nonzero RCODE value, the server 
MAY append a Retry Delay TLV (0) to the response, indicating the time interval
during which the client SHOULD NOT attempt this operation again.</t>

</section>
</section>
<section anchor="lifecycle" title="Session Lifecycle and Timers">

<section anchor="session-initiation" title="Session Initiation">

<t>A session begins when a client makes a new connection to a server.</t>

<t>A Session Signalling session MAY begin as described in <xref target="details"/>…..</t>

<t>The client may perform as many DNS operations as it wishes using the
newly created session. Operations SHOULD be pipelined (i.e., the
client doesn’t need wait for a response before sending the next message).
The server MUST act on messages in the order they are received, but
responses to those messages MAY be sent out of order, if appropriate.</t>

</section>
<section anchor="timers" title="Timers">

<t>Two timer values are associated with a session: the idle timeout, and the
keepalive interval.</t>

<t>The first timer value, the idle timeout, is the maximum time for which
a client may speculatively keep a session open in the expectation that
it may have future requests to send to that server.</t>

<t>The second timer value, the keepalive interval, is the maximum permitted
interval between client messages to the server if the client wishes to keep
the session alive.</t>

<t>The two timer values are independent. The idle timeout may be lower, the same,
or higher than the keepalive interval, though in most cases the idle timeout is 
expected to be shorter than the keepalive interval.</t>

<t>Only when the client has a very long-lived low-traffic operation outstanding 
like a Push Notification subscription, does the keepalive interval timer come
into play, to ensure that a sufficient residual
amount of traffic is generated to maintain NAT and firewall state.</t>

<t>On a new session, before any explicit Session Signaling
Keepalive message exchange, the default value for both timers is 15 seconds.
For both timers, lower values of the timer result in higher network traffic
and higher CPU load on the server.</t>

</section>
<section anchor="idle-sessions" title="Idle Sessions">

<t>At both servers and clients, the generation or reception of any complete
DNS message, including DNS requests, responses, updates, or Session Signaling
messages, resets both timers for that session <xref target="RFC7766"/>, with the exception
that a Session Signaling Keepalive message resets only the keepalive interval 
timer, not the idle timeout timer.</t>

<t>In addition, for as long as the client has an outstanding operation in progress,
the idle timeout timer remains fixed at zero, and an idle timeout cannot occur.</t>

<t>For short-lived DNS operations like traditional queries and updates,
an operation is considered in progress for the time between request and 
response, typically a period of a few hundred milliseconds at most.
At the client, the idle timeout timer is set to zero upon transmission of a 
request and remains at zero until reception of the corresponding response.
At the server, the idle timeout timer is set to zero upon reception of a request
and remains at zero until transmission of the corresponding response.</t>

<t>(QUESTION: I would much prefer to use the phrase “the idle timer is unset” or
something similar in place of “the idle timeout timer is set to zero” 
throughout. A timer of zero could be interpreted as a timer which closes the 
connection immediately, for example RFC7766 says “Servers MAY use zero timeouts 
when they are experiencing heavy load or are under attack.”)</t>

<t>For long-lived DNS operations like Push Notification subscriptions
<xref target="I-D.ietf-dnssd-push"/>, an operation is considered in progress for
as long as the subscription is active, until it is cancelled.
This means that a session can exist, with a Push Notification subscription 
active, with no messages flowing in either direction, for far longer than the 
idle timeout, and this is not an error. This is why there are two separate 
timers: the idle timeout, and the keepalive interval. Just because a session has 
no traffic for an extended period of time
does not automatically make that session “idle”, if it has an active
Push Notification subscription that is awaiting notification events.</t>

</section>
<section anchor="the-idle-timeout" title="The Idle Timeout">

<t>The purpose of the idle timeout is for the server to balance its trade off 
between the costs of setting up new sessions and the costs of maintaining idle 
sessions. A server with abundant session capacity can offer a high idle timeout, 
to permit clients to keep a speculative session open for a long time, to save 
the cost of establishing a new session for future communications with that 
server. A server with scarce memory resources can offer a low idle timeout,
to cause clients to promptly close sessions whenever they have no outstanding
operations with that server, and then create a new session later when needed.</t>

<section anchor="closing-idle-sessions" title="Closing Idle Sessions">

<t>A client is NOT required to wait until the idle-timeout timer expires
before closing a session.
A client MAY close a session at any time, at the client’s discretion.
If a client determines that it has no current or reasonably anticipated
future need for an idle session, then the client SHOULD close that connection.</t>

<t>If, at any time during the life of the session,
the idle timeout value (i.e., 15 seconds by default) elapses
without there being any operation active on the session,
the client MUST gracefully close the connection with a TCP FIN
(or equivalent for other protocols).</t>

<t>If, at any time during the life of the session, twice the idle timeout value
(i.e., 30 seconds by default) elapses without there being any operation
active on the session, the server SHOULD consider the client delinquent,
and forcibly abort the session.
For sessions over TCP (or over TLS over TCP),
to avoid the burden of having a connection in TIME-WAIT state, instead of
closing the connection gracefully with a TCP FIN the server SHOULD abort
the connection with a TCP RST (or equivalent for other protocols).
(In the BSD Sockets API this is achieved by setting the
SO_LINGER option to zero before closing the socket.)</t>

<t>In this context, an operation being active on a session includes
a query waiting for a response, an update waiting for a response,
or an outstanding Push Notification subscription <xref target="I-D.ietf-dnssd-push"/>,
but not a Session Signaling Keepalive message exchange itself.
A Session Signaling Keepalive message exchange resets only the keepalive
interval timer, not the idle timeout timer.</t>

<t>If the client wishes to keep an idle session open for longer than
the default duration without having to send traffic every 15 seconds,
then it uses the Session Signaling Keepalive message to request
longer timeout values, as described in <xref target="keepalive"/>.</t>

</section>
<section anchor="values-for-the-idle-timeout" title="Values for the Idle Timeout">

<t>For the idle timeout value, lower values result in more frequent session 
teardown and re-establishment. Higher values result in lower traffic and CPU
load on the server, but a larger memory burden to maintain state for idle 
sessions.</t>

<t>A shorter idle timeout with a longer keepalive interval signals to the client 
that it should not speculatively keep idle sessions open for very long for no 
reason, but when it does have an active reason to keep a session open, it 
doesn’t need to be sending an agressive level of keepalive traffic. Only when 
the client has a very long-lived low-traffic operation outstanding like a Push 
Notification subscription, does the keepalive interval timer come into play, to 
ensure that a sufficient residual
amount of traffic is generated to maintain NAT and firewall state.</t>

<t>A longer idle timeout with a shorter keepalive interval signals to the client
that it may speculatively keep idle sessions open for a long time, but it
should be sending a lot of keepalive traffic on those idle sessions.
This configuration is expected to be less common.</t>

<t>To avoid excessive traffic the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with an idle timeout value less than ten seconds.
If a client receives an Keepalive message specifying an idle timeout value
less than ten seconds this is an error and the client MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="the-keepalive-interval" title="The Keepalive Interval">

<t>The purpose of the keepalive interval is to manage the generation of
sufficient messages to maintain state in middleboxes (such at NAT gateways
or firewalls) and for the client and server to periodically verify that they
still have connectivity to each other. This allows them to clean up state
when connectivity is lost, and attempt re-connection if appropriate.</t>

<section anchor="keepalive-interval-expiry" title="Keepalive Interval Expiry">

<t>If, at any time during the life of the session,
the keepalive interval value (i.e., 15 seconds by default) elapses
without any DNS messages being sent or received on a session,
the client MUST take action to keep the session alive.
To keep the session alive the client MUST send a
Session Signaling Keepalive message (see <xref target="keepalive"/>).
A Session Signaling Keepalive message exchange resets only the keepalive
interval timer, not the idle timeout timer.</t>

<t>If a client disconnects from the network abruptly,
without cleanly closing its session,
leaving long-lived outstanding operations like
Push Notification subscriptions uncanceled,
the server learns of this after failing to
receive the required keepalive traffic from that client.
If, at any time during the life of the session,
twice the keepalive interval value (i.e., 30 seconds by default) elapses
without any DNS messages being sent or received on a session,
the server SHOULD consider the client delinquent,
and forcibly abort the connection with a TCP RST (or equivalent for other 
protocols).</t>

</section>
<section anchor="values-for-the-keepalive-interval" title="Values for the Keepalive Interval">

<t>For the keepalive interval value, lower values result in higher volume keepalive 
traffic. Higher values of the keepalive interval reduce traffic and CPU load, 
but have minimal effect on the memory burden
at the server, because clients keep a session open for the same length of time
(determined by the idle timeout) regardless of the level of keepalive traffic 
required.</t>

<t>It may be appropriate for clients and servers to select different keepalive 
interval values depending on the nature of the network they are on.</t>

<t>A corporate DNS server that knows it is serving only clients on the internal 
network, with no intervening NAT gateways or firewalls, can impose a higher 
keepalive interval, because frequent keepalive traffic is not required.</t>

<t>A public DNS server that is serving primarily residential consumer clients, 
where it is likely there will be a NAT gateway on the path, may impose a lower 
keepalive interval, to generate more frequent keepalive traffic.</t>

<t>A smart client may be adaptive to its environment. A client using
a private IPv4 address <xref target="RFC1918"/> to communicate with a DNS server
at an address that is not in the same IPv4 private address block,
may conclude that there is likely to be a NAT gateway on the path,
and accordingly request a lower keepalive interval.</t>

<t>For environments where there is a NAT gateway or firewalls on the path, it is
RECOMMENDED that clients request, and servers grant, a keepalive interval of 15
minutes. In other environments it is RECOMMENDED that clients request, and 
servers grant, a keepalive interval of 60 minutes.</t>

<t>(QUESTION: So this means the default value is 15s but the two RECOMMENDED values
are both tens of minutes?)</t>

<t>Note that the lower the keepalive interval value, the higher the load on client
and server. For example, an keepalive interval value of 100ms would result in a
continuous stream of at least ten messages per second, in both directions,
to keep the session alive. And, in this extreme example, a single packet loss and
retransmission over a long path could introduce a momentary pause in the stream of messages,
long enough to cause the server to overzealously abort the connection.</t>

<t>Because of this concern, the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with an keepalive interval value less than ten seconds.
If a client receives an Keepalive message specifying an keepalive interval value
less than ten seconds this is an error and the client MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="server-initiated-termination-on-error" title="Server-Initiated Termination on Error">

<t>After sending an error response to a client, the server MAY close the session,
or may allow the session to remain open. For error conditions
that only affect the single operation in question, the server SHOULD return an
error response to the client and leave the session open for further operations.
For error conditions that are likely to make all operations unsuccessful in the
immediate future, the server SHOULD return an error response to the client and 
then close the session by sending a Retry Delay request message, as described in 
<xref target="delay"/>.</t>

</section>
<section anchor="client-behaviour-in-receiving-an-error" title="Client Behaviour in Receiving an Error">

<t>Upon receiving an error response from the server, a client SHOULD NOT
automatically close the session. An error relating to one particular operation
on a session does not necessarily imply that all other operations on that
session have also failed, or that future operations will fail. The client
should assume that the server will make its own decision about whether or not to
close the session, based on the server’s determination of whether the error
condition pertains to this particular operation, or would also apply to any
subsequent operations. If the server does not close the session then the client
SHOULD continue to use that session for subsequent operations.</t>

</section>
<section anchor="server-initiated-termination-on-overload" title="Server-Initiated Termination on Overload">

<t>Apart from the cases where:</t>

<t><list style="symbols">
  <t>Session Timer expire (see Section xx)</t>
  <t>On error (see Section xx)</t>
  <t>When under load (see below)</t>
</list></t>

<t>a server MUST NOT close a session with a client, except in extraordinary error 
conditions. Closing the session is the
client’s responsibility, to be done at the client’s discretion, when it so 
chooses. A server only closes a session under exceptional circumstances, such as
when the server application software or underlying operating system is
restarting, the server application terminated unexpectedly (perhaps due to a
bug that makes it crash), or the server is undergoing maintenance procedures.
When possible, a server SHOULD send a Retry Delay message informing the
client of the reason for the session being closed, and allow the client
five seconds to receive it before the server resorts to forcibly aborting the 
connection.</t>

</section>
<section anchor="retry" title="Retry Delay Operation TLV">

<t>There may be rare cases where a server is overloaded and wishes to shed load.
If a server is low on resources it MAY simply terminate a client connection with 
a TCP RST (or equivalent for other protocols).
However, the likely behaviour of the client may be simply to to treat this as a
network failure and connect
immediately, putting more burden on the server.</t>

<t>Therefore to avoid this reconnection implosion, a server SHOULD instead choose 
to shed client load by sending a Retry Delay request message, with an RCODE of 
SERVFAIL, to inform the client of the overload situation. After sending a Retry 
Delay request message, the server MUST NOT send any further messages on that 
session.</t>

<t>After sending the Retry Delay request the server SHOULD allow the
client five seconds to close the connection, and if the client has not
closed the connection after five seconds then the server SHOULD abort
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>Upon receipt of a Retry Delay request from the server, the client MUST
make note of the reconnect delay for this server, and then immediately
close the connection. This is to place the burden of TCP’s TIME-WAIT state on 
the client.</t>

<t>A Retry Delay request message MUST NOT be initiated by a client.
If a server receives a Retry Delay request message this is an error
and the server MUST immediately terminate the connection with a TCP RST
(or equivalent for other protocols).</t>

<section anchor="outstanding-operations" title="Outstanding Operations">

<t>At the moment a server chooses to initiate a Retry Delay request message
there may be DNS requests already in flight from client to server on this 
session, which will arrive at the server after its Retry Delay request message 
has been sent.
The server MUST silently ignore such incoming requests, and MUST NOT generate
any response messages for them. When the Retry Delay request message from the
server arrives at the client, the client will determine that any DNS requests
it previously sent on this session, that have not yet received a response, now 
will certainly not be receiving any response. Such requests should be considered
failed, and should be retried at a later time, as appropriate.</t>

<t>In the case where some, but not all, of the existing operations on a session 
have become invalid (perhaps because the server has been reconfigured and is no 
longer authoritative for some of the names),
but the server is terminating all sessions en masse with a REFUSED (5) RCODE,
the RECONNECT DELAY MAY be zero, indicating that the clients SHOULD immediately
attempt to re-establish operations.
It is likely that some of the attempts will be successful and some will not.</t>

<t>In the case where a server is terminating a large number of sessions at once
(e.g., if the system is restarting) and the server doesn’t want to be inundated 
with a flood of simultaneous retries, it SHOULD send different RECONNECT delay 
values to each client.
These adjustments MAY be selected randomly, pseudorandomly, or deterministically
(e.g., incrementing the time value by one tenth of a second for each successive
client, yielding a post-restart reconnection rate of ten clients per second).</t>

</section>
<section anchor="client-reconnection" title="Client Reconnection">

<t>After a session is closed by the server, the client SHOULD try to reconnect,
to that server, or to another suitable server, if more than one is available.
If reconnecting to the same server, the client MUST respect the indicated delay
before attempting to reconnect.</t>

<t>(QUESTION: Should we have a recommendation for a server that wanted to signal
the client not to reconnect at all (if there is a use case for that)?)</t>

</section>
</section>
</section>
<section anchor="sharing" title="Connection Sharing">

<t>(QUESTION: RFC7766 already has Section 6.2.2 that specifies “Concurrent 
Connections”. I think we should align this section with that so any updates are
explicit.)</t>

<t>A client that supports Session Signaling SHOULD NOT make multiple
connections to the same DNS server.</t>

<t>A single server may support multiple services, including DNS Updates 
<xref target="RFC2136"/>, DNS Push Notifications <xref target="I-D.ietf-dnssd-push"/>,
and other services, for one or more DNS zones.
When a client discovers that the target server for several different operations
is the same target hostname and port, the client SHOULD use a single
shared session for all those operations.
A client SHOULD NOT open multiple connections to the same target host and port
just because the names being operated on are different or
happen to fall within different zones.
This is to reduce unnecessary connection load on the DNS server.</t>

<t>However, server implementers and operators should be aware that connection
sharing may not be possible in all cases.
A single client device may be home to multiple independent client software
instances that don’t coordinate with each other.
Similarly, multiple independent client devices behind the same NAT gateway
will also typically appear to the DNS server as different source ports on
the same client IP address.
Because of these constraints, a DNS server MUST be prepared to accept
multiple connections from different source ports on the same client IP address.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="dns-session-signaling-opcode-registration" title="DNS Session Signaling OPCODE Registration">

<t>IANA are directed to assign a value (tentatively 6)
in the DNS OPCODEs Registry for the Session Signaling OPCODE.</t>

</section>
<section anchor="dns-session-signaling-rcode-registration" title="DNS Session Signaling RCODE Registration">

<t>IANA are directed to assign a value (tentatively 11)
in the DNS RCODE Registry for the SSOPNOTIMP error code.</t>

</section>
<section anchor="dns-session-signaling-type-codes-registry" title="DNS Session Signaling Type Codes Registry">

<t>IANA are directed to create the DNS Session Signaling Type Codes
Registry, with initial values as follows:</t>

<texttable>
      <ttcol align='right'>Type</ttcol>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Status</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>0x0000</c>
      <c>SSOP-RetryDelay</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0001</c>
      <c>SSOP-KeepAlive</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0002 - 0x003F</c>
      <c>Unassigned, reserved for session management TLVs</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x0040 - 0xF7FF</c>
      <c>Unassigned</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0xF800 - 0xFBFF</c>
      <c>Reserved for local / experimental use</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0xFC00 - 0xFFFF</c>
      <c>Reserved for future expansion</c>
      <c>&#160;</c>
      <c>&#160;</c>
</texttable>

<t>Registration of additional Session Signaling Type Codes requires publication
of an appropriate IETF “Standards Action” or “IESG Approval” document <xref target="RFC5226"/>.</t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>If this mechanism is to be used with DNS over TLS, then these messages
are subject to the same constraints as any other DNS over TLS messages
and MUST NOT be sent in the clear before the TLS session is established.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to
Tim Chown,
Ralph Droms,
Jan Komissar,
and Manju Shankar Rao
for their helpful contributions to this document.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC1035;
&RFC7766;
&RFC6891;
&RFC7828;
&RFC2119;
&RFC7830;
&RFC1034;
&RFC2136;
&RFC2132;
&RFC1918;
&RFC5226;


    </references>

    <references title='Informative References'>

<reference anchor="NagleDA" target="http://www.stuartcheshire.org/papers/nagledelayedack/">
  <front>
    <title>TCP Performance problems caused by interaction between Nagle's Algorithm and Delayed ACK</title>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization></organization>
    </author>
    <date year="2005" month="May" day="20"/>
  </front>
</reference>
&RFC7858;
&I-D.ietf-dnssd-push;


    </references>



  </back>

<!-- ##markdown-source:
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
/wOepFrE5sUAAA==

-->

</rfc>

