<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.7 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC7766 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7766.xml">
<!ENTITY RFC6891 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6891.xml">
<!ENTITY RFC7828 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7828.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC7830 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7830.xml">
<!ENTITY RFC1034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC2136 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2136.xml">
<!ENTITY RFC1918 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1918.xml">
<!ENTITY RFC5382 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5382.xml">
<!ENTITY RFC2132 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2132.xml">
<!ENTITY RFC5226 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5226.xml">
<!ENTITY RFC7858 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7858.xml">
<!ENTITY I-D.ietf-dnssd-push SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dnssd-push.xml">
<!ENTITY I-D.sctl-dnssd-mdns-relay SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.sctl-dnssd-mdns-relay.xml">
<!ENTITY RFC6763 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6763.xml">
<!ENTITY RFC0768 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.0768.xml">
<!ENTITY RFC7413 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7413.xml">
<!ENTITY I-D.ietf-tls-tls13 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-tls-tls13.xml">
<!ENTITY RFC1122 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1122.xml">
<!ENTITY I-D.ietf-dprive-padding-policy SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dprive-padding-policy.xml">
]>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-dnsop-session-signal-05" category="std" updates="RFC 7766, RFC 1035">

  <front>
    <title>DNS Stateful Operations</title>

    <author initials="R." surname="Bellis" fullname="Ray Bellis">
      <organization abbrev="ISC">Internet Systems Consortium, Inc.</organization>
      <address>
        <postal>
          <street>950 Charter Street</street>
          <city>Redwood City</city>
          <code>CA 94063</code>
          <country>USA</country>
        </postal>
        <phone>+1 650 423 1200</phone>
        <email>ray@isc.org</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>1 Infinite Loop</street>
          <city>Cupertino</city>
          <code>CA 95014</code>
          <country>USA</country>
        </postal>
        <phone>+1 408 974 3207</phone>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="J." surname="Dickinson" fullname="John Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>jad@sinodun.com</email>
      </address>
    </author>
    <author initials="S." surname="Dickinson" fullname="Sara Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>sara@sinodun.com</email>
      </address>
    </author>
    <author initials="A." surname="Mankin" fullname="Allison Mankin">
      <organization>Salesforce</organization>
      <address>
        <email>allison.mankin@gmail.com</email>
      </address>
    </author>
    <author initials="T." surname="Pusateri" fullname="Tom Pusateri">
      <organization>Unaffiliated</organization>
      <address>
        <postal>
          <street></street>
          <city>Raleigh</city>
          <code>NC 27608</code>
          <country>USA</country>
        </postal>
        <phone>+1 919 867 1330</phone>
        <email>pusateri@bangj.com</email>
      </address>
    </author>

    <date year="2017" month="November" day="30"/>

    <area>Internet</area>
    <workgroup>DNSOP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document defines a new DNS OPCODE for DNS Stateful Operations (DSO).
DSO messages communicate operations within persistent
stateful sessions, using type-length-value (TLV) syntax.
Three TLVs are defined that manage session timeouts,
termination, and encryption padding, and 
a framework is defined for extensions to enable new stateful operations.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The use of transports for DNS other than UDP is being increasingly specified,
for example, DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> and DNS over TLS <xref target="RFC7858"/>.
Such transports can offer persistent, long-lived sessions and therefore when
using them for transporting DNS messages it is of benefit to have a mechanism
that can establish parameters associated with those sessions, such as timeouts.
In such situations it is also advantageous to support server initiated messages.</t>

<t>The existing EDNS(0) Extension Mechanism for DNS <xref target="RFC6891"/> is explicitly
defined to only have “per-message” semantics. Whilst EDNS(0) has been used to
signal at least one session-related parameter (the EDNS(0) TCP Keepalive option
<xref target="RFC7828"/>) the result is less than optimal due to the restrictions
imposed by the EDNS(0) semantics and the lack of server-initiated signalling. 
For example, a server cannot arbitrarily 
instruct a client to close a connection because the server can only send EDNS(0) options 
in responses to queries that contained EDNS(0) options.</t>

<t>This document defines a new DNS OPCODE, DSO (tentatively 6), for DNS Stateful Operations.
DSO messages are used to communicate operations within persistent
stateful sessions, expressed using type-length-value (TLV) syntax.
This document defines an initial set of three TLVs,
used to manage session timeouts, termination, and encryption padding.</t>

<t>All three of the TLVs defined here are mandatory for all implementations of DSO.
Further TLVs may be defined in additional specifications.</t>

<t>The format for DSO messages
(see <xref target="format"/>) differs somewhat from the traditional DNS message
format used for standard queries and responses.
The standard twelve-octet header is used, but the four count fields
(QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) are set to zero and accordingly their
corresponding sections are not present.
The actual data pertaining to DNS Stateful Operations
(expressed in TLV syntax) is appended to the end of the DNS message header.
When displayed using packet analyzer tools that have not been
updated to recognize the DSO format, this
will result in the DSO data being displayed
as unknown additional data after the end of the DNS message.
It is likely that future updates to these tools will add the ability
to recognize, decode, and display the DSO data.</t>

<t>This new format has distinct advantages over an RR-based format because it
is more explicit and more compact. Each TLV definition is specific
to its use case, and as a result contains no redundant or overloaded fields.
Importantly, it completely avoids conflating DNS Stateful Operations in any way 
with normal DNS operations or with existing EDNS(0)-based functionality.
A goal of this approach is to avoid the operational issues that have
befallen EDNS(0), particularly relating to middlebox behaviour.</t>

<t>With EDNS(0), multiple options may be packed into a single OPT pseudo-RR,
and there is no generalized mechanism for a client to be able to tell
whether a server has processed or otherwise acted upon each individual
option within the combined OPT RR.
The specifications for each individual option need to define how each
different option is to be acknowledged, if necessary.</t>

<t>In contrast to EDNS(0), with DSO there is no
compelling motivation to pack multiple operations into a single
message for efficiency reasons, because DSO
always operates using a connection-oriented transport protocol.
Each Stateful operation is communicated in its own separate
DNS message, and the transport protocol can take care of packing
separate DNS messages into a single IP packet if appropriate.
For example, TCP can pack multiple small DNS messages into a single TCP segment.
This simplification allows for clearer semantics.
Each DSO request message communicates just one primary operation,
and the RCODE in the corresponding response message indicates the
success or failure of that operation.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="terminology" title="Terminology">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and
“OPTIONAL” in this document are to be interpreted as described in
“Key words for use in RFCs to Indicate Requirement Levels” <xref target="RFC2119"/>.</t>

<t>“DSO” is used to mean DNS Stateful Operation.</t>

<t>The term “connection” means a bidirectional byte stream of reliable,
in-order messages, such as provided by using
DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> or DNS over TLS <xref target="RFC7858"/>.</t>

<t>The unqualified term “session” in the context of this document means the exchange of
DNS messages over a connection where:</t>

<t><list style="symbols">
  <t>The connection between client and server is persistent and relatively
long-lived (i.e., minutes or hours, rather than seconds).</t>
  <t>Either end of the connection may initiate messages to the other.</t>
</list></t>

<t>A “DSO Session” is established between two endpoints that acknowledge
persistent DNS state via the exchange of DSO messages over the connection.
This is distinct from a DNS-over-TCP session as described in
the previous specification for DNS over TCP <xref target="RFC7766"/>.</t>

<t>A “DSO Session” is terminated when the underlying connection is closed.
The underlying connection can be closed in two ways.</t>

<t>Where this specification says, “close gracefully,”
that means sending a TLS close_notify followed by a TCP FIN,
or the equivalents for other protocols.
Where this specification requires a connection to be closed gracefully,
the requirement to initiate that graceful close is placed on the client,
to place the burden of TCP’s TIME-WAIT state on the client rather than the server.</t>

<t>Where this specification says, “forcibly abort,”
that means sending a TCP RST,
or the equivalent for other protocols.
In the BSD Sockets API this is achieved by setting the
SO_LINGER option to zero before closing the socket.</t>

<t>The term “server” means the software with a listening socket, awaiting
incoming connection requests.</t>

<t>The term “client” means the software which initiates a connection
to the server’s listening socket.</t>

<t>The terms “initiator” and “responder” correspond respectively to the
initial sender and subsequent receiver of a DSO request message,
regardless of which was the “client” and “server” in the usual DNS sense.</t>

<t>The term “sender” may apply to
either an initiator (when sending a DSO request message)
or a responder (when sending a DSO response message).</t>

<t>Likewise, the term “receiver” may apply to
either a responder (when receiving a DSO request message)
or an initiator (when receiving a DSO response message).</t>

<t>The term “long-lived operations” refers to operations
such as Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/>,
Discovery Relay interface subscriptions <xref target="I-D.sctl-dnssd-mdns-relay"/>,
and other future long-lived DNS operations that choose to use
DSO as their basis, that establish state that persists beyond
the lifetime of a traditional brief request/response transaction.
This document, the base specification for DNS Stateful Operations,
defines a framework for supporting long-lived operations,
but does not itself define any long-lived operations.
Nonetheless, to appreciate the design rationale behind
DNS Stateful Operations, it is helpful to understand
the long-lived operations that it is intended to support.</t>

<t>DNS Stateful Operations uses “DSO request messages” and “DSO response messages”.
DSO request messages are further subdivided into two variants,
“acknowledged request messages”
(which generate a corresponding response message) and
“unacknowledged request messages”
(which do not generate any corresponding response message).</t>

<t>The content of DSO messages is expressed using type-length-value (TLV) syntax.</t>

<t>In a DSO request message the first TLV is referred to as the “Primary TLV”
and determines the nature of the operation being performed,
including whether it is an acknowledged or unacknowledged operation;
any other TLVs in a DSO request message are referred to as “Additional TLVs”
and serve additional non-primary purposes, which may be related to
the primary purpose, or not, as in the case of the encryption padding TLV.</t>

<t>A DSO response message may contain no TLVs, or it may contain one
or more TLVs as appropriate to the information being communicated.
In the context of DSO response messages,
one or more TLVs with the same DSO-TYPE as the Primary TLV in the
corresponding DSO request message are referred to as “Response Primary TLVs”.
Any other TLVs with different DSO-TYPEs are referred to as “Response Additional TLVs”.
The Response Primary TLV(s), if present, MUST occur first in the response message,
before any Response Additional TLVs.</t>

<t>Two timers (elapsed time since an event) are defined in this document:</t>

<t><list style="symbols">
  <t>an inactivity timer (see <xref target="keepalive"/> and <xref target="inactivetimer"/>)</t>
  <t>a keepalive timer (see <xref target="keepalive"/> and <xref target="keepalivetimer"/>)</t>
</list></t>

<t>The timeouts associated with these timers are called
the inactivity timeout and 
the keepalive interval, respectively. 
The term “Session Timeouts” is used to refer to this pair of timeout values.</t>

<t>Resetting a timer means resetting the timer value to zero and starting the timer again.
Clearing a timer means resetting the timer value to zero but NOT starting the timer again.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="discussion" title="Discussion">

<t>There are several use cases for DNS Stateful operations that can 
be described here.</t>

<t>Firstly, establishing session parameters such as server-defined timeouts is of 
great use in the 
general management of persistent connections. For example, using DSO sessions 
for stub to recursive DNS-over-TLS <xref target="RFC7858"/> is more flexible for both the 
client and the server than attempting to manage sessions using just the EDNS(0)
TCP Keepalive option <xref target="RFC7828"/>.
The simple set of TLVs defined in this document is
sufficient to greatly enhance connection management for this use case.</t>

<t>Secondly, DNS-SD <xref target="RFC6763"/> has evolved into a naturally session based mechanism where,
for example, long-lived subscriptions lend themselves to ‘push’ mechanisms as 
opposed to polling. Long-lived stateful connections and server initiated 
messages align with this use case <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>A general use case is that DNS traffic is often bursty but session establishment 
can be expensive. One challenge with long-lived connections is to maintain 
sufficient traffic to maintain NAT and firewall state.
To mitigate this issue this document introduces a
new concept for the DNS, that is DSO “Keepalive traffic”.
This traffic carries no DNS data and is not considered ‘activity’
in the classic DNS sense, but serves to maintain state in middleboxes,
and to assure client and server that they still have connectivity to each other.</t>

<t>There are a myriad of other potential use cases for DSO given the versatility 
and extensibility of this specification.</t>

<t><xref target="details"/> of this document describes the protocol details of DNS Stateful Operations
including definitions of three TLVs for session management and encryption padding.
<xref target="lifecycle"/> presents a detailed discussion of the DSO Session lifecycle
including an in-depth discussion of keepalive traffic and session termination.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="details" title="Protocol Details">

<section anchor="establishment" title="DSO Session Establishment">

<t>DSO messages MUST only be carried in protocols and in
environments where a session may be established according to the definition above.
Standard DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/>, and DNS over TLS <xref target="RFC7858"/>
are suitable protocols.</t>

<t>DNS over plain UDP <xref target="RFC0768"/> is not appropriate since it fails on the requirement for
in-order message delivery, and, in the presence of NAT gateways and firewalls
with short UDP timeouts, it fails to provide a persistent bi-directional
communication channel unless an excessive amount of keepalive traffic is used.</t>

<t>In some environments it may be known in advance by external means
that both client and server support DSO, and in these cases either
client or server may initiate DSO messages at any time.</t>

<t>However, in the typical case a server will not know in advance whether a
client supports DSO, so in general, unless it is known in advance by other means
that a client does support DSO, a server MUST NOT initiate DSO request messages
until a DSO Session has been mutually established, as described below.
Similarly, unless it is known in advance by other means that a server
does support DSO, a client MUST NOT initiate non-response-requiring
DSO request messages until after a DSO Session has been mutually established.</t>

<t>Whether or not a given DSO request message elicits a response is
determined by whether or not the first DSO TLV (see <xref target="tlvsyntax"/>)
in the message (the Primary TLV) is one that is specified to generate a response.
Whether a Primary TLV will be specified to elicit a response will depend
on the intended use pattern for that particular TLV.</t>

<t>A DSO Session is established over a connection by the client
sending a DSO request message of a kind that requires a response,
such as the DSO Keepalive TLV (see <xref target="keepalive"/>),
and receiving a response, with matching MESSAGE ID, and RCODE
set to NOERROR (0), indicating that the DSO request was successful.</t>

<t>If the RCODE is set to DSONOTIMP (tentatively 11) this indicates
that the server does support DSO, but does not support the particular
operation the client requested.
A server MUST NOT return DSONOTIMP for the DSO Keepalive TLV,
but a DSONOTIMP response could happen in the future, if a client attempts to
establish a DSO Session using a future response-requiring DSO TLV
that the server does not understand.
If the server returns DSONOTIMP then a DSO Session is not
considered established, but the client is permitted to continue
sending DNS messages on the connection,
including other response-requiring DSO messages such as the DSO Keepalive,
which may result in a successful NOERROR response,
yielding the establishment of a DSO Session.</t>

<t>If the RCODE is set to any value other than NOERROR (0) or DSONOTIMP
(tentatively 11), then the client should assume that the server does
not support DSO. In this case the client is permitted to continue
sending DNS messages on that connection, but the client SHOULD NOT
issue further DSO messages on that connection.</t>

<t>When the server receives a response-requiring DSO request message
from a client, and transmits a successful NOERROR response to that
request, the server considers the DSO Session established.</t>

<t>When the client receives the server’s NOERROR response to its
DSO request message, the client considers the DSO Session established.</t>

<t>Once a DSO Session has been established,
either end may unilaterally send DSO messages at any time,
and therefore either client or server may be the initiator of a message.</t>

<t>Once a DSO Session has been established,
clients and servers should behave as described in this specification with
regard to inactivity timeouts and session termination, not as previously
prescribed in the earlier specification for DNS over TCP <xref target="RFC7766"/>.</t>

<section anchor="zero-round-trip-operation" title="Zero Round-Trip Operation">

<t>There is increased awareness today of the performance benefits
of eliminating round trips in session establishment.
Technologies like TCP Fast Open <xref target="RFC7413"/>
and TLS 1.3 <xref target="I-D.ietf-tls-tls13"/>
provide mechanisms to reduce or eliminate
round trips in session establishment.</t>

<t>Similarly, DSO supports zero round-trip operation.</t>

<t>Having initiated a connection to a server, possibly using
zero round-trip TCP Fast Open and/or
zero round-trip TLS 1.3, a client MAY send multiple
response-requiring DSO request messages to the server in succession
without having to wait for a response to the first request message
to confirm successful establishment of a DSO session.</t>

<t>However, a client MUST NOT send non-response-requiring DSO request
messages until after a DSO Session has been mutually established.</t>

<t>Similarly, a server MUST NOT send DSO request messages until it
has received a response-requiring DSO request message from a
client and transmitted a successful NOERROR response for that request.</t>

</section>
<section anchor="middlebox-considerations" title="Middlebox Considerations">

<t>Where an application-layer middlebox (e.g., a DNS proxy, forwarder, or
session multiplexer) is in the path the middlebox MUST NOT blindly
forward DSO messages in either direction, and MUST treat the inbound
and outbound connections as separate sessions.  This does not preclude
the use of DSO messages in the presence of an IP-layer middlebox, such
as a NAT that rewrites IP-layer and/or transport-layer headers but
otherwise preserves the effect of a single session between the client
and the server.</t>

<t>To illustrate the above, consider a network where a middlebox
terminates one or more TCP connections from clients and multiplexes the
queries therein over a single TCP connection to an upstream server.
The DSO messages and any associated state are specific to the individual
TCP connections.  A DSO-aware middlebox MAY in some circumstances be
able to retain associated state and pass it between the client and
server (or vice versa) but this would be highly TLV-specific.  For
example, the middlebox may be able to maintain a list of which clients
have made Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/> and
make its own subscription(s) on their behalf, relaying any subsequent
notifications to the client (or clients) that have subscribed to that
particular notification.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="format" title="Message Format">

<t>A DSO message begins with
the standard twelve-octet DNS message header <xref target="RFC1035"/>
with the OPCODE field set to the DSO OPCODE (tentatively 6).
However, unlike standard DNS messages, the question section, answer section,
authority records section and additional records sections are not present.
The corresponding count fields (QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) MUST be
set to zero on transmission.</t>

<t>If a DSO message is received where any of the count fields are
not zero, then a FORMERR MUST be returned,
unless a future IETF Standard specifies otherwise.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                          MESSAGE ID                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |QR |    OPCODE     |            Z              |     RCODE     |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     QDCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ANCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     NSCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ARCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                           DSO Data                            /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<section anchor="header" title="Header">

<t>In an unacknowledged request message the MESSAGE ID field MUST be set to zero.
In an acknowledged request message the MESSAGE ID field MUST
be set to a unique nonzero value, that the initiator is not
currently using for any other active operation on this connection.
For the purposes here, a MESSAGE ID is in use in this DSO Session if the
initiator has used it in a request for which it is still awaiting a response,
or if the client has used it to setup a long-lived operation that has not yet been cancelled.
For example, a long-lived operation could be
a Push Notification subscription <xref target="I-D.ietf-dnssd-push"/> or
a Discovery Relay interface subscription <xref target="I-D.sctl-dnssd-mdns-relay"/>.</t>

<t>Whether a message is acknowledged or unacknowledged is
determined only by the specification for the Primary TLV.
An acknowledgment cannot be requested by including a nonzero message ID
in a message the primary TLV of which is specified to be unacknowledged,
nor can an acknowledgment be prevented by sending a message ID of zero
in a message with a primary TLV that is specified to be acknowledged.
A responder that receives either such malformed message MUST treat it
as a programming error and terminate the connection.</t>

<t>In a request message the DNS Header QR bit MUST be zero (QR=0).<vspace />
If the QR bit is not zero the message is not a request message.</t>

<t>In a response message the DNS Header QR bit MUST be one (QR=1).<vspace />
If the QR bit is not one the message is not a response message.</t>

<t>In a response message (QR=1) the MESSAGE ID field MUST contain a copy of the value of
the MESSAGE ID field in the acknowledged request message being responded to.
In a response message (QR=1) the MESSAGE ID field MUST NOT be zero.
If a response message (QR=1) is received where the MESSAGE ID is zero
this is a fatal error and the receiver MUST forcibly abort the connection immediately.</t>

<t>The DNS Header OPCODE field holds the DSO OPCODE value (tentatively 6).</t>

<t>The Z bits are currently unused in DSO messages,
and in both DSO requests and DSO responses the
Z bits MUST be set to zero (0) on transmission and MUST be silently ignored
on reception, unless a future IETF Standard specifies otherwise.</t>

<t>In a request message (QR=0) the RCODE is generally set to zero on transmission,
and silently ignored on reception, except where specified otherwise
(for example, the Retry Delay request message (see <xref target="retry"/>),
where the RCODE indicates the reason for termination).</t>

<t><vspace blankLines='999' /></t>

<t>The RCODE value in a response message (QR=1) may be one of the following values:</t>

<texttable>
      <ttcol align='right'>Code</ttcol>
      <ttcol align='left'>Mnemonic</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>0</c>
      <c>NOERROR</c>
      <c>Operation processed successfully</c>
      <c>1</c>
      <c>FORMERR</c>
      <c>Format error</c>
      <c>2</c>
      <c>SERVFAIL</c>
      <c>Server failed to process request due to a problem with the server</c>
      <c>3</c>
      <c>NXDOMAIN</c>
      <c>Name Error — Named entity does not exist (TLV-dependent)</c>
      <c>4</c>
      <c>NOTIMP</c>
      <c>DSO not supported</c>
      <c>5</c>
      <c>REFUSED</c>
      <c>Operation declined for policy reasons</c>
      <c>9</c>
      <c>NOTAUTH</c>
      <c>Not Authoritative (TLV-dependent)</c>
      <c>11</c>
      <c>DSONOTIMP</c>
      <c>DSO type code not supported</c>
</texttable>

<t>Use of the above RCODEs is likely to be common in DSO but 
does not preclude the definition and use of other codes in future documents that 
make use of DSO.</t>

<t>If a document defining a new DSO TLV makes use of NXDOMAIN (Name Error)
or NOTAUTH (Not Authoritative) then that document MUST specify the specific
interpretation of these RCODE values in the context of that new DSO TLV.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="dsodata" title="DSO Data">

<t>The standard twelve-octet DNS message header with its
zero-valued count fields is followed by the DSO Data,
expressed using TLV syntax, as described below <xref target="tlvsyntax"/>.</t>

<t>A DSO message may be either a request message or a response message,
as indicated by the QR bit in the DNS message header.
DSO request messages are further subdivided into two variants,
acknowledged request messages
(which generate a corresponding response message)
and unacknowledged request messages
(which do not generate any corresponding response message).</t>

<t>A DSO request message MUST contain at least one TLV.
The first TLV in a DSO request message is referred to as the “Primary TLV”
and determines the nature of the operation being performed,
including whether it is an acknowledged or unacknowledged operation.
In some cases it may be appropriate to include other TLVs in a request message,
such as the Encryption Padding TLV (<xref target="padding"/>),
and these extra TLVs are referred to as the “Additional TLVs”.</t>

<t>A DSO response message may contain no TLVs,
or it may be specified to contain one or more TLVs
appropriate to the information being communicated.</t>

<t>A DSO response message may contain one or more TLVs with
DSO-TYPE the same as the Primary TLV from the corresponding DSO request message,
in which case those TLV(s) are referred to as “Response Primary TLVs”.
A DSO response message is not required to carry Response Primary TLVs.
The MESSAGE ID field in the DNS message header is sufficient to identify
to which DSO request message this response message relates.</t>

<t>A DSO response message may contain one or more TLVs with
DSO-TYPEs different from the Primary TLV from the corresponding DSO request message,
in which case those TLV(s) are referred to as “Response Additional TLVs”.</t>

<t>Response Primary TLV(s), if present, MUST occur first in the response message,
before any Response Additional TLVs.</t>

<t>It is anticipated that by default most DSO request messages will be specified
to be acknowledged request messages, which generate corresponding responses.
In some specialized high-traffic use cases,
it may be appropriate to specify unacknowledged request messages.
Unacknowledged request messages can be more efficient on the network,
because they don’t generate a stream of corresponding reply messages.
Using unacknowledged request messages can also simplify software
in some cases, by removing need for an initiator to maintain
state while it waits to receive replies it doesn’t care about.
When the specification for a particular TLV states that,
when used as a Primary TLV (i.e., first) in a request message,
that request message is to be unacknowledged,
the MESSAGE ID field MUST be set to zero and
the receiver MUST NOT generate any response message
corresponding to this unacknowledged request message.</t>

<t>The previous point, that the receiver MUST NOT generate responses to
unacknowledged request messages, applies even in the case of errors.
When a DSO request message is received with the MESSAGE ID field
set to zero, the receiver MUST NOT generate any response.
For example, if the DSO-TYPE in the Primary TLV is unrecognized,
then a DSONOTIMP error MUST NOT be returned; instead the receiver
MUST forcibly abort the connection immediately.</t>

<t>Unacknowledged request messages MUST NOT be used “speculatively”
in cases where the sender doesn’t know if the receiver supports
the Primary TLV in the message, because there is no way to receive
any response to indicate success or failure of the request message
(the request message does not contain a unique MESSAGE ID with
which to associate a response with its corresponding request).
Unacknowledged request messages are only appropriate in cases where
the sender already knows that the receiver supports and wishes to
receive these messages.</t>

<t>For example, after a client has subscribed for Push Notifications
<xref target="I-D.ietf-dnssd-push"/>, the subsequent event notifications are
then sent as unacknowledged messages, and this is appropriate
because the client initiated the message stream by virtue of its
Push Notification subscription, thereby indicating its support of
Push Notifications, and its desire to receive those notifications.</t>

<t>After an mDNS Relay client has subscribed to receive inbound mDNS
traffic from an mDNS Relay, the subsequent stream of received
packets is then sent using unacknowledged messages, and this
is appropriate because the client initiated the message stream
by virtue of its mDNS Relay link subscription, thereby indicating
its support of mDNS Relay, and its desire to receive inbound mDNS
packets over that DSO session <xref target="I-D.sctl-dnssd-mdns-relay"/>.</t>

<t><vspace blankLines='999' /></t>

<section anchor="tlvsyntax" title="TLV Syntax">

<t>All TLVs, whether used as “Primary”, “Additional”, or in responses,
use the same encoding syntax.</t>

<t>The specification for a TLV determines whether,
when used as the Primary (i.e., first) TLV in a request message,
that request message is to be acknowledged.
If the request message is to be acknowledged, the specification
also states which TLVs, if any, are to be included in the response.
The Primary TLV may or may not be contained in the response,
depending on what is stated in the specification for that TLV.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                            DSO-TYPE                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                        DSO DATA LENGTH                        |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                      TYPE-DEPENDENT DATA                      /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='DSO-TYPE:'>
  A 16-bit unsigned integer in network (big endian) byte order
giving the type of the current DSO TLV per the IANA DSO Type Code Registry.</t>
  <t hangText='DSO DATA LENGTH:'>
  A 16-bit unsigned integer in network (big endian) byte order
giving the size in octets of the TYPE-DEPENDENT DATA.</t>
  <t hangText='TYPE-DEPENDENT DATA:'>
  Type-code specific format.</t>
</list></t>

<t>Where domain names appear within TYPE-DEPENDENT DATA, they MAY<vspace />
be compressed using standard DNS name compression <xref target="RFC1035"/>.<vspace />
However, the compression offsets MUST be relative to
the start of the TYPE-DEPENDENT DATA and MUST NOT
extend beyond the end of the TYPE-DEPENDENT DATA.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="primary-tlv" title="Primary TLV">

<t>The Primary (first) TLV in a DSO request message indicates the operation to be performed.
A DSO request message MUST contain at at least one TLV, the Primary TLV.</t>

</section>
<section anchor="additional-tlvs" title="Additional TLVs">

<t>An “Additional TLV” specifies additional parameters
relating to the operation. Immediately following the Primary TLV
a DSO request message MAY contain one or more Additional TLVs.</t>

</section>
<section anchor="response-tlvs" title="Response TLVs">

<t>Depending on the operation, a DSO response message MAY contain no TLVs,
because it is simply a response to a previous request message, and the
MESSAGE ID in the header is sufficient to identify the request in question.
Or it may contain a single response TLV, with the same DSO-TYPE as the
Primary TLV in the request message.
Alternatively it may contain one or more TLVs of other
types, or a combination of the above, as appropriate
for the information that needs to be communicated.
The specification for each DSO TLV determines
what TLVs are required in a response to a request using that TLV.</t>

<t>If a DSO response is received for an operation where the specification
requires that the response carry a particular TLV or TLVs,
and the required TLV(s) are not present, then this is a fatal
error and the recipient of the defective response message MUST
forcibly abort the connection immediately.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="unrecognized-tlvs" title="Unrecognized TLVs">

<t>If DSO request is received containing an unrecognized Primary TLV,
with a nonzero MESSAGE ID (indicating that a response is expected),
then the receiver MUST send a response with matching MESSAGE ID,
and RCODE DSONOTIMP (tentatively 11).
The response MUST NOT contain a copy of the unrecognized Primary TLV.</t>

<t>If DSO request is received containing an unrecognized Primary TLV,
with a zero MESSAGE ID (indicating that no response is expected),
the receiver MUST silently ignore the message. A response MUST NOT be sent.</t>

<t>If a DSO request message is received where the Primary TLV is recognized,
containing one or more unrecognized Additional TLVs, the unrecognized
Additional TLVs MUST be silently ignored, and the remainder of the message
is interpreted and handled as if the unrecognized parts were not present.</t>

<t>Similarly, if a DSO response message is received containing one
or more unrecognized TLVs, the unrecognized TLVs MUST be silently
ignored, and the remainder of the message is interpreted and
handled as if the unrecognized parts were not present.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="edns0-and-tsig" title="EDNS(0) and TSIG">

<t>Since the ARCOUNT field MUST be zero, a DSO message
MUST NOT contain an EDNS(0) option in the additional records section.
If functionality provided by current or future EDNS(0) options
is desired for DSO messages, one or more new DSO TLVs
need to be defined to carry the necessary information.</t>

<t>For example, the EDNS(0) Padding Option <xref target="RFC7830"/> used for security purposes
is not permitted in a DSO message,
so if message padding is desired for DSO messages
then the Encryption Padding TLV described in <xref target="padding"/> MUST be used.</t>

<t>Similarly, a DSO message MUST NOT contain a TSIG record.
A TSIG record in a conventional DNS message is added as the last record
in the additional records section, and carries a signature computed over
the preceding message content. Since DSO data appears
after the additional records section, it would not be included in the
signature calculation. 
If use of signatures with DSO messages becomes necessary in the 
future, a new DSO TLV needs to be defined to perform this function.</t>

<t>Note however that, while DSO <spanx style="strong">messages</spanx> cannot include
EDNS(0) or TSIG records, a DSO <spanx style="strong">session</spanx> is typically used to 
carry a whole series of DNS messages of different kinds, including DSO
messages, and other DNS message types like Query <xref target="RFC1034"/> 
<xref target="RFC1035"/> and Update <xref target="RFC2136"/>, and those messages can carry EDNS(0) and 
TSIG records.</t>

<t>This specification explicitly prohibits use of the
EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>
in <spanx style="strong">any</spanx> messages sent on a DSO Session (because it is obsoleted by
the functionality provided by the DSO Keepalive operation),
but messages may contain other EDNS(0) options as appropriate.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="message-handling" title="Message Handling">

<t>The initiator MUST set the value of the QR bit in the DNS header to
zero (0), and the responder MUST set it to one (1).
Every DSO request message (QR=0) with a nonzero MESSAGE ID field
MUST elicit a corresponding response (QR=1), which MUST have the same
MESSAGE ID in the DNS message header as in the corresponding request.
DSO request messages sent by the client with a nonzero MESSAGE ID field
elicit a response from the server, and
DSO request messages sent by the server with a nonzero MESSAGE ID field
elicit a response from the client.</t>

<t>A DSO request message (QR=0) with a zero MESSAGE ID field MUST NOT elicit a response.</t>

<t>The namespaces of 16-bit MESSAGE IDs are disjoint in each direction.
For example, it is <spanx style="strong">not</spanx> an error for both client and server to send a request
message with the same ID. In effect, the 16-bit MESSAGE ID combined with the 
identity of the initiator (client or server) serves as a 17-bit unique 
identifier for a particular operation on a DSO Session.</t>

<t>As described in <xref target="header"/> An initiator MUST NOT reuse a
MESSAGE ID that is already in use for an outstanding request,
unless specified otherwise by the relevant specification
for the DSO in question. At the very least, this means 
that a MESSAGE ID MUST NOT be reused in a particular direction
on a particular DSO Session while the initiator is waiting for a response to a 
previous request using that MESSAGE ID on that DSO Session,
unless specified otherwise by the relevant 
specification for the DSO in question.
(For a long-lived operation the MESSAGE ID for the operation
MUST NOT be reused whilst that operation remains active.)</t>

<t>If a client or server receives a response (QR=1) where the MESSAGE ID is zero,
or any other value that does not match the MESSAGE ID of any of its outstanding operations,
this is a fatal error and the recipient MUST forcibly abort the connection immediately.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="dso-response-generation" title="DSO Response Generation">

<t>With most TCP implementations, for DSO requests that generate a response,
the TCP data acknowledgement (generated because data has been received by TCP),
the TCP window update (generated because TCP has delivered that data to the receiving software),
and the DSO response (generated by the receiving application-layer software itself)
are all combined into a single IP packet.
Combining these three elements into a single IP packet gives a
potentially significant improvement in network efficiency.</t>

<t>For DSO requests that do not generate a response,
the TCP implementation generally doesn’t have any way to know
that no response will be forthcoming, so it waits fruitlessly
for the application-layer software to generate a response,
until the Delayed ACK timer fires <xref target="RFC1122"/> (typically 200 milliseconds)
and only then does it send the TCP ack and window update.
In conjunction with Nagle’s Algorithm at the sender,
this can delay the sender’s transmission of its next
(non-full-sized) TCP segment, while the sender is waiting for
its previous (non-full-sized) TCP segment to be acknowledged,
which won’t happen until the Delayed ACK timer fires.
Nagle’s Algorithm exists to combine multiple small
application writes into more efficient large TCP segments,
to guard against wasteful use of the network by applications
that would otherwise transmit a stream of small TCP segments,
but in this case Nagle’s Algorithm (created to improve network efficiency)
can interact badly with TCP’s Delayed ACK feature
(also created to improve network efficiency) <xref target="NagleDA"/>
with the result of delaying some messages by up to 200 milliseconds.</t>

<t>Possible mitigations for this problem include:</t>

<t><list style="symbols">
  <t>Disabling Nagle’s Algorithm at the sender.<vspace />
This is not great, because it results<vspace />
in less efficient use of the network.</t>
  <t>Disabling Delayed ACK at the receiver.<vspace />
This is not great, because it results<vspace />
in less efficient use of the network.</t>
  <t>Using a networking API that lets the receiver signal to the TCP
implementation that the receiver has received and processed a client
request for which it will not be generating any immediate response.
This allows the TCP implementation to operate efficiently in both cases;
for requests that generate a response, the TCP ack, window update, and
DSO response are transmitted together in a single TCP segment,
and for requests that do not generate a response,
the application-layer software informs the TCP implementation
that it should go ahead and send the TCP ack and window update
immediately, without waiting for the Delayed ACK timer.
Unfortunately it is not known at this time which (if any) of the
widely-available networking APIs currently include this capability.</t>
</list></t>

</section>
<section anchor="cancellation" title="Responder-Initiated Operation Cancellation">

<t>This document, the base specification for DNS Stateful Operations,
does not itself define any long-lived operations,
but it defines a framework for supporting long-lived operations
such as Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/> and
Discovery Relay interface subscriptions <xref target="I-D.sctl-dnssd-mdns-relay"/>.</t>

<t>Generally speaking, a long-lived operation is initiated by the initiator,
and, if successful, remains active until the initiator terminates the operation.</t>

<t>However, it is possible that a long-lived operation may be valid
at the time it was initiated, but then a later change of circumstances
may render that previously valid operation invalid.</t>

<t>For example, a long-lived client operation may pertain to a name
that the server is authoritative for, but then the server configuration
is changed such that it is no longer authoritative for that name.</t>

<t>In such cases, instead of terminating the entire session
it may be desirable for the responder to be able to cancel
selectively only those operations that have become invalid.</t>

<t>The responder performs this selective cancellation by sending
a new response message, with the MESSAGE ID field containing the
MESSAGE ID of the long-lived operation that is to be terminated
(that it had previously acknowledged with a NOERROR RCODE), and the
RCODE field of the new response message giving the reason for cancellation.</t>

<t>After a response message with nonzero RCODE has been sent,
that operation has been terminated from the responder’s point of view,
and the responder sends no more messages relating to that operation.</t>

<t>After a response message with nonzero RCODE has been received by the initiator,
that operation has been terminated from the initiator’s point of view,
and its MESSAGE ID is now free for reuse.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="lifecycle" title="DSO Session Lifecycle and Timers">

<section anchor="dso-session-initiation" title="DSO Session Initiation">

<t>A DSO Session begins as described in <xref target="establishment"/>.</t>

<t>The client may perform as many DNS operations as it wishes using the
newly created DSO Session. Operations SHOULD be pipelined (i.e., the
client doesn’t need wait for a response before sending the next message).
The server MUST act on messages in the order they are transmitted, but
responses to those messages SHOULD be sent out of order when appropriate.</t>

</section>
<section anchor="sessiontimeouts" title="DSO Session Timeouts">

<t>Two timeout values are associated with a DSO Session: the inactivity timeout, and 
the keepalive interval.</t>

<t>The first timeout value, the inactivity timeout, is the maximum time for which
a client may speculatively keep a DSO Session open in the expectation that
it may have future requests to send to that server.</t>

<t>The second timeout value, the keepalive interval, is the maximum permitted
interval between client messages to the server if the client wishes to keep
the DSO Session alive.</t>

<t>The two timeout values are independent. The inactivity timeout may be lower, the 
same, or higher than the keepalive interval, though in most cases the inactivity 
timeout is expected to be shorter than the keepalive interval.</t>

<t>Only when the client has a very long-lived low-traffic operation does the 
keepalive interval come into play, to ensure that a sufficient residual
amount of traffic is generated to maintain NAT and firewall state
and to assure client and server that they still have connectivity to each other.</t>

<t>On a new DSO Session, if no explicit DSO Keepalive message exchange has taken 
place, the default value for both timeouts is 15 seconds.
For both timeouts, lower values of the timeout result in higher network traffic
and higher CPU load on the server.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="inactivetimer" title="Inactive DSO Sessions">

<t>At both servers and clients, the generation or reception of any complete
DNS message, including DNS requests, responses, updates, or DSO
messages, resets both timers for that DSO Session, with the exception
that a DSO Keepalive message resets only the keepalive timer,
not the inactivity timeout timer.</t>

<t>In addition, for as long as the client has an outstanding operation in progress,
the inactivity timer remains cleared, and an inactivity timeout cannot occur.</t>

<t>For short-lived DNS operations like traditional queries and updates,
an operation is considered in progress for the time between request and 
response, typically a period of a few hundred milliseconds at most.
At the client, the inactivity timer is cleared upon transmission of a 
request and remains cleared until reception of the corresponding response.
At the server, the inactivity timer is cleared upon reception of a request
and remains cleared until transmission of the corresponding response.</t>

<t>For long-lived DNS Stateful operations (such as
a Push Notification subscription <xref target="I-D.ietf-dnssd-push"/> or
a Discovery Relay interface subscription <xref target="I-D.sctl-dnssd-mdns-relay"/>),
an operation is considered in progress
for as long as the operation is active, until it is cancelled.
This means that a DSO Session can exist, with active operations,
with no messages flowing in either direction, for far longer than the 
inactivity timeout, and this is not an error.
This is why there are two separate timers:
the inactivity timeout, and the keepalive interval.
Just because a DSO Session has no traffic for an extended period of time
does not automatically make that DSO Session “inactive”,
if it has an active operation that is awaiting events.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="the-inactivity-timeout" title="The Inactivity Timeout">

<t>The purpose of the inactivity timeout is for the server to balance its trade off 
between the costs of setting up new DSO Sessions and the costs of maintaining inactive 
DSO Sessions. A server with abundant DSO Session capacity can offer a high inactivity timeout, 
to permit clients to keep a speculative DSO Session open for a long time, to save 
the cost of establishing a new DSO Session for future communications with that 
server. A server with scarce memory resources can offer a low inactivity timeout,
to cause clients to promptly close DSO Sessions whenever they have no outstanding
operations with that server, and then create a new DSO Session later when needed.</t>

<section anchor="closing-inactive-dso-sessions" title="Closing Inactive DSO Sessions">

<t>A client is NOT required to wait until the inactivity timeout expires
before closing a DSO Session.
A client MAY close a DSO Session at any time, at the client’s discretion.
If a client determines that it has no current or reasonably anticipated
future need for an inactive DSO Session, then the client SHOULD close that connection.</t>

<t>If, at any time during the life of the DSO Session,
the inactivity timeout value (i.e., 15 seconds by default) elapses
without there being any operation active on the DSO Session,
the client MUST close the connection gracefully.</t>

<t>If, at any time during the life of the DSO Session,
twice the inactivity timeout value (i.e., 30 seconds by default),
or five seconds, if twice the inactivity timeout value is less than five seconds,
elapses without there being any operation active on the DSO Session,
the server SHOULD consider the client delinquent,
and SHOULD forcibly abort the DSO Session.</t>

<t>In this context, an operation being active on a DSO Session includes
a query waiting for a response, an update waiting for a response,
or an active long-lived operation, but not a DSO Keepalive message exchange itself.
A DSO Keepalive message exchange resets only the keepalive
interval timer, not the inactivity timeout timer.</t>

<t>If the client wishes to keep an inactive DSO Session open for longer than
the default duration without having to send traffic every 15 seconds,
then it uses the DSO Keepalive message to request
longer timeout values, as described in <xref target="keepalive"/>.</t>

</section>
<section anchor="values-for-the-inactivity-timeout" title="Values for the Inactivity Timeout">

<t>For the inactivity timeout value, lower values result in
more frequent DSO Session teardown and re-establishment.
Higher values result in lower traffic and lower CPU load on the server,
but higher memory burden to maintain state for inactive DSO Sessions.</t>

<t>A server may dictate (in a server-initiated Keepalive message,
or in a response to a client-initiated Keepalive request message)
any value it chooses for the inactivity timeout.
When a connection’s inactivity timeout is reached the client MUST
begin closing the idle connection, but a client is NOT REQUIRED
to keep an idle connection open until the inactivity timeout is
reached — a client SHOULD begin closing the connection sooner
if it has no reason to expect future operations with that server
before the inactivity timeout is reached.</t>

<t>A shorter inactivity timeout with a longer keepalive interval signals
to the client that it should not speculatively keep an inactive DSO
Session open for very long without reason, but when it does have an
active reason to keep a DSO Session open, it doesn’t need to be sending
an aggressive level of keepalive traffic to maintain that session.</t>

<t>A longer inactivity timeout with a shorter keepalive interval
signals to the client that it may speculatively keep an inactive
DSO Session open for a long time, but to maintain that inactive
DSO Session it should be sending a lot of keepalive traffic.
This configuration is expected to be less common.</t>

<t>A server may dictate any value it chooses for the inactivity timeout
(either in a response to a client-initiated request, or in a server-initiated message)
including values under one second, or even zero.</t>

<t>An inactivity timeout of zero informs the client that it
should not speculatively maintain idle connections at all, and
as soon as the client has completed the operation or operations relating
to this server, the client should immediately begin closing this session.</t>

<t>An inactivity timeout of 0xFFFFFFFF (2^32-1 milliseconds, approximately 49.7 days)
informs the client that it may keep an idle connection open as long as it wishes.
Note that after granting an unlimited inactivity timeout in this way,
at any point the server may revise that inactivity timeout by sending
a new Keepalive TLV dictating new Session Timeout values to the client.</t>

<t>A server will abort an idle client session after twice the
inactivity timeout value, or five seconds, whichever is greater.
In the case of a zero inactivity timeout value, this means that
if a client fails to close an idle client session then the server
will forcibly abort the idle session after five seconds.</t>

</section>
</section>
<section anchor="keepalivetimer" title="The Keepalive Interval">

<t>The purpose of the keepalive interval is to manage the generation of
sufficient messages to maintain state in middleboxes (such at NAT gateways
or firewalls) and for the client and server to periodically verify that they
still have connectivity to each other. This allows them to clean up state
when connectivity is lost, and attempt re-connection if appropriate.</t>

<section anchor="keepalive-interval-expiry" title="Keepalive Interval Expiry">

<t>If, at any time during the life of the DSO Session,
the keepalive interval value (i.e., 15 seconds by default) elapses
without any DNS messages being sent or received on a DSO Session,
the client MUST take action to keep the DSO Session alive,
by sending a DSO Keepalive message (see <xref target="keepalive"/>).
A DSO Keepalive message exchange resets only the keepalive timer, 
not the inactivity timer.</t>

<t>If a client disconnects from the network abruptly,
without cleanly closing its DSO Session,
leaving a long-lived operation uncanceled,
the server learns of this after failing to
receive the required keepalive traffic from that client.
If, at any time during the life of the DSO Session,
twice the keepalive interval value (i.e., 30 seconds by default) elapses
without any DNS messages being sent or received on a DSO Session,
the server SHOULD consider the client delinquent,
and SHOULD forcibly abort the DSO Session.</t>

</section>
<section anchor="values-for-the-keepalive-interval" title="Values for the Keepalive Interval">

<t>For the keepalive interval value, lower values result in a higher volume of keepalive 
traffic. Higher values of the keepalive interval reduce traffic and CPU load, 
but have minimal effect on the memory burden
at the server, because clients keep a DSO Session open for the same length of time
(determined by the inactivity timeout) regardless of the level of keepalive traffic 
required.</t>

<t>It may be appropriate for clients and servers to select different keepalive 
interval values depending on the nature of the network they are on.</t>

<t>A corporate DNS server that knows it is serving only clients on the internal 
network, with no intervening NAT gateways or firewalls, can impose a higher 
keepalive interval, because frequent keepalive traffic is not required.</t>

<t>A public DNS server that is serving primarily residential consumer clients, 
where it is likely there will be a NAT gateway on the path, may impose a lower 
keepalive interval, to generate more frequent keepalive traffic.</t>

<t>A smart client may be adaptive to its environment. A client using
a private IPv4 address <xref target="RFC1918"/> to communicate with a DNS server
at an address outside that IPv4 private address block,
may conclude that there is likely to be a NAT gateway on the path,
and accordingly request a lower keepalive interval.</t>

<t>By default it is RECOMMENDED that clients request,
and servers grant, a keepalive interval of 60 minutes.
This keepalive interval provides for reasonably timely detection if
a client abruptly disconnects without cleanly closing the session,
and is sufficient to maintain state in firewalls and NAT gateways
that follow the IETF recommended Best Current Practice that the
“established connection idle-timeout” used by middleboxes
be at least 2 hours 4 minutes <xref target="RFC5382"/>.</t>

<t>Note that the lower the keepalive interval value, the higher the load on client
and server. For example, a hypothetical keepalive interval value of 100ms would result
in a continuous stream of at least ten messages per second, in both directions,
to keep the DSO Session alive. And, in this extreme example, a single packet loss and
retransmission over a long path could introduce a momentary pause in the stream of messages,
long enough to cause the server to overzealously abort the connection.</t>

<t>Because of this concern, the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with a keepalive interval value less than ten seconds.
If a client receives a Keepalive message specifying a keepalive interval value
less than ten seconds this is an error and the client MUST
forcibly abort the connection immediately.</t>

<t>A keepalive interval value of 0xFFFFFFFF (2^32-1 milliseconds, approximately 49.7 days)
informs the client that it should generate no keepalive traffic.
Note that after signaling that the client should generate no keepalive traffic in this way,
at any point the server may revise that keepalive traffic requirement by sending
a new Keepalive TLV dictating new Session Timeout values to the client.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="server-initiated-session-termination" title="Server-Initiated Session Termination">

<t>In addition to cancelling individual operations selectively (see <xref target="cancellation"/>)
there are also occasions where a server may need to terminate
one or more entire sessions wholesale.
An entire session may need to be terminated if the client is defective in some way,
or departs from the network without closing its session.
Sessions may also need to be terminated if the server becomes overloaded,
or if the server is reconfigured and lacks the ability to be selective about
which operations need to be cancelled.</t>

<t>This section discusses various reasons a session may be terminated,
and the mechanisms for doing so.</t>

<section anchor="error" title="Server-Initiated Session Termination on Error">

<t>After sending an error response to a client, the server MAY end the DSO Session,
or may allow the DSO Session to remain open. For error conditions
that only affect the single operation in question, the server SHOULD return an
error response to the client and leave the DSO Session open for further operations.
For error conditions that are likely to make all operations unsuccessful in the
immediate future, the server SHOULD return an error response to the client and 
then end the DSO Session by sending a Retry Delay request message, as described in 
<xref target="retry"/>.</t>

<t>Upon receiving an error response from the server, a client SHOULD NOT
automatically close the DSO Session. An error relating to one particular operation
on a DSO Session does not necessarily imply that all other operations on that
DSO Session have also failed, or that future operations will fail. The client
should assume that the server will make its own decision about whether or not to
end the DSO Session, based on the server’s determination of whether the error
condition pertains to this particular operation, or would also apply to any
subsequent operations. If the server does not end the DSO Session by
sending the client a Retry Delay message (see <xref target="retry"/>) then the client
SHOULD continue to use that DSO Session for subsequent operations.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="server-initiated-session-termination-on-overload" title="Server-Initiated Session Termination on Overload">

<t>A server MUST NOT close a DSO Session with a client,
except in certain exceptional circumstances, as outlined below.
In normal operation, closing a DSO Session is the client’s responsibility.
The client makes the determination of when to close a DSO
Session based on an evaluation of both its own needs,
and the inactivity timeout value dictated by the server.</t>

<t>Some exceptional situations where a server may terminate a DSO Session include:</t>

<t><list style="symbols">
  <t>The server application software or underlying operating system
is shutting down or restarting.</t>
  <t>The server application software terminates unexpectedly
(perhaps due to a bug that makes it crash).</t>
  <t>The server is undergoing a reconfiguration or maintenance
procedure, that, due to the way the server software is
implemented, requires clients to be disconnected.
For example, some software is implemented such that it reads
a configuration file at startup, and changing the server’s
configuration entails modifying the configuration file
and then killing and restarting the server software,
which generally entails a loss of network connections.</t>
  <t>The client fails to meets its obligation to generate keepalive
traffic or close an inactive session by the prescribed time
(twice the time interval dictated by the server, or five seconds,
whichever is greater, as described in <xref target="sessiontimeouts"/>).</t>
  <t>The client sends a grossly invalid or malformed request that is
indicative of a seriously defective client implementation (see <xref target="error"/>).</t>
  <t>The server is over capacity and needs to shed some load (see <xref target="retry"/>).</t>
</list></t>

<t>When a server has to close a DSO Session with a client
(because of exceptional circumstances such as those outlined above)
the server SHOULD, whenever possible, send a Retry Delay request message
(see below) informing the client of the reason for the DSO Session
being closed, and allow the client five seconds to receive it
before the server resorts to forcibly aborting the connection.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="retry" title="Retry Delay Request Message">

<t>There may be rare cases where a server is overloaded and wishes to shed load.
If a server is low on resources it MAY simply terminate a client connection
by forcibly aborting it.
However, the likely behavior of the client may be simply to to treat this as
a network failure and reconnect immediately, putting more burden on the server.</t>

<t>Therefore to avoid this reconnection implosion, a server SHOULD instead choose 
to shed client load by sending a Retry Delay request message, with an RCODE of 
SERVFAIL, to inform the client of the overload situation.
The format of the Retry Delay TLV is described in <xref target="delay"/>.
After sending a Retry Delay request message,
the server MUST NOT send any further messages on that DSO Session.</t>

<t>Upon receipt of a Retry Delay request from the server, the client MUST
make note of the reconnect delay for this server, and then immediately
close the connection gracefully.</t>

<t>After sending a Retry Delay request message the server SHOULD allow the
client five seconds to close the connection, and if the client has not
closed the connection after five seconds then the server SHOULD
forcibly abort the connection.</t>

<t>A Retry Delay request message MUST NOT be initiated by a client.
If a server receives a Retry Delay request message this is an error
and the server MUST forcibly abort the connection immediately.</t>

<section anchor="outstanding-operations" title="Outstanding Operations">

<t>At the moment a server chooses to initiate a Retry Delay request message
there may be DNS requests already in flight from client to server on this 
DSO Session, which will arrive at the server after its Retry Delay request message 
has been sent.
The server MUST silently ignore such incoming requests, and MUST NOT generate
any response messages for them. When the Retry Delay request message from the
server arrives at the client, the client will determine that any DNS requests
it previously sent on this DSO Session, that have not yet received a response, now 
will certainly not be receiving any response. Such requests should be considered
failed, and should be retried at a later time, as appropriate.</t>

<t>In the case where some, but not all, of the existing operations on a DSO Session 
have become invalid (perhaps because the server has been reconfigured and is no 
longer authoritative for some of the names),
but the server is terminating all DSO Sessions en masse with a REFUSED (5) RCODE,
the RECONNECT DELAY MAY be zero, indicating that the clients SHOULD immediately
attempt to re-establish operations.</t>

<t>It is likely that some of the attempts will be successful and some will not,
depending on the nature of the reconfiguration.</t>

<t>In the case where a server is terminating a large number of DSO Sessions at once
(e.g., if the system is restarting) and the server doesn’t want to be inundated 
with a flood of simultaneous retries, it SHOULD send different RECONNECT delay 
values to each client.
These adjustments MAY be selected randomly, pseudorandomly, or deterministically
(e.g., incrementing the time value by one tenth of a second for each successive
client, yielding a post-restart reconnection rate of ten clients per second).</t>

</section>
<section anchor="client-reconnection" title="Client Reconnection">

<t>After a DSO Session is closed by the server, the client SHOULD try to reconnect,
to that server, or to another suitable server, if more than one is available.
If reconnecting to the same server, the client MUST respect the indicated delay
before attempting to reconnect.</t>

<t>If a particular server does not want a client to reconnect (the server is being
de-commissioned), it SHOULD set the retry delay to the maximum value (which is
approximately 49.7 days). If the server will only be out of service for a maintenance
period, it should use a value closer to the expected maintenance window and
not default to a very large delay value or clients may not attempt to reconnect
after it resumes service.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
</section>
</section>
<section anchor="sharing" title="Connection Sharing">

<t>As previously specified for DNS over TCP <xref target="RFC7766"/>,
to mitigate the risk of unintentional server overload, DNS clients
MUST take care to minimize the number of concurrent TCP connections
made to any individual server.  It is RECOMMENDED that for any given
client/server interaction there SHOULD be no more than one connection
for regular queries, one for zone transfers, and one for each
protocol that is being used on top of TCP (for example, if the
resolver was using TLS).
However, it is noted that certain primary/secondary configurations
with many busy zones might need to use more than one TCP
connection for zone transfers for operational reasons
(for example, to support concurrent transfers of multiple zones).</t>

<t>A single server may support multiple services, including DNS Updates 
<xref target="RFC2136"/>, DNS Push Notifications <xref target="I-D.ietf-dnssd-push"/>,
and other services, for one or more DNS zones.
When a client discovers that the target server for several different operations
is the same target hostname and port, the client SHOULD use a single
shared DSO Session for all those operations.
A client SHOULD NOT open multiple connections to the same target host and port
just because the names being operated on are different or
happen to fall within different zones.
This is to reduce unnecessary connection load on the DNS server.</t>

<t>However, server implementers and operators should be aware that connection
sharing may not be possible in all cases.
A single host device may be home to multiple independent client software
instances that don’t coordinate with each other.
Similarly, multiple independent client devices behind the same NAT gateway
will also typically appear to the DNS server as different source ports on
the same client IP address.
Because of these constraints, a DNS server MUST be prepared to accept
multiple connections from different source ports on the same client IP address.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="base-tlvs-for-dns-stateful-operations" title="Base TLVs for DNS Stateful Operations">

<t>This section describes the three Base TLVs for DNS Stateful Operations,
Retry Delay, Keepalive, and Encryption Padding.</t>

<section anchor="delay" title="Retry Delay TLV">

<t>The Retry Delay TLV (DSO-TYPE=1) can be used as
a Primary TLV (unacknowledged) in a server-to-client message,
or as a Response Additional TLV in a server-to-client response to a client-to-server request message.</t>

<t>The TYPE-DEPENDENT DATA for the the Retry Delay TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     RETRY DELAY (32 bits)                     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='RETRY DELAY:'>
  A time value, specified as
a 32-bit unsigned integer in network (big endian) byte order in units of milliseconds,
within which the client MUST NOT retry this operation, or retry connecting to this server.</t>
</list></t>

<t>The RECOMMENDED value is 10 seconds.</t>

<section anchor="retry-delay-tlv-used-as-a-primary-tlv" title="Retry Delay TLV used as a Primary TLV">

<t>When sent in a DSO request message, from server to client, the 
Retry Delay TLV (0) is used as a Primary TLV. It is used by a server
to instruct a client to close the DSO Session and underlying connection,
and not to reconnect for the indicated time interval.</t>

<t>In this case it applies to the DSO Session as a whole, and the client MUST begin closing the 
DSO Session, as described in <xref target="retry"/>. The RCODE in the message header 
MUST indicate the reason for the termination:</t>

<t><list style="symbols">
  <t>NOERROR indicates a routine shutdown.</t>
  <t>SERVFAIL indicates that the server is overloaded due to resource exhaustion.</t>
  <t>REFUSED indicates that the server has been reconfigured and is no longer able 
to perform one or more of the functions 
currently being performed on this DSO Session (for example, a DNS Push Notification 
server could be reconfigured such that is is no longer accepting DNS Push 
Notification requests for one or more of the currently subscribed names).</t>
</list></t>

<t>This document specifies only these three RCODE values for Retry Delay request.
Servers sending Retry Delay requests SHOULD use one of these three values.
However, future circumstances may create situations where other RCODE values
are appropriate in Retry Delay requests, so clients MUST be prepared
to accept Retry Delay requests with any RCODE value.</t>

<t>A Retry Delay request is an unacknowledged request message;
the MESSAGE ID MUST be set to zero in the request
and the client MUST NOT send a response.</t>

</section>
<section anchor="retry-delay-tlv-used-as-a-response-additional-tlv" title="Retry Delay TLV used as a Response Additional TLV">

<t>In the case of a client request that returns a nonzero RCODE value,
the server MAY append a Retry Delay TLV (0) to the response,
indicating the time interval during which the client
SHOULD NOT attempt this operation again.</t>

<t>The indicated time interval during which the client SHOULD NOT retry
applies only to the failed operation, not to the DSO Session as a whole.</t>

</section>
<section anchor="retry-delay-tlv-is-used-by-server-only" title="Retry Delay TLV is used by server only">

<t>A client MUST NOT send a Retry Delay TLV to a server,
either in a DSO request message, or in a DSO response message.
If a server receives a DSO message containing a Retry Delay TLV,
this is a fatal error and the server MUST forcibly abort the connection immediately.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="keepalive" title="Keepalive TLV">

<t>The Keepalive TLV (DSO-TYPE=2) performs two functions: to reset the
keepalive timer for the DSO Session and to establish the values for the Session Timeouts.</t>

<t>The Keepalive TLV resets only the keepalive timer, not the inactivity timer.
The reason for this is that periodic Keepalive TLVs are sent for the
sole purpose of keeping a DSO Session alive, because that DSO Session has current
or recent non-maintenance activity that warrants keeping the DSO Session alive.
If sending keepalive traffic itself were to reset the inactivity timer, then 
that would create a circular livelock where keepalive traffic would be sent 
indefinitely to keep a DSO Session alive, where the only activity on that DSO 
Session would be the keepalive traffic keeping the DSO Session alive so that further 
keepalive traffic can be sent.</t>

<t>Sending keepalive traffic is considered a maintenance activity
that is performed in service of other client activities.
Sending keepalive traffic itself is not considered a client activity.
For a DSO Session to be considered active,
it must be carrying something more than just keepalive traffic.
This is why merely sending a Keepalive TLV does not reset the inactivity timer.</t>

<t>When sent by a client, the Keepalive request message MUST
be sent as an acknowledged request, with a nonzero MESSAGE ID.
It resets a DSO Session’s keepalive timer, and at the same time requests what the
Session Timeout values should be from this point forward in the DSO Session.
If a server receives a Keepalive request message with a zero MESSAGE ID
then this is a fatal error and the server MUST forcibly abort the connection immediately.</t>

<t>Once a DSO Session is in progress (see <xref target="details"/>)
the Keepalive TLV also MAY be initiated by a server.
When sent by a server, the Keepalive request message MUST
be sent as an unacknowledged request, with the MESSAGE ID set to zero.
It resets a DSO Session’s keepalive timer, and unilaterally informs the client of
the new Session Timeout values to use from this point forward in this DSO Session.
No client response to this unilateral declaration is required or allowed.
If a client receives a Keepalive request message with a nonzero MESSAGE ID
then this is a fatal error and the client MUST forcibly abort the connection immediately.</t>

<t>The Keepalive TLV is not used as an Additional TLV.</t>

<t>The Keepalive TLV is only used as a Response TLV in response messages
replying to a Keepalive request message from the client.
A Keepalive TLV MUST NOT be added as to other responses a Response Additional TLV.
If the server wishes to update a client’s Session Timeout values
other than in response to a Keepalive request message from the client,
then it does so by sending an unacknowledged Keepalive request message
of its own, as described above.</t>

<t>It is not required that the Keepalive TLV be used in every DSO Session.
While many DNS Stateful operations
will be used in conjunction with a long-lived session state,
not all DNS Stateful operations require long-lived session state,
and in some cases the default 15-second value for both the inactivity timeout
and keepalive interval may be perfectly appropriate.
However, note that for clients that implement only the TLVs defined in
this document it is the only way for a client to initiate a DSO Session.</t>

<t>The TYPE-DEPENDENT DATA for the the Keepalive TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 INACTIVITY TIMEOUT (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 KEEPALIVE INTERVAL (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='INACTIVITY TIMEOUT:'>
  The inactivity timeout for the current DSO Session, specified as
a 32-bit unsigned integer in network (big endian) byte order in units of milliseconds.
This is the timeout at which the client MUST begin closing an inactive DSO Session.
The inactivity timeout can be any value of the server’s choosing.
If the client does not gracefully close an inactive DSO
Session, then after twice this interval, or five seconds,
whichever is greater, the server will forcibly abort the connection.</t>
  <t hangText='KEEPALIVE INTERVAL:'>
  The keepalive interval for the current DSO Session, specified as
a 32-bit unsigned integer in network (big endian) byte order in units of milliseconds.
This is the interval at which a client MUST generate keepalive
traffic to maintain connection state.
The keepalive interval MUST NOT be less than ten seconds.
If the client does not generate the mandated keepalive traffic,
then after twice this interval the server will forcibly abort the connection.
Since the minimum allowed keepalive interval is ten seconds, the
minimum time at which a server will forcibly disconnect a client for
failing to generate the mandated keepalive traffic is twenty seconds.</t>
</list></t>

<t>In a client-initiated DSO Keepalive message,
the Session Timeouts contain the client’s requested values.
In a server response to a client-initiated message, the Session Timeouts contain 
the server’s chosen values, which the client MUST respect.
This is modeled after the DHCP protocol, where the client
requests a certain lease lifetime using DHCP option 51 <xref target="RFC2132"/>,
but the server is the ultimate authority
for deciding what lease lifetime is actually granted.</t>

<t>In a server-initiated DSO Keepalive message, the Session Timeouts
unilaterally inform the client of the new values from this point
forward in this DSO Session. The client MUST NOT generate a
response to the server-initiated DSO Keepalive message.</t>

<t>When a client is sending its second and subsequent Keepalive DSO 
requests to the server, the client SHOULD continue to request its preferred 
values each time. This allows flexibility, so that if conditions change during 
the lifetime of a DSO Session, the server can adapt its responses to better fit 
the client’s needs.</t>

<section anchor="client-handling-of-received-session-timeout-values" title="Client handling of received Session Timeout values">

<t>When a client receives a response to its client-initiated DSO Keepalive message,
or receives a server-initiated DSO Keepalive message, the client has then 
received Session Timeout values dictated by the server. The two timeout values 
contained in the DSO Keepalive TLV from the server may each be higher, lower, or 
the same as the respective Session Timeout values the client previously had for 
this DSO Session.</t>

<t>In the case of the keepalive timer, the handling of the received value is 
straightforward. The act of receiving the message containing the DSO Keepalive 
TLV itself resets the keepalive timer and updates the keepalive interval for the 
DSO Session. The new keepalive interval indicates the 
maximum time that may elapse before another message must be sent
or received on this DSO Session, if the DSO Session is to remain alive.</t>

<t>In the case of the inactivity timeout, the handling of the received value 
is a little more subtle, though the meaning of the inactivity 
timeout is unchanged — it still indicates the maximum permissible time allowed 
without useful activity on a DSO Session.
The act of receiving the message containing the DSO Keepalive TLV does not
itself reset the inactivity timer. The time elapsed since the last useful
activity on this DSO Session is unaffected by exchange of DSO Keepalive messages.
The new inactivity timeout value in the DSO Keepalive TLV in the received message
does update the timeout associated with the running inactivity timer;
that becomes the new maximum permissible time without activity on a DSO Session.</t>

<t><list style="symbols">
  <t>If the current inactivity timer value is not greater than the
new inactivity timeout, then the DSO Session may remain open for now.
When the inactivity timer value exceeds the new inactivity timeout,
the client MUST then begin closing the DSO Session, as described above.</t>
  <t>If the current inactivity timer value is already greater
than the new inactivity timeout, then this DSO Session has
already been inactive for longer than the server permits,
and the client MUST immediately begin closing this DSO Session.</t>
  <t>If the current inactivity timer value is already more than twice the
new inactivity timeout, then the client is immediately considered delinquent
(this DSO Session is immediately eligible to be forcibly terminated by the server)
and the client MUST immediately begin closing this DSO Session.
However if a server abruptly reduces the inactivity timeout in this
way, then, to give the client time to close the connection gracefully
before the server resorts to forcibly aborting it, the server
SHOULD give the client an additional grace period of one quarter
of the new inactivity timeout, or five seconds, whichever is greater.</t>
</list></t>

</section>
<section anchor="relation-to-edns0-tcp-keepalive-option" title="Relation to EDNS(0) TCP Keepalive Option">

<t>The inactivity timeout value in the Keepalive TLV (DSO-TYPE=2) has similar
intent to the EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>.
A client/server pair that supports DSO MUST NOT use the
EDNS(0) TCP KeepAlive option within any message after a DSO 
Session has been established.
Once a DSO Session has been established, if either
client or server receives a DNS message over the DSO Session that contains an
EDNS(0) TCP Keepalive option, this is an error and the receiver of the
EDNS(0) TCP Keepalive option MUST forcibly abort the connection immediately.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="padding" title="Encryption Padding TLV">

<t>The Encryption Padding TLV (DSO-TYPE=3) can only be used as
an Additional or Response Additional TLV.
It is only applicable when the DSO Transport layer uses encryption
such as TLS.</t>

<t>The TYPE-DEPENDENT DATA for the the Padding TLV is optional and is a
variable length field containing non-specified values. A DATA LENGTH
of 0 essentially provides for 4 octets of padding (the minimum amount).</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   /                                                               /
   /                   VARIABLE NUMBER OF OCTETS                   /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t>As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
the PADDING octets SHOULD be set to 0x00.  Other values MAY be used,
for example, in cases where there is a concern that the padded
message could be subject to compression before encryption.
PADDING octets of any value MUST be accepted in the messages received.</t>

<t>The Encryption Padding TLV may be included in either a DSO request, response, or both.
As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
if a request is received with an Encryption Padding TLV,
then the response MUST also include an Encryption Padding TLV.</t>

<t>The length of padding is intentionally not specified in this document and
is a function of current best practices with respect to the type and length
of data in the preceding TLVs <xref target="I-D.ietf-dprive-padding-policy"/>.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="summary" title="Summary">

<t>This section summarizes some noteworthy highlights about
various components of the DSO protocol.</t>

<section anchor="message-id" title="MESSAGE ID">

<t>In DSO Request Messages the MESSAGE ID may be either
nonzero (signaling that the responder MUST generate a response)
or zero (signaling that the responder MUST NOT generate a response).</t>

<t>In DSO Response Messages the MESSAGE ID MUST NOT be zero
(since this would be a response to a request that had
indicated that a response is not allowed).</t>

<t>The table below illustrates the legal combinations:</t>

<figure><artwork><![CDATA[
                          +--------------------+-------------------+
                          | Nonzero MESSAGE ID |  Zero MESSAGE ID  |
   +----------------------+--------------------+-------------------+
   | DSO Request Message  |         X          |         X         |
   +----------------------+--------------------+-------------------+
   | DSO Response Message |         X          |                   |
   +----------------------+--------------------+-------------------+
]]></artwork></figure>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="tlv-usage" title="TLV Usage">

<t>The table below indicates, for each of the three TLVs defined in this
document, whether they are valid in each of ten different contexts.</t>

<t>The first five contexts are requests from client to server,
and the corresponding responses from server back to client:</t>

<t><list style="symbols">
  <t>C-P - Primary TLV,
sent in DSO Request message,
from client to server,
with nonzero MESSAGE ID indicating that this request MUST generate response message.</t>
  <t>C-U - Primary TLV (unacknowledged),
sent in DSO Request message,
from client to server,
with zero MESSAGE ID indicating that this request MUST NOT generate response message.</t>
  <t>C-A - Additional TLV, optionally added to request message from client to server.</t>
  <t>CRP - Response Primary TLV, included in response message sent to back the client
(in response to a client “C-P” request with nonzero MESSAGE ID indicating that a response is required)
where the DSO-TYPE of the Response TLV matches the DSO-TYPE of the Primary TLV in the request.</t>
  <t>CRA - Response Additional TLV, included in response message sent to back the client
(in response to a client “C-P” request with nonzero MESSAGE ID indicating that a response is required)
where the DSO-TYPE of the Response TLV does not match the DSO-TYPE of the Primary TLV in the request.</t>
</list></t>

<t>The second five contexts are the reverse: requests from server to client,
and the corresponding responses from client back to server.</t>

<figure><artwork><![CDATA[
              +-------------------------+-------------------------+
              | C-P  C-U  C-A  CRP  CRA | S-P  S-U  S-A  SRP  SRA |
 +------------+-------------------------+-------------------------+
 | RetryDelay |                      X  |       X                 |
 +------------+-------------------------+-------------------------+
 | KeepAlive  |  X              X       |       X                 |
 +------------+-------------------------+-------------------------+
 | Padding    |            X         X  |            X         X  |
 +------------+-------------------------+-------------------------+
]]></artwork></figure>

<t>It is recommended that definitions of future TLVs include a
similar table summarizing the contexts where the new TLV is valid.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="inactivity-timeout" title="Inactivity Timeout">

<t>The Inactivity Timeout may have any 32-bit unsigned integer value.</t>

<t>The value zero informs the client that it
should not speculatively maintain idle connections at all, and
as soon as the client has completed the operation or operations relating
to this server, the client should immediately begin closing this session.</t>

<t>The maximum possible value,
0xFFFFFFFF (2^32-1 milliseconds, approximately 49.7 days),
informs the client that it may keep an idle connection open as long as it wishes.</t>

<t>The Inactivity timer is reset by any message <spanx style="strong">except</spanx> the Keepalive TLV,
and remains cleared any time that an operation is outstanding.</t>

</section>
<section anchor="keepalive-interval" title="Keepalive Interval">

<t>The Keepalive Interval is a 32-bit unsigned integer value,
with a minimum value of 10,000 milliseconds (10 seconds).</t>

<t>The maximum possible value,
0xFFFFFFFF (2^32-1 milliseconds, approximately 49.7 days),
informs the client that it should generate no keepalive traffic.</t>

<t>Any message exchange (including the Keepalive TLV) resets the Keepalive timer.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="dso-opcode-registration" title="DSO OPCODE Registration">

<t>The IANA is directed to record the value (tentatively) 6 for the DSO OPCODE
in the DNS OPCODE Registry.</t>

</section>
<section anchor="dso-rcode-registration" title="DSO RCODE Registration">

<t>The IANA is directed to record the value (tentatively) 11 for the DSONOTIMP error code
in the DNS RCODE Registry.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="dso-type-code-registry" title="DSO Type Code Registry">

<t>The IANA is directed to create the 16-bit DSO Type Code Registry,
with initial (hexadecimal) values as shown below:</t>

<texttable>
      <ttcol align='left'>Type</ttcol>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Status</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>0000</c>
      <c>Reserved</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0001</c>
      <c>RetryDelay</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0002</c>
      <c>KeepAlive</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0003</c>
      <c>EncryptionPadding</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0004-003F</c>
      <c>Unassigned, reserved for    DSO session-management TLVs</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0040-F7FF</c>
      <c>Unassigned</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>F800-FBFF</c>
      <c>Reserved for experimental/local use</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>FC00-FFFF</c>
      <c>Reserved for future expansion</c>
      <c>&#160;</c>
      <c>&#160;</c>
</texttable>

<t>DSO Type Codes in the “experimental/local” range F800-FBFF
may be used as Experimental Use or Private Use values <xref target="RFC5226"/>
and may be used freely for development purposes,
or for other purposes within a single site.
No attempt is made to prevent multiple sites from using
the same value in different (and incompatible) ways.
There is no need for IANA to review such assignments
(since IANA does not record them) and assignments
are not generally useful for broad interoperability.
It is the responsibility of the sites making use of
“experimental/local” values to ensure that no
conflicts occur within the intended scope of use.</t>

<t>Registration of new DSO Type Codes in
the “Reserved for future expansion” range FC00-FFFF
and “Unassigned, reserved for DSO session-management TLVs” range 0003-003F
requires publication of an IETF Standards Action document <xref target="RFC5226"/>.</t>

<t>Requests to register additional new DSO Type Codes
in the “Unassigned” range 0040-F7FF
are to be recorded by IANA after consultation with the
registry’s Designated Expert <xref target="RFC5226"/> at that time.
At the time of publication of this document, the Designated Expert
for the newly created DSO Type Code registry is [<spanx style="strong">TBD</spanx>].</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>If this mechanism is to be used with DNS over TLS, then these messages
are subject to the same constraints as any other DNS-over-TLS messages
and MUST NOT be sent in the clear before the TLS session is established.</t>

<t>The data field of the “Encryption Padding” TLV could be used as a covert channel.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to
Tim Chown,
Ralph Droms,
Jan Komissar,
Manju Shankar Rao,
and Ted Lemon
for their helpful contributions to this document.</t>

<t><vspace blankLines='999' /></t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC1035;
&RFC7766;
&RFC6891;
&RFC7828;
&RFC2119;
&RFC7830;
&RFC1034;
&RFC2136;
&RFC1918;
&RFC5382;
&RFC2132;
&RFC5226;


    </references>

    <references title='Informative References'>

<reference anchor="NagleDA" target="http://www.stuartcheshire.org/papers/nagledelayedack/">
  <front>
    <title>TCP Performance problems caused by interaction between Nagle's Algorithm and Delayed ACK</title>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization></organization>
    </author>
    <date year="2005" month="May" day="20"/>
  </front>
</reference>
&RFC7858;
&I-D.ietf-dnssd-push;
&I-D.sctl-dnssd-mdns-relay;
&RFC6763;
&RFC0768;
&RFC7413;
&I-D.ietf-tls-tls13;
&RFC1122;
&I-D.ietf-dprive-padding-policy;


    </references>



  </back>

<!-- ##markdown-source:
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
/O8Z/w/9Z/6K/4IxDuFX6kj/FOJjph5T8LjDzuNPjuBB9RV8UlcRXzf8+hF8
eHF6/ucXx2cv8a/s0VswAJbBh1R8RvdbSlamWtrX5GfxT3HQxzjNfzt58+r4
7DX+FTO3TumVsA76J0JyG/TgeIc21eiiHMMxg5MoCwlHe0KLJizGJ7pJJrIP
A+Ej38E356cv3l2cnkT7Ms9AXdNqtetymYcqS/S7H3no43eXP+PfYNxj8S0R
M+idztERTyOaEmZLUvHmzuTcu5CjR45rJqzalpXjwhDlalUWyljQh+o63v4O
qLaYq/OfdWycAmnHcvkVei1QPXZwhnCB+qXiApSiOmGBTYG14c9q/Z0/2f1w
sJS1rju539nIAwVwpE14F/EzvvmxEuh8HSCxExaCDjVXMuRA2go2MLyZdnCV
PggW48cH87pEdP9nt6PMY48zlAgdg8nI8jgldh776fI6qiiikgZfO3Lt/NpQ
Z7EPkhljCCdtj65ir0ONgRaMrurhVyOXBjyZn6EqPIXXlto1HX9lsvTOnOYv
T5Um2XJHpvSvS5Q+7g11xsqarRdMlHZ5HSU9DyUQ/x+QDT3x4G8GYwfUdyvv
l9+VdRKnO/VALB7tNGRivA1pysn+x4+SmOHxmnzl4WpXaShu3rd53ezaL8l5
diHnuY2dNTnQUU6y+4oE6PtMqTf32fmUZ2KRyHF7cp99Bdw7s5+RRjR4xkA4
LKHBqcdflhndvyAxkQS5y/uYVtW2N91ZSu0OGTg9XBgN4SjfMEfJDBIE4Ru8
rP6aBHTzWnPljPv6tzid2mSF+8P4R59Qz03435JkfiY8p4FjWnNNA8oG2aJ+
kSLsdFUKaL4jWDoodtd1d3R+pZUUPKfv5/J14G00vBRDxej0WHNgfE4cHMMQ
51Ol5Q4xNHHvdj+gVc+4QK+naoEAC6gBN91XW0eFufjGijRTbrC9aKxEZOZC
ascdU2aHFtb5lzKZW1+cyuVWLIzwNCswZQhuRcVYF+3CRSZwz6XS8ZSWlGOF
PlZBv5GpT7PNWdqg1otrpGKioDJvmonBxXYchWkrQYHhC6zwkhko1f7Jt2Vv
pBQUJIo/GBBdFqBkWVy/R/C+LvpE6+HEjg70s0S6Svv+tWpbaHWB3Wcqzgxf
+Y/KFBov/o452Ir97g7KGTEsCx2ONwHjrxVKyOCs5Rx3qEbqO1Kjsr2bNsg+
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
A9XX+iU5hI5YHBrTrUXqdF93a4qPNVhagNrl5Y3khvTUUpCdC425OQtG52Zh
Ox5b7d/SIgiZxM79QnEnKQyMEHLdAcTYZqgCvHVwc6Na7lGUw6/AqYoTNCpM
E5PoCLYAolko2J9/laM2sOO9fKhSoSCaQjzOlgHG8Y5Lypb5FReWpwY67CXE
EELlW8A21x7ORg5pciUOFZOTWu5AUdnSAtBauYga4RomyIk1sQyoh82nwUKW
WlmSf6dl17sah6LevLgOSscEA+fCd6Kt+6bush+uiWScryg+g4KkOesD6ZbB
jynwk1ybhAGt3GIf47xT83dQAA3viSy1tU4nqKy/hzB6Q3egHei1bTUEGTzP
CAwuqZ4tMiGXpgTLWwgvNexbNGLDtF9EI/16aX/zP6OMfjGtbIqcoDTko+1J
Si4XtA+7U3Q39R0EE9trmLyc9Hjx6LkwIcy+WqahDKQvrsQxCjBO5vfIKh+g
ve41uw/5We3uS8ivq0cIs/TqftFS84d+ROKox0gQP2kHdubAdGL3Cqmcw/vi
QaUKEzluvdzCG9P5nGeAiYAkMEKvuUHLZeLaYXoFY0u5bT1IoNV+WnP8LuL6
drFftrRQbZrYPlxpC03uXL3BcV250LypljuI8P0e8GTL9gT3Sby56kvHJDPC
DETX5S/XmEnj+xn2NJlxCprSUYAUfxGF2ZbjlaJnmmxC5VG4AxOhyAY62Mjs
d4xA/h5JNw9t2BQKcfTdWOA+7R5eXUGLud04Wk/ZBQmDoeYCt4xjSgH1570V
ha+MYCtQsd6jIbygwJOazV2UcQlsDHl3DMfVvR54K9hp69s0gNgYzH2feEPn
fv9fHm04e338/PLsz2eXf00uz16dvnl3uSvg8BtGGwZn9MfT07fHL8/+DCLi
9eXp+Z+PX/6DZuS6e4FhkMveKxNqdQqGIvJV//2DJSbefh1666Hp1hs8iZ3r
A/0GJm5grWIPhSLPpZUr39QMV6cwZ9znwKv5IYmhJxPPpM2KFRoXuSXFUWua
3TPNro1OuyvToEt1evY9fPGf6uz9rPzhp9HR78iLtIW7bHX7hvj7wOKtWjJc
eaiXCHQmjDkUFG7HkBR1YZAGvvRsL/JCEjkJELdZqTI7VP43LIX7DOvPyLQz
u9w7h5DeG84BvnShgOl994Hmcgu/35oA5VlANZlSUb0FYtnp3PayqWvSnNA3
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
VK01VKNHDAoCOVXc/wI8eIsLH1EBAA==

-->

</rfc>

