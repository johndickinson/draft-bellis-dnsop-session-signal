<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.7 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC7766 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7766.xml">
<!ENTITY RFC6891 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6891.xml">
<!ENTITY RFC7828 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7828.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC8174 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY RFC2136 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2136.xml">
<!ENTITY RFC7830 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7830.xml">
<!ENTITY RFC1034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC1918 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1918.xml">
<!ENTITY RFC5382 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5382.xml">
<!ENTITY RFC2132 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2132.xml">
<!ENTITY RFC5226 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5226.xml">
<!ENTITY RFC7858 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7858.xml">
<!ENTITY I-D.ietf-dnssd-push SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dnssd-push.xml">
<!ENTITY I-D.sctl-dnssd-mdns-relay SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.sctl-dnssd-mdns-relay.xml">
<!ENTITY RFC6763 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6763.xml">
<!ENTITY RFC0768 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.0768.xml">
<!ENTITY RFC2782 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2782.xml">
<!ENTITY RFC6335 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6335.xml">
<!ENTITY RFC7413 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7413.xml">
<!ENTITY I-D.ietf-tls-tls13 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-tls-tls13.xml">
<!ENTITY RFC1122 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1122.xml">
<!ENTITY I-D.ietf-dprive-padding-policy SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dprive-padding-policy.xml">
]>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-dnsop-session-signal-06" category="std" updates="RFC 7766, RFC 1035">

  <front>
    <title>DNS Stateful Operations</title>

    <author initials="R." surname="Bellis" fullname="Ray Bellis">
      <organization abbrev="ISC">Internet Systems Consortium, Inc.</organization>
      <address>
        <postal>
          <street>950 Charter Street</street>
          <city>Redwood City</city>
          <code>CA 94063</code>
          <country>USA</country>
        </postal>
        <phone>+1 650 423 1200</phone>
        <email>ray@isc.org</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>1 Infinite Loop</street>
          <city>Cupertino</city>
          <code>CA 95014</code>
          <country>USA</country>
        </postal>
        <phone>+1 408 974 3207</phone>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="J." surname="Dickinson" fullname="John Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>jad@sinodun.com</email>
      </address>
    </author>
    <author initials="S." surname="Dickinson" fullname="Sara Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>sara@sinodun.com</email>
      </address>
    </author>
    <author initials="T." surname="Lemon" fullname="Ted Lemon">
      <organization>Barefoot Consulting</organization>
      <address>
        <postal>
          <street>Brattleboro</street>
          <code>VT 05301</code>
          <country>USA</country>
        </postal>
        <email>mellon@fugue.com</email>
      </address>
    </author>
    <author initials="T." surname="Pusateri" fullname="Tom Pusateri">
      <organization>Unaffiliated</organization>
      <address>
        <postal>
          <street></street>
          <city>Raleigh</city>
          <code>NC 27608</code>
          <country>USA</country>
        </postal>
        <phone>+1 919 867 1330</phone>
        <email>pusateri@bangj.com</email>
      </address>
    </author>

    <date year="2018" month="January" day="26"/>

    <area>Internet</area>
    <workgroup>DNSOP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document defines a new DNS OPCODE for DNS Stateful Operations (DSO).
DSO messages communicate operations within persistent
stateful sessions, using type-length-value (TLV) syntax.
Three TLVs are defined that manage session timeouts,
termination, and encryption padding, and 
a framework is defined for extensions to enable new stateful operations.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The use of transports for DNS other than UDP is being increasingly specified,
for example, DNS over TCP <xref target="RFC1035"/> <xref target="RFC7766"/> and DNS over TLS <xref target="RFC7858"/>.
Such transports can offer persistent, long-lived sessions and therefore when
using them for transporting DNS messages it is of benefit to have a mechanism
that can establish parameters associated with those sessions, such as timeouts.
In such situations it is also advantageous to support server-initiated messages.</t>

<t>The existing EDNS(0) Extension Mechanism for DNS <xref target="RFC6891"/> is explicitly
defined to only have “per-message” semantics. While EDNS(0) has been used to
signal at least one session-related parameter (the EDNS(0) TCP Keepalive option
<xref target="RFC7828"/>) the result is less than optimal due to the restrictions
imposed by the EDNS(0) semantics and the lack of server-initiated signalling. 
For example, a server cannot arbitrarily 
instruct a client to close a connection because the server can only send EDNS(0) options 
in responses to queries that contained EDNS(0) options.</t>

<t>This document defines a new DNS OPCODE, DSO (tentatively 6), for DNS Stateful Operations.
DSO messages are used to communicate operations within persistent
stateful sessions, expressed using type-length-value (TLV) syntax.
This document defines an initial set of three TLVs,
used to manage session timeouts, termination, and encryption padding.</t>

<t>The three TLVs defined here are all mandatory for all implementations of DSO.
Further TLVs may be defined in additional specifications.</t>

<t>The format for DSO messages
(<xref target="format"/>) differs somewhat from the traditional DNS message
format used for standard queries and responses.
The standard twelve-byte header is used, but the four count fields
(QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) are set to zero and accordingly their
corresponding sections are not present.
The actual data pertaining to DNS Stateful Operations
(expressed in TLV syntax) is appended to the end of the DNS message header.
When displayed using packet analyzer tools that have not been
updated to recognize the DSO format, this
will result in the DSO data being displayed
as unknown additional data after the end of the DNS message.
It is likely that future updates to these tools will add the ability
to recognize, decode, and display the DSO data.</t>

<t>This new format has distinct advantages over an RR-based format because it
is more explicit and more compact. Each TLV definition is specific
to its use case, and as a result contains no redundant or overloaded fields.
Importantly, it completely avoids conflating DNS Stateful Operations in any way 
with normal DNS operations or with existing EDNS(0)-based functionality.
A goal of this approach is to avoid the operational issues that have
befallen EDNS(0), particularly relating to middlebox behaviour.</t>

<t>With EDNS(0), multiple options may be packed into a single OPT pseudo-RR,
and there is no generalized mechanism for a client to be able to tell
whether a server has processed or otherwise acted upon each individual
option within the combined OPT pseudo-RR.
The specifications for each individual option need to define how each
different option is to be acknowledged, if necessary.</t>

<t>In contrast to EDNS(0), with DSO there is no
compelling motivation to pack multiple operations into a single
message for efficiency reasons, because DSO
always operates using a connection-oriented transport protocol.
Each DSO operation is communicated in its own separate
DNS message, and the transport protocol can take care of packing
several DNS messages into a single IP packet if appropriate.
For example, TCP can pack multiple small DNS messages into a single TCP segment.
This simplification allows for clearer semantics.
Each DSO request message communicates just one primary operation,
and the RCODE in the corresponding response message indicates the
success or failure of that operation.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="terminology" title="Terminology">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and
“OPTIONAL” in this document are to be interpreted as described in
“Key words for use in RFCs to Indicate Requirement Levels” <xref target="RFC2119"/> <xref target="RFC8174"/>.</t>

<t>“DSO” is used to mean DNS Stateful Operation.</t>

<t>The term “connection” means a bidirectional byte (or message) stream,
where the bytes (or messages) are delivered reliably and in-order,
such as provided by using
DNS over TCP <xref target="RFC1035"/> <xref target="RFC7766"/> or DNS over TLS <xref target="RFC7858"/>.</t>

<t>The unqualified term “session” in the context of this document means the exchange of
DNS messages over a connection where:</t>

<t><list style="symbols">
  <t>The connection between client and server is persistent and relatively
long-lived (i.e., minutes or hours, rather than seconds).</t>
  <t>Either end of the connection may initiate messages to the other.</t>
</list></t>

<t>In this document the term “session” is used exclusively as described
above, and is in no way related to the anachronistic term “session”
as used in the obsolete “seven-layer model” that shaped the design
of the failed OSI protocols of the 1980s.</t>

<t>A “DSO Session” is established between two endpoints that acknowledge
persistent DNS state via the exchange of DSO messages over the connection.
This is distinct from a DNS-over-TCP session as described in
the previous specification for DNS over TCP <xref target="RFC7766"/>.</t>

<t>A “DSO Session” is terminated when the underlying connection is closed.
The underlying connection can be closed in two ways:</t>

<t>Where this specification says, “close gracefully,”
that means sending a TLS close_notify (if TLS is in use) followed by a TCP FIN,
or the equivalents for other protocols.
Where this specification requires a connection to be closed gracefully,
the requirement to initiate that graceful close is placed on the client,
to place the burden of TCP’s TIME-WAIT state on the client rather than the server.</t>

<t>Where this specification says, “forcibly abort,”
that means sending a TCP RST,
or the equivalent for other protocols.
In the BSD Sockets API this is achieved by setting the
SO_LINGER option to zero before closing the socket.</t>

<t>In protocol implementation there are generally two kinds of errors
that software writers have to deal with.
The first is situations that arise due to factors in the environment,
such as temporary loss of connectivity. While undesirable, these
situations do not indicate a flaw in the software, and they are
situations that software should generally be able to recover from.
The second is situations that should never happen when communicating
with a correctly-implemented peer.
If they do happen, they indicate a serious flaw in the protocol implementation,
beyond what it is reasonable to expect software to recover from.
This document describes this latter form of error condition as a
“fatal error” and specifies that an implementation encountering
a fatal error condition “MUST forcibly abort the connection immediately”.
Given that these fatal error conditions signify defective software,
and given that defective software is likely to remain defective for
some time until it is fixed, after forcibly aborting a connection,
a client SHOULD refrain from automatically reconnecting to that same
server for at least one hour.</t>

<t>The term “server” means the software with a listening socket, awaiting
incoming connection requests.</t>

<t>The term “client” means the software which initiates a connection
to the server’s listening socket.</t>

<t>The terms “initiator” and “responder” correspond respectively to the
initial sender and subsequent receiver of a DSO request message,
regardless of which was the “client” and “server” in the usual DNS sense.</t>

<t>The term “sender” may apply to
either an initiator (when sending a DSO request message)
or a responder (when sending a DSO response message).</t>

<t>Likewise, the term “receiver” may apply to
either a responder (when receiving a DSO request message)
or an initiator (when receiving a DSO response message).</t>

<t>The term “long-lived operations” refers to operations
such as Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/>,
Discovery Relay interface subscriptions <xref target="I-D.sctl-dnssd-mdns-relay"/>,
and other future long-lived DNS operations that choose to use
DSO as their basis, that establish state that persists beyond
the lifetime of a traditional brief request/response transaction.
This document, the base specification for DNS Stateful Operations,
defines a framework for supporting long-lived operations,
but does not itself define any long-lived operations.
Nonetheless, to appreciate the design rationale behind
DNS Stateful Operations, it is helpful to understand
the kind of long-lived operations that it is intended to support.</t>

<t>DNS Stateful Operations uses three kinds of message:
“DSO request messages”, “DSO response messages”, and
“DSO unacknowledged messages”.
A DSO request message elicits a DSO response message.
DSO unacknowledged messages are unidirectional messages and do not generate any response.</t>

<t>Both DSO request messages and DSO unacknowledged messages are formatted as DNS
request messages (the header QR bit is set to zero, as described in <xref target="format"/>).
One difference is that in DSO request messages the MESSAGE ID field is nonzero;
in DSO unacknowledged messages it is zero.</t>

<t>The content of DSO messages is expressed using type-length-value (TLV) syntax.</t>

<t>In a DSO request message or DSO unacknowledged message
the first TLV is referred to as the “Primary TLV”
and determines the nature of the operation being performed,
including whether it is an acknowledged or unacknowledged operation;
any other TLVs in a DSO request message are referred to as “Additional TLVs”
and serve additional non-primary purposes, which may be related to
the primary purpose, or not, as in the case of the encryption padding TLV.</t>

<t>A DSO response message may contain no TLVs, or it may contain one
or more TLVs as appropriate to the information being communicated.
In the context of DSO response messages,
one or more TLVs with the same DSO-TYPE as the Primary TLV in the
corresponding DSO request message are referred to as “Response Primary TLVs”.
Any other TLVs with different DSO-TYPEs are referred to as “Response Additional TLVs”.
The Response Primary TLV(s), if present, MUST occur first in the response message,
before any Response Additional TLVs.</t>

<t>Two timers (elapsed time since an event) are defined in this document:</t>

<t><list style="symbols">
  <t>an inactivity timer (see <xref target="inactivetimer"/> and <xref target="keepalive"/>)</t>
  <t>a keepalive timer (see <xref target="keepalivetimer"/> and <xref target="keepalive"/>)</t>
</list></t>

<t>The timeouts associated with these timers are called
the inactivity timeout and 
the keepalive interval, respectively. 
The term “Session Timeouts” is used to refer to this pair of timeout values.</t>

<t>Resetting a timer means resetting the timer value to zero and starting the timer again.
Clearing a timer means resetting the timer value to zero but NOT starting the timer again.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="discussion" title="Discussion">

<t>There are several use cases for DNS Stateful operations that can 
be described here.</t>

<t>Firstly, establishing session parameters such as server-defined timeouts is of 
great use in the 
general management of persistent connections. For example, using DSO sessions 
for stub-to-recursive DNS-over-TLS <xref target="RFC7858"/> is more flexible for both the 
client and the server than attempting to manage sessions using just the EDNS(0)
TCP Keepalive option <xref target="RFC7828"/>.
The simple set of TLVs defined in this document is
sufficient to greatly enhance connection management for this use case.</t>

<t>Secondly, DNS-SD <xref target="RFC6763"/> has evolved into a naturally session-based mechanism where,
for example, long-lived subscriptions lend themselves to ‘push’ mechanisms as 
opposed to polling. Long-lived stateful connections and server-initiated 
messages align with this use case <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>A general use case is that DNS traffic is often bursty but session establishment 
can be expensive. One challenge with long-lived connections is to maintain 
sufficient traffic to maintain NAT and firewall state.
To mitigate this issue this document introduces a
new concept for the DNS, that is DSO “Keepalive traffic”.
This traffic carries no DNS data and is not considered ‘activity’
in the classic DNS sense, but serves to maintain state in middleboxes,
and to assure client and server that they still have connectivity to each other.</t>

<t>There are a myriad of other potential use cases for DSO given the versatility 
and extensibility of this specification.</t>

<t><xref target="details"/> of this document describes the protocol details of DNS Stateful Operations
including definitions of three TLVs for session management and encryption padding.
<xref target="lifecycle"/> presents a detailed discussion of the DSO Session lifecycle
including an in-depth discussion of keepalive traffic and session termination.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="details" title="Protocol Details">

<section anchor="establishment" title="DSO Session Establishment">

<t>DSO messages MUST be carried in only protocols and in
environments where a session may be established according to the definition
given above in the Terminology section (<xref target="terminology"/>).</t>

<t>DNS over plain UDP <xref target="RFC0768"/> is not appropriate since it fails on the requirement for
in-order message delivery, and, in the presence of NAT gateways and firewalls
with short UDP timeouts, it fails to provide a persistent bi-directional
communication channel unless an excessive amount of keepalive traffic is used.</t>

<t>At the time of publication, DSO is specified only
for DNS over TCP <xref target="RFC1035"/> <xref target="RFC7766"/>, and
for DNS over TLS over TCP <xref target="RFC7858"/>.
Any use of DSO over some other connection technology needs to be
specified in an appropriate future document.</t>

<t>Determining whether a given connection is using DNS over TCP, or DNS
over TLS over TCP, is outside the scope of this specification, and
must be determined using some out-of-band configuration information.
There is no provision within the DSO specification to
turn TLS on or off during the lifetime of a connection.
For service types where the service instance is discovered
using a DNS SRV record <xref target="RFC2782"/>,
the specification for that service type SRV name <xref target="RFC6335"/>
will state whether the connection uses plain TCP, or TLS over TCP.
For example, the specification for the
“_dns‑push‑tls._tcp” service <xref target="I-D.ietf-dnssd-push"/>,
states that it uses TLS.
It is a common convention that protocols specified to run over TLS
are given IANA service type names ending in “‑tls”.</t>

<t>In some environments it may be known in advance by external means
that both client and server support DSO, and in these cases either
client or server may initiate DSO messages at any time.</t>

<t>However, in the typical case a server will not know in advance whether a
client supports DSO, so in general, unless it is known in advance by other means
that a client does support DSO, a server MUST NOT initiate DSO request messages
or DSO unacknowledged messages
until a DSO Session has been mutually established
by at least one successful DSO request/response exchange
initiated by the client, as described below.
Similarly, unless it is known in advance by other means that a server
does support DSO, a client MUST NOT initiate
DSO unacknowledged messages until after a DSO Session has been mutually established.</t>

<t>A DSO Session is established over a connection by the client
sending a DSO request message, such as a DSO Keepalive request message (<xref target="keepalive"/>),
and receiving a response, with matching MESSAGE ID, and RCODE
set to NOERROR (0), indicating that the DSO request was successful.</t>

<t>If the RCODE in the response is set to DSONOTIMP (tentatively 11) this indicates
that the server does support DSO, but does not support the particular
operation the client requested.
A server implementing DSO MUST NOT return DSONOTIMP
for a DSO Keepalive request message because the Keepalive TLV is mandatory to implement,
but in the future if a client attempts to establish a DSO Session
using a newly-defined response-requiring DSO TLV that the server
does not understand, that would result in a DSONOTIMP response.
If the server returns DSONOTIMP then a DSO Session is not
considered established, but the client is permitted to continue
sending DNS messages on the connection,
including other DSO messages such as the DSO Keepalive,
which may result in a successful NOERROR response,
yielding the establishment of a DSO Session.</t>

<t>If the RCODE is set to any value other than NOERROR (0) or DSONOTIMP
(tentatively 11), then the client MUST assume that the server does
not support DSO. In this case the client is permitted to continue
sending DNS messages on that connection, but the client SHOULD NOT
issue further DSO messages on that connection.</t>

<t>When the server receives a DSO request message
from a client, and transmits a successful NOERROR response to that
request, the server considers the DSO Session established.</t>

<t>When the client receives the server’s NOERROR response to its
DSO request message, the client considers the DSO Session established.</t>

<t>Once a DSO Session has been established,
either end may unilaterally send appropriate DSO messages at any time,
and therefore either client or server may be the initiator of a message.</t>

<t>Once a DSO Session has been established,
clients and servers should behave as described in this specification with
regard to inactivity timeouts and session termination, not as previously
prescribed in the earlier specification for DNS over TCP <xref target="RFC7766"/>.</t>

<t>Note that for clients that implement only the TLVs defined in this base specification,
sending a DSO Keepalive TLV is the only
DSO request message they have available to initiate a DSO Session.
Even for clients that do implement other DSO TLVs, for simplicity
they MAY elect to always send an initial DSO Keepalive
request message as their way of initiating a DSO Session.</t>

<t><vspace blankLines='999' /></t>

<section anchor="sharing" title="Connection Sharing">

<t>As previously specified for DNS over TCP <xref target="RFC7766"/>:</t>

<figure><artwork><![CDATA[
   To mitigate the risk of unintentional server overload, DNS
   clients MUST take care to minimize the number of concurrent
   TCP connections made to any individual server.  It is RECOMMENDED
   that for any given client/server interaction there SHOULD be
   no more than one connection for regular queries, one for zone
   transfers, and one for each protocol that is being used on top
   of TCP (for example, if the resolver was using TLS). However,
   it is noted that certain primary/secondary configurations
   with many busy zones might need to use more than one TCP
   connection for zone transfers for operational reasons (for
   example, to support concurrent transfers of multiple zones).
]]></artwork></figure>

<t>A single server may support multiple services, including DNS Updates 
<xref target="RFC2136"/>, DNS Push Notifications <xref target="I-D.ietf-dnssd-push"/>,
and other services, for one or more DNS zones.
When a client discovers that the target server for several different operations
is the same target hostname and port, the client SHOULD use a single
shared DSO Session for all those operations.
A client SHOULD NOT open multiple connections to the same target host and port
just because the names being operated on are different or
happen to fall within different zones.
This requirement is to reduce unnecessary connection load on the DNS server.</t>

<t>However, server implementers and operators should be aware that connection
sharing may not be possible in all cases.
A single host device may be home to multiple independent client software
instances that don’t coordinate with each other.
Similarly, multiple independent client devices behind the same NAT gateway
will also typically appear to the DNS server as different source ports on
the same client IP address.
Because of these constraints, a DNS server MUST be prepared to accept
multiple connections from different source ports on the same client IP address.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="zero-round-trip-operation" title="Zero Round-Trip Operation">

<t>There is increased awareness today of the performance benefits
of eliminating round trips in session establishment.
Technologies like TCP Fast Open <xref target="RFC7413"/>
and TLS 1.3 <xref target="I-D.ietf-tls-tls13"/>
provide mechanisms to reduce or eliminate
round trips in session establishment.</t>

<t>Similarly, DSO supports zero round-trip operation.</t>

<t>Having initiated a connection to a server, possibly using
zero round-trip TCP Fast Open and/or
zero round-trip TLS 1.3, a client MAY send multiple
response-requiring DSO request messages to the server in succession
without having to wait for a response to the first request message
to confirm successful establishment of a DSO session.</t>

<t>However, a client MUST NOT send non-response-requiring DSO request
messages until after a DSO Session has been mutually established.</t>

<t>Similarly, a server MUST NOT send DSO request messages until it
has received a response-requiring DSO request message from a
client and transmitted a successful NOERROR response for that request.</t>

</section>
<section anchor="middlebox-considerations" title="Middlebox Considerations">

<t>Where an application-layer middlebox (e.g., a DNS proxy, forwarder, or
session multiplexer) is in the path, the middlebox MUST NOT blindly
forward DSO messages in either direction, and MUST treat the inbound
and outbound connections as separate sessions.  This does not preclude
the use of DSO messages in the presence of an IP-layer middlebox, such
as a NAT that rewrites IP-layer and/or transport-layer headers but
otherwise preserves the effect of a single session between the client
and the server.</t>

<t>To illustrate the above, consider a network where a middlebox
terminates one or more TCP connections from clients and multiplexes the
queries therein over a single TCP connection to an upstream server.
The DSO messages and any associated state are specific to the individual
TCP connections.  A DSO-aware middlebox MAY in some circumstances be
able to retain associated state and pass it between the client and
server (or vice versa) but this would be highly TLV-specific.  For
example, the middlebox may be able to maintain a list of which clients
have made Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/> and
make its own subscription(s) on their behalf, relaying any subsequent
notifications to the client (or clients) that have subscribed to that
particular notification.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="format" title="Message Format">

<t>A DSO message begins with
the standard twelve-byte DNS message header <xref target="RFC1035"/>
with the OPCODE field set to the DSO OPCODE (tentatively 6).
However, unlike standard DNS messages, the question section, answer section,
authority records section and additional records sections are not present.
The corresponding count fields (QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) MUST be
set to zero on transmission.</t>

<t>If a DSO message is received where any of the count fields are
not zero, then a FORMERR MUST be returned,
unless a future IETF Standard specifies otherwise.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                          MESSAGE ID                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |QR |    OPCODE     |            Z              |     RCODE     |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     QDCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ANCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     NSCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ARCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                           DSO Data                            /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><vspace blankLines='999' /></t>

<section anchor="header" title="DNS Header Fields in DSO Messages">

<t>In an unacknowledged message the MESSAGE ID field MUST be set to zero.
In an acknowledged request message the MESSAGE ID field MUST
be set to a unique nonzero value, that the initiator is not
currently using for any other active operation on this connection.
For the purposes here, a MESSAGE ID is in use in this DSO Session if the
initiator has used it in a request for which it is still awaiting a response,
or if the client has used it to setup a long-lived operation that has not yet been cancelled.
For example, a long-lived operation could be
a Push Notification subscription <xref target="I-D.ietf-dnssd-push"/> or
a Discovery Relay interface subscription <xref target="I-D.sctl-dnssd-mdns-relay"/>.</t>

<t>Whether a message is acknowledged or unacknowledged is
determined only by the specification for the Primary TLV.
An acknowledgment cannot be requested by including a nonzero message ID
in a message the primary TLV of which is specified to be unacknowledged,
nor can an acknowledgment be prevented by sending a message ID of zero
in a message with a primary TLV that is specified to be acknowledged.
A responder that receives either such malformed message MUST treat it
as a fatal error and forcibly abort the connection immediately.</t>

<t>In a request or unacknowledged message the DNS Header QR bit MUST be zero (QR=0).
If the QR bit is not zero the message is not a request or unacknowledged message.</t>

<t>In a response message the DNS Header QR bit MUST be one (QR=1).<vspace />
If the QR bit is not one the message is not a response message.</t>

<t>In a response message (QR=1) the MESSAGE ID field MUST contain a copy of the value of
the MESSAGE ID field in the request message being responded to.
In a response message (QR=1) the MESSAGE ID field MUST NOT be zero.
If a response message (QR=1) is received where the MESSAGE ID is zero
this is a fatal error and the receiver MUST forcibly abort the connection immediately.</t>

<t>The DNS Header OPCODE field holds the DSO OPCODE value (tentatively 6).</t>

<t>The Z bits are currently unused in DSO messages,
and in both DSO requests and DSO responses the
Z bits MUST be set to zero (0) on transmission and MUST be silently ignored
on reception, unless a future IETF Standard specifies otherwise.</t>

<t><vspace blankLines='999' /></t>

<t>In a DNS request message (QR=0) the RCODE is set according to the definition of the request.
For example, in a Retry Delay request message (<xref target="retry"/>) the RCODE indicates the reason for termination.
However, in most cases, except where clearly specified otherwise,
in a DNS request message (QR=0) the RCODE is set to zero on transmission,
and silently ignored on reception.</t>

<t>The RCODE value in a response message (QR=1) may be one of the following values:</t>

<texttable>
      <ttcol align='right'>Code</ttcol>
      <ttcol align='left'>Mnemonic</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>0</c>
      <c>NOERROR</c>
      <c>Operation processed successfully</c>
      <c>1</c>
      <c>FORMERR</c>
      <c>Format error</c>
      <c>2</c>
      <c>SERVFAIL</c>
      <c>Server failed to process request due to a problem with the server</c>
      <c>3</c>
      <c>NXDOMAIN</c>
      <c>Name Error — Named entity does not exist (TLV-dependent)</c>
      <c>4</c>
      <c>NOTIMP</c>
      <c>DSO not supported</c>
      <c>5</c>
      <c>REFUSED</c>
      <c>Operation declined for policy reasons</c>
      <c>9</c>
      <c>NOTAUTH</c>
      <c>Not Authoritative (TLV-dependent)</c>
      <c>11</c>
      <c>DSONOTIMP</c>
      <c>DSO type code not supported</c>
</texttable>

<t>Use of the above RCODEs is likely to be common in DSO but 
does not preclude the definition and use of other codes in future documents that 
make use of DSO.</t>

<t>If a document defining a new DSO TLV makes use of NXDOMAIN (Name Error)
or NOTAUTH (Not Authoritative) then that document MUST specify the specific
interpretation of these RCODE values in the context of that new DSO TLV.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="dsodata" title="DSO Data">

<t>The standard twelve-byte DNS message header with its
zero-valued count fields is followed by the DSO Data,
expressed using TLV syntax, as described below <xref target="tlvsyntax"/>.</t>

<t>A DSO message may be a request message, a response message, or an unacknowledged message.</t>

<t>A DSO request message or DSO unacknowledged message MUST contain at least one TLV.
The first TLV in a DSO request message or DSO unacknowledged message is referred to as the “Primary TLV”
and determines the nature of the operation being performed,
including whether it is an acknowledged or unacknowledged operation.
In some cases it may be appropriate to include other TLVs in a request message,
such as the Encryption Padding TLV (<xref target="padding"/>),
and these extra TLVs are referred to as the “Additional TLVs”.</t>

<t>A DSO response message may contain no TLVs,
or it may be specified to contain one or more TLVs
appropriate to the information being communicated.</t>

<t>A DSO response message may contain one or more TLVs with
DSO-TYPE the same as the Primary TLV from the corresponding DSO request message,
in which case those TLV(s) are referred to as “Response Primary TLVs”.
A DSO response message is not required to carry Response Primary TLVs.
The MESSAGE ID field in the DNS message header is sufficient to identify
to which DSO request message this response message relates.</t>

<t>A DSO response message may contain one or more TLVs with
DSO-TYPEs different from the Primary TLV from the corresponding DSO request message,
in which case those TLV(s) are referred to as “Response Additional TLVs”.</t>

<t>Response Primary TLV(s), if present, MUST occur first in the response message,
before any Response Additional TLVs.</t>

<t>It is anticipated that most DSO operations will be specified
to use request messages, which generate corresponding responses.
In some specialized high-traffic use cases,
it may be appropriate to specify unacknowledged messages.
Unacknowledged messages can be more efficient on the network,
because they don’t generate a stream of corresponding reply messages.
Using unacknowledged messages can also simplify software
in some cases, by removing need for an initiator to maintain
state while it waits to receive replies it doesn’t care about.
When the specification for a particular TLV states that,
when used as a Primary TLV (i.e., first) in an outgoing DNS request message (i.e., QR=0),
that message is to be unacknowledged,
the MESSAGE ID field MUST be set to zero and
the receiver MUST NOT generate any response message
corresponding to this unacknowledged message.</t>

<t>The previous point, that the receiver MUST NOT generate responses to
unacknowledged messages, applies even in the case of errors.
When a DSO message is received where both the QR bit and the MESSAGE ID field
are zero, the receiver MUST NOT generate any response.
For example, if the DSO-TYPE in the Primary TLV is unrecognized,
then a DSONOTIMP error MUST NOT be returned; instead the receiver
MUST forcibly abort the connection immediately.</t>

<t>Unacknowledged messages MUST NOT be used “speculatively”
in cases where the sender doesn’t know if the receiver supports
the Primary TLV in the message, because there is no way to receive
any response to indicate success or failure of the request message
(the request message does not contain a unique MESSAGE ID with
which to associate a response with its corresponding request).
Unacknowledged messages are only appropriate in cases
where the sender already knows that the receiver supports,
and wishes to receive, these messages.</t>

<t>For example, after a client has subscribed for Push Notifications
<xref target="I-D.ietf-dnssd-push"/>, the subsequent event notifications are
then sent as unacknowledged messages, and this is appropriate
because the client initiated the message stream by virtue of its
Push Notification subscription, thereby indicating its support of
Push Notifications, and its desire to receive those notifications.</t>

<t>Similarly, after an mDNS Relay client has subscribed to receive inbound
mDNS traffic from an mDNS Relay, the subsequent stream of received
packets is then sent using unacknowledged messages, and this
is appropriate because the client initiated the message stream
by virtue of its mDNS Relay link subscription, thereby indicating
its support of mDNS Relay, and its desire to receive inbound mDNS
packets over that DSO session <xref target="I-D.sctl-dnssd-mdns-relay"/>.</t>

<t><vspace blankLines='999' /></t>

<section anchor="tlvsyntax" title="TLV Syntax">

<t>All TLVs, whether used as “Primary”, “Additional”, “Response Primary”,
or “Response Additional”, use the same encoding syntax.</t>

<t>The specification for a TLV states whether that DSO-TYPE may be used in
“Primary”, “Additional”, “Response Primary”, or “Response Additional” TLVs.
The specification for a TLV also states whether,
when used as the Primary (i.e., first) TLV in a DNS request message (i.e., QR=0),
that DSO message is to be acknowledged.
If the DSO message is to be acknowledged, the specification
also states which TLVs, if any, are to be included in the response.
The Primary TLV may or may not be contained in the response,
depending on what is stated in the specification for that TLV.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                            DSO-TYPE                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                        DSO DATA LENGTH                        |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                      TYPE-DEPENDENT DATA                      /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='DSO-TYPE:'>
  A 16-bit unsigned integer, in network (big endian) byte order,
giving the type of the current DSO TLV per the IANA DSO Type Code Registry.</t>
  <t hangText='DSO DATA LENGTH:'>
  A 16-bit unsigned integer, in network (big endian) byte order,
giving the size in bytes of the TYPE-DEPENDENT DATA.</t>
  <t hangText='TYPE-DEPENDENT DATA:'>
  Type-code specific format. The generic DSO machinery treats the
TYPE-DEPENDENT DATA as an opaque “blob” without attempting to interpret it.
Interpretation of the meaning of the TYPE-DEPENDENT DATA for a particular
DSO-TYPE is the responsibility of the software that implements that DSO-TYPE.</t>
</list></t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="request-tlvs" title="Request TLVs">

<t>The first TLV in a DSO request message is the “Primary TLV”
and indicates the operation to be performed.
A DSO request message MUST contain at at least one TLV, the Primary TLV.</t>

<t>Immediately following the Primary TLV, a DSO request message
MAY contain one or more “Additional TLVs”, which specify
additional parameters relating to the operation.</t>

</section>
<section anchor="response-tlvs" title="Response TLVs">

<t>Depending on the operation, a DSO response message MAY contain no TLVs,
because it is simply a response to a previous request message, and the
MESSAGE ID in the header is sufficient to identify the request in question.
Or it may contain a single response TLV, with the same DSO-TYPE as the
Primary TLV in the request message.
Alternatively it may contain one or more TLVs of other
types, or a combination of the above, as appropriate
for the information that needs to be communicated.
The specification for each DSO TLV determines
what TLVs are required in a response to a request using that TLV.</t>

<t>If a DSO response is received for an operation where the specification
requires that the response carry a particular TLV or TLVs,
and the required TLV(s) are not present, then this is a fatal
error and the recipient of the defective response message MUST
forcibly abort the connection immediately.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="unrecognized-tlvs" title="Unrecognized TLVs">

<t>If DSO request is received containing an unrecognized Primary TLV,
with a nonzero MESSAGE ID (indicating that a response is expected),
then the receiver MUST send a response with matching MESSAGE ID,
and RCODE DSONOTIMP (tentatively 11).
The response MUST NOT contain a copy of the unrecognized Primary TLV.</t>

<t>If DSO request is received containing an unrecognized Primary TLV,
with a zero MESSAGE ID (indicating that no response is expected),
then this is a fatal error and the receiver
MUST forcibly abort the connection immediately.</t>

<t>If a DSO request message is received where the Primary TLV is recognized,
containing one or more unrecognized Additional TLVs, the unrecognized
Additional TLVs MUST be silently ignored, and the remainder of the message
is interpreted and handled as if the unrecognized parts were not present.</t>

<t>Similarly, if a DSO response message is received containing one
or more unrecognized TLVs, the unrecognized TLVs MUST be silently
ignored, and the remainder of the message is interpreted and
handled as if the unrecognized parts were not present.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="edns0-and-tsig" title="EDNS(0) and TSIG">

<t>Since the ARCOUNT field MUST be zero, a DSO message
MUST NOT contain an EDNS(0) option in the additional records section.
If functionality provided by current or future EDNS(0) options
is desired for DSO messages, one or more new DSO TLVs
need to be defined to carry the necessary information.</t>

<t>For example, the EDNS(0) Padding Option <xref target="RFC7830"/> used for security purposes
is not permitted in a DSO message,
so if message padding is desired for DSO messages
then the Encryption Padding TLV described in <xref target="padding"/> MUST be used.</t>

<t>Similarly, a DSO message MUST NOT contain a TSIG record.
A TSIG record in a conventional DNS message is added as the last record in
the additional records section, and carries a signature computed over the
preceding message content. Since DSO data appears <spanx style="strong">after</spanx> the additional
records section, it would not be included in the signature calculation. 
If use of signatures with DSO messages becomes necessary in the 
future, a new DSO TLV needs to be defined to perform this function.</t>

<t>Note however that, while DSO <spanx style="strong">messages</spanx> cannot include
EDNS(0) or TSIG records, a DSO <spanx style="strong">session</spanx> is typically used to 
carry a whole series of DNS messages of different kinds, including DSO
messages, and other DNS message types like Query <xref target="RFC1034"/> 
<xref target="RFC1035"/> and Update <xref target="RFC2136"/>, and those messages can carry EDNS(0) and 
TSIG records.</t>

<t>This specification explicitly prohibits use of the
EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>
in <spanx style="strong">any</spanx> messages sent on a DSO Session (because it is obsoleted by
the functionality provided by the DSO Keepalive operation),
but messages may contain other EDNS(0) options as appropriate.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="message-handling" title="Message Handling">

<t>The initiator MUST set the value of the QR bit in the DNS header to
zero (0), and the responder MUST set it to one (1).
Every DSO request message (QR=0) with a nonzero MESSAGE ID field
MUST elicit a corresponding response (QR=1), which MUST have the same
MESSAGE ID in the DNS message header as in the corresponding request.
DSO request messages sent by the client with a nonzero MESSAGE ID field
elicit a response from the server, and
DSO request messages sent by the server with a nonzero MESSAGE ID field
elicit a response from the client.</t>

<t>A DSO request message (QR=0) with a zero MESSAGE ID field MUST NOT elicit a response.</t>

<t>The namespaces of 16-bit MESSAGE IDs are disjoint in each direction.
For example, it is <spanx style="strong">not</spanx> an error for both client and server to send a request
message with the same ID. In effect, the 16-bit MESSAGE ID combined with the 
identity of the initiator (client or server) serves as a 17-bit unique 
identifier for a particular operation on a DSO Session.</t>

<t>As described in <xref target="header"/>, an initiator MUST NOT reuse a
MESSAGE ID that is already in use for an outstanding request
(unless specified otherwise by the relevant specification for the DSO in question).
At the very least, this means that a MESSAGE ID MUST NOT
be reused in a particular direction on a particular DSO
Session while the initiator is waiting for a response to a
previous request using that MESSAGE ID on that DSO Session
(unless specified otherwise by the relevant specification for the DSO in question),
and for a long-lived operation the MESSAGE ID for the operation
MUST NOT be reused while that operation remains active.</t>

<t>If a client or server receives a response (QR=1) where the MESSAGE ID is zero, or is
any other value that does not match the MESSAGE ID of any of its outstanding operations,
this is a fatal error and the recipient MUST forcibly abort the connection immediately.</t>

<section anchor="error-responses" title="Error Responses">

<t>When a DSO unacknowledged message is unsuccessful for some reason,
the responder immediately aborts the connection.</t>

<t>When a DSO request message is unsuccessful for some reason,
the responder returns an error code to the initiator.</t>

<t>In the case of a server returning an error code to a client
in response to an unsuccessful DSO request message, the server MAY choose
to end the DSO Session, or MAY choose to allow the DSO Session to remain open.
For error conditions that only affect the single operation in question, the server SHOULD
return an error response to the client and leave the DSO Session open for further operations.</t>

<t>For error conditions that are likely to make all operations unsuccessful in the
immediate future, the server SHOULD return an error response to the client and then
end the DSO Session by sending a Retry Delay request message, as described in <xref target="retry"/>.</t>

<t>Upon receiving an error response from the server, a client SHOULD NOT
automatically close the DSO Session. An error relating to one particular operation
on a DSO Session does not necessarily imply that all other operations on that
DSO Session have also failed, or that future operations will fail. The client
should assume that the server will make its own decision about whether or not to
end the DSO Session, based on the server’s determination of whether the error
condition pertains to this particular operation, or would also apply to any
subsequent operations. If the server does not end the DSO Session by
sending the client a Retry Delay message (<xref target="retry"/>) then the client
SHOULD continue to use that DSO Session for subsequent operations.</t>

</section>
</section>
<section anchor="dso-response-generation" title="DSO Response Generation">

<t>With most TCP implementations, for DSO requests that generate a response,
the TCP data acknowledgement (generated because data has been received by TCP),
the TCP window update (generated because TCP has delivered that data to the receiving software),
and the DSO response (generated by the receiving application-layer software itself)
are all combined into a single IP packet.
Combining these three elements into a single IP packet
can give a significant improvement in network efficiency.</t>

<t>For DSO requests that do not generate a response,
the TCP implementation generally doesn’t have any way to know
that no response will be forthcoming, so it waits fruitlessly
for the application-layer software to generate a response,
until the Delayed ACK timer fires <xref target="RFC1122"/> (typically 200 milliseconds)
and only then does it send the TCP ACK and window update.
In conjunction with Nagle’s Algorithm at the sender,
this can delay the sender’s transmission of its next
(non-full-sized) TCP segment, while the sender is waiting for
its previous (non-full-sized) TCP segment to be acknowledged,
which won’t happen until the Delayed ACK timer fires.
Nagle’s Algorithm exists to combine multiple small
application writes into more-efficient large TCP segments,
to guard against wasteful use of the network by applications
that would otherwise transmit a stream of small TCP segments,
but in this case Nagle’s Algorithm (created to improve network efficiency)
can interact badly with TCP’s Delayed ACK feature
(also created to improve network efficiency) <xref target="NagleDA"/>
with the result of delaying some messages by up to 200 milliseconds.</t>

<t>Possible mitigations for this problem include:</t>

<t><list style="symbols">
  <t>Disable Nagle’s Algorithm at the sender. This is not great,<vspace />
because it results in less efficient use of the network.</t>
  <t>Disable Delayed ACK at the receiver. This is not great,<vspace />
because it results in less efficient use of the network.</t>
  <t>Use a networking API that lets the receiver signal to the TCP
implementation that the receiver has received and processed a client
request for which it will not be generating any immediate response.
This allows the TCP implementation to operate efficiently in both cases;
for requests that generate a response, the TCP ACK, window update, and
DSO response are transmitted together in a single TCP segment,
and for requests that do not generate a response,
the application-layer software informs the TCP implementation
that it should go ahead and send the TCP ACK and window update
immediately, without waiting for the Delayed ACK timer.
Unfortunately it is not known at this time which (if any) of the
widely-available networking APIs currently include this capability.</t>
</list></t>

</section>
<section anchor="cancellation" title="Responder-Initiated Operation Cancellation">

<t>This document, the base specification for DNS Stateful Operations,
does not itself define any long-lived operations,
but it defines a framework for supporting long-lived operations,
such as Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/> and
Discovery Relay interface subscriptions <xref target="I-D.sctl-dnssd-mdns-relay"/>.</t>

<t>Generally speaking, a long-lived operation is initiated by the initiator,
and, if successful, remains active until the initiator terminates the operation.</t>

<t>However, it is possible that a long-lived operation may be valid
at the time it was initiated, but then a later change of circumstances
may render that previously valid operation invalid.</t>

<t>For example, a long-lived client operation may pertain to a name
that the server is authoritative for, but then the server configuration
is changed such that it is no longer authoritative for that name.</t>

<t>In such cases, instead of terminating the entire session
it may be desirable for the responder to be able to cancel
selectively only those operations that have become invalid.</t>

<t>The responder performs this selective cancellation by sending
a new response message, with the MESSAGE ID field containing the
MESSAGE ID of the long-lived operation that is to be terminated
(that it had previously acknowledged with a NOERROR RCODE), and the
RCODE field of the new response message giving the reason for cancellation.</t>

<t>After a response message with nonzero RCODE has been sent,
that operation has been terminated from the responder’s point of view,
and the responder sends no more messages relating to that operation.</t>

<t>After a response message with nonzero RCODE has been received by the initiator,
that operation has been terminated from the initiator’s point of view,
and the cancelled operation’s MESSAGE ID is now free for reuse.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="lifecycle" title="DSO Session Lifecycle and Timers">

<section anchor="dso-session-initiation" title="DSO Session Initiation">

<t>A DSO Session begins as described in <xref target="establishment"/>.</t>

<t>The client may perform as many DNS operations as it wishes using the
newly created DSO Session. Operations SHOULD be pipelined (i.e., the
client doesn’t need wait for a response before sending the next message).
The server MUST act on messages in the order they are transmitted, but
responses to those messages SHOULD be sent out of order when appropriate.</t>

</section>
<section anchor="sessiontimeouts" title="DSO Session Timeouts">

<t>Two timeout values are associated with a DSO Session:
the inactivity timeout, and the keepalive interval. 
Both values are communicated in the same TLV, the DSO Keepalive TLV (<xref target="keepalive"/>).</t>

<t>The first timeout value, the inactivity timeout, is the maximum time for which
a client may speculatively keep a DSO Session open in the expectation that
it may have future requests to send to that server.</t>

<t>The second timeout value, the keepalive interval, is the maximum permitted
interval between messages if the client wishes to keep the DSO Session alive.</t>

<t>The two timeout values are independent. The inactivity timeout may be lower,
the same, or higher than the keepalive interval, though in most cases the
inactivity timeout is expected to be shorter than the keepalive interval.</t>

<t>A shorter inactivity timeout with a longer keepalive interval signals
to the client that it should not speculatively keep an inactive DSO
Session open for very long without reason, but when it does have an
active reason to keep a DSO Session open, it doesn’t need to be sending
an aggressive level of keepalive traffic to maintain that session.</t>

<t>A longer inactivity timeout with a shorter keepalive interval
signals to the client that it may speculatively keep an inactive
DSO Session open for a long time, but to maintain that inactive
DSO Session it should be sending a lot of keepalive traffic.
This configuration is expected to be less common.</t>

<t>In the usual case where the inactivity timeout is shorter than the keepalive
interval, it is only when a client has a very long-lived, low-traffic, operation
that the keepalive interval comes into play, to ensure that a sufficient
residual amount of traffic is generated to maintain NAT and firewall state
and to assure client and server that they still have connectivity to each other.</t>

<t>On a new DSO Session, if no explicit DSO Keepalive message exchange has taken 
place, the default value for both timeouts is 15 seconds.</t>

<t>For both timeouts, lower values of the timeout result in higher network traffic
and higher CPU load on the server.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="inactive-dso-sessions" title="Inactive DSO Sessions">

<t>At both servers and clients, the generation or reception of any complete
DNS message, including DNS requests, responses, updates, or DSO
messages, resets both timers for that DSO Session, with the exception
that a DSO Keepalive message resets only the keepalive timer,
not the inactivity timeout timer.</t>

<t>In addition, for as long as the client has an outstanding operation in progress,
the inactivity timer remains cleared, and an inactivity timeout cannot occur.</t>

<t>For short-lived DNS operations like traditional queries and updates,
an operation is considered in progress for the time between request and 
response, typically a period of a few hundred milliseconds at most.
At the client, the inactivity timer is cleared upon transmission of a 
request and remains cleared until reception of the corresponding response.
At the server, the inactivity timer is cleared upon reception of a request
and remains cleared until transmission of the corresponding response.</t>

<t>For long-lived DNS Stateful operations (such as
a Push Notification subscription <xref target="I-D.ietf-dnssd-push"/> or
a Discovery Relay interface subscription <xref target="I-D.sctl-dnssd-mdns-relay"/>),
an operation is considered in progress
for as long as the operation is active, until it is cancelled.
This means that a DSO Session can exist, with active operations,
with no messages flowing in either direction, for far longer than the 
inactivity timeout, and this is not an error.
This is why there are two separate timers:
the inactivity timeout, and the keepalive interval.
Just because a DSO Session has no traffic for an extended period of time
does not automatically make that DSO Session “inactive”,
if it has an active operation that is awaiting events.</t>

</section>
<section anchor="inactivetimer" title="The Inactivity Timeout">

<t>The purpose of the inactivity timeout is for the server to balance its trade off 
between the costs of setting up new DSO Sessions and the costs of maintaining inactive 
DSO Sessions. A server with abundant DSO Session capacity can offer a high inactivity timeout, 
to permit clients to keep a speculative DSO Session open for a long time, to save 
the cost of establishing a new DSO Session for future communications with that 
server. A server with scarce memory resources can offer a low inactivity timeout,
to cause clients to promptly close DSO Sessions whenever they have no outstanding
operations with that server, and then create a new DSO Session later when needed.</t>

<section anchor="closing-inactive-dso-sessions" title="Closing Inactive DSO Sessions">

<t>When a connection’s inactivity timeout is reached the client MUST
begin closing the idle connection, but a client is NOT REQUIRED to
keep an idle connection open until the inactivity timeout is reached.
A client MAY close a DSO Session at any time, at the client’s discretion.
If a client determines that it has no current or reasonably
anticipated future need for a currently inactive DSO Session,
then the client SHOULD gracefully close that connection.</t>

<t>If, at any time during the life of the DSO Session,
the inactivity timeout value (i.e., 15 seconds by default) elapses
without there being any operation active on the DSO Session,
the client MUST close the connection gracefully.</t>

<t>If, at any time during the life of the DSO Session,
twice the inactivity timeout value (i.e., 30 seconds by default),
or five seconds, if twice the inactivity timeout value is less than five seconds,
elapses without there being any operation active on the DSO Session,
the server SHOULD consider the client delinquent,
and SHOULD forcibly abort the DSO Session.</t>

<t>In this context, an operation being active on a DSO Session includes
a query waiting for a response, an update waiting for a response,
or an active long-lived operation, but not a DSO Keepalive message exchange itself.
A DSO Keepalive message exchange resets only the keepalive
interval timer, not the inactivity timeout timer.</t>

<t>If the client wishes to keep an inactive DSO Session open for longer
than the default duration then it uses the DSO Keepalive message
to request longer timeout values, as described in <xref target="keepalive"/>.</t>

</section>
<section anchor="values-for-the-inactivity-timeout" title="Values for the Inactivity Timeout">

<t>For the inactivity timeout value, lower values result in
more frequent DSO Session teardown and re-establishment.
Higher values result in lower traffic and lower CPU load on the server,
but higher memory burden to maintain state for inactive DSO Sessions.</t>

<t>A server may dictate any value it chooses for the inactivity timeout
(either in a response to a client-initiated request, or in a server-initiated message)
including values under one second, or even zero.</t>

<t>An inactivity timeout of zero informs the client that it
should not speculatively maintain idle connections at all, and
as soon as the client has completed the operation or operations relating
to this server, the client should immediately begin closing this session.</t>

<t>A server will abort an idle client session after twice the
inactivity timeout value, or five seconds, whichever is greater.
In the case of a zero inactivity timeout value, this means that
if a client fails to close an idle client session then the server
will forcibly abort the idle session after five seconds.</t>

<t>An inactivity timeout of 0xFFFFFFFF (2^32-1 milliseconds, approximately 49.7 days)
informs the client that it may keep an idle connection open as long as it wishes.
Note that after granting an unlimited inactivity timeout in this way,
at any point the server may revise that inactivity timeout by sending
a new Keepalive request message dictating new Session Timeout values to the client.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="keepalivetimer" title="The Keepalive Interval">

<t>The purpose of the keepalive interval is to manage the generation of
sufficient messages to maintain state in middleboxes (such at NAT gateways
or firewalls) and for the client and server to periodically verify that they
still have connectivity to each other. This allows them to clean up state
when connectivity is lost, and attempt re-connection if appropriate.</t>

<section anchor="keepalive-interval-expiry" title="Keepalive Interval Expiry">

<t>If, at any time during the life of the DSO Session,
the keepalive interval value (i.e., 15 seconds by default) elapses
without any DNS messages being sent or received on a DSO Session,
the client MUST take action to keep the DSO Session alive,
by sending a DSO Keepalive message (<xref target="keepalive"/>).
A DSO Keepalive message exchange resets only the keepalive timer, 
not the inactivity timer.</t>

<t>If a client disconnects from the network abruptly,
without cleanly closing its DSO Session,
perhaps leaving a long-lived operation uncancelled,
the server learns of this after failing to
receive the required keepalive traffic from that client.
If, at any time during the life of the DSO Session,
twice the keepalive interval value (i.e., 30 seconds by default) elapses
without any DNS messages being sent or received on a DSO Session,
the server SHOULD consider the client delinquent,
and SHOULD forcibly abort the DSO Session.</t>

</section>
<section anchor="values-for-the-keepalive-interval" title="Values for the Keepalive Interval">

<t>For the keepalive interval value, lower values result in a higher volume of keepalive 
traffic. Higher values of the keepalive interval reduce traffic and CPU load, 
but have minimal effect on the memory burden
at the server, because clients keep a DSO Session open for the same length of time
(determined by the inactivity timeout) regardless of the level of keepalive traffic 
required.</t>

<t>It may be appropriate for clients and servers to select different keepalive 
interval values depending on the nature of the network they are on.</t>

<t>A corporate DNS server that knows it is serving only clients on the internal 
network, with no intervening NAT gateways or firewalls, can impose a higher 
keepalive interval, because frequent keepalive traffic is not required.</t>

<t>A public DNS server that is serving primarily residential consumer clients, 
where it is likely there will be a NAT gateway on the path, may impose a lower 
keepalive interval, to generate more frequent keepalive traffic.</t>

<t>A smart client may be adaptive to its environment. A client using
a private IPv4 address <xref target="RFC1918"/> to communicate with a DNS server
at an address outside that IPv4 private address block,
may conclude that there is likely to be a NAT gateway on the path,
and accordingly request a lower keepalive interval.</t>

<t>By default it is RECOMMENDED that clients request,
and servers grant, a keepalive interval of 60 minutes.
This keepalive interval provides for reasonably timely detection if
a client abruptly disconnects without cleanly closing the session,
and is sufficient to maintain state in firewalls and NAT gateways
that follow the IETF recommended Best Current Practice that the
“established connection idle-timeout” used by middleboxes
be at least 2 hours 4 minutes <xref target="RFC5382"/>.</t>

<t>Note that the lower the keepalive interval value, the higher the load on client
and server. For example, a hypothetical keepalive interval value of 100ms would result
in a continuous stream of at least ten messages per second, in both directions,
to keep the DSO Session alive. And, in this extreme example, a single packet loss and
retransmission over a long path could introduce a momentary pause in the stream of messages,
long enough to cause the server to overzealously abort the connection.</t>

<t>Because of this concern, the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with a keepalive interval value less than ten seconds.
If a client receives a Keepalive message specifying a keepalive interval value
less than ten seconds this is a fatal error and the client MUST
forcibly abort the connection immediately.</t>

<t>A keepalive interval value of 0xFFFFFFFF (2^32-1 milliseconds, approximately 49.7 days)
informs the client that it should generate no keepalive traffic.
Note that after signaling that the client should generate no keepalive traffic in this way,
at any point the server may revise that keepalive traffic requirement by sending
a new Keepalive request message dictating new Session Timeout values to the client.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="server-initiated-session-termination" title="Server-Initiated Session Termination">

<t>In addition to cancelling individual long-lived operations selectively (<xref target="cancellation"/>)
there are also occasions where a server may need to terminate one or more entire sessions.
An entire session may need to be terminated if the client is defective in some way,
or departs from the network without closing its session.
Sessions may also need to be terminated if the server becomes overloaded,
or if the server is reconfigured and lacks the ability to be selective about
which operations need to be cancelled.</t>

<t>This section discusses various reasons a session may be terminated,
and the mechanisms for doing so.</t>

<t>Normally a server MUST NOT close a DSO Session with a client.
A server only causes a DSO Session to be ended in the exceptional circumstances outlined below.
In normal operation, closing a DSO Session is the client’s responsibility.
The client makes the determination of when to close a DSO
Session based on an evaluation of both its own needs,
and the inactivity timeout value dictated by the server.</t>

<t>Some of the exceptional situations in which a server may terminate a DSO Session include:</t>

<t><list style="symbols">
  <t>The server application software or underlying operating system
is shutting down or restarting.</t>
  <t>The server application software terminates unexpectedly
(perhaps due to a bug that makes it crash).</t>
  <t>The server is undergoing a reconfiguration or maintenance
procedure, that, due to the way the server software is
implemented, requires clients to be disconnected.
For example, some software is implemented such that it reads
a configuration file at startup, and changing the server’s
configuration entails modifying the configuration file
and then killing and restarting the server software,
which generally entails a loss of network connections.</t>
  <t>The client fails to meets its obligation to generate the required
keepalive traffic, or to close an inactive session by the prescribed time
(twice the time interval dictated by the server, or five seconds,
whichever is greater, as described in <xref target="sessiontimeouts"/>).</t>
  <t>The client sends a grossly invalid or malformed request that
is indicative of a seriously defective client implementation.</t>
  <t>The server is over capacity and needs to shed some load.</t>
</list></t>

<section anchor="retry" title="Server-Initiated Retry Delay Request Message">

<t>In the cases described above where a server elects to terminate a
DSO Session, it could do so simply by forcibly aborting the connection.
However, if it did this the likely behavior of the client might be simply to to treat
this as a network failure and reconnect immediately, putting more burden on the server.</t>

<t>Therefore, to avoid this reconnection implosion, a server SHOULD instead choose to
shed client load by sending a Retry Delay request message, with an appropriate RCODE
value informing the client of the reason the DSO Session needs to be terminated.
For example, an RCODE value of SERVFAIL indicates that the server is overloaded
due to resource exhaustion, or is restarting.
An RCODE value of NOTAUTH indicates that the server has been reconfigured and is
no longer able to perform one or more of the functions currently being performed
on this DSO Session because it no longer has authority over the names in question.
An RCODE value of REFUSED indicates a policy change regarding this session.
An RCODE value of FORMERR indicates that the client requests are
too badly malformed for the session to continue.
The format of the Retry Delay TLV is described in <xref target="delay"/>.
After sending a Retry Delay request message,
the server MUST NOT send any further messages on that DSO Session.</t>

<t>Upon receipt of a Retry Delay request message from the server,
the client MUST make note of the reconnect delay for this server,
and then immediately close the connection gracefully.</t>

<t>After sending a Retry Delay request message the server SHOULD allow the
client five seconds to close the connection, and if the client has not
closed the connection after five seconds then the server SHOULD
forcibly abort the connection.</t>

<t>A Retry Delay request message MUST NOT be initiated by a client.
If a server receives a Retry Delay request message this is a fatal error
and the server MUST forcibly abort the connection immediately.</t>

<section anchor="outstanding-operations" title="Outstanding Operations">

<t>At the instant a server chooses to initiate a Retry Delay request message
there may be DNS requests already in flight from client to server on this 
DSO Session, which will arrive at the server after its Retry Delay request message 
has been sent.
The server MUST silently ignore such incoming requests, and MUST NOT generate
any response messages for them. When the Retry Delay request message from the
server arrives at the client, the client will determine that any DNS requests
it previously sent on this DSO Session, that have not yet received a response, now 
will certainly not be receiving any response. Such requests should be considered
failed, and should be retried at a later time, as appropriate.</t>

<t>In the case where some, but not all, of the existing operations on a DSO Session 
have become invalid (perhaps because the server has been reconfigured and is no 
longer authoritative for some of the names),
but the server is terminating all affected DSO Sessions en masse
by sending them all a Retry Delay request message,
the RECONNECT DELAY MAY be zero, indicating that the clients SHOULD immediately
attempt to re-establish operations.</t>

<t>It is likely that some of the attempts will be successful and some will not,
depending on the nature of the reconfiguration.</t>

<t>In the case where a server is terminating a large number of DSO Sessions at once
(e.g., if the system is restarting) and the server doesn’t want to be inundated 
with a flood of simultaneous retries, it SHOULD send different RECONNECT delay 
values to each client.
These adjustments MAY be selected randomly, pseudorandomly, or deterministically
(e.g., incrementing the time value by one tenth of a second for each successive
client, yielding a post-restart reconnection rate of ten clients per second).</t>

</section>
<section anchor="client-reconnection" title="Client Reconnection">

<t>After a DSO Session is ended by the server
(either by sending the client a Retry Delay request message,
or by forcibly aborting the underlying transport connection)
the client SHOULD try to reconnect,
to that server, or to another suitable server, if more than one is available.
If reconnecting to the same server, the client MUST respect the indicated delay,
if available, before attempting to reconnect.</t>

<t>If a particular server does not want a client to reconnect (the server is being
de-commissioned), it SHOULD set the retry delay to the maximum value (which is
approximately 49.7 days). If the server will only be out of service for a maintenance
period, it should use a value closer to the expected maintenance window and
not default to a very large delay value or clients may not attempt to reconnect
after it resumes service.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
</section>
</section>
<section anchor="base-tlvs-for-dns-stateful-operations" title="Base TLVs for DNS Stateful Operations">

<t>This section describes the three base TLVs for DNS Stateful Operations:
Keepalive, Retry Delay, and Encryption Padding.</t>

<section anchor="keepalive" title="Keepalive TLV">

<t>The Keepalive TLV (DSO-TYPE=1) performs two functions:
to reset the keepalive timer for the DSO Session,
and to establish the values for the Session Timeouts.</t>

<t>The TYPE-DEPENDENT DATA for the the Keepalive TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 INACTIVITY TIMEOUT (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 KEEPALIVE INTERVAL (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='INACTIVITY TIMEOUT:'>
  The inactivity timeout for the current DSO Session, specified as
a 32-bit unsigned integer, in network (big endian) byte order, in units of milliseconds.
This is the timeout at which the client MUST begin closing an inactive DSO Session.
The inactivity timeout can be any value of the server’s choosing.
If the client does not gracefully close an inactive DSO
Session, then after twice this interval, or five seconds,
whichever is greater, the server will forcibly abort the connection.</t>
  <t hangText='KEEPALIVE INTERVAL:'>
  The keepalive interval for the current DSO Session, specified as
a 32-bit unsigned integer, in network (big endian) byte order, in units of milliseconds.
This is the interval at which a client MUST generate keepalive
traffic to maintain connection state.
The keepalive interval MUST NOT be less than ten seconds.
If the client does not generate the mandated keepalive traffic,
then after twice this interval the server will forcibly abort the connection.
Since the minimum allowed keepalive interval is ten seconds, the
minimum time at which a server will forcibly disconnect a client for
failing to generate the mandated keepalive traffic is twenty seconds.</t>
</list></t>

<t>The transmission or reception of DSO Keepalive messages
(i.e., messages where the Keepalive TLV is the first TLV)
reset only the keepalive timer, not the inactivity timer.
The reason for this is that periodic Keepalive messages are sent for the sole
purpose of keeping a DSO Session alive, when that DSO Session has current
or recent non-maintenance activity that warrants keeping that DSO Session alive.
Sending keepalive traffic itself is not considered a client activity;
it is considered a maintenance activity that is performed
in service of other client activities.
If keepalive traffic itself were to reset the inactivity timer,
then that would create a circular livelock where keepalive traffic
would be sent indefinitely to keep a DSO Session alive, where the only
activity on that DSO Session would be the keepalive traffic keeping
the DSO Session alive so that further keepalive traffic can be sent.
For a DSO Session to be considered active, it must be carrying
something more than just keepalive traffic.
This is why merely sending or receiving a Keepalive message
does not reset the inactivity timer.</t>

<t>When sent by a client, the Keepalive request message MUST
be sent as an acknowledged request, with a nonzero MESSAGE ID.
If a server receives a Keepalive DSO message with a zero MESSAGE ID then
this is a fatal error and the server MUST forcibly abort the connection immediately.
The Keepalive request message resets a DSO Session’s keepalive timer,
and at the same time communicates to the server the the client’s
requested Session Timeout values.
In a server response to a client-initiated Keepalive request message,
the Session Timeouts contain the server’s chosen values from
this point forward in the DSO Session, which the client MUST respect.
This is modeled after the DHCP protocol, where the client requests a certain
lease lifetime using DHCP option 51 <xref target="RFC2132"/>, but the server is the
ultimate authority for deciding what lease lifetime is actually granted.</t>

<t>When a client is sending its second and subsequent Keepalive DSO requests to
the server, the client SHOULD continue to request its preferred values each time.
This allows flexibility, so that if conditions change during the lifetime of a
DSO Session, the server can adapt its responses to better fit the client’s needs.</t>

<t>Once a DSO Session is in progress (<xref target="establishment"/>)
a Keepalive message MAY be initiated by a server.
When sent by a server, the Keepalive message MUST be
sent as an unacknowledged message, with the MESSAGE ID set to zero.
The client MUST NOT generate a response to a server-initiated DSO Keepalive message.
If a client receives a Keepalive request message with a nonzero MESSAGE ID then
this is a fatal error and the client MUST forcibly abort the connection immediately.
The Keepalive unacknowledged message from the server resets a DSO Session’s keepalive timer,
and at the same time unilaterally informs the client of the new
Session Timeout values to use from this point forward in this DSO Session.
No client DSO response message to this unilateral declaration is required or allowed.</t>

<t>The Keepalive TLV is not used as an Additional TLV.</t>

<t>In response messages the Keepalive TLV is used only as a Response Primary TLV,
replying to a Keepalive request message from the client.
A Keepalive TLV MUST NOT be added as to other responses a Response Additional TLV.
If the server wishes to update a client’s Session Timeout values
other than in response to a Keepalive request message from the client,
then it does so by sending an unacknowledged Keepalive message
of its own, as described above.</t>

<t>It is not required that the Keepalive TLV be used in every DSO Session.
While many DNS Stateful operations
will be used in conjunction with a long-lived session state,
not all DNS Stateful operations require long-lived session state,
and in some cases the default 15-second value for both the inactivity timeout
and keepalive interval may be perfectly appropriate.
However, note that for clients that implement only the TLVs defined in this document,
a Keepalive request message is the only way for a client to initiate a DSO Session.</t>

<section anchor="client-handling-of-received-session-timeout-values" title="Client handling of received Session Timeout values">

<t>When a client receives a response to its client-initiated DSO Keepalive message,
or receives a server-initiated DSO Keepalive message, the client has then 
received Session Timeout values dictated by the server. The two timeout values 
contained in the DSO Keepalive TLV from the server may each be higher, lower, or 
the same as the respective Session Timeout values the client previously had for 
this DSO Session.</t>

<t>In the case of the keepalive timer, the handling of the received value is 
straightforward. The act of receiving the message containing the DSO Keepalive 
TLV itself resets the keepalive timer and updates the keepalive interval for the 
DSO Session. The new keepalive interval indicates the 
maximum time that may elapse before another message must be sent
or received on this DSO Session, if the DSO Session is to remain alive.</t>

<t><vspace blankLines='999' /></t>

<t>In the case of the inactivity timeout, the handling of the received
value  is a little more subtle, though the meaning of the inactivity
timeout remains as specified — it still indicates the maximum
permissible time allowed  without useful activity on a DSO Session.
The act of receiving the message containing the DSO Keepalive TLV does not
itself reset the inactivity timer. The time elapsed since the last useful
activity on this DSO Session is unaffected by exchange of DSO Keepalive messages.
The new inactivity timeout value in the DSO Keepalive TLV in the received message
does update the timeout associated with the running inactivity timer;
that becomes the new maximum permissible time without activity on a DSO Session.</t>

<t><list style="symbols">
  <t>If the current inactivity timer value is less than the
new inactivity timeout, then the DSO Session may remain open for now.
When the inactivity timer value reaches the new inactivity timeout,
the client MUST then begin closing the DSO Session, as described above.</t>
  <t>If the current inactivity timer value is equal to the
new inactivity timeout, then this DSO Session has been
inactive for exactly as long as the server will permit,
and now the client MUST immediately begin closing this DSO Session.</t>
  <t>If the current inactivity timer value is already greater
than the new inactivity timeout, then this DSO Session has
already been inactive for longer than the server permits,
and the client MUST immediately begin closing this DSO Session.</t>
  <t>If the current inactivity timer value is already more than twice the
new inactivity timeout, then the client is immediately considered delinquent
(this DSO Session is immediately eligible to be forcibly terminated by the server)
and the client MUST immediately begin closing this DSO Session.
However if a server abruptly reduces the inactivity timeout in this
way, then, to give the client time to close the connection gracefully
before the server resorts to forcibly aborting it, the server
SHOULD give the client an additional grace period of one quarter
of the new inactivity timeout, or five seconds, whichever is greater.</t>
</list></t>

</section>
<section anchor="relation-to-edns0-tcp-keepalive-option" title="Relation to EDNS(0) TCP Keepalive Option">

<t>The inactivity timeout value in the Keepalive TLV (DSO-TYPE=1) has similar
intent to the EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>.
A client/server pair that supports DSO MUST NOT use the
EDNS(0) TCP KeepAlive option within any message after a DSO 
Session has been established.
Once a DSO Session has been established, if either
client or server receives a DNS message over the DSO Session that contains an
EDNS(0) TCP Keepalive option, this is a fatal error and the receiver of the
EDNS(0) TCP Keepalive option MUST forcibly abort the connection immediately.</t>

</section>
</section>
<section anchor="delay" title="Retry Delay TLV">

<t>The Retry Delay TLV (DSO-TYPE=2) can be used as
a Primary TLV (unacknowledged) in a server-to-client message,
or as a Response Additional TLV in either direction.</t>

<t>The TYPE-DEPENDENT DATA for the the Retry Delay TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     RETRY DELAY (32 bits)                     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='RETRY DELAY:'>
  A time value, specified as
a 32-bit unsigned integer, in network (big endian) byte order, in units of milliseconds,
within which the initiator MUST NOT retry this operation, or retry connecting to this server.</t>
</list></t>

<t>The RECOMMENDED value is 10 seconds.</t>

<section anchor="retry-delay-tlv-used-as-a-primary-tlv" title="Retry Delay TLV used as a Primary TLV">

<t>When sent from server to client, the
Retry Delay TLV is used as the Primary TLV in an unacknowledged message.
It is used by a server
to instruct a client to close the DSO Session and underlying connection,
and not to reconnect for the indicated time interval.</t>

<t>In this case it applies to the DSO Session as a whole, and the client MUST begin closing the 
DSO Session, as described in <xref target="retry"/>. The RCODE in the message header 
MUST indicate the reason for the termination:</t>

<t><list style="symbols">
  <t>NOERROR indicates a routine shutdown.</t>
  <t>FORMERR indicates that the client requests are too badly malformed for the session to continue.</t>
  <t>SERVFAIL indicates that the server is overloaded due to resource exhaustion, or is restarting.</t>
  <t>REFUSED indicates that the server has been reconfigured
and due to a policy change is no longer able to perform one or more
of the functions currently being performed on this DSO Session</t>
  <t>NOTAUTH indicates that the server has been reconfigured
and is no longer able to perform one or more
of the functions currently being performed on this DSO Session
because it no longer has authority over the names in question
(for example, a DNS Push Notification server could be reconfigured
such that is is no longer accepting DNS Push Notification
requests for one or more of the currently subscribed names).</t>
</list></t>

<t>This document specifies only these RCODE values for Retry Delay request.
Servers sending Retry Delay requests SHOULD use one of these values.
However, future circumstances may create situations where other RCODE values
are appropriate in Retry Delay requests, so clients MUST be prepared
to accept Retry Delay requests with any RCODE value.</t>

<t>A Retry Delay message from server to client is an unacknowledged message;
the MESSAGE ID MUST be set to zero in the outgoing message
and the client MUST NOT send a response.</t>

<t>A client MUST NOT send a Retry Delay DSO request message or DSO unacknowledged message to a server.
If a server receives a DNS request message (i.e., QR=0) where the Primary TLV is the Retry Delay TLV,
this is a fatal error and the server MUST forcibly abort the connection immediately.</t>

</section>
<section anchor="retry-delay-tlv-used-as-a-response-additional-tlv" title="Retry Delay TLV used as a Response Additional TLV">

<t>In the case of a request that returns a nonzero RCODE value,
the responder MAY append a Retry Delay TLV to the response,
indicating the time interval during which the initiator
SHOULD NOT attempt this operation again.</t>

<t>The indicated time interval during which the initiator SHOULD NOT retry
applies only to the failed operation, not to the DSO Session as a whole.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="padding" title="Encryption Padding TLV">

<t>The Encryption Padding TLV (DSO-TYPE=3) can only be used as
an Additional or Response Additional TLV.
It is only applicable when the DSO Transport layer uses encryption
such as TLS.</t>

<t>The TYPE-DEPENDENT DATA for the the Padding TLV is optional and is a
variable length field containing non-specified values. A DATA LENGTH
of 0 essentially provides for 4 bytes of padding (the minimum amount).</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   /                                                               /
   /                   VARIABLE NUMBER OF BYTES                    /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t>As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
the PADDING bytes SHOULD be set to 0x00.  Other values MAY be used,
for example, in cases where there is a concern that the padded
message could be subject to compression before encryption.
PADDING bytes of any value MUST be accepted in the messages received.</t>

<t>The Encryption Padding TLV may be included in either a DSO request, response, or both.
As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
if a request is received with an Encryption Padding TLV,
then the response MUST also include an Encryption Padding TLV.</t>

<t>The length of padding is intentionally not specified in this document and
is a function of current best practices with respect to the type and length
of data in the preceding TLVs <xref target="I-D.ietf-dprive-padding-policy"/>.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="summary-highlights" title="Summary Highlights">

<t>This section summarizes some noteworthy highlights about
various components of the DSO protocol.</t>

<section anchor="message-id" title="MESSAGE ID">

<t>In DSO Request Messages the MESSAGE ID may be either
nonzero (signaling that the responder MUST generate a response)
or zero (signaling that the responder MUST NOT generate a response).</t>

<t>In DSO Response Messages the MESSAGE ID MUST NOT be zero
(since this would be a response to a request that had
indicated that a response is not allowed).</t>

<t>The table below illustrates the legal combinations:</t>

<figure><artwork><![CDATA[
                          +--------------------+-------------------+
                          | Nonzero MESSAGE ID |  Zero MESSAGE ID  |
   +----------------------+--------------------+-------------------+
   | DSO Request Message  |         X          |         X         |
   +----------------------+--------------------+-------------------+
   | DSO Response Message |         X          |                   |
   +----------------------+--------------------+-------------------+
]]></artwork></figure>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="tlv-usage" title="TLV Usage">

<t>The table below indicates, for each of the three TLVs defined in this
document, whether they are valid in each of ten different contexts.</t>

<t>The first five contexts are requests from client to server,
and the corresponding responses from server back to client:</t>

<t><list style="symbols">
  <t>C-P - Primary TLV, sent in DSO Request message, from client to server,
with nonzero MESSAGE ID indicating that this request MUST generate response message.</t>
  <t>C-U - Primary TLV, sent in DSO Unacknowledged message, from client to server,
with zero MESSAGE ID indicating that this request MUST NOT generate response message.</t>
  <t>C-A - Additional TLV, optionally added to request message or unacknowledged message from client to server.</t>
  <t>CRP - Response Primary TLV, included in response message sent to back the client
(in response to a client “C-P” request with nonzero MESSAGE ID indicating that a response is required)
where the DSO-TYPE of the Response TLV matches the DSO-TYPE of the Primary TLV in the request.</t>
  <t>CRA - Response Additional TLV, included in response message sent to back the client
(in response to a client “C-P” request with nonzero MESSAGE ID indicating that a response is required)
where the DSO-TYPE of the Response TLV does not match the DSO-TYPE of the Primary TLV in the request.</t>
</list></t>

<t>The second five contexts are their counterparts in the opposite direction:
requests from server to client, and the corresponding responses from client back to server.</t>

<figure><artwork><![CDATA[
              +-------------------------+-------------------------+
              | C-P  C-U  C-A  CRP  CRA | S-P  S-U  S-A  SRP  SRA |
 +------------+-------------------------+-------------------------+
 | KeepAlive  |  X              X       |       X                 |
 +------------+-------------------------+-------------------------+
 | RetryDelay |                      X  |       X                 |
 +------------+-------------------------+-------------------------+
 | Padding    |            X         X  |            X         X  |
 +------------+-------------------------+-------------------------+
]]></artwork></figure>

<t>Note that some of the columns in this table are currently empty.
The table is provided as a template for future TLV definitions to follow.
It is recommended that definitions of future TLVs include a
similar table summarizing the contexts where the new TLV is valid.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="inactivity-timeout" title="Inactivity Timeout">

<t>The Inactivity Timeout may have any 32-bit unsigned integer value.</t>

<t>The value zero informs the client that it
should not speculatively maintain idle connections at all, and
as soon as the client has completed the operation or operations relating
to this server, the client should immediately begin closing this session.</t>

<t>The maximum possible value,
0xFFFFFFFF (2^32-1 milliseconds, approximately 49.7 days),
informs the client that it may keep an idle connection open as long as it wishes.</t>

<t>The Inactivity timer is reset by any message <spanx style="strong">except</spanx> the Keepalive TLV,
and remains cleared any time that an operation is outstanding.</t>

</section>
<section anchor="keepalive-interval" title="Keepalive Interval">

<t>The Keepalive Interval is a 32-bit unsigned integer value,
with a minimum value of 10,000 milliseconds (10 seconds).</t>

<t>The maximum possible value,
0xFFFFFFFF (2^32-1 milliseconds, approximately 49.7 days),
informs the client that it should generate no keepalive traffic.</t>

<t>Any message exchange (including the Keepalive TLV) resets the Keepalive timer.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="dso-opcode-registration" title="DSO OPCODE Registration">

<t>The IANA is requested to record the value (tentatively) 6 for the DSO OPCODE
in the DNS OPCODE Registry.</t>

</section>
<section anchor="dso-rcode-registration" title="DSO RCODE Registration">

<t>The IANA is requested to record the value (tentatively) 11 for the DSONOTIMP error code
in the DNS RCODE Registry.</t>

</section>
<section anchor="dso-type-code-registry" title="DSO Type Code Registry">

<t>The IANA is requested to create the 16-bit DSO Type Code Registry,
with initial (hexadecimal) values as shown below:</t>

<texttable>
      <ttcol align='left'>Type</ttcol>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Status</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>0000</c>
      <c>Reserved</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0001</c>
      <c>KeepAlive</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0002</c>
      <c>RetryDelay</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0003</c>
      <c>EncryptionPadding</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0004-003F</c>
      <c>Unassigned, reserved for    DSO session-management TLVs</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0040-F7FF</c>
      <c>Unassigned</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>F800-FBFF</c>
      <c>Reserved for experimental/local use</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>FC00-FFFF</c>
      <c>Reserved for future expansion</c>
      <c>&#160;</c>
      <c>&#160;</c>
</texttable>

<t>DSO Type Code zero is reserved and is not currently intended for allocation.</t>

<t>Registrations of new DSO Type Codes in
the “Reserved for DSO session-management” range 0004-003F
and the “Reserved for future expansion” range FC00-FFFF
require publication of an IETF Standards Action document <xref target="RFC5226"/>.</t>

<t>Requests to register additional new DSO Type Codes
in the “Unassigned” range 0040-F7FF
are to be recorded by IANA after consultation with the
registry’s Designated Expert <xref target="RFC5226"/> at that time.
At the time of publication of this document, the Designated Expert
for the newly created DSO Type Code registry is [<spanx style="strong">TBD</spanx>].</t>

<t>DSO Type Codes in the “experimental/local” range F800-FBFF
may be used as Experimental Use or Private Use values <xref target="RFC5226"/>
and may be used freely for development purposes,
or for other purposes within a single site.
No attempt is made to prevent multiple sites from using
the same value in different (and incompatible) ways.
There is no need for IANA to review such assignments
(since IANA does not record them) and assignments
are not generally useful for broad interoperability.
It is the responsibility of the sites making use of
“experimental/local” values to ensure that no
conflicts occur within the intended scope of use.</t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>If this mechanism is to be used with DNS over TLS, then these messages
are subject to the same constraints as any other DNS-over-TLS messages
and MUST NOT be sent in the clear before the TLS session is established.</t>

<t>The data field of the “Encryption Padding” TLV could be used as a covert channel.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to
Stephane Bortzmeyer,
Tim Chown,
Ralph Droms,
Paul Hoffman,
Jan Komissar,
Edward Lewis,
Allison Mankin,
Rui Paulo,
David Schinazi,
Manju Shankar Rao,
and Bernie Volz
for their helpful contributions to this document.</t>

<t><vspace blankLines='999' /></t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC1035;
&RFC7766;
&RFC6891;
&RFC7828;
&RFC2119;
&RFC8174;
&RFC2136;
&RFC7830;
&RFC1034;
&RFC1918;
&RFC5382;
&RFC2132;
&RFC5226;


    </references>

    <references title='Informative References'>

<reference anchor="NagleDA" target="http://www.stuartcheshire.org/papers/nagledelayedack/">
  <front>
    <title>TCP Performance problems caused by interaction between Nagle's Algorithm and Delayed ACK</title>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization></organization>
    </author>
    <date year="2005" month="May" day="20"/>
  </front>
</reference>
&RFC7858;
&I-D.ietf-dnssd-push;
&I-D.sctl-dnssd-mdns-relay;
&RFC6763;
&RFC0768;
&RFC2782;
&RFC6335;
&RFC7413;
&I-D.ietf-tls-tls13;
&RFC1122;
&I-D.ietf-dprive-padding-policy;


    </references>



  </back>

<!-- ##markdown-source:
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
bJmz3oj57PgOkKD5mhB9vUF5OBymTCUlonCiIHryXuPhkgjLo6OHHz+SqEM/
99HkYSQQm2WNf+gZDUEZVEM4bHjbyRRBhbrTBC0HUgxC3aoEKKIxxjhGlIX/
Q3rN7ml1L7ZTFdUdONITp4na7VFjagABvgTB03mIaWJdiaBQkgKpjOQGHChd
zK5NTyG6sCGJHIKnEwFeC15eg2mluahFLetSQbJtq5VtbPhuZS3UAcdC7XVW
L/W6zlJaZkEl2nat0P0OjlPDCl2fN82jl6SaNuVwfLGTZ4Ziu7dEkqQiuJTY
+cxZuyx9H3aSQScsBF76qjNPxdCW21wSUjn2qHFUzQX3P9rPJlcTFWZw4N5t
SeUAWYFlCPBq9GF0Yb93WXUgucHs3WwWrBSEQT0hgd4IlHIyYgvpXajV7WPK
rAizkUAQOLa7L/F8sHa0aegfMWSp9gVOPLIMDADJ/hAPIqZRgMrGqG8T2rXT
acfQgXanb9okY8e4I8c43kmyJ5TLWofn+XyH2iryMSP2a/Q1uVBoh15aqcsl
m2POHp8dr5XyJvjk+uDFj0F3CKkBk3W53OBNJfaa1BhQTwx5ZBtKZVGshF+d
LyBKri0DcW5ZX8TJ1p8R2IOLnIRCgPCGvNBghKni0hKjRbJZcwENv5SLRduB
Q3b01sJoObhKiE5xHQSot69W1Jo9MAcFTsasTBnGBVmbS+hxmlfTzUp1HDD9
QnouWUbdOaAamnIsqbtPFF8XQYP1QEjvIuzSgTgegVtvVMtbgOW0JKD1WJcF
k34OxzEKBYeZiwanc/Q4Lk6QDFl/smWO/CJkQn9ukhkDBtCU91WGzO/26wNR
ZDD1K1uky/mIEge2DD/amgxGV0T2kWyfkG0/eGQOklBjTt51qRUy0saFOEti
BwwaU/JSxPBzrqr2/p7kw2gcLYRLrnIpDMkKYl/lwG65vAh84nw+gBYYppQZ
caOrK1S+axW4nIRLclOQJuVnYJ3YzAN0GdC2BRla35ANqSm7VGAZPYSMcKg9
iInOU4Det74eqEgY5y3YGonJnWokiq7sbJ1EZBW+CU38IY02JTcXroitwmux
0SzQOsFZcxaUxHievz57CTeq19Q5GIReWcUraZTr9OTiOWL7mOAhZdyL64l3
jN39v6O+P2GYQ/noAfx5CH8ewZ+v4M9j+PM1/PkG/nw79JwO8y/j8fg3/dGB
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

-->

</rfc>

