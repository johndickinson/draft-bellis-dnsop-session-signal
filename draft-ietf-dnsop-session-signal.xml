<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.7 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC7766 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7766.xml">
<!ENTITY RFC6891 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6891.xml">
<!ENTITY RFC7828 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7828.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2136 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2136.xml">
<!ENTITY RFC7830 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7830.xml">
<!ENTITY RFC1034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC1918 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1918.xml">
<!ENTITY RFC5382 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5382.xml">
<!ENTITY RFC2132 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2132.xml">
<!ENTITY RFC5226 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5226.xml">
<!ENTITY RFC7858 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7858.xml">
<!ENTITY I-D.ietf-dnssd-push SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dnssd-push.xml">
<!ENTITY I-D.sctl-dnssd-mdns-relay SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.sctl-dnssd-mdns-relay.xml">
<!ENTITY RFC6763 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6763.xml">
<!ENTITY RFC0768 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.0768.xml">
<!ENTITY RFC7413 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7413.xml">
<!ENTITY I-D.ietf-tls-tls13 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-tls-tls13.xml">
<!ENTITY RFC1122 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1122.xml">
<!ENTITY I-D.ietf-dprive-padding-policy SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dprive-padding-policy.xml">
]>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-dnsop-session-signal-05" category="std" updates="RFC 7766, RFC 1035">

  <front>
    <title>DNS Stateful Operations</title>

    <author initials="R." surname="Bellis" fullname="Ray Bellis">
      <organization abbrev="ISC">Internet Systems Consortium, Inc.</organization>
      <address>
        <postal>
          <street>950 Charter Street</street>
          <city>Redwood City</city>
          <code>CA 94063</code>
          <country>USA</country>
        </postal>
        <phone>+1 650 423 1200</phone>
        <email>ray@isc.org</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>1 Infinite Loop</street>
          <city>Cupertino</city>
          <code>CA 95014</code>
          <country>USA</country>
        </postal>
        <phone>+1 408 974 3207</phone>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="J." surname="Dickinson" fullname="John Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>jad@sinodun.com</email>
      </address>
    </author>
    <author initials="S." surname="Dickinson" fullname="Sara Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>sara@sinodun.com</email>
      </address>
    </author>
    <author initials="A." surname="Mankin" fullname="Allison Mankin">
      <organization>Salesforce</organization>
      <address>
        <email>allison.mankin@gmail.com</email>
      </address>
    </author>
    <author initials="T." surname="Pusateri" fullname="Tom Pusateri">
      <organization>Unaffiliated</organization>
      <address>
        <postal>
          <street></street>
          <city>Raleigh</city>
          <code>NC 27608</code>
          <country>USA</country>
        </postal>
        <phone>+1 919 867 1330</phone>
        <email>pusateri@bangj.com</email>
      </address>
    </author>

    <date year="2018" month="January" day="26"/>

    <area>Internet</area>
    <workgroup>DNSOP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document defines a new DNS OPCODE for DNS Stateful Operations (DSO).
DSO messages communicate operations within persistent
stateful sessions, using type-length-value (TLV) syntax.
Three TLVs are defined that manage session timeouts,
termination, and encryption padding, and 
a framework is defined for extensions to enable new stateful operations.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The use of transports for DNS other than UDP is being increasingly specified,
for example, DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> and DNS over TLS <xref target="RFC7858"/>.
Such transports can offer persistent, long-lived sessions and therefore when
using them for transporting DNS messages it is of benefit to have a mechanism
that can establish parameters associated with those sessions, such as timeouts.
In such situations it is also advantageous to support server initiated messages.</t>

<t>The existing EDNS(0) Extension Mechanism for DNS <xref target="RFC6891"/> is explicitly
defined to only have “per-message” semantics. Whilst EDNS(0) has been used to
signal at least one session-related parameter (the EDNS(0) TCP Keepalive option
<xref target="RFC7828"/>) the result is less than optimal due to the restrictions
imposed by the EDNS(0) semantics and the lack of server-initiated signalling. 
For example, a server cannot arbitrarily 
instruct a client to close a connection because the server can only send EDNS(0) options 
in responses to queries that contained EDNS(0) options.</t>

<t>This document defines a new DNS OPCODE, DSO (tentatively 6), for DNS Stateful Operations.
DSO messages are used to communicate operations within persistent
stateful sessions, expressed using type-length-value (TLV) syntax.
This document defines an initial set of three TLVs,
used to manage session timeouts, termination, and encryption padding.</t>

<t>All three of the TLVs defined here are mandatory for all implementations of DSO.
Further TLVs may be defined in additional specifications.</t>

<t>The format for DSO messages
(see <xref target="format"/>) differs somewhat from the traditional DNS message
format used for standard queries and responses.
The standard twelve-octet header is used, but the four count fields
(QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) are set to zero and accordingly their
corresponding sections are not present.
The actual data pertaining to DNS Stateful Operations
(expressed in TLV syntax) is appended to the end of the DNS message header.
When displayed using packet analyzer tools that have not been
updated to recognize the DSO format, this
will result in the DSO data being displayed
as unknown additional data after the end of the DNS message.
It is likely that future updates to these tools will add the ability
to recognize, decode, and display the DSO data.</t>

<t>This new format has distinct advantages over an RR-based format because it
is more explicit and more compact. Each TLV definition is specific
to its use case, and as a result contains no redundant or overloaded fields.
Importantly, it completely avoids conflating DNS Stateful Operations in any way 
with normal DNS operations or with existing EDNS(0)-based functionality.
A goal of this approach is to avoid the operational issues that have
befallen EDNS(0), particularly relating to middlebox behaviour.</t>

<t>With EDNS(0), multiple options may be packed into a single OPT pseudo-RR,
and there is no generalized mechanism for a client to be able to tell
whether a server has processed or otherwise acted upon each individual
option within the combined OPT RR.
The specifications for each individual option need to define how each
different option is to be acknowledged, if necessary.</t>

<t>In contrast to EDNS(0), with DSO there is no
compelling motivation to pack multiple operations into a single
message for efficiency reasons, because DSO
always operates using a connection-oriented transport protocol.
Each Stateful operation is communicated in its own separate
DNS message, and the transport protocol can take care of packing
separate DNS messages into a single IP packet if appropriate.
For example, TCP can pack multiple small DNS messages into a single TCP segment.
This simplification allows for clearer semantics.
Each DSO request message communicates just one primary operation,
and the RCODE in the corresponding response message indicates the
success or failure of that operation.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="terminology" title="Terminology">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and
“OPTIONAL” in this document are to be interpreted as described in
“Key words for use in RFCs to Indicate Requirement Levels” <xref target="RFC2119"/>.</t>

<t>“DSO” is used to mean DNS Stateful Operation.</t>

<t>The term “connection” means a bidirectional byte stream of reliable,
in-order messages, such as provided by using
DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> or DNS over TLS <xref target="RFC7858"/>.</t>

<t>The unqualified term “session” in the context of this document means the exchange of
DNS messages over a connection where:</t>

<t><list style="symbols">
  <t>The connection between client and server is persistent and relatively
long-lived (i.e., minutes or hours, rather than seconds).</t>
  <t>Either end of the connection may initiate messages to the other.</t>
</list></t>

<t>A “DSO Session” is established between two endpoints that acknowledge
persistent DNS state via the exchange of DSO messages over the connection.
This is distinct from a DNS-over-TCP session as described in
the previous specification for DNS over TCP <xref target="RFC7766"/>.</t>

<t>A “DSO Session” is terminated when the underlying connection is closed.
The underlying connection can be closed in two ways.</t>

<t>Where this specification says, “close gracefully,”
that means sending a TLS close_notify followed by a TCP FIN,
or the equivalents for other protocols.
Where this specification requires a connection to be closed gracefully,
the requirement to initiate that graceful close is placed on the client,
to place the burden of TCP’s TIME-WAIT state on the client rather than the server.</t>

<t>Where this specification says, “forcibly abort,”
that means sending a TCP RST,
or the equivalent for other protocols.
In the BSD Sockets API this is achieved by setting the
SO_LINGER option to zero before closing the socket.</t>

<t>The term “server” means the software with a listening socket, awaiting
incoming connection requests.</t>

<t>The term “client” means the software which initiates a connection
to the server’s listening socket.</t>

<t>The terms “initiator” and “responder” correspond respectively to the
initial sender and subsequent receiver of a DSO request message,
regardless of which was the “client” and “server” in the usual DNS sense.</t>

<t>The term “sender” may apply to
either an initiator (when sending a DSO request message)
or a responder (when sending a DSO response message).</t>

<t>Likewise, the term “receiver” may apply to
either a responder (when receiving a DSO request message)
or an initiator (when receiving a DSO response message).</t>

<t>The term “long-lived operations” refers to operations
such as Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/>,
Discovery Relay interface subscriptions <xref target="I-D.sctl-dnssd-mdns-relay"/>,
and other future long-lived DNS operations that choose to use
DSO as their basis, that establish state that persists beyond
the lifetime of a traditional brief request/response transaction.
This document, the base specification for DNS Stateful Operations,
defines a framework for supporting long-lived operations,
but does not itself define any long-lived operations.
Nonetheless, to appreciate the design rationale behind
DNS Stateful Operations, it is helpful to understand
the long-lived operations that it is intended to support.</t>

<t>DNS Stateful Operations uses “DSO request messages” and “DSO response messages”.
DSO request messages are further subdivided into two variants,
“acknowledged request messages”
(which generate a corresponding response message) and
“unacknowledged request messages”
(which do not generate any corresponding response message).</t>

<t>The content of DSO messages is expressed using type-length-value (TLV) syntax.</t>

<t>In a DSO request message the first TLV is referred to as the “Primary TLV”
and determines the nature of the operation being performed,
including whether it is an acknowledged or unacknowledged operation;
any other TLVs in a DSO request message are referred to as “Additional TLVs”
and serve additional non-primary purposes, which may be related to
the primary purpose, or not, as in the case of the encryption padding TLV.</t>

<t>A DSO response message may contain no TLVs, or it may contain one
or more TLVs as appropriate to the information being communicated.
In the context of DSO response messages,
one or more TLVs with the same DSO-TYPE as the Primary TLV in the
corresponding DSO request message are referred to as “Response Primary TLVs”.
Any other TLVs with different DSO-TYPEs are referred to as “Response Additional TLVs”.
The Response Primary TLV(s), if present, MUST occur first in the response message,
before any Response Additional TLVs.</t>

<t>Two timers (elapsed time since an event) are defined in this document:</t>

<t><list style="symbols">
  <t>an inactivity timer (see <xref target="keepalive"/> and <xref target="inactivetimer"/>)</t>
  <t>a keepalive timer (see <xref target="keepalive"/> and <xref target="keepalivetimer"/>)</t>
</list></t>

<t>The timeouts associated with these timers are called
the inactivity timeout and 
the keepalive interval, respectively. 
The term “Session Timeouts” is used to refer to this pair of timeout values.</t>

<t>Resetting a timer means resetting the timer value to zero and starting the timer again.
Clearing a timer means resetting the timer value to zero but NOT starting the timer again.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="discussion" title="Discussion">

<t>There are several use cases for DNS Stateful operations that can 
be described here.</t>

<t>Firstly, establishing session parameters such as server-defined timeouts is of 
great use in the 
general management of persistent connections. For example, using DSO sessions 
for stub to recursive DNS-over-TLS <xref target="RFC7858"/> is more flexible for both the 
client and the server than attempting to manage sessions using just the EDNS(0)
TCP Keepalive option <xref target="RFC7828"/>.
The simple set of TLVs defined in this document is
sufficient to greatly enhance connection management for this use case.</t>

<t>Secondly, DNS-SD <xref target="RFC6763"/> has evolved into a naturally session based mechanism where,
for example, long-lived subscriptions lend themselves to ‘push’ mechanisms as 
opposed to polling. Long-lived stateful connections and server initiated 
messages align with this use case <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>A general use case is that DNS traffic is often bursty but session establishment 
can be expensive. One challenge with long-lived connections is to maintain 
sufficient traffic to maintain NAT and firewall state.
To mitigate this issue this document introduces a
new concept for the DNS, that is DSO “Keepalive traffic”.
This traffic carries no DNS data and is not considered ‘activity’
in the classic DNS sense, but serves to maintain state in middleboxes,
and to assure client and server that they still have connectivity to each other.</t>

<t>There are a myriad of other potential use cases for DSO given the versatility 
and extensibility of this specification.</t>

<t><xref target="details"/> of this document describes the protocol details of DNS Stateful Operations
including definitions of three TLVs for session management and encryption padding.
<xref target="lifecycle"/> presents a detailed discussion of the DSO Session lifecycle
including an in-depth discussion of keepalive traffic and session termination.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="details" title="Protocol Details">

<section anchor="establishment" title="DSO Session Establishment">

<t>DSO messages MUST only be carried in protocols and in
environments where a session may be established according to the definition above.
Standard DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/>, and DNS over TLS <xref target="RFC7858"/>
are suitable protocols.</t>

<t>DNS over plain UDP <xref target="RFC0768"/> is not appropriate since it fails on the requirement for
in-order message delivery, and, in the presence of NAT gateways and firewalls
with short UDP timeouts, it fails to provide a persistent bi-directional
communication channel unless an excessive amount of keepalive traffic is used.</t>

<t>In some environments it may be known in advance by external means
that both client and server support DSO, and in these cases either
client or server may initiate DSO messages at any time.</t>

<t>However, in the typical case a server will not know in advance whether a
client supports DSO, so in general, unless it is known in advance by other means
that a client does support DSO, a server MUST NOT initiate DSO request messages
until a DSO Session has been mutually established, as described below.
Similarly, unless it is known in advance by other means that a server
does support DSO, a client MUST NOT initiate non-response-requiring
DSO request messages until after a DSO Session has been mutually established.</t>

<t>Whether or not a given DSO request message elicits a response is
determined by whether or not the first DSO TLV (see <xref target="tlvsyntax"/>)
in the message (the Primary TLV) is one that is specified to generate a response.
Whether a Primary TLV will be specified to elicit a response will depend
on the intended use pattern for that particular TLV.</t>

<t>A DSO Session is established over a connection by the client
sending a DSO request message of a kind that requires a response,
such as the DSO Keepalive TLV (see <xref target="keepalive"/>),
and receiving a response, with matching MESSAGE ID, and RCODE
set to NOERROR (0), indicating that the DSO request was successful.</t>

<t>If the RCODE is set to DSONOTIMP (tentatively 11) this indicates
that the server does support DSO, but does not support the particular
operation the client requested.
A server MUST NOT return DSONOTIMP for the DSO Keepalive TLV,
but a DSONOTIMP response could happen in the future, if a client attempts to
establish a DSO Session using a future response-requiring DSO TLV
that the server does not understand.
If the server returns DSONOTIMP then a DSO Session is not
considered established, but the client is permitted to continue
sending DNS messages on the connection,
including other response-requiring DSO messages such as the DSO Keepalive,
which may result in a successful NOERROR response,
yielding the establishment of a DSO Session.</t>

<t>If the RCODE is set to any value other than NOERROR (0) or DSONOTIMP
(tentatively 11), then the client should assume that the server does
not support DSO. In this case the client is permitted to continue
sending DNS messages on that connection, but the client SHOULD NOT
issue further DSO messages on that connection.</t>

<t>When the server receives a response-requiring DSO request message
from a client, and transmits a successful NOERROR response to that
request, the server considers the DSO Session established.</t>

<t>When the client receives the server’s NOERROR response to its
DSO request message, the client considers the DSO Session established.</t>

<t>Once a DSO Session has been established,
either end may unilaterally send DSO messages at any time,
and therefore either client or server may be the initiator of a message.</t>

<t>Once a DSO Session has been established,
clients and servers should behave as described in this specification with
regard to inactivity timeouts and session termination, not as previously
prescribed in the earlier specification for DNS over TCP <xref target="RFC7766"/>.</t>

<t><vspace blankLines='999' /></t>

<section anchor="sharing" title="Connection Sharing">

<t>As previously specified for DNS over TCP <xref target="RFC7766"/>,
to mitigate the risk of unintentional server overload, DNS clients
MUST take care to minimize the number of concurrent TCP connections
made to any individual server.  It is RECOMMENDED that for any given
client/server interaction there SHOULD be no more than one connection
for regular queries, one for zone transfers, and one for each
protocol that is being used on top of TCP (for example, if the
resolver was using TLS).
However, it is noted that certain primary/secondary configurations
with many busy zones might need to use more than one TCP
connection for zone transfers for operational reasons
(for example, to support concurrent transfers of multiple zones).</t>

<t>A single server may support multiple services, including DNS Updates 
<xref target="RFC2136"/>, DNS Push Notifications <xref target="I-D.ietf-dnssd-push"/>,
and other services, for one or more DNS zones.
When a client discovers that the target server for several different operations
is the same target hostname and port, the client SHOULD use a single
shared DSO Session for all those operations.
A client SHOULD NOT open multiple connections to the same target host and port
just because the names being operated on are different or
happen to fall within different zones.
This is to reduce unnecessary connection load on the DNS server.</t>

<t>However, server implementers and operators should be aware that connection
sharing may not be possible in all cases.
A single host device may be home to multiple independent client software
instances that don’t coordinate with each other.
Similarly, multiple independent client devices behind the same NAT gateway
will also typically appear to the DNS server as different source ports on
the same client IP address.
Because of these constraints, a DNS server MUST be prepared to accept
multiple connections from different source ports on the same client IP address.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="zero-round-trip-operation" title="Zero Round-Trip Operation">

<t>There is increased awareness today of the performance benefits
of eliminating round trips in session establishment.
Technologies like TCP Fast Open <xref target="RFC7413"/>
and TLS 1.3 <xref target="I-D.ietf-tls-tls13"/>
provide mechanisms to reduce or eliminate
round trips in session establishment.</t>

<t>Similarly, DSO supports zero round-trip operation.</t>

<t>Having initiated a connection to a server, possibly using
zero round-trip TCP Fast Open and/or
zero round-trip TLS 1.3, a client MAY send multiple
response-requiring DSO request messages to the server in succession
without having to wait for a response to the first request message
to confirm successful establishment of a DSO session.</t>

<t>However, a client MUST NOT send non-response-requiring DSO request
messages until after a DSO Session has been mutually established.</t>

<t>Similarly, a server MUST NOT send DSO request messages until it
has received a response-requiring DSO request message from a
client and transmitted a successful NOERROR response for that request.</t>

</section>
<section anchor="middlebox-considerations" title="Middlebox Considerations">

<t>Where an application-layer middlebox (e.g., a DNS proxy, forwarder, or
session multiplexer) is in the path the middlebox MUST NOT blindly
forward DSO messages in either direction, and MUST treat the inbound
and outbound connections as separate sessions.  This does not preclude
the use of DSO messages in the presence of an IP-layer middlebox, such
as a NAT that rewrites IP-layer and/or transport-layer headers but
otherwise preserves the effect of a single session between the client
and the server.</t>

<t>To illustrate the above, consider a network where a middlebox
terminates one or more TCP connections from clients and multiplexes the
queries therein over a single TCP connection to an upstream server.
The DSO messages and any associated state are specific to the individual
TCP connections.  A DSO-aware middlebox MAY in some circumstances be
able to retain associated state and pass it between the client and
server (or vice versa) but this would be highly TLV-specific.  For
example, the middlebox may be able to maintain a list of which clients
have made Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/> and
make its own subscription(s) on their behalf, relaying any subsequent
notifications to the client (or clients) that have subscribed to that
particular notification.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="format" title="Message Format">

<t>A DSO message begins with
the standard twelve-octet DNS message header <xref target="RFC1035"/>
with the OPCODE field set to the DSO OPCODE (tentatively 6).
However, unlike standard DNS messages, the question section, answer section,
authority records section and additional records sections are not present.
The corresponding count fields (QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) MUST be
set to zero on transmission.</t>

<t>If a DSO message is received where any of the count fields are
not zero, then a FORMERR MUST be returned,
unless a future IETF Standard specifies otherwise.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                          MESSAGE ID                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |QR |    OPCODE     |            Z              |     RCODE     |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     QDCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ANCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     NSCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ARCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                           DSO Data                            /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><vspace blankLines='999' /></t>

<section anchor="header" title="DNS Header Fields in DSO Messages">

<t>In an unacknowledged request message the MESSAGE ID field MUST be set to zero.
In an acknowledged request message the MESSAGE ID field MUST
be set to a unique nonzero value, that the initiator is not
currently using for any other active operation on this connection.
For the purposes here, a MESSAGE ID is in use in this DSO Session if the
initiator has used it in a request for which it is still awaiting a response,
or if the client has used it to setup a long-lived operation that has not yet been cancelled.
For example, a long-lived operation could be
a Push Notification subscription <xref target="I-D.ietf-dnssd-push"/> or
a Discovery Relay interface subscription <xref target="I-D.sctl-dnssd-mdns-relay"/>.</t>

<t>Whether a message is acknowledged or unacknowledged is
determined only by the specification for the Primary TLV.
An acknowledgment cannot be requested by including a nonzero message ID
in a message the primary TLV of which is specified to be unacknowledged,
nor can an acknowledgment be prevented by sending a message ID of zero
in a message with a primary TLV that is specified to be acknowledged.
A responder that receives either such malformed message MUST treat it
as a programming error and terminate the connection.</t>

<t>In a request message the DNS Header QR bit MUST be zero (QR=0).<vspace />
If the QR bit is not zero the message is not a request message.</t>

<t>In a response message the DNS Header QR bit MUST be one (QR=1).<vspace />
If the QR bit is not one the message is not a response message.</t>

<t>In a response message (QR=1) the MESSAGE ID field MUST contain a copy of the value of
the MESSAGE ID field in the acknowledged request message being responded to.
In a response message (QR=1) the MESSAGE ID field MUST NOT be zero.
If a response message (QR=1) is received where the MESSAGE ID is zero
this is a fatal error and the receiver MUST forcibly abort the connection immediately.</t>

<t>The DNS Header OPCODE field holds the DSO OPCODE value (tentatively 6).</t>

<t>The Z bits are currently unused in DSO messages,
and in both DSO requests and DSO responses the
Z bits MUST be set to zero (0) on transmission and MUST be silently ignored
on reception, unless a future IETF Standard specifies otherwise.</t>

<t><vspace blankLines='999' /></t>

<t>In a request message (QR=0) the RCODE is generally set to zero on transmission,
and silently ignored on reception, except where specified otherwise
(for example, the Retry Delay request message (see <xref target="retry"/>),
where the RCODE indicates the reason for termination).</t>

<t>The RCODE value in a response message (QR=1) may be one of the following values:</t>

<texttable>
      <ttcol align='right'>Code</ttcol>
      <ttcol align='left'>Mnemonic</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>0</c>
      <c>NOERROR</c>
      <c>Operation processed successfully</c>
      <c>1</c>
      <c>FORMERR</c>
      <c>Format error</c>
      <c>2</c>
      <c>SERVFAIL</c>
      <c>Server failed to process request due to a problem with the server</c>
      <c>3</c>
      <c>NXDOMAIN</c>
      <c>Name Error — Named entity does not exist (TLV-dependent)</c>
      <c>4</c>
      <c>NOTIMP</c>
      <c>DSO not supported</c>
      <c>5</c>
      <c>REFUSED</c>
      <c>Operation declined for policy reasons</c>
      <c>9</c>
      <c>NOTAUTH</c>
      <c>Not Authoritative (TLV-dependent)</c>
      <c>11</c>
      <c>DSONOTIMP</c>
      <c>DSO type code not supported</c>
</texttable>

<t>Use of the above RCODEs is likely to be common in DSO but 
does not preclude the definition and use of other codes in future documents that 
make use of DSO.</t>

<t>If a document defining a new DSO TLV makes use of NXDOMAIN (Name Error)
or NOTAUTH (Not Authoritative) then that document MUST specify the specific
interpretation of these RCODE values in the context of that new DSO TLV.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="dsodata" title="DSO Data">

<t>The standard twelve-octet DNS message header with its
zero-valued count fields is followed by the DSO Data,
expressed using TLV syntax, as described below <xref target="tlvsyntax"/>.</t>

<t>A DSO message may be either a request message or a response message,
as indicated by the QR bit in the DNS message header.
DSO request messages are further subdivided into two variants,
acknowledged request messages
(which generate a corresponding response message)
and unacknowledged request messages
(which do not generate any corresponding response message).</t>

<t>A DSO request message MUST contain at least one TLV.
The first TLV in a DSO request message is referred to as the “Primary TLV”
and determines the nature of the operation being performed,
including whether it is an acknowledged or unacknowledged operation.
In some cases it may be appropriate to include other TLVs in a request message,
such as the Encryption Padding TLV (<xref target="padding"/>),
and these extra TLVs are referred to as the “Additional TLVs”.</t>

<t>A DSO response message may contain no TLVs,
or it may be specified to contain one or more TLVs
appropriate to the information being communicated.</t>

<t>A DSO response message may contain one or more TLVs with
DSO-TYPE the same as the Primary TLV from the corresponding DSO request message,
in which case those TLV(s) are referred to as “Response Primary TLVs”.
A DSO response message is not required to carry Response Primary TLVs.
The MESSAGE ID field in the DNS message header is sufficient to identify
to which DSO request message this response message relates.</t>

<t>A DSO response message may contain one or more TLVs with
DSO-TYPEs different from the Primary TLV from the corresponding DSO request message,
in which case those TLV(s) are referred to as “Response Additional TLVs”.</t>

<t>Response Primary TLV(s), if present, MUST occur first in the response message,
before any Response Additional TLVs.</t>

<t>It is anticipated that by default most DSO request messages will be specified
to be acknowledged request messages, which generate corresponding responses.
In some specialized high-traffic use cases,
it may be appropriate to specify unacknowledged request messages.
Unacknowledged request messages can be more efficient on the network,
because they don’t generate a stream of corresponding reply messages.
Using unacknowledged request messages can also simplify software
in some cases, by removing need for an initiator to maintain
state while it waits to receive replies it doesn’t care about.
When the specification for a particular TLV states that,
when used as a Primary TLV (i.e., first) in a request message,
that request message is to be unacknowledged,
the MESSAGE ID field MUST be set to zero and
the receiver MUST NOT generate any response message
corresponding to this unacknowledged request message.</t>

<t>The previous point, that the receiver MUST NOT generate responses to
unacknowledged request messages, applies even in the case of errors.
When a DSO request message is received with the MESSAGE ID field
set to zero, the receiver MUST NOT generate any response.
For example, if the DSO-TYPE in the Primary TLV is unrecognized,
then a DSONOTIMP error MUST NOT be returned; instead the receiver
MUST forcibly abort the connection immediately.</t>

<t>Unacknowledged request messages MUST NOT be used “speculatively”
in cases where the sender doesn’t know if the receiver supports
the Primary TLV in the message, because there is no way to receive
any response to indicate success or failure of the request message
(the request message does not contain a unique MESSAGE ID with
which to associate a response with its corresponding request).
Unacknowledged request messages are only appropriate in cases where
the sender already knows that the receiver supports and wishes to
receive these messages.</t>

<t>For example, after a client has subscribed for Push Notifications
<xref target="I-D.ietf-dnssd-push"/>, the subsequent event notifications are
then sent as unacknowledged messages, and this is appropriate
because the client initiated the message stream by virtue of its
Push Notification subscription, thereby indicating its support of
Push Notifications, and its desire to receive those notifications.</t>

<t>Similarly, after an mDNS Relay client has subscribed to receive inbound
mDNS traffic from an mDNS Relay, the subsequent stream of received
packets is then sent using unacknowledged messages, and this
is appropriate because the client initiated the message stream
by virtue of its mDNS Relay link subscription, thereby indicating
its support of mDNS Relay, and its desire to receive inbound mDNS
packets over that DSO session <xref target="I-D.sctl-dnssd-mdns-relay"/>.</t>

<t><vspace blankLines='999' /></t>

<section anchor="tlvsyntax" title="TLV Syntax">

<t>All TLVs, whether used as “Primary”, “Additional”, “Response Primary”,
or “Response Additional”, use the same encoding syntax.</t>

<t>The specification for a TLV determines whether,
when used as the Primary (i.e., first) TLV in a request message,
that request message is to be acknowledged.
If the request message is to be acknowledged, the specification
also states which TLVs, if any, are to be included in the response.
The Primary TLV may or may not be contained in the response,
depending on what is stated in the specification for that TLV.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                            DSO-TYPE                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                        DSO DATA LENGTH                        |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                      TYPE-DEPENDENT DATA                      /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='DSO-TYPE:'>
  A 16-bit unsigned integer in network (big endian) byte order
giving the type of the current DSO TLV per the IANA DSO Type Code Registry.</t>
  <t hangText='DSO DATA LENGTH:'>
  A 16-bit unsigned integer in network (big endian) byte order
giving the size in octets of the TYPE-DEPENDENT DATA.</t>
  <t hangText='TYPE-DEPENDENT DATA:'>
  Type-code specific format.</t>
</list></t>

<t>Where domain names appear within TYPE-DEPENDENT DATA, they MAY<vspace />
be compressed using standard DNS name compression <xref target="RFC1035"/>.<vspace />
However, the compression offsets MUST be relative to
the start of the TYPE-DEPENDENT DATA and MUST NOT
extend beyond the end of the TYPE-DEPENDENT DATA.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="request-tlvs" title="Request TLVs">

<t>The first TLV in a DSO request message is the “Primary TLV”
and indicates the operation to be performed.
A DSO request message MUST contain at at least one TLV, the Primary TLV.</t>

<t>Immediately following the Primary TLV, a DSO request message
MAY contain one or more “Additional TLVs”, which specify
additional parameters relating to the operation.</t>

</section>
<section anchor="response-tlvs" title="Response TLVs">

<t>Depending on the operation, a DSO response message MAY contain no TLVs,
because it is simply a response to a previous request message, and the
MESSAGE ID in the header is sufficient to identify the request in question.
Or it may contain a single response TLV, with the same DSO-TYPE as the
Primary TLV in the request message.
Alternatively it may contain one or more TLVs of other
types, or a combination of the above, as appropriate
for the information that needs to be communicated.
The specification for each DSO TLV determines
what TLVs are required in a response to a request using that TLV.</t>

<t>If a DSO response is received for an operation where the specification
requires that the response carry a particular TLV or TLVs,
and the required TLV(s) are not present, then this is a fatal
error and the recipient of the defective response message MUST
forcibly abort the connection immediately.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="unrecognized-tlvs" title="Unrecognized TLVs">

<t>If DSO request is received containing an unrecognized Primary TLV,
with a nonzero MESSAGE ID (indicating that a response is expected),
then the receiver MUST send a response with matching MESSAGE ID,
and RCODE DSONOTIMP (tentatively 11).
The response MUST NOT contain a copy of the unrecognized Primary TLV.</t>

<t>If DSO request is received containing an unrecognized Primary TLV,
with a zero MESSAGE ID (indicating that no response is expected),
the receiver MUST silently ignore the message. A response MUST NOT be sent.</t>

<t>If a DSO request message is received where the Primary TLV is recognized,
containing one or more unrecognized Additional TLVs, the unrecognized
Additional TLVs MUST be silently ignored, and the remainder of the message
is interpreted and handled as if the unrecognized parts were not present.</t>

<t>Similarly, if a DSO response message is received containing one
or more unrecognized TLVs, the unrecognized TLVs MUST be silently
ignored, and the remainder of the message is interpreted and
handled as if the unrecognized parts were not present.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="edns0-and-tsig" title="EDNS(0) and TSIG">

<t>Since the ARCOUNT field MUST be zero, a DSO message
MUST NOT contain an EDNS(0) option in the additional records section.
If functionality provided by current or future EDNS(0) options
is desired for DSO messages, one or more new DSO TLVs
need to be defined to carry the necessary information.</t>

<t>For example, the EDNS(0) Padding Option <xref target="RFC7830"/> used for security purposes
is not permitted in a DSO message,
so if message padding is desired for DSO messages
then the Encryption Padding TLV described in <xref target="padding"/> MUST be used.</t>

<t>Similarly, a DSO message MUST NOT contain a TSIG record.
A TSIG record in a conventional DNS message is added as the last record
in the additional records section, and carries a signature computed over
the preceding message content. Since DSO data appears
after the additional records section, it would not be included in the
signature calculation. 
If use of signatures with DSO messages becomes necessary in the 
future, a new DSO TLV needs to be defined to perform this function.</t>

<t>Note however that, while DSO <spanx style="strong">messages</spanx> cannot include
EDNS(0) or TSIG records, a DSO <spanx style="strong">session</spanx> is typically used to 
carry a whole series of DNS messages of different kinds, including DSO
messages, and other DNS message types like Query <xref target="RFC1034"/> 
<xref target="RFC1035"/> and Update <xref target="RFC2136"/>, and those messages can carry EDNS(0) and 
TSIG records.</t>

<t>This specification explicitly prohibits use of the
EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>
in <spanx style="strong">any</spanx> messages sent on a DSO Session (because it is obsoleted by
the functionality provided by the DSO Keepalive operation),
but messages may contain other EDNS(0) options as appropriate.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="message-handling" title="Message Handling">

<t>The initiator MUST set the value of the QR bit in the DNS header to
zero (0), and the responder MUST set it to one (1).
Every DSO request message (QR=0) with a nonzero MESSAGE ID field
MUST elicit a corresponding response (QR=1), which MUST have the same
MESSAGE ID in the DNS message header as in the corresponding request.
DSO request messages sent by the client with a nonzero MESSAGE ID field
elicit a response from the server, and
DSO request messages sent by the server with a nonzero MESSAGE ID field
elicit a response from the client.</t>

<t>A DSO request message (QR=0) with a zero MESSAGE ID field MUST NOT elicit a response.</t>

<t>The namespaces of 16-bit MESSAGE IDs are disjoint in each direction.
For example, it is <spanx style="strong">not</spanx> an error for both client and server to send a request
message with the same ID. In effect, the 16-bit MESSAGE ID combined with the 
identity of the initiator (client or server) serves as a 17-bit unique 
identifier for a particular operation on a DSO Session.</t>

<t>As described in <xref target="header"/> An initiator MUST NOT reuse a
MESSAGE ID that is already in use for an outstanding request,
unless specified otherwise by the relevant specification
for the DSO in question. At the very least, this means 
that a MESSAGE ID MUST NOT be reused in a particular direction
on a particular DSO Session while the initiator is waiting for a response to a 
previous request using that MESSAGE ID on that DSO Session,
unless specified otherwise by the relevant 
specification for the DSO in question.
(For a long-lived operation the MESSAGE ID for the operation
MUST NOT be reused whilst that operation remains active.)</t>

<t>If a client or server receives a response (QR=1) where the MESSAGE ID is zero,
or any other value that does not match the MESSAGE ID of any of its outstanding operations,
this is a fatal error and the recipient MUST forcibly abort the connection immediately.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="dso-response-generation" title="DSO Response Generation">

<t>With most TCP implementations, for DSO requests that generate a response,
the TCP data acknowledgement (generated because data has been received by TCP),
the TCP window update (generated because TCP has delivered that data to the receiving software),
and the DSO response (generated by the receiving application-layer software itself)
are all combined into a single IP packet.
Combining these three elements into a single IP packet gives a
potentially significant improvement in network efficiency.</t>

<t>For DSO requests that do not generate a response,
the TCP implementation generally doesn’t have any way to know
that no response will be forthcoming, so it waits fruitlessly
for the application-layer software to generate a response,
until the Delayed ACK timer fires <xref target="RFC1122"/> (typically 200 milliseconds)
and only then does it send the TCP ack and window update.
In conjunction with Nagle’s Algorithm at the sender,
this can delay the sender’s transmission of its next
(non-full-sized) TCP segment, while the sender is waiting for
its previous (non-full-sized) TCP segment to be acknowledged,
which won’t happen until the Delayed ACK timer fires.
Nagle’s Algorithm exists to combine multiple small
application writes into more efficient large TCP segments,
to guard against wasteful use of the network by applications
that would otherwise transmit a stream of small TCP segments,
but in this case Nagle’s Algorithm (created to improve network efficiency)
can interact badly with TCP’s Delayed ACK feature
(also created to improve network efficiency) <xref target="NagleDA"/>
with the result of delaying some messages by up to 200 milliseconds.</t>

<t>Possible mitigations for this problem include:</t>

<t><list style="symbols">
  <t>Disabling Nagle’s Algorithm at the sender.<vspace />
This is not great, because it results<vspace />
in less efficient use of the network.</t>
  <t>Disabling Delayed ACK at the receiver.<vspace />
This is not great, because it results<vspace />
in less efficient use of the network.</t>
  <t>Using a networking API that lets the receiver signal to the TCP
implementation that the receiver has received and processed a client
request for which it will not be generating any immediate response.
This allows the TCP implementation to operate efficiently in both cases;
for requests that generate a response, the TCP ack, window update, and
DSO response are transmitted together in a single TCP segment,
and for requests that do not generate a response,
the application-layer software informs the TCP implementation
that it should go ahead and send the TCP ack and window update
immediately, without waiting for the Delayed ACK timer.
Unfortunately it is not known at this time which (if any) of the
widely-available networking APIs currently include this capability.</t>
</list></t>

</section>
<section anchor="cancellation" title="Responder-Initiated Operation Cancellation">

<t>This document, the base specification for DNS Stateful Operations,
does not itself define any long-lived operations,
but it defines a framework for supporting long-lived operations
such as Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/> and
Discovery Relay interface subscriptions <xref target="I-D.sctl-dnssd-mdns-relay"/>.</t>

<t>Generally speaking, a long-lived operation is initiated by the initiator,
and, if successful, remains active until the initiator terminates the operation.</t>

<t>However, it is possible that a long-lived operation may be valid
at the time it was initiated, but then a later change of circumstances
may render that previously valid operation invalid.</t>

<t>For example, a long-lived client operation may pertain to a name
that the server is authoritative for, but then the server configuration
is changed such that it is no longer authoritative for that name.</t>

<t>In such cases, instead of terminating the entire session
it may be desirable for the responder to be able to cancel
selectively only those operations that have become invalid.</t>

<t>The responder performs this selective cancellation by sending
a new response message, with the MESSAGE ID field containing the
MESSAGE ID of the long-lived operation that is to be terminated
(that it had previously acknowledged with a NOERROR RCODE), and the
RCODE field of the new response message giving the reason for cancellation.</t>

<t>After a response message with nonzero RCODE has been sent,
that operation has been terminated from the responder’s point of view,
and the responder sends no more messages relating to that operation.</t>

<t>After a response message with nonzero RCODE has been received by the initiator,
that operation has been terminated from the initiator’s point of view,
and its MESSAGE ID is now free for reuse.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="lifecycle" title="DSO Session Lifecycle and Timers">

<section anchor="dso-session-initiation" title="DSO Session Initiation">

<t>A DSO Session begins as described in <xref target="establishment"/>.</t>

<t>The client may perform as many DNS operations as it wishes using the
newly created DSO Session. Operations SHOULD be pipelined (i.e., the
client doesn’t need wait for a response before sending the next message).
The server MUST act on messages in the order they are transmitted, but
responses to those messages SHOULD be sent out of order when appropriate.</t>

</section>
<section anchor="sessiontimeouts" title="DSO Session Timeouts">

<t>Two timeout values are associated with a DSO Session: the inactivity timeout, and 
the keepalive interval.</t>

<t>The first timeout value, the inactivity timeout, is the maximum time for which
a client may speculatively keep a DSO Session open in the expectation that
it may have future requests to send to that server.</t>

<t>The second timeout value, the keepalive interval, is the maximum permitted
interval between client messages to the server if the client wishes to keep
the DSO Session alive.</t>

<t>The two timeout values are independent. The inactivity timeout may be lower, the 
same, or higher than the keepalive interval, though in most cases the inactivity 
timeout is expected to be shorter than the keepalive interval.</t>

<t>Only when the client has a very long-lived low-traffic operation does the 
keepalive interval come into play, to ensure that a sufficient residual
amount of traffic is generated to maintain NAT and firewall state
and to assure client and server that they still have connectivity to each other.</t>

<t>On a new DSO Session, if no explicit DSO Keepalive message exchange has taken 
place, the default value for both timeouts is 15 seconds.
For both timeouts, lower values of the timeout result in higher network traffic
and higher CPU load on the server.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="inactivetimer" title="Inactive DSO Sessions">

<t>At both servers and clients, the generation or reception of any complete
DNS message, including DNS requests, responses, updates, or DSO
messages, resets both timers for that DSO Session, with the exception
that a DSO Keepalive message resets only the keepalive timer,
not the inactivity timeout timer.</t>

<t>In addition, for as long as the client has an outstanding operation in progress,
the inactivity timer remains cleared, and an inactivity timeout cannot occur.</t>

<t>For short-lived DNS operations like traditional queries and updates,
an operation is considered in progress for the time between request and 
response, typically a period of a few hundred milliseconds at most.
At the client, the inactivity timer is cleared upon transmission of a 
request and remains cleared until reception of the corresponding response.
At the server, the inactivity timer is cleared upon reception of a request
and remains cleared until transmission of the corresponding response.</t>

<t>For long-lived DNS Stateful operations (such as
a Push Notification subscription <xref target="I-D.ietf-dnssd-push"/> or
a Discovery Relay interface subscription <xref target="I-D.sctl-dnssd-mdns-relay"/>),
an operation is considered in progress
for as long as the operation is active, until it is cancelled.
This means that a DSO Session can exist, with active operations,
with no messages flowing in either direction, for far longer than the 
inactivity timeout, and this is not an error.
This is why there are two separate timers:
the inactivity timeout, and the keepalive interval.
Just because a DSO Session has no traffic for an extended period of time
does not automatically make that DSO Session “inactive”,
if it has an active operation that is awaiting events.</t>

</section>
<section anchor="the-inactivity-timeout" title="The Inactivity Timeout">

<t>The purpose of the inactivity timeout is for the server to balance its trade off 
between the costs of setting up new DSO Sessions and the costs of maintaining inactive 
DSO Sessions. A server with abundant DSO Session capacity can offer a high inactivity timeout, 
to permit clients to keep a speculative DSO Session open for a long time, to save 
the cost of establishing a new DSO Session for future communications with that 
server. A server with scarce memory resources can offer a low inactivity timeout,
to cause clients to promptly close DSO Sessions whenever they have no outstanding
operations with that server, and then create a new DSO Session later when needed.</t>

<section anchor="closing-inactive-dso-sessions" title="Closing Inactive DSO Sessions">

<t>A client is NOT required to wait until the inactivity timeout expires
before closing a DSO Session.
A client MAY close a DSO Session at any time, at the client’s discretion.
If a client determines that it has no current or reasonably anticipated
future need for an inactive DSO Session, then the client SHOULD close that connection.</t>

<t>If, at any time during the life of the DSO Session,
the inactivity timeout value (i.e., 15 seconds by default) elapses
without there being any operation active on the DSO Session,
the client MUST close the connection gracefully.</t>

<t>If, at any time during the life of the DSO Session,
twice the inactivity timeout value (i.e., 30 seconds by default),
or five seconds, if twice the inactivity timeout value is less than five seconds,
elapses without there being any operation active on the DSO Session,
the server SHOULD consider the client delinquent,
and SHOULD forcibly abort the DSO Session.</t>

<t>In this context, an operation being active on a DSO Session includes
a query waiting for a response, an update waiting for a response,
or an active long-lived operation, but not a DSO Keepalive message exchange itself.
A DSO Keepalive message exchange resets only the keepalive
interval timer, not the inactivity timeout timer.</t>

<t>If the client wishes to keep an inactive DSO Session open for longer than
the default duration without having to send traffic every 15 seconds,
then it uses the DSO Keepalive message to request
longer timeout values, as described in <xref target="keepalive"/>.</t>

</section>
<section anchor="values-for-the-inactivity-timeout" title="Values for the Inactivity Timeout">

<t>For the inactivity timeout value, lower values result in
more frequent DSO Session teardown and re-establishment.
Higher values result in lower traffic and lower CPU load on the server,
but higher memory burden to maintain state for inactive DSO Sessions.</t>

<t>A server may dictate (in a server-initiated Keepalive message,
or in a response to a client-initiated Keepalive request message)
any value it chooses for the inactivity timeout.
When a connection’s inactivity timeout is reached the client MUST
begin closing the idle connection, but a client is NOT REQUIRED
to keep an idle connection open until the inactivity timeout is
reached — a client SHOULD begin closing the connection sooner
if it has no reason to expect future operations with that server
before the inactivity timeout is reached.</t>

<t>A shorter inactivity timeout with a longer keepalive interval signals
to the client that it should not speculatively keep an inactive DSO
Session open for very long without reason, but when it does have an
active reason to keep a DSO Session open, it doesn’t need to be sending
an aggressive level of keepalive traffic to maintain that session.</t>

<t>A longer inactivity timeout with a shorter keepalive interval
signals to the client that it may speculatively keep an inactive
DSO Session open for a long time, but to maintain that inactive
DSO Session it should be sending a lot of keepalive traffic.
This configuration is expected to be less common.</t>

<t>A server may dictate any value it chooses for the inactivity timeout
(either in a response to a client-initiated request, or in a server-initiated message)
including values under one second, or even zero.</t>

<t>An inactivity timeout of zero informs the client that it
should not speculatively maintain idle connections at all, and
as soon as the client has completed the operation or operations relating
to this server, the client should immediately begin closing this session.</t>

<t>An inactivity timeout of 0xFFFFFFFF (2^32-1 milliseconds, approximately 49.7 days)
informs the client that it may keep an idle connection open as long as it wishes.
Note that after granting an unlimited inactivity timeout in this way,
at any point the server may revise that inactivity timeout by sending
a new Keepalive TLV dictating new Session Timeout values to the client.</t>

<t>A server will abort an idle client session after twice the
inactivity timeout value, or five seconds, whichever is greater.
In the case of a zero inactivity timeout value, this means that
if a client fails to close an idle client session then the server
will forcibly abort the idle session after five seconds.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="keepalivetimer" title="The Keepalive Interval">

<t>The purpose of the keepalive interval is to manage the generation of
sufficient messages to maintain state in middleboxes (such at NAT gateways
or firewalls) and for the client and server to periodically verify that they
still have connectivity to each other. This allows them to clean up state
when connectivity is lost, and attempt re-connection if appropriate.</t>

<section anchor="keepalive-interval-expiry" title="Keepalive Interval Expiry">

<t>If, at any time during the life of the DSO Session,
the keepalive interval value (i.e., 15 seconds by default) elapses
without any DNS messages being sent or received on a DSO Session,
the client MUST take action to keep the DSO Session alive,
by sending a DSO Keepalive message (see <xref target="keepalive"/>).
A DSO Keepalive message exchange resets only the keepalive timer, 
not the inactivity timer.</t>

<t>If a client disconnects from the network abruptly,
without cleanly closing its DSO Session,
leaving a long-lived operation uncanceled,
the server learns of this after failing to
receive the required keepalive traffic from that client.
If, at any time during the life of the DSO Session,
twice the keepalive interval value (i.e., 30 seconds by default) elapses
without any DNS messages being sent or received on a DSO Session,
the server SHOULD consider the client delinquent,
and SHOULD forcibly abort the DSO Session.</t>

</section>
<section anchor="values-for-the-keepalive-interval" title="Values for the Keepalive Interval">

<t>For the keepalive interval value, lower values result in a higher volume of keepalive 
traffic. Higher values of the keepalive interval reduce traffic and CPU load, 
but have minimal effect on the memory burden
at the server, because clients keep a DSO Session open for the same length of time
(determined by the inactivity timeout) regardless of the level of keepalive traffic 
required.</t>

<t>It may be appropriate for clients and servers to select different keepalive 
interval values depending on the nature of the network they are on.</t>

<t>A corporate DNS server that knows it is serving only clients on the internal 
network, with no intervening NAT gateways or firewalls, can impose a higher 
keepalive interval, because frequent keepalive traffic is not required.</t>

<t>A public DNS server that is serving primarily residential consumer clients, 
where it is likely there will be a NAT gateway on the path, may impose a lower 
keepalive interval, to generate more frequent keepalive traffic.</t>

<t>A smart client may be adaptive to its environment. A client using
a private IPv4 address <xref target="RFC1918"/> to communicate with a DNS server
at an address outside that IPv4 private address block,
may conclude that there is likely to be a NAT gateway on the path,
and accordingly request a lower keepalive interval.</t>

<t>By default it is RECOMMENDED that clients request,
and servers grant, a keepalive interval of 60 minutes.
This keepalive interval provides for reasonably timely detection if
a client abruptly disconnects without cleanly closing the session,
and is sufficient to maintain state in firewalls and NAT gateways
that follow the IETF recommended Best Current Practice that the
“established connection idle-timeout” used by middleboxes
be at least 2 hours 4 minutes <xref target="RFC5382"/>.</t>

<t>Note that the lower the keepalive interval value, the higher the load on client
and server. For example, a hypothetical keepalive interval value of 100ms would result
in a continuous stream of at least ten messages per second, in both directions,
to keep the DSO Session alive. And, in this extreme example, a single packet loss and
retransmission over a long path could introduce a momentary pause in the stream of messages,
long enough to cause the server to overzealously abort the connection.</t>

<t>Because of this concern, the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with a keepalive interval value less than ten seconds.
If a client receives a Keepalive message specifying a keepalive interval value
less than ten seconds this is an error and the client MUST
forcibly abort the connection immediately.</t>

<t>A keepalive interval value of 0xFFFFFFFF (2^32-1 milliseconds, approximately 49.7 days)
informs the client that it should generate no keepalive traffic.
Note that after signaling that the client should generate no keepalive traffic in this way,
at any point the server may revise that keepalive traffic requirement by sending
a new Keepalive TLV dictating new Session Timeout values to the client.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="server-initiated-session-termination" title="Server-Initiated Session Termination">

<t>In addition to cancelling individual operations selectively (see <xref target="cancellation"/>)
there are also occasions where a server may need to terminate
one or more entire sessions wholesale.
An entire session may need to be terminated if the client is defective in some way,
or departs from the network without closing its session.
Sessions may also need to be terminated if the server becomes overloaded,
or if the server is reconfigured and lacks the ability to be selective about
which operations need to be cancelled.</t>

<t>This section discusses various reasons a session may be terminated,
and the mechanisms for doing so.</t>

<section anchor="error" title="Server-Initiated Session Termination on Error">

<t>After sending an error response to a client, the server MAY end the DSO Session,
or may allow the DSO Session to remain open. For error conditions
that only affect the single operation in question, the server SHOULD return an
error response to the client and leave the DSO Session open for further operations.
For error conditions that are likely to make all operations unsuccessful in the
immediate future, the server SHOULD return an error response to the client and 
then end the DSO Session by sending a Retry Delay request message, as described in 
<xref target="retry"/>.</t>

<t>Upon receiving an error response from the server, a client SHOULD NOT
automatically close the DSO Session. An error relating to one particular operation
on a DSO Session does not necessarily imply that all other operations on that
DSO Session have also failed, or that future operations will fail. The client
should assume that the server will make its own decision about whether or not to
end the DSO Session, based on the server’s determination of whether the error
condition pertains to this particular operation, or would also apply to any
subsequent operations. If the server does not end the DSO Session by
sending the client a Retry Delay message (see <xref target="retry"/>) then the client
SHOULD continue to use that DSO Session for subsequent operations.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="server-initiated-session-termination-on-overload" title="Server-Initiated Session Termination on Overload">

<t>A server MUST NOT close a DSO Session with a client,
except in certain exceptional circumstances, as outlined below.
In normal operation, closing a DSO Session is the client’s responsibility.
The client makes the determination of when to close a DSO
Session based on an evaluation of both its own needs,
and the inactivity timeout value dictated by the server.</t>

<t>Some exceptional situations where a server may terminate a DSO Session include:</t>

<t><list style="symbols">
  <t>The server application software or underlying operating system
is shutting down or restarting.</t>
  <t>The server application software terminates unexpectedly
(perhaps due to a bug that makes it crash).</t>
  <t>The server is undergoing a reconfiguration or maintenance
procedure, that, due to the way the server software is
implemented, requires clients to be disconnected.
For example, some software is implemented such that it reads
a configuration file at startup, and changing the server’s
configuration entails modifying the configuration file
and then killing and restarting the server software,
which generally entails a loss of network connections.</t>
  <t>The client fails to meets its obligation to generate keepalive
traffic or close an inactive session by the prescribed time
(twice the time interval dictated by the server, or five seconds,
whichever is greater, as described in <xref target="sessiontimeouts"/>).</t>
  <t>The client sends a grossly invalid or malformed request that is
indicative of a seriously defective client implementation (see <xref target="error"/>).</t>
  <t>The server is over capacity and needs to shed some load (see <xref target="retry"/>).</t>
</list></t>

<t>When a server has to close a DSO Session with a client
(because of exceptional circumstances such as those outlined above)
the server SHOULD, whenever possible, send a Retry Delay request message
(see below) informing the client of the reason for the DSO Session
being closed, and allow the client five seconds to receive it
before the server resorts to forcibly aborting the connection.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="retry" title="Server-Initiated Retry Delay Request Message">

<t>There may be rare cases where a server is overloaded and wishes to shed load.
If a server is low on resources it MAY simply terminate a client connection
by forcibly aborting it.
However, the likely behavior of the client may be simply to to treat this as
a network failure and reconnect immediately, putting more burden on the server.</t>

<t>Therefore to avoid this reconnection implosion, a server SHOULD instead choose 
to shed client load by sending a Retry Delay request message, with an RCODE of 
SERVFAIL, to inform the client of the overload situation.
The format of the Retry Delay TLV is described in <xref target="delay"/>.
After sending a Retry Delay request message,
the server MUST NOT send any further messages on that DSO Session.</t>

<t>Upon receipt of a Retry Delay request from the server, the client MUST
make note of the reconnect delay for this server, and then immediately
close the connection gracefully.</t>

<t>After sending a Retry Delay request message the server SHOULD allow the
client five seconds to close the connection, and if the client has not
closed the connection after five seconds then the server SHOULD
forcibly abort the connection.</t>

<t>A Retry Delay request message MUST NOT be initiated by a client.
If a server receives a Retry Delay request message this is an error
and the server MUST forcibly abort the connection immediately.</t>

<section anchor="outstanding-operations" title="Outstanding Operations">

<t>At the moment a server chooses to initiate a Retry Delay request message
there may be DNS requests already in flight from client to server on this 
DSO Session, which will arrive at the server after its Retry Delay request message 
has been sent.
The server MUST silently ignore such incoming requests, and MUST NOT generate
any response messages for them. When the Retry Delay request message from the
server arrives at the client, the client will determine that any DNS requests
it previously sent on this DSO Session, that have not yet received a response, now 
will certainly not be receiving any response. Such requests should be considered
failed, and should be retried at a later time, as appropriate.</t>

<t>In the case where some, but not all, of the existing operations on a DSO Session 
have become invalid (perhaps because the server has been reconfigured and is no 
longer authoritative for some of the names),
but the server is terminating all DSO Sessions en masse with a REFUSED (5) RCODE,
the RECONNECT DELAY MAY be zero, indicating that the clients SHOULD immediately
attempt to re-establish operations.</t>

<t>It is likely that some of the attempts will be successful and some will not,
depending on the nature of the reconfiguration.</t>

<t>In the case where a server is terminating a large number of DSO Sessions at once
(e.g., if the system is restarting) and the server doesn’t want to be inundated 
with a flood of simultaneous retries, it SHOULD send different RECONNECT delay 
values to each client.
These adjustments MAY be selected randomly, pseudorandomly, or deterministically
(e.g., incrementing the time value by one tenth of a second for each successive
client, yielding a post-restart reconnection rate of ten clients per second).</t>

</section>
<section anchor="client-reconnection" title="Client Reconnection">

<t>After a DSO Session is closed by the server, the client SHOULD try to reconnect,
to that server, or to another suitable server, if more than one is available.
If reconnecting to the same server, the client MUST respect the indicated delay
before attempting to reconnect.</t>

<t>If a particular server does not want a client to reconnect (the server is being
de-commissioned), it SHOULD set the retry delay to the maximum value (which is
approximately 49.7 days). If the server will only be out of service for a maintenance
period, it should use a value closer to the expected maintenance window and
not default to a very large delay value or clients may not attempt to reconnect
after it resumes service.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
</section>
</section>
<section anchor="base-tlvs-for-dns-stateful-operations" title="Base TLVs for DNS Stateful Operations">

<t>This section describes the three base TLVs for DNS Stateful Operations:
Keepalive, Retry Delay, and Encryption Padding.</t>

<section anchor="keepalive" title="Keepalive TLV">

<t>The Keepalive TLV (DSO-TYPE=1) performs two functions:
to reset the keepalive timer for the DSO Session,
and to establish the values for the Session Timeouts.</t>

<t>The TYPE-DEPENDENT DATA for the the Keepalive TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 INACTIVITY TIMEOUT (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 KEEPALIVE INTERVAL (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='INACTIVITY TIMEOUT:'>
  The inactivity timeout for the current DSO Session, specified as
a 32-bit unsigned integer in network (big endian) byte order in units of milliseconds.
This is the timeout at which the client MUST begin closing an inactive DSO Session.
The inactivity timeout can be any value of the server’s choosing.
If the client does not gracefully close an inactive DSO
Session, then after twice this interval, or five seconds,
whichever is greater, the server will forcibly abort the connection.</t>
  <t hangText='KEEPALIVE INTERVAL:'>
  The keepalive interval for the current DSO Session, specified as
a 32-bit unsigned integer in network (big endian) byte order in units of milliseconds.
This is the interval at which a client MUST generate keepalive
traffic to maintain connection state.
The keepalive interval MUST NOT be less than ten seconds.
If the client does not generate the mandated keepalive traffic,
then after twice this interval the server will forcibly abort the connection.
Since the minimum allowed keepalive interval is ten seconds, the
minimum time at which a server will forcibly disconnect a client for
failing to generate the mandated keepalive traffic is twenty seconds.</t>
</list></t>

<t>The transmission or reception of DSO Keepalive messages
(i.e., messages where the Keepalive TLV is the first TLV)
reset only the keepalive timer, not the inactivity timer.
The reason for this is that periodic Keepalive messages are sent for the sole
purpose of keeping a DSO Session alive, when that DSO Session has current
or recent non-maintenance activity that warrants keeping that DSO Session alive.
Sending keepalive traffic itself is not considered a client activity;
it is considered a maintenance activity that is performed
in service of other client activities.
If keepalive traffic itself were to reset the inactivity timer,
then that would create a circular livelock where keepalive traffic
would be sent indefinitely to keep a DSO Session alive, where the only
activity on that DSO Session would be the keepalive traffic keeping
the DSO Session alive so that further keepalive traffic can be sent.
For a DSO Session to be considered active, it must be carrying
something more than just keepalive traffic.
This is why merely sending or receiving a Keepalive message
does not reset the inactivity timer.</t>

<t>When sent by a client, the Keepalive request message MUST
be sent as an acknowledged request, with a nonzero MESSAGE ID.
If a server receives a Keepalive request message with a zero MESSAGE ID then
this is a fatal error and the server MUST forcibly abort the connection immediately.
The Keepalive request message resets a DSO Session’s keepalive timer,
and at the same time communicates to the server the the client’s
requested Session Timeout values.
In a server response to a client-initiated Keepalive request message,
the Session Timeouts contain the server’s chosen values from
this point forward in the DSO Session, which the client MUST respect.
This is modeled after the DHCP protocol, where the client requests a certain
lease lifetime using DHCP option 51 <xref target="RFC2132"/>, but the server is the
ultimate authority for deciding what lease lifetime is actually granted.</t>

<t>When a client is sending its second and subsequent Keepalive DSO requests to
the server, the client SHOULD continue to request its preferred values each time.
This allows flexibility, so that if conditions change during the lifetime of a
DSO Session, the server can adapt its responses to better fit the client’s needs.</t>

<t>Once a DSO Session is in progress (see <xref target="details"/>)
a Keepalive request message MAY be initiated by a server.
When sent by a server, the Keepalive request message MUST be
sent as an unacknowledged request, with the MESSAGE ID set to zero.
The client MUST NOT generate a response to a server-initiated DSO Keepalive message.
If a client receives a Keepalive request message with a nonzero MESSAGE ID then
this is a fatal error and the client MUST forcibly abort the connection immediately.
The Keepalive request message from the server resets a DSO Session’s keepalive timer,
and at the same time unilaterally informs the client of the new
Session Timeout values to use from this point forward in this DSO Session.
No client DSO response message to this unilateral declaration is required or allowed.</t>

<t>The Keepalive TLV is not used as a request message Additional TLV.</t>

<t>In response messages the Keepalive TLV is used only as a Response Primary TLV,
replying to a Keepalive request message from the client.
A Keepalive TLV MUST NOT be added as to other responses a Response Additional TLV.
If the server wishes to update a client’s Session Timeout values
other than in response to a Keepalive request message from the client,
then it does so by sending an unacknowledged Keepalive request message
of its own, as described above.</t>

<t>It is not required that the Keepalive TLV be used in every DSO Session.
While many DNS Stateful operations
will be used in conjunction with a long-lived session state,
not all DNS Stateful operations require long-lived session state,
and in some cases the default 15-second value for both the inactivity timeout
and keepalive interval may be perfectly appropriate.
However, note that for clients that implement only the TLVs defined in
this document it is the only way for a client to initiate a DSO Session.</t>

<section anchor="client-handling-of-received-session-timeout-values" title="Client handling of received Session Timeout values">

<t>When a client receives a response to its client-initiated DSO Keepalive message,
or receives a server-initiated DSO Keepalive message, the client has then 
received Session Timeout values dictated by the server. The two timeout values 
contained in the DSO Keepalive TLV from the server may each be higher, lower, or 
the same as the respective Session Timeout values the client previously had for 
this DSO Session.</t>

<t>In the case of the keepalive timer, the handling of the received value is 
straightforward. The act of receiving the message containing the DSO Keepalive 
TLV itself resets the keepalive timer and updates the keepalive interval for the 
DSO Session. The new keepalive interval indicates the 
maximum time that may elapse before another message must be sent
or received on this DSO Session, if the DSO Session is to remain alive.</t>

<t><vspace blankLines='999' /></t>

<t>In the case of the inactivity timeout, the handling of the received value 
is a little more subtle, though the meaning of the inactivity 
timeout is unchanged — it still indicates the maximum permissible time allowed 
without useful activity on a DSO Session.
The act of receiving the message containing the DSO Keepalive TLV does not
itself reset the inactivity timer. The time elapsed since the last useful
activity on this DSO Session is unaffected by exchange of DSO Keepalive messages.
The new inactivity timeout value in the DSO Keepalive TLV in the received message
does update the timeout associated with the running inactivity timer;
that becomes the new maximum permissible time without activity on a DSO Session.</t>

<t><list style="symbols">
  <t>If the current inactivity timer value is not greater than the
new inactivity timeout, then the DSO Session may remain open for now.
When the inactivity timer value exceeds the new inactivity timeout,
the client MUST then begin closing the DSO Session, as described above.</t>
  <t>If the current inactivity timer value is already greater
than the new inactivity timeout, then this DSO Session has
already been inactive for longer than the server permits,
and the client MUST immediately begin closing this DSO Session.</t>
  <t>If the current inactivity timer value is already more than twice the
new inactivity timeout, then the client is immediately considered delinquent
(this DSO Session is immediately eligible to be forcibly terminated by the server)
and the client MUST immediately begin closing this DSO Session.
However if a server abruptly reduces the inactivity timeout in this
way, then, to give the client time to close the connection gracefully
before the server resorts to forcibly aborting it, the server
SHOULD give the client an additional grace period of one quarter
of the new inactivity timeout, or five seconds, whichever is greater.</t>
</list></t>

</section>
<section anchor="relation-to-edns0-tcp-keepalive-option" title="Relation to EDNS(0) TCP Keepalive Option">

<t>The inactivity timeout value in the Keepalive TLV (DSO-TYPE=1) has similar
intent to the EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>.
A client/server pair that supports DSO MUST NOT use the
EDNS(0) TCP KeepAlive option within any message after a DSO 
Session has been established.
Once a DSO Session has been established, if either
client or server receives a DNS message over the DSO Session that contains an
EDNS(0) TCP Keepalive option, this is an error and the receiver of the
EDNS(0) TCP Keepalive option MUST forcibly abort the connection immediately.</t>

</section>
</section>
<section anchor="delay" title="Retry Delay TLV">

<t>The Retry Delay TLV (DSO-TYPE=2) can be used as
a Primary TLV (unacknowledged) in a server-to-client message,
or as a Response Additional TLV in a server-to-client response to a client-to-server request message.</t>

<t>The TYPE-DEPENDENT DATA for the the Retry Delay TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     RETRY DELAY (32 bits)                     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='RETRY DELAY:'>
  A time value, specified as
a 32-bit unsigned integer in network (big endian) byte order in units of milliseconds,
within which the client MUST NOT retry this operation, or retry connecting to this server.</t>
</list></t>

<t>The RECOMMENDED value is 10 seconds.</t>

<section anchor="retry-delay-tlv-used-as-a-primary-tlv" title="Retry Delay TLV used as a Primary TLV">

<t>When sent in a DSO request message, from server to client, the 
Retry Delay TLV (0) is used as a Primary TLV. It is used by a server
to instruct a client to close the DSO Session and underlying connection,
and not to reconnect for the indicated time interval.</t>

<t>In this case it applies to the DSO Session as a whole, and the client MUST begin closing the 
DSO Session, as described in <xref target="retry"/>. The RCODE in the message header 
MUST indicate the reason for the termination:</t>

<t><list style="symbols">
  <t>NOERROR indicates a routine shutdown.</t>
  <t>SERVFAIL indicates that the server is overloaded due to resource exhaustion.</t>
  <t>REFUSED indicates that the server has been reconfigured and is no longer able 
to perform one or more of the functions 
currently being performed on this DSO Session (for example, a DNS Push Notification 
server could be reconfigured such that is is no longer accepting DNS Push 
Notification requests for one or more of the currently subscribed names).</t>
</list></t>

<t>This document specifies only these three RCODE values for Retry Delay request.
Servers sending Retry Delay requests SHOULD use one of these three values.
However, future circumstances may create situations where other RCODE values
are appropriate in Retry Delay requests, so clients MUST be prepared
to accept Retry Delay requests with any RCODE value.</t>

<t>A Retry Delay request is an unacknowledged request message;
the MESSAGE ID MUST be set to zero in the request
and the client MUST NOT send a response.</t>

</section>
<section anchor="retry-delay-tlv-used-as-a-response-additional-tlv" title="Retry Delay TLV used as a Response Additional TLV">

<t>In the case of a client request that returns a nonzero RCODE value,
the server MAY append a Retry Delay TLV (0) to the response,
indicating the time interval during which the client
SHOULD NOT attempt this operation again.</t>

<t>The indicated time interval during which the client SHOULD NOT retry
applies only to the failed operation, not to the DSO Session as a whole.</t>

</section>
<section anchor="retry-delay-tlv-is-used-by-server-only" title="Retry Delay TLV is used by server only">

<t>A client MUST NOT send a Retry Delay TLV to a server,
either in a DSO request message, or in a DSO response message.
If a server receives a DSO message containing a Retry Delay TLV,
this is a fatal error and the server MUST forcibly abort the connection immediately.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="padding" title="Encryption Padding TLV">

<t>The Encryption Padding TLV (DSO-TYPE=3) can only be used as
an Additional or Response Additional TLV.
It is only applicable when the DSO Transport layer uses encryption
such as TLS.</t>

<t>The TYPE-DEPENDENT DATA for the the Padding TLV is optional and is a
variable length field containing non-specified values. A DATA LENGTH
of 0 essentially provides for 4 octets of padding (the minimum amount).</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   /                                                               /
   /                   VARIABLE NUMBER OF OCTETS                   /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t>As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
the PADDING octets SHOULD be set to 0x00.  Other values MAY be used,
for example, in cases where there is a concern that the padded
message could be subject to compression before encryption.
PADDING octets of any value MUST be accepted in the messages received.</t>

<t>The Encryption Padding TLV may be included in either a DSO request, response, or both.
As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
if a request is received with an Encryption Padding TLV,
then the response MUST also include an Encryption Padding TLV.</t>

<t>The length of padding is intentionally not specified in this document and
is a function of current best practices with respect to the type and length
of data in the preceding TLVs <xref target="I-D.ietf-dprive-padding-policy"/>.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="summary" title="Summary">

<t>This section summarizes some noteworthy highlights about
various components of the DSO protocol.</t>

<section anchor="message-id" title="MESSAGE ID">

<t>In DSO Request Messages the MESSAGE ID may be either
nonzero (signaling that the responder MUST generate a response)
or zero (signaling that the responder MUST NOT generate a response).</t>

<t>In DSO Response Messages the MESSAGE ID MUST NOT be zero
(since this would be a response to a request that had
indicated that a response is not allowed).</t>

<t>The table below illustrates the legal combinations:</t>

<figure><artwork><![CDATA[
                          +--------------------+-------------------+
                          | Nonzero MESSAGE ID |  Zero MESSAGE ID  |
   +----------------------+--------------------+-------------------+
   | DSO Request Message  |         X          |         X         |
   +----------------------+--------------------+-------------------+
   | DSO Response Message |         X          |                   |
   +----------------------+--------------------+-------------------+
]]></artwork></figure>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="tlv-usage" title="TLV Usage">

<t>The table below indicates, for each of the three TLVs defined in this
document, whether they are valid in each of ten different contexts.</t>

<t>The first five contexts are requests from client to server,
and the corresponding responses from server back to client:</t>

<t><list style="symbols">
  <t>C-P - Primary TLV,
sent in DSO Request message,
from client to server,
with nonzero MESSAGE ID indicating that this request MUST generate response message.</t>
  <t>C-U - Primary TLV (unacknowledged),
sent in DSO Request message,
from client to server,
with zero MESSAGE ID indicating that this request MUST NOT generate response message.</t>
  <t>C-A - Additional TLV, optionally added to request message from client to server.</t>
  <t>CRP - Response Primary TLV, included in response message sent to back the client
(in response to a client “C-P” request with nonzero MESSAGE ID indicating that a response is required)
where the DSO-TYPE of the Response TLV matches the DSO-TYPE of the Primary TLV in the request.</t>
  <t>CRA - Response Additional TLV, included in response message sent to back the client
(in response to a client “C-P” request with nonzero MESSAGE ID indicating that a response is required)
where the DSO-TYPE of the Response TLV does not match the DSO-TYPE of the Primary TLV in the request.</t>
</list></t>

<t>The second five contexts are the reverse: requests from server to client,
and the corresponding responses from client back to server.</t>

<figure><artwork><![CDATA[
              +-------------------------+-------------------------+
              | C-P  C-U  C-A  CRP  CRA | S-P  S-U  S-A  SRP  SRA |
 +------------+-------------------------+-------------------------+
 | KeepAlive  |  X              X       |       X                 |
 +------------+-------------------------+-------------------------+
 | RetryDelay |                      X  |       X                 |
 +------------+-------------------------+-------------------------+
 | Padding    |            X         X  |            X         X  |
 +------------+-------------------------+-------------------------+
]]></artwork></figure>

<t>It is recommended that definitions of future TLVs include a
similar table summarizing the contexts where the new TLV is valid.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="inactivity-timeout" title="Inactivity Timeout">

<t>The Inactivity Timeout may have any 32-bit unsigned integer value.</t>

<t>The value zero informs the client that it
should not speculatively maintain idle connections at all, and
as soon as the client has completed the operation or operations relating
to this server, the client should immediately begin closing this session.</t>

<t>The maximum possible value,
0xFFFFFFFF (2^32-1 milliseconds, approximately 49.7 days),
informs the client that it may keep an idle connection open as long as it wishes.</t>

<t>The Inactivity timer is reset by any message <spanx style="strong">except</spanx> the Keepalive TLV,
and remains cleared any time that an operation is outstanding.</t>

</section>
<section anchor="keepalive-interval" title="Keepalive Interval">

<t>The Keepalive Interval is a 32-bit unsigned integer value,
with a minimum value of 10,000 milliseconds (10 seconds).</t>

<t>The maximum possible value,
0xFFFFFFFF (2^32-1 milliseconds, approximately 49.7 days),
informs the client that it should generate no keepalive traffic.</t>

<t>Any message exchange (including the Keepalive TLV) resets the Keepalive timer.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="dso-opcode-registration" title="DSO OPCODE Registration">

<t>The IANA is directed to record the value (tentatively) 6 for the DSO OPCODE
in the DNS OPCODE Registry.</t>

</section>
<section anchor="dso-rcode-registration" title="DSO RCODE Registration">

<t>The IANA is directed to record the value (tentatively) 11 for the DSONOTIMP error code
in the DNS RCODE Registry.</t>

</section>
<section anchor="dso-type-code-registry" title="DSO Type Code Registry">

<t>The IANA is directed to create the 16-bit DSO Type Code Registry,
with initial (hexadecimal) values as shown below:</t>

<texttable>
      <ttcol align='left'>Type</ttcol>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Status</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>0000</c>
      <c>Reserved</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0001</c>
      <c>KeepAlive</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0002</c>
      <c>RetryDelay</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0003</c>
      <c>EncryptionPadding</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0004-003F</c>
      <c>Unassigned, reserved for    DSO session-management TLVs</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0040-F7FF</c>
      <c>Unassigned</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>F800-FBFF</c>
      <c>Reserved for experimental/local use</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>FC00-FFFF</c>
      <c>Reserved for future expansion</c>
      <c>&#160;</c>
      <c>&#160;</c>
</texttable>

<t>DSO Type Code zero is reserved and is not currently intended for allocation.</t>

<t>Registrations of new DSO Type Codes in
the “Reserved for DSO session-management” range 0004-003F
and the “Reserved for future expansion” range FC00-FFFF
require publication of an IETF Standards Action document <xref target="RFC5226"/>.</t>

<t>Requests to register additional new DSO Type Codes
in the “Unassigned” range 0040-F7FF
are to be recorded by IANA after consultation with the
registry’s Designated Expert <xref target="RFC5226"/> at that time.
At the time of publication of this document, the Designated Expert
for the newly created DSO Type Code registry is [<spanx style="strong">TBD</spanx>].</t>

<t>DSO Type Codes in the “experimental/local” range F800-FBFF
may be used as Experimental Use or Private Use values <xref target="RFC5226"/>
and may be used freely for development purposes,
or for other purposes within a single site.
No attempt is made to prevent multiple sites from using
the same value in different (and incompatible) ways.
There is no need for IANA to review such assignments
(since IANA does not record them) and assignments
are not generally useful for broad interoperability.
It is the responsibility of the sites making use of
“experimental/local” values to ensure that no
conflicts occur within the intended scope of use.</t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>If this mechanism is to be used with DNS over TLS, then these messages
are subject to the same constraints as any other DNS-over-TLS messages
and MUST NOT be sent in the clear before the TLS session is established.</t>

<t>The data field of the “Encryption Padding” TLV could be used as a covert channel.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to
Tim Chown,
Ralph Droms,
Jan Komissar,
Manju Shankar Rao,
and Ted Lemon
for their helpful contributions to this document.</t>

<t><vspace blankLines='999' /></t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC1035;
&RFC7766;
&RFC6891;
&RFC7828;
&RFC2119;
&RFC2136;
&RFC7830;
&RFC1034;
&RFC1918;
&RFC5382;
&RFC2132;
&RFC5226;


    </references>

    <references title='Informative References'>

<reference anchor="NagleDA" target="http://www.stuartcheshire.org/papers/nagledelayedack/">
  <front>
    <title>TCP Performance problems caused by interaction between Nagle's Algorithm and Delayed ACK</title>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization></organization>
    </author>
    <date year="2005" month="May" day="20"/>
  </front>
</reference>
&RFC7858;
&I-D.ietf-dnssd-push;
&I-D.sctl-dnssd-mdns-relay;
&RFC6763;
&RFC0768;
&RFC7413;
&I-D.ietf-tls-tls13;
&RFC1122;
&I-D.ietf-dprive-padding-policy;


    </references>



  </back>

<!-- ##markdown-source:
H4sIAO8RbFoAA+W9+3obR7In+H8+RS39h0kdACYlWbbV337bNEnZPK1bk1Rf
zs7ufAWgQFYbqMKpKpBCS3qXeZZ5so1rZmRdQEp29/Se0RlNy0AhKy+Rcf1F
xHg8dk3eLLPnyenry+SySZtssVkmb9ZZlTZ5WdRuXs6KdAUPzKt00YzzrFmM
50Vdrsd1VtfwyLjOr4t0OT781s3h58+Tx4dH34+Pxo+fuXxdPU+aalM3jw8P
fzh87NIqS58n50WTVUXWuLtreu+bt8mfy+qXvLhOfqrKzdr9chceGp/ie90s
bZ4ndTN3mzW+pX6eXLw4Sb777tmzEf3r6PDJt87NyjmM8jzZwCS/d+v8uUuS
cdKUM/rferuqskXN/y6rhv7DpZvmpqzoSfibJHmBg0+SH7PlMq/pI96Ai3Rr
Pyyr6zDL5HJbN9mqTk5gz2DofLMawZezCT2aTqdVdgtPX57Qf9fw6gzW88O3
h8nJTVrBGLD3+Bl9PcubLbwum9+V5Tw5gf/ij8s5zOLkOPnh6eGzJ/LRpmgq
ePjd5TF9sL4pC3jo346SZzD208dPkiPYevoqW6X58nlSpdvf5/VsAtOPl3w5
gblk9U1eZWbRl80G5hd/Qys/Xq+XWViiLukIPlrkRd5kycuyXJv1nGyAqJq8
KFuL+fbw6Ol9i3l6+H3yw3dPkyePD7+zi5nJtH6f4mwms3IVr+nfJ8lpPgPK
qsvCLOrfy5ui9QWt6RJmN98U4VSvstlNUS7L6zyro5OUJ+3S6d/j5FV6nc7T
ZVYkJxksJ5OP37xflNU8uZzlWTHLkrdp9YvZG/7WbMybvzxNnv503NoX3NZ5
8gcg8Tmt1O/D39L572ueUncTLvs34TKt0v9Sm1DDgoZ34XgCsypgsWYLjvEy
l4X9grcApl7DZGaZHT/lpycrevr31/hp9z1Xk+TtpgYWVeXmTVflKv6Y3vOu
SBeLfJnDx/PoFu3tWUYAs8mvb8zGvD5JHn/37PD7+67ND0c/JN8/+y45evIk
4gFrmcnvp2lx/Tdag8sLWPAKmP5thqf4Or1eZqfHfKBNWl3jtG6aZv38m2/u
7u4mNfEFvX/ITb5Zp3DB628K/OU8W6bbbJ7OfvmGR2Ahc3XyNnmbVfQmpIB1
VU6XyDZn6aaGU51uYRNhZukMhU8yzZq7DIiIJvN1Ded1XVZ5c7NK0mKenPI7
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

-->

</rfc>

