<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.7 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC7766 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7766.xml">
<!ENTITY RFC6891 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6891.xml">
<!ENTITY RFC7828 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7828.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC7830 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7830.xml">
<!ENTITY RFC1034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC2136 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2136.xml">
<!ENTITY RFC1918 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1918.xml">
<!ENTITY RFC2132 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2132.xml">
<!ENTITY RFC5226 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5226.xml">
<!ENTITY RFC7858 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7858.xml">
<!ENTITY RFC6763 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6763.xml">
<!ENTITY I-D.ietf-dnssd-push SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dnssd-push.xml">
<!ENTITY RFC0768 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.0768.xml">
<!ENTITY RFC1122 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1122.xml">
<!ENTITY I-D.ietf-dprive-padding-policy SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dprive-padding-policy.xml">
]>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-dnsop-session-signal-05" category="std" updates="RFC 7766, RFC 1035">

  <front>
    <title>DNS Stateful Operations</title>

    <author initials="R." surname="Bellis" fullname="Ray Bellis">
      <organization abbrev="ISC">Internet Systems Consortium, Inc.</organization>
      <address>
        <postal>
          <street>950 Charter Street</street>
          <city>Redwood City</city>
          <code>CA 94063</code>
          <country>USA</country>
        </postal>
        <phone>+1 650 423 1200</phone>
        <email>ray@isc.org</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>1 Infinite Loop</street>
          <city>Cupertino</city>
          <code>CA 95014</code>
          <country>USA</country>
        </postal>
        <phone>+1 408 974 3207</phone>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="J." surname="Dickinson" fullname="John Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>jad@sinodun.com</email>
      </address>
    </author>
    <author initials="S." surname="Dickinson" fullname="Sara Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>sara@sinodun.com</email>
      </address>
    </author>
    <author initials="A." surname="Mankin" fullname="Allison Mankin">
      <organization>Salesforce</organization>
      <address>
        <email>allison.mankin@gmail.com</email>
      </address>
    </author>
    <author initials="T." surname="Pusateri" fullname="Tom Pusateri">
      <organization>Unaffiliated</organization>
      <address>
        <postal>
          <street></street>
          <city>Raleigh</city>
          <code>NC 27608</code>
          <country>USA</country>
        </postal>
        <phone>+1 919 867 1330</phone>
        <email>pusateri@bangj.com</email>
      </address>
    </author>

    <date year="2017" month="November" day="19"/>

    <area>Internet</area>
    <workgroup>DNSOP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document defines a new DNS OPCODE, for DNS Stateful Operations (DSO).
DSO messages are used to communicate operations within persistent
stateful sessions, expressed using type-length-value (TLV) syntax.
This document defines an initial set of TLVs, including ones
used to manage session timeouts and termination.
This mechanism is intended to reduce the overhead of existing 
“per-packet” signaling mechanisms with “per-message” semantics as well as 
defining new stateful operations not defined in EDNS(0).</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The use of transports for DNS other than UDP is being increasingly specified,
for example, DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> and DNS over TLS <xref target="RFC7858"/>.
Such transports can offer persistent, long-lived sessions and therefore when
using them for transporting DNS messages it is of benefit to have a mechanism
that can establish parameters associated with those sessions, such as timeouts.
In such situations it is also advantageous to support server initiated messages.</t>

<t>The existing EDNS(0) Extension Mechanism for DNS <xref target="RFC6891"/> is explicitly
defined to only have “per-message” semantics. Whilst EDNS(0) has been used to
signal at least one session-related parameter (the EDNS(0) TCP Keepalive option
<xref target="RFC7828"/>) the result is less than optimal due to the restrictions
imposed by the EDNS(0) semantics and the lack of server-initiated signalling. 
For example, a server cannot arbitrarily 
instruct a client to close a connection because the server can only send EDNS(0) options 
in responses to queries that contained EDNS(0) options.</t>

<t>This document defines a new DNS OPCODE, for DNS Stateful Operations (DSO).
DSO messages are used to communicate operations within persistent
stateful sessions, expressed using type-length-value (TLV) syntax.
This document defines an initial set of TLVs, including ones
used to manage session timeouts and termination.</t>

<t>All three of the TLVs defined here are mandatory for all implementations of DSO.
Additional TLVs may be defined in additional specifications.</t>

<t>It should be noted that the message format for DNS Stateful Operations
(see <xref target="format"/>) differs from the traditional DNS packet
format used for standard queries and responses.
The standard twelve-octet header is used, but the four count fields
(QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) are set to zero and their
corresponding sections are not present.
The actual data pertaining to DNS Stateful Operations
(expressed in TLV format) is appended to the end of the DNS message header.
When displayed using packet analyzer tools that have not been
updated to recognize the DNS Stateful Operations format, this
will result in the Stateful Operations data being displayed
as unknown additional data after the end of the DNS message.
It is likely that future updates to these tools will add the ability
to recognize, decode, and display the Stateful Operations data.</t>

<t>This new format has distinct advantages over an RR-based format because it
is more explicit and more compact. Each TLV definition is specific
to the use case, and as a result contains no redundant or overloaded fields.
Importantly, it completely avoids conflating DNS Stateful Operations in anyway 
with normal DNS operations or with existing EDNS(0) based functionality.
A goal of this approach is to avoid the operational issues that have
befallen EDNS(0), particularly relating to middle-box behaviour.</t>

<t>With EDNS(0), multiple options may be packed into a single OPT pseudo-RR,
and there is no generalized mechanism for a client to be able to tell
whether a server has processed or otherwise acted upon each individual
option within the combined OPT RR.
The specifications for each individual option need to define how each
different option is to be acknowledged, if necessary.</t>

<t>In contrast to EDNS(0), with DNS Stateful Operations there is no
compelling motivation to pack multiple operations into a single
message for efficiency reasons, because DNS Stateful Operations
always operates using a connection-oriented transport protocol.
Each Stateful operation is communicated in its own separate
DNS message, and the transport protocol can take care of packing
separate DNS messages into a single IP packet if appropriate.
For example, TCP can pack multiple small DNS messages into a single TCP segment.
This simplification allows for clearer semantics.
Each DSO request message communicates just one primary operation,
and the RCODE in the corresponding response message indicates the
success or failure of that operation.</t>

</section>
<section anchor="terminology" title="Terminology">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and
“OPTIONAL” in this document are to be interpreted as described in
“Key words for use in RFCs to Indicate Requirement Levels” <xref target="RFC2119"/>.</t>

<t>“DSO” is used to mean DNS Stateful Operation.</t>

<t>The term “connection” means a bidirectional byte stream of reliable,
in-order messages, such as provided by using
DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> or DNS over TLS <xref target="RFC7858"/>.</t>

<t>The unqualified term “session” in the context of this document means the exchange of
DNS messages over a connection where:</t>

<t><list style="symbols">
  <t>The connection between client and server is persistent and relatively
long-lived (i.e., minutes or hours, rather than seconds).</t>
  <t>Either end of the connection may initiate messages to the other.</t>
</list></t>

<t>A “DSO session” is established between two endpoints that
acknowledge persistent DNS state via the exchange of DSO messages
over the connection. This is distinct from, for example a DNS-over-TCP session
as described in RC7766.</t>

<t>A “DSO session” is terminated when the underlying connection is closed.</t>

<t>The term “server” means the software with a listening socket, awaiting
incoming connection requests.</t>

<t>The term “client” means the software which initiates a connection
to the server’s listening socket.</t>

<t>The terms “initiator” and “responder” correspond respectively to the
initial sender and subsequent receiver of a DSO request message,
regardless of which was the “client” and “server” in the usual DNS sense.</t>

<t>The term “sender” may apply to either an initiator
(when sending a DNS Stateful Operation request message)
or a responder (when sending a DNS Stateful Operation response message).</t>

<t>Likewise, the term “receiver” may apply to either a responder
(when receiving a DNS Stateful Operation request message)
or an initiator (when receiving a DNS Stateful Operation response message).</t>

<t>DNS Stateful Operations are expressed using type-length-value (TLV) syntax.</t>

<t>Two timers (elapsed time since an event) are defined in this document:</t>

<t><list style="symbols">
  <t>an inactivity timer (see <xref target="keepalive"/> and <xref target="inactivetimer"/>)</t>
  <t>a keepalive timer (see <xref target="keepalive"/> and <xref target="keepalivetimer"/>)</t>
</list></t>

<t>The timeouts associated with these timers are called the inactivity timeout and 
the keepalive interval respectively. 
The term “Session Timeouts” is used to refer to this pair of timeout values.</t>

<t>Reseting a timer means resetting the timer value to zero and starting the timer 
again. Clearing a timer means resetting the timer value to zero but NOT starting 
the time again.</t>

</section>
<section anchor="discussion" title="Discussion">

<t>There are several use cases for DNS Stateful operations that can 
be described here.</t>

<t>Firstly, establishing session parameters such as server defined timeouts is of 
great use in the 
general management of persistent connections. For example, using DSO sessions 
for stub to recursive DNS-over-TLS <xref target="RFC7858"/> is more flexible for both the 
client and the server than attempting to manage sessions using just the EDNS(0)
TCP Keepalive option
<xref target="RFC7828"/>. The simple set of TLVs defined in this document is
sufficient to greatly enhance connection management for this use case.</t>

<t>Secondly, DNS-SD <xref target="RFC6763"/> has evolved into a naturally session based mechanism where,
for example, long-lived subscriptions lend themselves to ‘push’ mechanisms as 
opposed to polling. Long-lived stateful connections and server initiated 
messages align with this use case <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>A general use case is that DNS traffic is often bursty but session establishment 
can be expensive. One challenge with long-lived connections is to maintain 
sufficient traffic to maintain NAT and firewall state.
To mitigate this issue this document introduces a
new concept for the DNS, that is DSO “Keepalive traffic”.
This traffic carries no DNS data and is not considered ‘activity’
in the classic DNS sense, but serves to maintain state in middle boxes,
and to assure client and server that they still have connectivity to each other.</t>

<t>There are a myriad of other potential use cases for DSO given the versatility 
and extensibility of this specification.</t>

<t><xref target="details"/> of this document describes the protocol details of DNS Stateful
Operations including definitions of three TLVs for session management and 
encryption padding. <xref target="lifecycle"/> presents a
detailed discussion of the DSO Session lifecycle including an
in-depth discussion of keepalive traffic and session termination.</t>

</section>
<section anchor="details" title="Protocol Details">

<section anchor="establishment" title="DSO Session Establishment">

<t>DSO messages MUST only be carried in protocols and in
environments where a session may be established according to the definition above.
Standard DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/>, and DNS over TLS <xref target="RFC7858"/>
are suitable protocols.</t>

<t>DNS over plain UDP <xref target="RFC0768"/> is not appropriate since it fails on the requirement for
in-order message delivery, and, in the presence of NAT gateways and firewalls
with short UDP timeouts, it fails to provide a persistent bi-directional
communication channel unless an excessive amount of keepalive traffic is used.</t>

<t>In some environments it may be known in advance by external means
that both client and server support DSO, and in these cases either
client or server may initiate DSO messages at any time.</t>

<t>However, in the typical case a server will not know in advance whether a
client supports DSO, so in general, unless it is known in advance by other means
that a client does support DSO, a server MUST NOT initiate DSO messages until
a DSO session has been mutually established, as described below.</t>

<t>A client MAY attempt to initiate DSO messages at any time
on a connection; receiving a NOTIMP response in reply indicates that the
server does not implement DSO, and the client SHOULD NOT
issue further DSO messages on that connection.</t>

<t>The DSO message format (see <xref target="tlvformat"/>) includes a bit in the TLV structure
that indicates whether or not a particular DSO request message from the
initiator requires a corresponding DSO response message from the responder.
A “DSO session” is established over a connection by the client
sending a DSO request message of a kind that has the acknowledgement bit set,
indicating that it is a request message of a kind that requires a response.</t>

<t>When the server receives a response-requiring DSO request message
from a client, and transmits its response, the server considers
the DSO session established.</t>

<t>When the client receives the server’s DSO response,
the client considers the DSO session established.</t>

<t>Apart from cases where it is known in advance by external means
that both client and server support DSO,
session establishment can only be performed by the client sending
a DSO request message of a kind that requires a response.</t>

<t>Currently the only suitable such messages are the 
DSO Keepalive Operation TLV (see <xref target="keepalive"/>) and the
DSO Encryption Padding TLV (see <xref target="padding"/>).</t>

<t>If future documents define other client-initiated
response-requiring DSO request messages, then one of these
messages may also be used to establish a DSO session.</t>

<t>Clients MAY send non-response-requiring DSO request messages at any time
on a connection, but a “DSO session” is only considered established after:</t>

<t><list style="symbols">
  <t>the client has sent its first response-requiring DSO request message, and</t>
  <t>(at the server) the server has received this request and transmitted its response</t>
  <t>(at the client) the client has received the server’s response</t>
</list></t>

<t>Once a “DSO session” has been established,
either end may unilaterally send DSO messages at any time,
and therefore either client or server may be the initiator of a message.</t>

<t>Once a “DSO session” has been established,
clients and servers should behave as described in this specification with
regard to inactivity timeouts and connection close, not as prescribed in
the previous specification for DNS over TCP <xref target="RFC7766"/>.</t>

<section anchor="middle-box-considerations" title="Middle-box Considerations">

<t>Where an application-layer middle box (e.g., a DNS proxy, forwarder, or
session multiplexer) is in the path the middle box MUST NOT blindly
forward DSO messages in either direction, and MUST treat the inbound
and outbound connections as separate sessions.  This does not preclude
the use of DSO messages in the presence of an IP-layer middle box such
as a NAT that rewrites IP-layer and/or transport-layer headers, but
otherwise preserves the effect of a single session between the client
and the server.</t>

<t>To illustrate the above, consider a network where a middle box
terminates one or more TCP connections from clients and multiplexes the
queries therein over a single TCP connection to an upstream server.  The
DSO messages and any associated state are specific to the individual
TCP connections.  A DSO-aware middle box MAY in some circumstances be
able to retain associated state and pass it between the client and
server (or vice versa) but this would be highly TLV-specific.  For
example, the middle box may be able to maintain a list of which clients
have made Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/> and
make its own subscription(s) on their behalf, relaying any subsequent
notifications to the client (or clients) that have subscribed to that
particular notification.</t>

</section>
</section>
<section anchor="format" title="Message Format">

<t>A DSO message begins with
the standard twelve-octet DNS message header <xref target="RFC1035"/>
with the OPCODE field set to the DSO OPCODE (tentatively 6).
However, unlike standard DNS messages, the question section, answer section,
authority records section and additional records sections are not present.
The corresponding count fields (QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) MUST be
set to zero on transmission.</t>

<t>If a DSO message is received where any of the count fields are
not zero, then a FORMERR MUST be returned,
unless a future document specifies otherwise.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                          MESSAGE ID                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |QR |    OPCODE     |            Z              |     RCODE     |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     QDCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ANCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     NSCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ARCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                           DSO Data                            /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<section anchor="header" title="Header">

<t>In a request the MESSAGE ID field MUST be set to a unique value, that the
initiator is not currently using for any other active operation on this 
connection.
For the purposes here, a MESSAGE ID is in use in this DSO session if the
initiator has used it in a request for which it has not yet received a
response, or if the client has used it to setup state that it has not yet
deleted. For example, state could be a subscription <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>In a response the MESSAGE ID field MUST contain a copy of the value of the
MESSAGE ID field in the request being responded to.</t>

<t>In a request the DNS Header QR bit MUST be zero (QR=0).
If the QR bit is not zero the message is not a request.</t>

<t>In a response the DNS Header QR bit MUST be one (QR=1).
If the QR bit is not one the message is not a response.</t>

<t>The DNS Header OPCODE field holds the DSO OPCODE value (tentatively 6).</t>

<t>The Z bits are currently unused in DSO messages,
and in both DSO requests and DSO responses the
Z bits MUST be set to zero (0) on transmission and MUST be silently ignored
on reception, unless a future document specifies otherwise.</t>

<t>In a request message (QR=0) the RCODE is generally set to zero on transmission,
and silently ignored on reception, except where specified otherwise
(for example, the Retry Delay operation (see <xref target="delay"/>), where the RCODE indicates the reason
for termination).</t>

<t>The RCODE value in a response may be one of the following values:</t>

<texttable>
      <ttcol align='right'>Code</ttcol>
      <ttcol align='left'>Mnemonic</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>0</c>
      <c>NOERROR</c>
      <c>Operation processed successfully</c>
      <c>1</c>
      <c>FORMERR</c>
      <c>Format error</c>
      <c>2</c>
      <c>SERVFAIL</c>
      <c>Server failed to process request due to a problem with the server</c>
      <c>3</c>
      <c>NXDOMAIN</c>
      <c>Name Error — Named entity does not exist (TLV-dependent)</c>
      <c>4</c>
      <c>NOTIMP</c>
      <c>DSO not supported</c>
      <c>5</c>
      <c>REFUSED</c>
      <c>Operation declined for policy reasons</c>
      <c>9</c>
      <c>NOTAUTH</c>
      <c>Not Authoritative (TLV dependent)</c>
      <c>11</c>
      <c>DSONOTIMP</c>
      <c>DSO type code not supported</c>
</texttable>

<t>Use of the above RCODEs is likely to be common in DSO but 
does not preclude the definition and use of other codes in future documents that 
make use of DSO.</t>

<t>If a document describing a DSO makes use of either NXDOMAIN (Name Error)
or NOTAUTH then that document MUST explain the meaning.</t>

</section>
<section anchor="dsodata" title="DSO Data">

<t>The standard twelve-octet DNS message header is followed by the DSO Data.</t>

<t>The first TLV in a DSO request message is called the Operation 
TLV. Any subsequent TLVs after this initial Operation TLV are called Modifier TLVs.</t>

<t>Depending on the operation a DSO response can contain:</t>

<t><list style="symbols">
  <t>No TLVs</t>
  <t>Only an Operation TLV</t>
  <t>An Operation TLV followed by one or more Modifier TLVs</t>
  <t>Only Modifier TLVs</t>
</list></t>

<section anchor="tlvformat" title="TLV Format">

<t>Operation and modifier TLVs both use the same encoding format.</t>

<t>Operation TLVs SHOULD normally require a response and, therefore, set the TLV
Acknowledgement bit in a request. However, for some Operation TLVs, this may be
undesirable and the TLV Acknowledgement bit MAY be cleared in the request. Each
Operation TLV definition should stipulate whether an acknowledgement is
REQUIRED. If the TLV Acknowledgement bit is cleared in a request, a response
MUST NOT be sent. Modifier TLVs MUST NEVER set the Acknowledgement bit. The
Acknowledgement bit is NEVER set in the response to an Operation TLV.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   | A |                        DSO-TYPE                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                        DSO DATA LENGTH                        |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                      TYPE-DEPENDENT DATA                      /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='A:'>
  A 1-bit TLV Response flag indicating whether or not an Operation TLV requires
a response Acknowledgement.</t>
  <t hangText='DSO-TYPE:'>
  A 15-bit field in network order giving the type of the current DSO TLV per
the IANA DSO Type Codes Registry.</t>
  <t hangText='DSO DATA LENGTH:'>
  A 16-bit field in network order giving the size in octets of
the TYPE-DEPENDENT DATA.</t>
  <t hangText='TYPE-DEPENDENT DATA:'>
  Type-code specific format.</t>
</list></t>

<t>Where domain names appear within TYPE-DEPENDENT DATA, they MAY be compressed 
using standard DNS name compression. However, the compression MUST NOT point
outside of the TYPE-DEPENDENT DATA section and offsets MUST be from the start
of the TYPE-DEPENDENT DATA.</t>

</section>
<section anchor="operation-tlvs" title="Operation TLVs">

<t>An “Operation TLV” specifies the operation to be performed.</t>

<t>A DSO message MUST contain at most one Operation TLV.</t>

<t>In all cases a DSO request message MUST contain exactly one 
Operation TLV, indicating the operation to be performed.</t>

<t>Depending on the operation, a DSO response message MAY contain no 
Operation TLV, because it is simply a response to a previous request message,
and the MESSAGE ID in the header is sufficient to identify the request in 
question. Or it may contain a single corresponding response Operation TLV, with 
the same DSO-TYPE as in the request message. The specification for each DSO
type determines whether a response for that operation type 
is required to carry the Operation TLV.</t>

<t>If a DSO response is received for an operation which requires
that the response carry an Operation TLV, and the required Operation TLV is not
the first DSO TLV in the response message, then this is a fatal 
error and the recipient of the defective response message MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
<section anchor="modifier-tlvs" title="Modifier TLVs">

<t>A “Modifier TLV” specifies additional parameters
relating to the operation. Immediately following the Operation TLV, if present,
a DSO message MAY contain one or more Modifier TLVs.</t>

</section>
<section anchor="unrecognized-tlvs" title="Unrecognized TLVs">

<t>If a DSO request is received containing an unrecognized
Operation TLV, the receiver MUST send a response with matching
MESSAGE ID, and RCODE DSONOTIMP (tentatively 11). The response MUST NOT contain 
an Operation TLV.</t>

<t>If a DSO message (request or response) is received
containing one or more unrecognized Modifier TLVs, the unrecognized
Modifier TLVs MUST be silently ignored, and the remainder of the message
is interpreted and handled as if the unrecognized parts were not present.</t>

</section>
</section>
<section anchor="edns0-and-tsig" title="EDNS(0) and TSIG">

<t>Since the ARCOUNT field MUST be zero, a DSO message
MUST NOT contain an EDNS(0) option in the additional records section.
If functionality provided by current or future EDNS(0) options is desired
for DSO messages, an Operation TLV or
Modifier TLV needs to be defined to carry the necessary information.</t>

<t>For example, the EDNS(0) Padding Option <xref target="RFC7830"/> used for security purposes
is not permitted in a DSO message,
so if message padding is desired for DSO messages
then the Encryption Padding TLV described in <xref target="padding"/> MUST be used.</t>

<t>Similarly, a DSO message MUST NOT contain a TSIG record.
A TSIG record in a conventional DNS message is added as the last record
in the additional records section, and carries a signature computed over
the preceding message content. Since DSO data appears
after the additional records section, it would not be included in the
signature calculation. 
If use of signatures with DSO messages becomes necessary in the 
future, an explicit Modifier TLV needs to be defined to 
perform this function.</t>

<t>Note however that, while DSO <spanx style="emph">messages</spanx> cannot include
EDNS(0) or TSIG records, a DSO <spanx style="emph">session</spanx> is typically used to 
carry a whole series of DNS messages of different kinds, including DSO
messages, and other DNS message types like Query <xref target="RFC1034"/> 
<xref target="RFC1035"/> and Update <xref target="RFC2136"/>, and those messages can carry EDNS(0) and 
TSIG records.</t>

<t>This specification explicitly prohibits use of the
EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>
in <spanx style="emph">any</spanx> messages sent on a DSO session (because it duplicates
the functionality provided by the DSO Keepalive operation),
but messages may contain other EDNS(0) options as appropriate.</t>

</section>
</section>
<section anchor="message-handling" title="Message Handling">

<t>The initiator MUST set the value of the QR bit in the DNS header to
zero (0), and the responder MUST set it to one (1).
Every DSO request message (QR=0) with the Acknowledgement bit set in the
operation TLV MUST elicit a response (QR=1), which MUST have the same
MESSAGE ID in the DNS message header as in the corresponding request.
DSO request messages sent by the client with the Acknowledgement
bit set in the operation TLV elicit a response from the server, and
DSO request messages sent by the server with the Acknowledgement
bit set in the operation TLV elicit a response from the client.</t>

<t>A DSO request message (QR=0) with the Acknowledgement bit clear in the
operation TLV MUST NOT elicit a response.</t>

<t>The namespaces of 16-bit MESSAGE IDs are disjoint in each direction.
For example, it is <spanx style="emph">not</spanx> an error for both client and server to send a request
message with the same ID. In effect, the 16-bit MESSAGE ID combined with the 
identity of the initiator (client or server) serves as a 17-bit unique 
identifier for a particular operation on a DSO session.</t>

<t>As described in <xref target="header"/> An initiator MUST NOT reuse a MESSAGE ID that is 
already in use for an 
outstanding request, unless specified otherwise by the relevant specification 
for the DSO in question. At the very least, this means 
that a MESSAGE ID MUST NOT be reused in a particular direction
on a particular DSO session while the initiator is waiting for a response to a 
previous request using that MESSAGE ID on that DSO session,
unless specified otherwise by the relevant 
specification for the DSO in question.
(For a long-lived state the MESSAGE ID for the operation
MUST NOT be reused whilst that state remains active.)</t>

<t>If a client or server receives a response (QR=1) where the MESSAGE ID does not
match any of its outstanding operations, this is a fatal error and it MUST 
immediately terminate the connection with a TCP RST (or equivalent for other 
protocols).</t>

</section>
<section anchor="dso-response-generation" title="DSO Response Generation">

<t>With most TCP implementations, for DSO requests that generate a response,
the TCP data acknowledgement (generated because data has been received by TCP),
the TCP window update (generated because TCP has delivered that data to the receiving software),
and the DSO response (generated by the receiving application-layer software itself)
are all combined into a single packet.
Combining these three elements into a single packet gives a
potentially significant improvement in network efficiency.</t>

<t>For DSO requests that do not generate a response,
the TCP implementation generally doesn’t have any way to know
that no response will be forthcoming, so it waits fruitlessly
for the application-layer software to generate a response,
until the Delayed ACK timer fires <xref target="RFC1122"/> (typically 200 milliseconds)
and only then does it send the TCP ack and window update.
In conjunction with Nagle’s Algorithm at the sender,
this can delay the sender’s transmission of its next
(non-full-sized) TCP segment, while the sender is waiting for
its previous (non-full-sized) TCP segment to be acknowledged.
Nagle’s Algorithm exists to combine multiple small
application writes into more efficient large TCP segments,
to guard against wasteful use of the network by applications
that would otherwise transmit a stream of small TCP segments,
but in this case Nagle’s Algorithm (created to improve network efficiency)
can interact badly with TCP’s Delayed ACK feature
(also created to improve network efficiency) <xref target="NagleDA"/>.</t>

<t>Possible mitigations for this problem include:</t>

<t><list style="symbols">
  <t>Disabling Nagle’s Algorithm at the sender.
This is not great, because it results in less efficient use of the network.</t>
  <t>Disabling Delayed ACK at the receiver.
This is not great, because it results in less efficient use of the network.</t>
  <t>Using a networking API that lets the receiver signal to the TCP
implementation that the receiver has received and processed a client
request for which it will not be generating any immediate response.
This allows the TCP implementation to operate efficiently in both cases;
for requests that generate a response, the TCP ack, window update, and
DSO response are transmitted together in a single TCP segment,
and for requests that do not generate a response,
the application-layer software informs the TCP implementation
that it should go ahead and send the TCP ack and window update
immediately, without waiting for the Delayed ACK timer.
Unfortunately it is not known at this time which (if any) of the
widely-available networking APIs currently include this capability.</t>
</list></t>

</section>
</section>
<section anchor="lifecycle" title="DSO Session Lifecycle and Timers">

<section anchor="dso-session-initiation" title="DSO Session Initiation">

<t>A session begins when a client makes a new connection to a server.</t>

<t>A DSO session begin as described in <xref target="establishment"/>.</t>

<t>The client may perform as many DNS operations as it wishes using the
newly created DSO session. Operations SHOULD be pipelined (i.e., the
client doesn’t need wait for a response before sending the next message).
The server MUST act on messages in the order they are transmitted, but
responses to those messages MAY be sent out of order, if appropriate.</t>

</section>
<section anchor="sessiontimeouts" title="DSO Session Timeouts">

<t>Two timeout values are associated with a DSO session: the inactivity timeout, and 
the keepalive interval.</t>

<t>The first timeout value, the inactivity timeout, is the maximum time for which
a client may speculatively keep a DSO session open in the expectation that
it may have future requests to send to that server.</t>

<t>The second timeout value, the keepalive interval, is the maximum permitted
interval between client messages to the server if the client wishes to keep
the DSO session alive.</t>

<t>The two timeout values are independent. The inactivity timeout may be lower, the 
same, or higher than the keepalive interval, though in most cases the inactivity 
timeout is expected to be shorter than the keepalive interval.</t>

<t>Only when the client has a very long-lived low-traffic state does the 
keepalive interval come into play, to ensure that a sufficient residual
amount of traffic is generated to maintain NAT and firewall state
and to assure client and server that they still have connectivity to each other.</t>

<t>On a new DSO session, if no explicit DSO Keepalive message exchange has taken 
place, the default value for both timeouts is 15 seconds.
For both timeouts, lower values of the timeout result in higher network traffic
and higher CPU load on the server.</t>

</section>
<section anchor="inactivetimer" title="Inactive DSO Sessions">

<t>At both servers and clients, the generation or reception of any complete
DNS message, including DNS requests, responses, updates, or DSO
messages, resets both timers for that DSO session, with the exception
that a DSO Keepalive message resets only the keepalive timer, not the inactivity 
timeout timer.</t>

<t>In addition, for as long as the client has an outstanding operation in progress,
the inactivity timer remains cleared, and an inactivity 
timeout cannot occur.</t>

<t>For short-lived DNS operations like traditional queries and updates,
an operation is considered in progress for the time between request and 
response, typically a period of a few hundred milliseconds at most.
At the client, the inactivity timer is cleared upon transmission of a 
request and remains cleared until reception of the corresponding response.
At the server, the inactivity timer is cleared upon reception of a request
and remains cleared until transmission of the corresponding response.</t>

<t>For long-lived DNS Stateful operations, an operation is considered in progress
for as long as the state is active, until it is cancelled.
This means that a DSO session can exist, with a state 
active, with no messages flowing in either direction, for far longer than the 
inactivity timeout, and this is not an error. This is why there are two separate 
timers: the inactivity timeout, and the keepalive interval. Just because a DSO 
session has no traffic for an extended period of time
does not automatically make that DSO session “inactive”,
if it has an active state that is awaiting events.</t>

</section>
<section anchor="the-inactivity-timeout" title="The Inactivity Timeout">

<t>The purpose of the inactivity timeout is for the server to balance its trade off 
between the costs of setting up new DSO sessions and the costs of maintaining inactive 
DSO sessions. A server with abundant DSO session capacity can offer a high inactivity timeout, 
to permit clients to keep a speculative DSO session open for a long time, to save 
the cost of establishing a new DSO session for future communications with that 
server. A server with scarce memory resources can offer a low inactivity timeout,
to cause clients to promptly close DSO sessions whenever they have no outstanding
operations with that server, and then create a new DSO session later when needed.</t>

<section anchor="closing-inactive-dso-sessions" title="Closing Inactive DSO Sessions">

<t>A client is NOT required to wait until the inactivity timeout expires
before closing a DSO session.
A client MAY close a DSO session at any time, at the client’s discretion.
If a client determines that it has no current or reasonably anticipated
future need for an inactive DSO session, then the client SHOULD close that connection.</t>

<t>If, at any time during the life of the DSO session,
the inactivity timeout value (i.e., 15 seconds by default) elapses
without there being any operation active on the DSO session,
the client MUST gracefully close the connection with a
TLS close_notify followed by a TCP FIN (or equivalent for other protocols).</t>

<t>If, at any time during the life of the DSO session, twice the inactivity timeout value
(i.e., 30 seconds by default) elapses without there being any operation
active on the DSO session, the server SHOULD consider the client delinquent,
and forcibly abort the DSO session.
For DSO sessions over TCP (or over TLS over TCP),
to avoid the burden of having a connection in TIME-WAIT state, instead of
closing the connection gracefully the server SHOULD abort
the connection with a TCP RST (or equivalent for other protocols).
(In the BSD Sockets API this is achieved by setting the
SO_LINGER option to zero before closing the socket.)</t>

<t>In this context, an operation being active on a DSO session includes
a query waiting for a response, an update waiting for a response,
or active state,
but not a DSO Keepalive message exchange itself.
A DSO Keepalive message exchange resets only the keepalive
interval timer, not the inactivity timeout timer.</t>

<t>If the client wishes to keep an inactive DSO session open for longer than
the default duration without having to send traffic every 15 seconds,
then it uses the DSO Keepalive message to request
longer timeout values, as described in <xref target="keepalive"/>.</t>

</section>
<section anchor="values-for-the-inactivity-timeout" title="Values for the Inactivity Timeout">

<t>For the inactivity timeout value, lower values result in more frequent DSO session 
teardown and re-establishment. Higher values result in lower traffic and CPU
load on the server, but a larger memory burden to maintain state for inactive 
DSO sessions.</t>

<t>A shorter inactivity timeout with a longer keepalive interval signals to the client 
that it should not speculatively keep inactive DSO sessions open for very long without
reason, but when it does have an active reason to keep a DSO session open, it 
doesn’t need to be sending an aggressive level of keepalive traffic.</t>

<t>A longer inactivity timeout with a shorter keepalive interval signals to the client
that it may speculatively keep inactive DSO sessions open for a long time, but it
should be sending a lot of keepalive traffic on those inactive DSO sessions.
This configuration is expected to be less common.</t>

<t>To avoid repeated teardown and re-establishment of sessions,
the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with an inactivity timeout value less than ten seconds.
If a client receives a Keepalive message specifying an inactivity timeout value
less than ten seconds this is an error and the client MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

<t>This does not mean that a client is forced to keep an idle connection open for
ten seconds if it doesn’t need that — a client is free to close an idle connection whenever it chooses —
it means that servers cannot <spanx style="emph">require</spanx> a client to close an idle connection in under ten seconds.</t>

<t>[Do we really want this restriction? How soon does the client reconnect after tearing down the connection? –SC]</t>

</section>
</section>
<section anchor="keepalivetimer" title="The Keepalive Interval">

<t>The purpose of the keepalive interval is to manage the generation of
sufficient messages to maintain state in middle boxes (such at NAT gateways
or firewalls) and for the client and server to periodically verify that they
still have connectivity to each other. This allows them to clean up state
when connectivity is lost, and attempt re-connection if appropriate.</t>

<section anchor="keepalive-interval-expiry" title="Keepalive Interval Expiry">

<t>If, at any time during the life of the DSO session,
the keepalive interval value (i.e., 15 seconds by default) elapses
without any DNS messages being sent or received on a DSO session,
the client MUST take action to keep the DSO session alive,
by sending a DSO Keepalive message (see <xref target="keepalive"/>).
A DSO Keepalive message exchange resets only the keepalive timer, 
not the inactivity timer.</t>

<t>If a client disconnects from the network abruptly,
without cleanly closing its DSO session,
leaving long-lived state uncanceled,
the server learns of this after failing to
receive the required keepalive traffic from that client.
If, at any time during the life of the DSO session,
twice the keepalive interval value (i.e., 30 seconds by default) elapses
without any DNS messages being sent or received on a DSO session,
the server SHOULD consider the client delinquent,
and forcibly abort the connection with a TCP RST (or equivalent for other 
protocols).</t>

</section>
<section anchor="values-for-the-keepalive-interval" title="Values for the Keepalive Interval">

<t>For the keepalive interval value, lower values result in higher volume keepalive 
traffic. Higher values of the keepalive interval reduce traffic and CPU load, 
but have minimal effect on the memory burden
at the server, because clients keep a DSO session open for the same length of time
(determined by the inactivity timeout) regardless of the level of keepalive traffic 
required.</t>

<t>It may be appropriate for clients and servers to select different keepalive 
interval values depending on the nature of the network they are on.</t>

<t>A corporate DNS server that knows it is serving only clients on the internal 
network, with no intervening NAT gateways or firewalls, can impose a higher 
keepalive interval, because frequent keepalive traffic is not required.</t>

<t>A public DNS server that is serving primarily residential consumer clients, 
where it is likely there will be a NAT gateway on the path, may impose a lower 
keepalive interval, to generate more frequent keepalive traffic.</t>

<t>A smart client may be adaptive to its environment. A client using
a private IPv4 address <xref target="RFC1918"/> to communicate with a DNS server
at an address outside that IPv4 private address block,
may conclude that there is likely to be a NAT gateway on the path,
and accordingly request a lower keepalive interval.</t>

<t>For environments where there is a NAT gateway or firewalls on the path, it is
RECOMMENDED that clients request, and servers grant, a keepalive interval of 15
minutes. In other environments it is RECOMMENDED that clients request, and 
servers grant, a keepalive interval of 60 minutes.</t>

<t>Note that the lower the keepalive interval value, the higher the load on client
and server. For example, an keepalive interval value of 100ms would result in a
continuous stream of at least ten messages per second, in both directions,
to keep the DSO session alive. And, in this extreme example, a single packet loss and
retransmission over a long path could introduce a momentary pause in the stream of messages,
long enough to cause the server to overzealously abort the connection.</t>

<t>Because of this concern, the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with an keepalive interval value less than ten seconds.
If a client receives an Keepalive message specifying an keepalive interval value
less than ten seconds this is an error and the client MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="server-initiated-termination-on-error" title="Server-Initiated Termination on Error">

<t>After sending an error response to a client, the server MAY close the DSO session,
or may allow the DSO session to remain open. For error conditions
that only affect the single operation in question, the server SHOULD return an
error response to the client and leave the DSO session open for further operations.
For error conditions that are likely to make all operations unsuccessful in the
immediate future, the server SHOULD return an error response to the client and 
then close the DSO session by sending a Retry Delay request message, as described in 
<xref target="delay"/>.</t>

</section>
<section anchor="error" title="Client Behaviour in Receiving an Error">

<t>Upon receiving an error response from the server, a client SHOULD NOT
automatically close the DSO session. An error relating to one particular operation
on a DSO session does not necessarily imply that all other operations on that
DSO session have also failed, or that future operations will fail. The client
should assume that the server will make its own decision about whether or not to
close the DSO session, based on the server’s determination of whether the error
condition pertains to this particular operation, or would also apply to any
subsequent operations. If the server does not close the DSO session then the client
SHOULD continue to use that DSO session for subsequent operations.</t>

</section>
<section anchor="server-initiated-termination-on-overload" title="Server-Initiated Termination on Overload">

<t>A server MUST NOT close a DSO session with a client,
except in certain exceptional circumstances, as outlined below.
In normal operation, closing a DSO session is the client’s responsibility.
The client makes the determination of when to close a DSO
session based on an evaluation of both its own needs,
and the inactivity timeout value dictated by the server.</t>

<t>Situations where a server may terminate a DSO session include:</t>

<t><list style="symbols">
  <t>The server is undergoing reconfiguration or maintenance procedures
that require clients to be disconnected.</t>
  <t>The server application software or underlying operating system
is shutting down or restarting.</t>
  <t>The server application software terminates unexpectedly
(perhaps due to a bug that makes it crash).</t>
  <t>The client fails to meets its obligation to generate keepalive
traffic or close an inactive session within twice the respective
time intervals dictated by the server (see <xref target="sessiontimeouts"/>).</t>
  <t>The client sends a grossly invalid or malformed request that is
indicative of a seriously defective client implementation (see <xref target="error"/>).</t>
  <t>The server is over capacity and needs to shed some load (see <xref target="retry"/>).</t>
</list></t>

<t>When a server has to close a DSO session with a client
(because of exceptional circumstances such as those outlined above)
the server SHOULD, whenever possible, send a Retry Delay Operation TLV
(see below) informing the client of the reason for the DSO session
being closed, and allow the client five seconds to receive it
before the server resorts to forcibly aborting the connection.</t>

</section>
<section anchor="retry" title="Retry Delay Operation TLV">

<t>There may be rare cases where a server is overloaded and wishes to shed load.
If a server is low on resources it MAY simply terminate a client connection with 
a TCP RST (or equivalent for other protocols).
However, the likely behavior of the client may be simply to to treat this as a
network failure and connect
immediately, putting more burden on the server.</t>

<t>Therefore to avoid this reconnection implosion, a server SHOULD instead choose 
to shed client load by sending a Retry Delay request message, with an RCODE of 
SERVFAIL, to inform the client of the overload situation. After sending a Retry 
Delay request message, the server MUST NOT send any further messages on that 
DSO session.</t>

<t>After sending the Retry Delay request the server SHOULD allow the
client five seconds to close the connection, and if the client has not
closed the connection after five seconds then the server SHOULD abort
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>Upon receipt of a Retry Delay request from the server, the client MUST
make note of the reconnect delay for this server, and then immediately
close the connection. This is to place the burden of TCP’s TIME-WAIT state on 
the client.</t>

<t>A Retry Delay request message MUST NOT be initiated by a client.
If a server receives a Retry Delay request message this is an error
and the server MUST immediately terminate the connection with a TCP RST
(or equivalent for other protocols).</t>

<section anchor="outstanding-operations" title="Outstanding Operations">

<t>At the moment a server chooses to initiate a Retry Delay request message
there may be DNS requests already in flight from client to server on this 
DSO session, which will arrive at the server after its Retry Delay request message 
has been sent.
The server MUST silently ignore such incoming requests, and MUST NOT generate
any response messages for them. When the Retry Delay request message from the
server arrives at the client, the client will determine that any DNS requests
it previously sent on this DSO session, that have not yet received a response, now 
will certainly not be receiving any response. Such requests should be considered
failed, and should be retried at a later time, as appropriate.</t>

<t>In the case where some, but not all, of the existing operations on a DSO session 
have become invalid (perhaps because the server has been reconfigured and is no 
longer authoritative for some of the names),
but the server is terminating all DSO sessions en masse with a REFUSED (5) RCODE,
the RECONNECT DELAY MAY be zero, indicating that the clients SHOULD immediately
attempt to re-establish operations.
It is likely that some of the attempts will be successful and some will not.</t>

<t>In the case where a server is terminating a large number of DSO sessions at once
(e.g., if the system is restarting) and the server doesn’t want to be inundated 
with a flood of simultaneous retries, it SHOULD send different RECONNECT delay 
values to each client.
These adjustments MAY be selected randomly, pseudorandomly, or deterministically
(e.g., incrementing the time value by one tenth of a second for each successive
client, yielding a post-restart reconnection rate of ten clients per second).</t>

</section>
<section anchor="client-reconnection" title="Client Reconnection">

<t>After a DSO session is closed by the server, the client SHOULD try to reconnect,
to that server, or to another suitable server, if more than one is available.
If reconnecting to the same server, the client MUST respect the indicated delay
before attempting to reconnect.</t>

<t>If a particular server does not want a client to reconnect (it is being
de-commissioned), it SHOULD set the retry delay to the maximum value (which is
approximately 497 days). If the server will only be out of service for a maintenance
period, it should use a value closer to the expected maintenance window and
not default to a very large delay value or clients may not attempt to reconnect
after it resumes service.</t>

</section>
</section>
</section>
<section anchor="sharing" title="Connection Sharing">

<t>As previously specified for DNS over TCP <xref target="RFC7766"/>,
to mitigate the risk of unintentional server overload, DNS clients
MUST take care to minimize the number of concurrent TCP connections
made to any individual server.  It is RECOMMENDED that for any given
client/server interaction there SHOULD be no more than one connection
for regular queries, one for zone transfers, and one for each
protocol that is being used on top of TCP (for example, if the
resolver was using TLS).
However, it is noted that certain primary/secondary configurations
with many busy zones might need to use more than one TCP
connection for zone transfers for operational reasons
(for example, to support concurrent transfers of multiple zones).</t>

<t>A single server may support multiple services, including DNS Updates 
<xref target="RFC2136"/>, DNS Push Notifications <xref target="I-D.ietf-dnssd-push"/>,
and other services, for one or more DNS zones.
When a client discovers that the target server for several different operations
is the same target hostname and port, the client SHOULD use a single
shared DSO session for all those operations.
A client SHOULD NOT open multiple connections to the same target host and port
just because the names being operated on are different or
happen to fall within different zones.
This is to reduce unnecessary connection load on the DNS server.</t>

<t>However, server implementers and operators should be aware that connection
sharing may not be possible in all cases.
A single client device may be home to multiple independent client software
instances that don’t coordinate with each other.
Similarly, multiple independent client devices behind the same NAT gateway
will also typically appear to the DNS server as different source ports on
the same client IP address.
Because of these constraints, a DNS server MUST be prepared to accept
multiple connections from different source ports on the same client IP address.</t>

</section>
<section anchor="base-tlvs-for-dns-stateful-operations" title="Base TLVs for DNS Stateful Operations">

<section anchor="delay" title="Retry Delay TLV">

<t>The Retry Delay TLV (DSO-TYPE=0) can be used as an Operation TLV or as
a Modifier TLV.</t>

<t>The TYPE-DEPENDENT DATA for the the Retry Delay TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     RETRY DELAY (32 bits)                     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='RETRY DELAY:'>
  a time value, specified as a 32-bit word in network order in units of 
milliseconds, within which the client MUST NOT retry this operation, or retry 
connecting to this server.</t>
</list></t>

<t>The RECOMMENDED value is 10 seconds.</t>

<section anchor="use-as-an-operation-tlv" title="Use as an Operation TLV">

<t>When sent in a DSO request message, from server to client, the 
Retry Delay TLV (0) is considered an Operation TLV. It is used by a server 
to request that a client close the DSO session and underlying connection, and 
not to reconnect for the indicated time interval.</t>

<t>In this case it applies to the DSO session as a whole, and the client MUST close the 
DSO session, as described in <xref target="retry"/>. The RCODE in the message header 
MUST indicate the reason for the termination:</t>

<t><list style="symbols">
  <t>NOERROR indicates a routine shutdown.</t>
  <t>SERVFAIL indicates that the server is overloaded due to resource exhaustion.</t>
  <t>REFUSED indicates that the server has been reconfigured and is no longer able 
to perform one or more of the functions 
currently being performed on this DSO session (for example, a DNS Push Notification 
server could be reconfigured such that is is no longer accepting DNS Push 
Notification requests for one or more of the currently subscribed names).</t>
</list></t>

<t>This document specifies only these three RCODE values for Retry Delay request.
Servers sending Retry Delay requests SHOULD use one of these three values.
However, future circumstances may create situations where other RCODE values
are appropriate in Retry Delay requests, so clients MUST be prepared
to accept Retry Delay requests with any RCODE value.</t>

<t>An acknowledgement is not desired for a Retry Delay Operation TLV and the TLV
Acknowledgement bit MUST be cleared in the request.</t>

</section>
<section anchor="use-as-a-modifier-tlv" title="Use as a Modifier TLV">

<t>When appended to a DSO response message for some client request,
the Retry Delay TLV (0) is considered a Modifier TLV.
The indicated time interval during which the client SHOULD NOT retry
applies only to the failed operation, not to the DSO session as a whole.</t>

<t>In the case of a client request that returns a nonzero RCODE value, the server 
MAY append a Retry Delay TLV (0) to the response, indicating the time interval
during which the client SHOULD NOT attempt this operation again.</t>

</section>
</section>
<section anchor="keepalive" title="Keepalive Operation TLV">

<t>The Keepalive Operation TLV (DSO-TYPE=1) performs two functions: to reset the
keepalive timer for the DSO session and to establish the values for the Session Timeouts.</t>

<t>The Keepalive Operation TLV resets only the keepalive timer, not the inactivity timer.
The reason for this is that periodic Keepalive Operation TLVs are sent for the
sole purpose of keeping a DSO session alive, because that DSO session has current
or recent non-maintenance activity that warrants keeping the DSO session alive.
If sending keepalive traffic itself were to reset the inactivity timer, then 
that would create a circular livelock where keepalive traffic would be sent 
indefinitely to keep a DSO session alive, where the only activity on that DSO 
session would be the keepalive traffic keeping the DSO session alive so that further 
keepalive traffic can be sent.</t>

<t>Sending keepalive traffic is considered a maintenance activity
that is performed in service of other client activities.
Sending keepalive traffic itself is not considered a client activity.
For a DSO session to be considered active, it must be carrying something more than just keepalive traffic.
This is why merely sending a Keepalive Operation TLV does not reset the inactivity timer.</t>

<t>When sent by a client, the Keepalive Operation TLV MUST have the Acknowledgement bit set.
It resets a DSO session’s keepalive timer, and at the same time requests what the
Session Timeout values should be from this point forward in the DSO session.
If a server receives a Keepalive Operation TLV without the Acknowledgement bit set
then this is a fatal error and the server MUST immediately terminate
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>Once a DSO session is in progress (see <xref target="details"/>) the Keepalive TLV also MAY be initiated by a server.
When sent by a server, the Keepalive Operation TLV MUST NOT have the Acknowledgement bit set.
It resets a DSO session’s keepalive timer, and unilaterally informs the client of
the new Session Timeout values to use from this point forward in this DSO session.
No client response to this unilateral declaration is required.
If a client receives a Keepalive Operation TLV with the Acknowledgement bit set
then this is a fatal error and the client MUST immediately terminate
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>It is not required that the Keepalive TLV be used in every DSO session.
While many DNS Stateful operations
will be used in conjunction with a long-lived session state,
not all DNS Stateful operations require long-lived session state,
and in some cases the default 15-second value for both the inactivity timeout
and keepalive interval may be perfectly appropriate. However, it can be noted 
that for clients that implement only the TLVs defined in this document it is
the only way for a client to initiate a DSO session.</t>

<t>The TYPE-DEPENDENT DATA for the the Keepalive TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 INACTIVITY TIMEOUT (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 KEEPALIVE INTERVAL (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='INACTIVITY TIMEOUT:'>
  the inactivity timeout for the current DSO session, specified as a
32-bit word in network (big endian) order in units of milliseconds.
This is the timeout at which the client MUST close an inactive DSO session.
If the client does not gracefully close an inactive DSO session,
then after twice this interval the server will forcibly terminate
the connection with a TCP RST (or equivalent for other protocols).</t>
  <t hangText='KEEPALIVE INTERVAL:'>
  the keepalive interval for the current DSO session, specified as a
32-bit word in network (big endian) order in units of milliseconds.
This is the interval at which a client MUST generate keepalive
traffic to maintain connection state.
If the client does not generate the necessary keepalive traffic,
then after twice this interval the server will forcibly terminate
the connection with a TCP RST (or equivalent for other protocols).</t>
</list></t>

<t>In a client-initiated DSO Keepalive message,
the Session Timeouts contain the client’s requested values.
In a server response to a client-initiated message, the Session Timeouts contain 
the server’s chosen values, which the client MUST respect.
This is modeled after the DHCP protocol, where the client
requests a certain lease lifetime using DHCP option 51 <xref target="RFC2132"/>,
but the server is the ultimate authority
for deciding what lease lifetime is actually granted.</t>

<t>In a server-initiated DSO Keepalive message, the Session Timeouts
unilaterally inform the client of the new values from this point
forward in this DSO session. The client MUST NOT generate a
response to the server-initiated DSO Keepalive message.</t>

<t>When a client is sending its second and subsequent Keepalive DSO 
requests to the server, the client SHOULD continue to request its preferred 
values each time. This allows flexibility, so that if conditions change during 
the lifetime of a DSO session, the server can adapt its responses to better fit 
the client’s needs.</t>

<section anchor="client-handling-of-received-session-timeout-values" title="Client handling of received Session Timeout values">

<t>When a client receives a response to its client-initiated DSO Keepalive message,
or receives a server-initiated DSO Keepalive message, the client has then 
received Session Timeout values dictated by the server. The two timeout values 
contained in the DSO Keepalive TLV from the server may each be higher, lower, or 
the same as the respective Session Timeout values the client previously had for 
this DSO session.</t>

<t>In the case of the keepalive timer, the handling of the received value is 
straightforward. The act of receiving the message containing the DSO Keepalive 
TLV itself resets the keepalive timer and updates the keepalive interval for the 
DSO session. The new keepalive interval indicates the 
maximum time that may elapse before another message must be sent
or received on this DSO session, if the DSO session is to remain alive.</t>

<t>In the case of the inactivity timeout, the handling of the received value 
is a little more subtle, though the meaning of the inactivity 
timeout is unchanged – it still indicates the maximum permissible time allowed 
without activity on a DSO session.
The act of receiving the message containing the DSO Keepalive TLV does not
itself reset the inactivity timer. The time elapsed since the last useful
activity on this DSO session is unaffected by exchange of DSO Keepalive messages.
The act of receiving the message containing the DSO Keepalive TLV does update 
the timeout associated with the running inactivity timer; that
becomes the new maximum permissible time without activity on a DSO session.</t>

<t><list style="symbols">
  <t>If the current inactivity timer value is not greater than the new inactivity timeout, 
then the DSO session may remain open for now. When the inactivity timer value 
exceeds the new inactivity timeout, the client MUST then close the DSO session,
as described above.</t>
  <t>If the current inactivity timer value is already greater than the new inactivity 
timeout, then this DSO session has already been inactive
for longer than the server permits, and the client MUST immediately close this DSO session.</t>
  <t>If the current inactivity timer value is more than twice the new inactivity timeout, 
then this DSO session is eligible to be
forcibly terminated by the server and and the client MUST immediately close this 
DSO session. However if a server abruptly reduces the
inactivity timeout in this way the server SHOULD give the client a grace period
of one quarter of the new inactivity timeout, to give the client time to close
the connection gracefully before the server resorts to terminating it forcibly.</t>
</list></t>

</section>
<section anchor="relation-to-edns0-tcp-keepalive-option" title="Relation to EDNS(0) TCP Keepalive Option">

<t>The inactivity timeout value in the Keepalive TLV (DSO-TYPE=1) has similar
intent to the EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>.
A client/server pair that supports DSO MUST NOT use the
EDNS(0) TCP KeepAlive option within any message after a DSO 
session has been established.
Once a DSO session has been established, if either
client or server receives a DNS message over the DSO session that contains an
EDNS(0) TCP Keepalive option, this is an error and the receiver of the
EDNS(0) TCP Keepalive option MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="padding" title="Encryption Padding TLV">

<t>The Encryption Padding TLV (DSO-TYPE=2) can only be used as a Modifier TLV.
It is only applicable when the DSO Transport layer uses encryption
such as TLS.</t>

<t>The TYPE-DEPENDENT DATA for the the Padding TLV is optional and is a
variable length field containing non-specified values. A DATA LENGTH
of 0 essentially provides for 4 octets of padding (the minimum amount).</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   /                                                               /
   /                   VARIABLE NUMBER OF OCTETS                   /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t>As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
the PADDING octets SHOULD be set to 0x00.  Other values MAY be used,
for example, in cases where there is a concern that the padded
message could be subject to compression before encryption.
PADDING octets of any value MUST be accepted in the messages received.</t>

<t>The Encryption Padding TLV may be included in either a DSO request, response, or both.
As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
if a request is received with a Encryption Padding TLV,
then the response MUST also include an Encryption Padding TLV.</t>

<t>[Need discussion here of whether the Ack bit is set in requests, responses, or both –SC]</t>

<t>The length of padding is intentionally not specified in this document and
is a function of current best practices with respect to the type and length
of data in the preceding TLVs <xref target="I-D.ietf-dprive-padding-policy"/>.</t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="dso-opcode-registration" title="DSO OPCODE Registration">

<t>IANA are directed to assign a value (tentatively 6)
in the DNS OPCODEs Registry for the DSO OPCODE.</t>

</section>
<section anchor="dso-rcode-registration" title="DSO RCODE Registration">

<t>IANA are directed to assign a value (tentatively 11)
in the DNS RCODE Registry for the DSONOTIMP error code.</t>

</section>
<section anchor="dso-type-codes-registry" title="DSO Type Codes Registry">

<t>IANA are directed to create the 15-bit DSO Type Codes
Registry, with initial values as follows:</t>

<texttable>
      <ttcol align='right'>Type</ttcol>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Status</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>0x0000</c>
      <c>RetryDelay</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0001</c>
      <c>KeepAlive</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0002</c>
      <c>Encryption Padding</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0003 - 0x003F</c>
      <c>Unassigned, reserved for DSO session management TLVs</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x0040 - 0x77FF</c>
      <c>Unassigned</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x7800 - 0x7BFF</c>
      <c>Reserved for local / experimental use</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x7C00 - 0x7FFF</c>
      <c>Reserved for future expansion</c>
      <c>&#160;</c>
      <c>&#160;</c>
</texttable>

<t>Registration of additional DSO Type Codes requires publication
of an appropriate IETF “Standards Action” or “IESG Approval” document <xref target="RFC5226"/>.</t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>If this mechanism is to be used with DNS over TLS, then these messages
are subject to the same constraints as any other DNS over TLS messages
and MUST NOT be sent in the clear before the TLS session is established.</t>

<t>The data field of the “Encryption Padding” TLV could be used as a covert channel.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to
Tim Chown,
Ralph Droms,
Jan Komissar,
Manju Shankar Rao,
and Ted Lemon
for their helpful contributions to this document.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC1035;
&RFC7766;
&RFC6891;
&RFC7828;
&RFC2119;
&RFC7830;
&RFC1034;
&RFC2136;
&RFC1918;
&RFC2132;
&RFC5226;


    </references>

    <references title='Informative References'>

<reference anchor="NagleDA" target="http://www.stuartcheshire.org/papers/nagledelayedack/">
  <front>
    <title>TCP Performance problems caused by interaction between Nagle's Algorithm and Delayed ACK</title>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization></organization>
    </author>
    <date year="2005" month="May" day="20"/>
  </front>
</reference>
&RFC7858;
&RFC6763;
&I-D.ietf-dnssd-push;
&RFC0768;
&RFC1122;
&I-D.ietf-dprive-padding-policy;


    </references>



  </back>

<!-- ##markdown-source:
H4sIAJrIHFoAA+19aXMbSXbg9/wVteoPTbYBNKmzW44ND5uiujkjkTJJdXu8
u+EoAAWyWkAVXAcpjKQI/5DdP+dfsu/MfFlVgNiHxxO71phuEqjK4+XLdx/j
8dg1ebPMnicvzi6TyyZtskW7TM7XWZU2eVnUbl7OinQFD8yrdNGM86xZjOdF
Xa7HdVbX8Mi4zq+LdDk+eOLm8Prz5OHB4bPx4eH48FuXr6vnSVO1dfPw4ODb
g4curbL0eXJaNFlVZI27u6aJz98kP5XVu7y4Tr6vynbt3t2Fh8YvcGI3S5vn
Sd3MXbvGaernycXL4+TZs6dPR/Tb4cGjJ87NyjmM8jxpYZXfuHX+3CXJOGnK
Gf233qyqbFHz72XV0B8ubZubsqIn4SdJ8gIHnyTfZctlXtNHDIGLdGM/LKvr
sMrkclM32apOjgFoMHTerkbw5WxCj6bTaZXdwtOXx/R3DVNnsJ9vnxwkxzdp
BWMA8PEz+nqWNxuYLpvfleU8OYa/+ONyDqs4Pkq+fXzw9JF81BZNBQ+/vTyi
D9Y3ZQEP/d1h8hTGfvzwUXIIoKevslWaL58nVbr5Q17PJrD8eMuXE1hLVt/k
VWY2fdm0sL74G9r50Xq9zMIWdUuH8NEiL/ImS16V5drs57gFrGryouxs5snB
4ePPbebxwTfJt88eJ48eHjyzm5nJsv6Q4moms3IV7+mPk+RFPgPMqsvCbOqP
5U3R+YL2dAmrm7dFONWrbHZTlMvyOs/q6CTlSbt1+n2cvE6v03m6zIrkOIPt
ZPLx+ftFWc2Ty1meFbMseZNW7wxs+FsDmPN/epw8/v6oAxcE6zz5E6D4nHbq
4fBzOv9DzUvqA+FyGAiXaZX+PwWEGja0HQpHE1hVAZs1IDjCy1wW9gsGASy9
hsXMMjt+yk9PVvT0H67x0/48V5PkTVsDiapyM9NVuYo/pnneFulikS9z+Hge
3aIHDywhgNXk1zcGMGfHycNnTw+++dy1+fbw2+Sbp8+Sw0ePIhqwlpX8YZoW
1z/THlxewIZXQPVvMzzFs/R6mb044gNt0uoal3XTNOvnX399d3c3qYku6P1D
avL1OoULXn9d4JvzbJlusnk6e/c1j8Bc5ur4TfImq2gmxIB1VU6XSDZnaVvD
qU43AERYWTpD7pNMs+YuAySixXxZw3ldl1Xe3KyStJgnL3iO5Oj4T4yWnpDv
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
7gABAA==

-->

</rfc>

