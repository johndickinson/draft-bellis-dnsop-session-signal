<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.7 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC7766 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7766.xml">
<!ENTITY RFC6891 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6891.xml">
<!ENTITY RFC7828 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7828.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC7830 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7830.xml">
<!ENTITY RFC1034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC2136 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2136.xml">
<!ENTITY RFC2132 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2132.xml">
<!ENTITY RFC1918 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1918.xml">
<!ENTITY RFC5226 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5226.xml">
<!ENTITY RFC7858 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7858.xml">
<!ENTITY RFC6763 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6763.xml">
<!ENTITY I-D.ietf-dnssd-push SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dnssd-push.xml">
<!ENTITY RFC0768 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.0768.xml">
<!ENTITY I-D.ietf-dprive-padding-policy SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dprive-padding-policy.xml">
]>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-dnsop-session-signal-05" category="std" updates="RFC 7766, RFC 1035">

  <front>
    <title>DNS Stateful Operations</title>

    <author initials="R." surname="Bellis" fullname="Ray Bellis">
      <organization abbrev="ISC">Internet Systems Consortium, Inc.</organization>
      <address>
        <postal>
          <street>950 Charter Street</street>
          <city>Redwood City</city>
          <code>CA 94063</code>
          <country>USA</country>
        </postal>
        <phone>+1 650 423 1200</phone>
        <email>ray@isc.org</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>1 Infinite Loop</street>
          <city>Cupertino</city>
          <code>CA 95014</code>
          <country>USA</country>
        </postal>
        <phone>+1 408 974 3207</phone>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="J." surname="Dickinson" fullname="John Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>jad@sinodun.com</email>
      </address>
    </author>
    <author initials="S." surname="Dickinson" fullname="Sara Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>sara@sinodun.com</email>
      </address>
    </author>
    <author initials="A." surname="Mankin" fullname="Allison Mankin">
      <organization>Salesforce</organization>
      <address>
        <email>allison.mankin@gmail.com</email>
      </address>
    </author>
    <author initials="T." surname="Pusateri" fullname="Tom Pusateri">
      <organization>Unaffiliated</organization>
      <address>
        <postal>
          <street></street>
          <city>Raleigh</city>
          <code>NC 27608</code>
          <country>USA</country>
        </postal>
        <phone>+1 919 867 1330</phone>
        <email>pusateri@bangj.com</email>
      </address>
    </author>

    <date year="2017"/>

    <area>Internet</area>
    <workgroup>DNSOP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document defines a new DNS Stateful Operation OPCODE used to communicate 
operations within persistent stateful sessions, expressed using type-length-value (TLV) 
syntax, and defines an initial set of TLVs used to manage session timeouts and 
termination. This mechanism is intended to reduce the overhead of existing 
“per-packet” signaling mechanisms with “per-message” semantics as well as 
defining new stateful operations not defined in EDNS(0).</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The use of transports for DNS other than UDP is being increasingly specified,
for example, DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> and DNS over TLS <xref target="RFC7858"/>.
Such transports can offer persistent, long-lived sessions and therefore when
using them for transporting DNS messages it is of benefit to have a mechanism
that can establish parameters associated with those sessions, such as timeouts.
In such situations it is also advantageous to support server initiated messages.</t>

<t>The existing EDNS(0) Extension Mechanism for DNS <xref target="RFC6891"/> is explicitly
defined to only have “per-message” semantics. Whilst EDNS(0) has been used to
signal at least one session-related parameter (the EDNS(0) TCP Keepalive option
<xref target="RFC7828"/>) the result is less than optimal due to the restrictions
imposed by the EDNS(0) semantics and the lack of server-initiated signalling. 
For example, a server cannot arbitrarily 
instruct a client to close a connection because the server can only send EDNS(0) options 
in responses to queries that contained EDNS(0) options.</t>

<t>This document defines a new DNS Stateful Operation OPCODE used to carry
operations within persistent stateful connections, expressed using type-length-value (TLV)
syntax, and
defines an initial set of TLVs including ones used to manage session timeouts and termination.</t>

<t>This new format has distinct advantages over an RR-based format because it
is more explicit and more compact. Each TLV definition is specific
to the use case, and as a result contains no redundant or overloaded fields.
Importantly, it completely avoids conflating DNS Stateful Operations in anyway 
with normal DNS operations or with existing EDNS(0) based functionality. A goal 
of this approach is to avoid the operational
issues that have befallen EDNS(0), particularly relating to middle-box 
behaviour.</t>

<t>With EDNS(0), multiple options may be packed into a single OPT pseudo-RR,
and there is no generalized mechanism for a client to be able to tell
whether a server has processed or otherwise acted upon each individual
option within the combined OPT RR.
The specifications for each individual option need to define how each
different option is to be acknowledged, if necessary.</t>

<t>With DNS Stateful Operations, in contrast, there is no compelling motivation
to pack multiple operations into a single message for efficiency reasons.
Each Stateful operation is communicated in its own separate
DNS message, and the transport protocol can take care of packing
separate DNS messages into a single IP packet if appropriate.
For example, TCP can pack multiple small DNS messages into a single TCP segment.
The RCODE in each response message indicates the success or failure of the operation in question.</t>

<t>It should be noted that the message format for DNS Stateful Operations
(see <xref target="format"/>) differs from the traditional DNS packet
format used for standard queries and responses.
The standard twelve-octet header is used, but the four count fields
(QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) are set to zero and their
corresponding sections are not present.
The actual data pertaining to DNS Stateful Operations is
appended to the end of the DNS message header.
When displayed using today’s packet analyzer tools that have not been updated
to recognize the DNS Stateful Operations format, this will result
in the Stateful Operations data being displayed as unknown additional
data after the end of the DNS message. It is likely that future updates
to these tools will add the ability to recognize, decode, and display the
Stateful Operations data.</t>

</section>
<section anchor="terminology" title="Terminology">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and
“OPTIONAL” in this document are to be interpreted as described in
“Key words for use in RFCs to Indicate Requirement Levels” <xref target="RFC2119"/>.</t>

<t>“DSO” is used to mean DNS Stateful Operation.</t>

<t>The term “connection” means a bidirectional byte stream of reliable,
in-order messages, such as provided by using
DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> or DNS over TLS <xref target="RFC7858"/>.</t>

<t>The unqualified term “session” in the context of this document means the exchange of
DNS messages over a connection where:</t>

<t><list style="symbols">
  <t>The connection between client and server is persistent and relatively
long-lived (i.e., minutes or hours, rather than seconds).</t>
  <t>Either end of the connection may initiate messages to the other.</t>
</list></t>

<t>A “DSO session” is established between two endpoints that
acknowledge persistent DNS state via the exchange of DSO messages
over the connection. This is distinct from, for example a DNS-over-TCP session
as described in RC7766.</t>

<t>A “DSO session” is terminated when the underlying connection is closed.</t>

<t>The term “server” means the software with a listening socket, awaiting
incoming connection requests.</t>

<t>The term “client” means the software which initiates a connection
to the server’s listening socket.</t>

<t>The terms “initiator” and “responder” correspond respectively to the
initial sender and subsequent receiver of a DSO request message,
regardless of which was the “client” and “server” in the usual DNS sense.</t>

<t>The term “sender” may apply to either an initiator
(when sending a DNS Stateful Operation request message)
or a responder (when sending a DNS Stateful Operation response message).</t>

<t>Likewise, the term “receiver” may apply to either a responder
(when receiving a DNS Stateful Operation request message)
or an initiator (when receiving a DNS Stateful Operation response message).</t>

<t>DNS Stateful Operations are expressed using type-length-value (TLV) syntax.</t>

<t>Two timers (elapsed time since an event) are defined in this document:</t>

<t><list style="symbols">
  <t>an inactivity timer (see <xref target="keepalive"/> and <xref target="inactivetimer"/>)</t>
  <t>a keepalive timer (see <xref target="keepalive"/> and <xref target="keepalivetimer"/>)</t>
</list></t>

<t>The timeouts associated with these timers are called the inactivity timeout and 
the keepalive interval respectively. 
The term “Session Timeouts” is used to refer to this pair of timeout values.</t>

<t>Reseting a timer means resetting the timer value to zero and starting the timer 
again. Clearing a timer means resetting the timer value to zero but NOT starting 
the time again.</t>

</section>
<section anchor="discussion" title="Discussion">

<t>There are several use cases for DNS Stateful operations that can 
be described here.</t>

<t>Firstly, establishing session parameters such as server defined timeouts is of 
great use in the 
general management of persistent connections. For example, using DSO sessions 
for stub to recursive DNS-over-TLS <xref target="RFC7858"/> is more flexible for both the 
client and the server than attempting to manage sessions using just the EDNS(0)
TCP Keepalive option
<xref target="RFC7828"/>. The simple set of TLVs defined in this document is
sufficient to greatly enhance connection management for this use case.</t>

<t>Secondly, DNS-SD <xref target="RFC6763"/> has evolved into a naturally session based mechanism where,
for example, long-lived subscriptions lend themselves to ‘push’ mechanisms as 
opposed to polling. Long-lived stateful connections and server initiated 
messages align with this use case <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>A general use case is that DNS traffic is often bursty but session establishment 
can be expensive. One challenge with long-lived connections is to maintain 
sufficient traffic to maintain NAT and firewall state.
To mitigate this issue this document introduces a
new concept for the DNS, that is DSO “Keepalive traffic”.
This traffic carries no DNS data and is not considered ‘activity’
in the classic DNS sense, but serves to maintain state in middle boxes,
and to assure client and server that they still have connectivity to each other.</t>

<t>There are a myriad of other potential use cases for DSO given the versatility 
and extensibility of this specification.</t>

<t><xref target="details"/> of this document describes the protocol details of DNS Stateful
Operations including definitions of three TLVs for session management and 
encryption padding. <xref target="lifecycle"/> presents a
detailed discussion of the DSO Session lifecycle including an
in-depth discussion of keepalive traffic and session termination.</t>

</section>
<section anchor="details" title="Protocol Details">

<section anchor="establishment" title="DSO Session Establishment">

<t>DSO messages MUST only be carried in protocols and in
environments where a session may be established according to the definition above.
Standard DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/>, and DNS over TLS <xref target="RFC7858"/>
are suitable protocols.</t>

<t>DNS over plain UDP <xref target="RFC0768"/> is not appropriate since it fails on the requirement for
in-order message delivery, and, in the presence of NAT gateways and firewalls
with short UDP timeouts, it fails to provide a persistent bi-directional
communication channel unless an excessive amount of keepalive traffic is used.</t>

<t>DSO messages relate only to the specific “DSO session” in which
they are being carried. A “DSO session” is established over a connection when
either side of the connection sends the first DSO
TLV and it is acknowledged by the other side. The DSO message format <xref target="dsodata"/> 
includes an option to specify that a DSO request does not require a 
response acknowledgement. Session establishment can only be performed using a 
DSO message that requires a response acknowledgement.</t>

<t>While this 
specification defines an initial set of three TLVs, additional TLVs may be 
defined in additional specifications. All three of the TLVs defined here are 
mandatory to implement.</t>

<t>A client MAY attempt to initiate DSO messages at any time
on a connection; receiving a NOTIMP response in reply indicates that the
server does not implement DSO, and the client SHOULD NOT
issue further DSO messages on that connection.</t>

<t>A server SHOULD NOT initiate DSO messages until a
client-initiated DSO message is received first,
unless in an environment where it is known in advance by other
means that the client supports DSO.
This requirement is to ensure that the clients that do not support
DSO do not receive unsolicited inbound DSO
messages that they would not know how to handle.</t>

<t>On a session between a client and server that support DSO,
once the client has sent at least one DSO message (or it is
known in advance by other means that the client supports DSO)
either end may unilaterally send DSO messages at any time,
and therefore either client or server may be the initiator of a message.</t>

<t>From this point on it is considered that a “DSO session” is in progress.
Clients and servers should behave as described in this specification with
regard to inactivity timeouts and connection close, not as prescribed in
the previous specification for DNS over TCP <xref target="RFC7766"/>.</t>

<section anchor="middle-box-considerations" title="Middle-box Considerations">

<t>Where an application-layer middle box (e.g., a DNS proxy, forwarder, or
session multiplexer) is in the path the middle box MUST NOT blindly
forward DSO messages in either direction, and MUST treat the inbound
and outbound connections as separate sessions.  This does not preclude
the use of DSO messages in the presence of an IP-layer middle box such
as a NAT that rewrites IP-layer and/or transport-layer headers, but
otherwise preserves the effect of a single session between the client
and the server.</t>

<t>To illustrate the above, consider a network where a middle box
terminates one or more TCP connections from clients and multiplexes the
queries therein over a single TCP connection to an upstream server.  The
DSO messages and any associated state are specific to the individual
TCP connections.  A DSO-aware middle box MAY in some circumstances be
able to retain associated state and pass it between the client and
server (or vice versa) but this would be highly TLV-specific.  For
example, the middle box may be able to maintain a list of which clients
have made Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/> and
make its own subscription(s) on their behalf, relaying any subsequent
notifications to the client (or clients) that have subscribed to that
particular notification.</t>

</section>
</section>
<section anchor="format" title="Message Format">

<t>A DSO message begins with
the standard twelve-octet DNS message header <xref target="RFC1035"/>
with the OPCODE field set to the DSO OPCODE (tentatively 6).
However, unlike standard DNS messages, the question section, answer section,
authority records section and additional records sections are not present.
The corresponding count fields (QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) MUST be
set to zero on transmission.</t>

<t>If a DSO message is received where any of the count fields are
not zero, then a FORMERR MUST be returned,
unless a future document specifies otherwise.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                          MESSAGE ID                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |QR |    OPCODE     |            Z              |     RCODE     |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     QDCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ANCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     NSCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ARCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                           DSO Data                            /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<section anchor="header" title="Header">

<t>In a request the MESSAGE ID field MUST be set to a unique value, that the
initiator is not currently using for any other active operation on this 
connection.
For the purposes here, a MESSAGE ID is in use in this DSO session if the
initiator has used it in a request for which it has not yet received a
response, or if the client has used it to setup state that it has not yet
deleted. For example, state could be a subscription <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>In a response the MESSAGE ID field MUST contain a copy of the value of the
MESSAGE ID field in the request being responded to.</t>

<t>In a request the DNS Header QR bit MUST be zero (QR=0).
If the QR bit is not zero the message is not a request.</t>

<t>In a response the DNS Header QR bit MUST be one (QR=1).
If the QR bit is not one the message is not a response.</t>

<t>The DNS Header OPCODE field holds the DSO OPCODE value (tentatively 6).</t>

<t>The Z bits are currently unused in DSO messages,
and in both DSO requests and DSO responses the
Z bits MUST be set to zero (0) on transmission and MUST be silently ignored
on reception, unless a future document specifies otherwise.</t>

<t>In a request message (QR=0) the RCODE is generally set to zero on transmission,
and silently ignored on reception, except where specified otherwise
(for example, the Retry Delay operation (see <xref target="delay"/>), where the RCODE indicates the reason
for termination).</t>

<t>The RCODE value in a response may be one of the following values:</t>

<texttable>
      <ttcol align='right'>Code</ttcol>
      <ttcol align='left'>Mnemonic</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>0</c>
      <c>NOERROR</c>
      <c>Operation processed successfully</c>
      <c>1</c>
      <c>FORMERR</c>
      <c>Format error</c>
      <c>2</c>
      <c>SERVFAIL</c>
      <c>Server failed to process request due to a problem with the server</c>
      <c>3</c>
      <c>NXDOMAIN</c>
      <c>Name Error — Named entity does not exist (TLV-dependent)</c>
      <c>4</c>
      <c>NOTIMP</c>
      <c>DSO not supported</c>
      <c>5</c>
      <c>REFUSED</c>
      <c>Operation declined for policy reasons</c>
      <c>9</c>
      <c>NOTAUTH</c>
      <c>Not Authoritative (TLV dependent)</c>
      <c>11</c>
      <c>DSONOTIMP</c>
      <c>DSO type code not supported</c>
</texttable>

<t>Use of the above RCODEs is likely to be common in DSO but 
does not preclude the definition and use of other codes in future documents that 
make use of DSO.</t>

<t>If a document describing a DSO makes use of either NXDOMAIN (Name Error)
or NOTAUTH then that document MUST explain the meaning.</t>

</section>
<section anchor="dsodata" title="DSO Data">

<t>The standard twelve-octet DNS message header is followed by the DSO Data.</t>

<t>The first TLV in a DSO request message is called the Operation 
TLV. Any subsequent TLVs after this initial Operation TLV are called Modifier TLVs.</t>

<t>Depending on the operation a DSO response can contain:</t>

<t><list style="symbols">
  <t>No TLVs</t>
  <t>Only an Operation TLV</t>
  <t>An Operation TLV followed by one or more Modifier TLVs</t>
  <t>Only Modifier TLVs</t>
</list></t>

<section anchor="tlv-format" title="TLV Format">

<t>Operation and modifier TLVs both use the same encoding format.</t>

<t>Operation TLVs SHOULD normally require a response and, therefore, set the TLV
Acknowledgement bit in a request. However, for some Operation TLVs, this may be
undesirable and the TLV Acknowledgement bit MAY be cleared in the request. Each
Operation TLV definition should stipulate whether an acknowledgement is
REQUIRED. If the TLV Acknowledgement bit is cleared in a request, a response
MUST NOT be sent. Modifier TLVs MUST NEVER set the Acknowledgement bit. The
Acknowledgement bit is NEVER set in the response to an Operation TLV.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   | A |                        DSO-TYPE                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                        DSO DATA LENGTH                        |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                      TYPE-DEPENDENT DATA                      /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='A:'>
  A 1-bit TLV Response flag indicating whether or not an Operation TLV requires
a response Acknowledgement.</t>
  <t hangText='DSO-TYPE:'>
  A 15-bit field in network order giving the type of the current DSO TLV per
the IANA DSO Type Codes Registry.</t>
  <t hangText='DSO DATA LENGTH:'>
  A 16-bit field in network order giving the size in octets of
the TYPE-DEPENDENT DATA.</t>
  <t hangText='TYPE-DEPENDENT DATA:'>
  Type-code specific format.</t>
</list></t>

<t>Where domain names appear within TYPE-DEPENDENT DATA, they MAY be compressed 
using standard DNS name compression. However, the compression MUST NOT point
outside of the TYPE-DEPENDENT DATA section and offsets MUST be from the start
of the TYPE-DEPENDENT DATA.</t>

</section>
<section anchor="operation-tlvs" title="Operation TLVs">

<t>An “Operation TLV” specifies the operation to be performed.</t>

<t>A DSO message MUST contain at most one Operation TLV.</t>

<t>In all cases a DSO request message MUST contain exactly one 
Operation TLV, indicating the operation to be performed.</t>

<t>Depending on the operation, a DSO response message MAY contain no 
Operation TLV, because it is simply a response to a previous request message,
and the MESSAGE ID in the header is sufficient to identify the request in 
question. Or it may contain a single corresponding response Operation TLV, with 
the same DSO-TYPE as in the request message. The specification for each DSO
type determines whether a response for that operation type 
is required to carry the Operation TLV.</t>

<t>If a DSO response is received for an operation which requires
that the response carry an Operation TLV, and the required Operation TLV is not
the first DSO TLV in the response message, then this is a fatal 
error and the recipient of the defective response message MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
<section anchor="modifier-tlvs" title="Modifier TLVs">

<t>A “Modifier TLV” specifies additional parameters
relating to the operation. Immediately following the Operation TLV, if present,
a DSO message MAY contain one or more Modifier TLVs.</t>

</section>
<section anchor="unrecognized-tlvs" title="Unrecognized TLVs">

<t>If a DSO request is received containing an unrecognized
Operation TLV, the receiver MUST send a response with matching
MESSAGE ID, and RCODE DSONOTIMP (tentatively 11). The response MUST NOT contain 
an Operation TLV.</t>

<t>If a DSO message (request or response) is received
containing one or more unrecognized Modifier TLVs, the unrecognized
Modifier TLVs MUST be silently ignored, and the remainder of the message
is interpreted and handled as if the unrecognized parts were not present.</t>

</section>
</section>
<section anchor="edns0-and-tsig" title="EDNS(0) and TSIG">

<t>Since the ARCOUNT field MUST be zero, a DSO message
MUST NOT contain an EDNS(0) option in the additional records section.
If functionality provided by current or future EDNS(0) options is desired
for DSO messages, an Operation TLV or
Modifier TLV needs to be defined to carry the necessary information.</t>

<t>For example, the EDNS(0) Padding Option <xref target="RFC7830"/> used for security purposes
is not permitted in a DSO message,
so if message padding is desired for DSO messages
then the Encryption Padding TLV described in <xref target="padding"/> MUST be used.</t>

<t>Similarly, a DSO message MUST NOT contain a TSIG record.
A TSIG record in a conventional DNS message is added as the last record
in the additional records section, and carries a signature computed over
the preceding message content. Since DSO data appears
after the additional records section, it would not be included in the
signature calculation. 
If use of signatures with DSO messages becomes necessary in the 
future, an explicit Modifier TLV needs to be defined to 
perform this function.</t>

<t>Note however that, while DSO <spanx style="emph">messages</spanx> cannot include
EDNS(0) or TSIG records, a DSO <spanx style="emph">session</spanx> is typically used to 
carry a whole series of DNS messages of different kinds, including DSO
messages, and other DNS message types like Query <xref target="RFC1034"/> 
<xref target="RFC1035"/> and Update <xref target="RFC2136"/>, and those messages can carry EDNS(0) and 
TSIG records.</t>

<t>This specification explicitly prohibits use of the
EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>
in <spanx style="emph">any</spanx> messages sent on a DSO session (because it duplicates
the functionality provided by the DSO Keepalive operation),
but messages may contain other EDNS(0) options as appropriate.</t>

</section>
</section>
<section anchor="message-handling" title="Message Handling">

<t>The initiator MUST set the value of the QR bit in the DNS header to
zero (0), and the responder MUST set it to one (1).
Every DSO request message (QR=0) with the Acknowledgement bit set in the
operation TLV MUST elicit a response (QR=1), which MUST have the same
MESSAGE ID in the DNS message header as in the corresponding request.
DSO request messages sent by the client with the Acknowledgement
bit set in the operation TLV elicit a response from the server, and
DSO request messages sent by the server with the Acknowledgement
bit set in the operation TLV elicit a response from the client.</t>

<t>With most TCP implementations, the TCP data acknowledgement (generated because 
data has been received by TCP), the TCP window update (generated because TCP has 
delivered that data to the receiving software) and the DSO 
response (generated by the receiving software itself)
are all combined into a single packet, so in practice the requirement that every
DSO request message MUST elicit a 
DSO response incurs minimal extra cost on the network.
Requiring that every request elicit a corresponding response also avoids
performance problems caused by interaction between
Nagle’s Algorithm and Delayed Ack <xref target="NagleDA"/>.</t>

<t>The namespaces of 16-bit MESSAGE IDs are disjoint in each direction.
For example, it is <spanx style="emph">not</spanx> an error for both client and server to send a request
message with the same ID. In effect, the 16-bit MESSAGE ID combined with the 
identity of the initiator (client or server) serves as a 17-bit unique 
identifier for a particular operation on a DSO session.</t>

<t>As described in <xref target="header"/> An initiator MUST NOT reuse a MESSAGE ID that is 
already in use for an 
outstanding request, unless specified otherwise by the relevant specification 
for the DSO in question. At the very least, this means 
that a MESSAGE ID MUST NOT be reused in a particular direction
on a particular DSO session while the initiator is waiting for a response to a 
previous request using that MESSAGE ID on that DSO session,
unless specified otherwise by the relevant 
specification for the DSO in question.
(For a long-lived state the MESSAGE ID for the operation
MUST NOT be reused whilst that state remains active.)</t>

<t>If a client or server receives a response (QR=1) where the MESSAGE ID does not
match any of its outstanding operations, this is a fatal error and it MUST 
immediately terminate the connection with a TCP RST (or equivalent for other 
protocols).</t>

</section>
</section>
<section anchor="keepalive" title="Keepalive Operation TLV">

<t>The Keepalive Operation TLV (DSO-TYPE=1) performs two functions: to reset the
keepalive timer for the DSO session and to establish the values for the Session Timeouts.</t>

<t>The Keepalive Operation TLV resets only the keepalive timer, not the inactivity timer.
The reason for this is that periodic Keepalive Operation TLVs are sent for the
sole purpose of keeping a DSO session alive, because that DSO session has current
or recent non-maintenance activity that warrants keeping the DSO session alive.
If sending keepalive traffic itself were to reset the inactivity timer, then 
that would create a circular livelock where keepalive traffic would be sent 
indefinitely to keep a DSO session alive, where the only activity on that DSO 
session would be the keepalive traffic keeping the DSO session alive so that further 
keepalive traffic can be sent.</t>

<t>Sending keepalive traffic is considered a maintenance activity
that is performed in service of other client activities.
Sending keepalive traffic itself is not considered a client activity.
For a DSO session to be considered active, it must be carrying something more than just keepalive traffic.
This is why merely sending a Keepalive Operation TLV does not reset the inactivity timer.</t>

<t>When sent by a client, the Keepalive Operation TLV resets a DSO session’s keepalive timer,
and at the same time requests what the Session Timeout values should be from this point forward in the DSO session.</t>

<t>An acknowledgement is always required for a Keepalive Operation TLV and the TLV
Acknowledgement bit MUST be set in the request when originated by either the
client or the server.</t>

<t>Once a DSO session is in progress (see <xref target="details"/>)
the Keepalive TLV also MAY be initiated by a server.
When sent by a server, it resets a DSO session’s keepalive timer,
and unilaterally informs the client of the new Session Timeout values to use 
from this point forward in this DSO session.</t>

<t>It is not required that the Keepalive TLV be used in every DSO session.
While many DNS Stateful operations
will be used in conjunction with a long-lived session state,
not all DNS Stateful operations require long-lived session state,
and in some cases the default 15-second value for both the inactivity timeout
and keepalive interval may be perfectly appropriate. However, it can be noted 
that for clients that implement only the TLVs defined in this document it is
the only way for a client to initiate a DSO session.</t>

<t>The TYPE-DEPENDENT DATA for the the Keepalive TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 INACTIVITY TIMEOUT (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 KEEPALIVE INTERVAL (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='INACTIVITY TIMEOUT:'>
  the inactivity timeout for the current DSO session, specified as a
32-bit word in network (big endian) order in units of milliseconds.
This is the timeout at which the client MUST close an inactive DSO session.
If the client does not gracefully close an inactive DSO session,
then after twice this interval the server will forcibly terminate
the connection with a TCP RST (or equivalent for other protocols).</t>
  <t hangText='KEEPALIVE INTERVAL:'>
  the keepalive interval for the current DSO session, specified as a
32-bit word in network (big endian) order in units of milliseconds.
This is the interval at which a client MUST generate keepalive
traffic to maintain connection state.
If the client does not generate the necessary keepalive traffic,
then after twice this interval the server will forcibly terminate
the connection with a TCP RST (or equivalent for other protocols).</t>
</list></t>

<t>In a client-initiated DSO Keepalive message,
the Session Timeouts contain the client’s requested values.
In a server response to a client-initiated message, the Session Timeouts contain 
the server’s chosen values, which the client MUST respect.
This is modeled after the DHCP protocol, where the client
requests a certain lease lifetime using DHCP option 51 <xref target="RFC2132"/>,
but the server is the ultimate authority
for deciding what lease lifetime is actually granted.</t>

<t>In a server-initiated DSO Keepalive message, the Session Timeouts unilaterally 
inform the client of the new values from this 
point forward in this DSO session. The client MUST generate a response to the 
server-initiated DSO Keepalive message.
The MESSAGE ID in the response message MUST match the ID from the 
server-initiated DSO Keepalive message, and the response message 
MUST NOT contain any Operation TLV.</t>

<t>When a client is sending its second and subsequent Keepalive DSO 
requests to the server, the client SHOULD continue to request its preferred 
values each time. This allows flexibility, so that if conditions change during 
the lifetime of a DSO session, the server can adapt its responses to better fit 
the client’s needs.</t>

<section anchor="client-handling-of-received-session-timeout-values" title="Client handling of received Session Timeout values">

<t>When a client receives a response to its client-initiated DSO Keepalive message,
or receives a server-initiated DSO Keepalive message, the client has then 
received Session Timeout values dictated by the server. The two timeout values 
contained in the DSO Keepalive TLV from the server may each be higher, lower, or 
the same as the respective Session Timeout values the client previously had for 
this DSO session.</t>

<t>In the case of the keepalive timer, the handling of the received value is 
straightforward. The act of receiving the message containing the DSO Keepalive 
TLV itself resets the keepalive timer and updates the keepalive interval for the 
DSO session. The new keepalive interval indicates the 
maximum time that may elapse before another message must be sent
or received on this DSO session, if the DSO session is to remain alive.</t>

<t>In the case of the inactivity timeout, the handling of the received value 
is a little more subtle, though the meaning of the inactivity 
timeout is unchanged – it still indicates the maximum permissible time allowed 
without activity on a DSO session.
The act of receiving the message containing the DSO Keepalive TLV does not
itself reset the inactivity timer. The time elapsed since the last useful
activity on this DSO session is unaffected by exchange of DSO Keepalive messages.
The act of receiving the message containing the DSO Keepalive TLV does update 
the timeout associated with the running inactivity timer; that
becomes the new maximum permissible time without activity on a DSO session.</t>

<t><list style="symbols">
  <t>If the current inactivity timer value is not greater than the new inactivity timeout, 
then the DSO session may remain open for now. When the inactivity timer value 
exceeds the new inactivity timeout, the client MUST then close the DSO session,
as described above.</t>
  <t>If the current inactivity timer value is already greater than the new inactivity 
timeout, then this DSO session has already been inactive
for longer than the server permits, and the client MUST immediately close this DSO session.</t>
  <t>If the current inactivity timer value is more than twice the new inactivity timeout, 
then this DSO session is eligible to be
forcibly terminated by the server and and the client MUST immediately close this 
DSO session. However if a server abruptly reduces the
inactivity timeout in this way the server SHOULD give the client a grace period
of one quarter of the new inactivity timeout, to give the client time to close
the connection gracefully before the server resorts to terminating it forcibly.</t>
</list></t>

</section>
<section anchor="relation-to-edns0-tcp-keepalive-option" title="Relation to EDNS(0) TCP Keepalive Option">

<t>The inactivity timeout value in the Keepalive TLV (DSO-TYPE=1) has similar
intent to the EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>.
A client/server pair that supports DSO MUST NOT use the
EDNS(0) TCP KeepAlive option within any message after a DSO 
session has been established.
Once a DSO session has been established, if either
client or server receives a DNS message over the DSO session that contains an
EDNS(0) TCP Keepalive option, this is an error and the receiver of the
EDNS(0) TCP Keepalive option MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="delay" title="Retry Delay TLV">

<t>The Retry Delay TLV (DSO-TYPE=0) can be used as an Operation TLV or as
a Modifier TLV.</t>

<t>The TYPE-DEPENDENT DATA for the the Retry Delay TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     RETRY DELAY (32 bits)                     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='RETRY DELAY:'>
  a time value, specified as a 32-bit word in network order in units of 
milliseconds, within which the client MUST NOT retry this operation, or retry 
connecting to this server.</t>
</list></t>

<t>The RECOMMENDED value is 10 seconds.</t>

<section anchor="use-as-an-operation-tlv" title="Use as an Operation TLV">

<t>When sent in a DSO request message, from server to client, the 
Retry Delay TLV (0) is considered an Operation TLV. It is used by a server 
to request that a client close the DSO session and underlying connection, and 
not to reconnect for the indicated time interval.</t>

<t>In this case it applies to the DSO session as a whole, and the client MUST close the 
DSO session, as described in section <xref target="retry"/>. The RCODE in the message header 
MUST indicate the reason for the termination:</t>

<t><list style="symbols">
  <t>NOERROR indicates a routine shutdown.</t>
  <t>SERVFAIL indicates that the server is overloaded due to resource exhaustion.</t>
  <t>REFUSED indicates that the server has been reconfigured and is no longer able 
to perform one or more of the functions 
currently being performed on this DSO session (for example, a DNS Push Notification 
server could be reconfigured such that is is no longer accepting DNS Push 
Notification requests for one or more of the currently subscribed names).</t>
</list></t>

<t>This document specifies only these three RCODE values for Retry Delay request.
Servers sending Retry Delay requests SHOULD use one of these three values.
However, future circumstances may create situations where other RCODE values
are appropriate in Retry Delay requests, so clients MUST be prepared
to accept Retry Delay requests with any RCODE value.</t>

<t>An acknowledgement is not desired for a Retry Delay Operation TLV and the TLV
Acknowledgement bit MUST be cleared in the request.</t>

</section>
<section anchor="use-as-a-modifier-tlv" title="Use as a Modifier TLV">

<t>When appended to a DSO response message for some client request,
the Retry Delay TLV (0) is considered a Modifier TLV.
The indicated time interval during which the client SHOULD NOT retry
applies only to the failed operation, not to the DSO session as a whole.</t>

<t>In the case of a client request that returns a nonzero RCODE value, the server 
MAY append a Retry Delay TLV (0) to the response, indicating the time interval
during which the client SHOULD NOT attempt this operation again.</t>

</section>
</section>
<section anchor="padding" title="Encryption Padding TLV">

<t>The Encryption Padding TLV (DSO-TYPE=2) can only be used as a Modifier TLV.
It is only applicable when the DSO Transport layer uses encryption
such as TLS.</t>

<t>The TYPE-DEPENDENT DATA for the the Padding TLV is optional and is a
variable length field containing non-specified values. A DATA LENGTH
of 0 essentially provides for 4 octets of padding (the minimum amount).</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   /                                                               /
   /                   VARIABLE NUMBER OF OCTETS                   /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t>As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
the PADDING octets SHOULD be set to 0x00.  Other values MAY be used,
for example, in cases where there is a concern that the padded
message could be subject to compression before encryption.
PADDING octets of any value MUST be accepted in the messages received.</t>

<t>The Encryption Padding TLV may be included in either a DSO request, response, or both.
As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
if a request is received with a Encryption Padding TLV,
then the response MUST also include an Encryption Padding TLV.</t>

<t>The length of padding is intentionally not specified in this document and
is a function of current best practices with respect to the type and length
of data in the preceding TLVs <xref target="I-D.ietf-dprive-padding-policy"/>.</t>

</section>
<section anchor="lifecycle" title="DSO Session Lifecycle and Timers">

<section anchor="dso-session-initiation" title="DSO Session Initiation">

<t>A session begins when a client makes a new connection to a server.</t>

<t>A DSO session begin as described in <xref target="establishment"/>.</t>

<t>The client may perform as many DNS operations as it wishes using the
newly created DSO session. Operations SHOULD be pipelined (i.e., the
client doesn’t need wait for a response before sending the next message).
The server MUST act on messages in the order they are transmitted, but
responses to those messages MAY be sent out of order, if appropriate.</t>

</section>
<section anchor="sessiontimeouts" title="DSO Session Timeouts">

<t>Two timeout values are associated with a DSO session: the inactivity timeout, and 
the keepalive interval.</t>

<t>The first timeout value, the inactivity timeout, is the maximum time for which
a client may speculatively keep a DSO session open in the expectation that
it may have future requests to send to that server.</t>

<t>The second timeout value, the keepalive interval, is the maximum permitted
interval between client messages to the server if the client wishes to keep
the DSO session alive.</t>

<t>The two timeout values are independent. The inactivity timeout may be lower, the 
same, or higher than the keepalive interval, though in most cases the inactivity 
timeout is expected to be shorter than the keepalive interval.</t>

<t>Only when the client has a very long-lived low-traffic state does the 
keepalive interval come into play, to ensure that a sufficient residual
amount of traffic is generated to maintain NAT and firewall state
and to assure client and server that they still have connectivity to each other.</t>

<t>On a new DSO session, if no explicit DSO Keepalive message exchange has taken 
place, the default value for both timeouts is 15 seconds.
For both timeouts, lower values of the timeout result in higher network traffic
and higher CPU load on the server.</t>

</section>
<section anchor="inactivetimer" title="Inactive DSO Sessions">

<t>At both servers and clients, the generation or reception of any complete
DNS message, including DNS requests, responses, updates, or DSO
messages, resets both timers for that DSO session, with the exception
that a DSO Keepalive message resets only the keepalive timer, not the inactivity 
timeout timer.</t>

<t>In addition, for as long as the client has an outstanding operation in progress,
the inactivity timer remains cleared, and an inactivity 
timeout cannot occur.</t>

<t>For short-lived DNS operations like traditional queries and updates,
an operation is considered in progress for the time between request and 
response, typically a period of a few hundred milliseconds at most.
At the client, the inactivity timer is cleared upon transmission of a 
request and remains cleared until reception of the corresponding response.
At the server, the inactivity timer is cleared upon reception of a request
and remains cleared until transmission of the corresponding response.</t>

<t>For long-lived DNS Stateful operations, an operation is considered in progress
for as long as the state is active, until it is cancelled.
This means that a DSO session can exist, with a state 
active, with no messages flowing in either direction, for far longer than the 
inactivity timeout, and this is not an error. This is why there are two separate 
timers: the inactivity timeout, and the keepalive interval. Just because a DSO 
session has no traffic for an extended period of time
does not automatically make that DSO session “inactive”,
if it has an active state that is awaiting events.</t>

</section>
<section anchor="the-inactivity-timeout" title="The Inactivity Timeout">

<t>The purpose of the inactivity timeout is for the server to balance its trade off 
between the costs of setting up new DSO sessions and the costs of maintaining inactive 
DSO sessions. A server with abundant DSO session capacity can offer a high inactivity timeout, 
to permit clients to keep a speculative DSO session open for a long time, to save 
the cost of establishing a new DSO session for future communications with that 
server. A server with scarce memory resources can offer a low inactivity timeout,
to cause clients to promptly close DSO sessions whenever they have no outstanding
operations with that server, and then create a new DSO session later when needed.</t>

<section anchor="closing-inactive-dso-sessions" title="Closing Inactive DSO Sessions">

<t>A client is NOT required to wait until the inactivity timeout expires
before closing a DSO session.
A client MAY close a DSO session at any time, at the client’s discretion.
If a client determines that it has no current or reasonably anticipated
future need for an inactive DSO session, then the client SHOULD close that connection.</t>

<t>If, at any time during the life of the DSO session,
the inactivity timeout value (i.e., 15 seconds by default) elapses
without there being any operation active on the DSO session,
the client MUST gracefully close the connection with a
TLS close_notify followed by a TCP FIN (or equivalent for other protocols).</t>

<t>If, at any time during the life of the DSO session, twice the inactivity timeout value
(i.e., 30 seconds by default) elapses without there being any operation
active on the DSO session, the server SHOULD consider the client delinquent,
and forcibly abort the DSO session.
For DSO sessions over TCP (or over TLS over TCP),
to avoid the burden of having a connection in TIME-WAIT state, instead of
closing the connection gracefully the server SHOULD abort
the connection with a TCP RST (or equivalent for other protocols).
(In the BSD Sockets API this is achieved by setting the
SO_LINGER option to zero before closing the socket.)</t>

<t>In this context, an operation being active on a DSO session includes
a query waiting for a response, an update waiting for a response,
or active state,
but not a DSO Keepalive message exchange itself.
A DSO Keepalive message exchange resets only the keepalive
interval timer, not the inactivity timeout timer.</t>

<t>If the client wishes to keep an inactive DSO session open for longer than
the default duration without having to send traffic every 15 seconds,
then it uses the DSO Keepalive message to request
longer timeout values, as described in <xref target="keepalive"/>.</t>

</section>
<section anchor="values-for-the-inactivity-timeout" title="Values for the Inactivity Timeout">

<t>For the inactivity timeout value, lower values result in more frequent DSO session 
teardown and re-establishment. Higher values result in lower traffic and CPU
load on the server, but a larger memory burden to maintain state for inactive 
DSO sessions.</t>

<t>A shorter inactivity timeout with a longer keepalive interval signals to the client 
that it should not speculatively keep inactive DSO sessions open for very long without
reason, but when it does have an active reason to keep a DSO session open, it 
doesn’t need to be sending an aggressive level of keepalive traffic.</t>

<t>A longer inactivity timeout with a shorter keepalive interval signals to the client
that it may speculatively keep inactive DSO sessions open for a long time, but it
should be sending a lot of keepalive traffic on those inactive DSO sessions.
This configuration is expected to be less common.</t>

<t>To avoid repeated teardown and re-establishment of sessions,
the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with an inactivity timeout value less than ten seconds.
If a client receives a Keepalive message specifying an inactivity timeout value
less than ten seconds this is an error and the client MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

<t>This does not mean that a client is forced to keep an idle connection open for
ten seconds if it doesn’t need that — a client is free to close an idle connection whenever it chooses —
it means that servers cannot <spanx style="emph">require</spanx> a client to close an idle connection in under ten seconds.</t>

<t>[Do we really want this restriction? How soon does the client reconnect after tearing down the connection? –SC]</t>

</section>
</section>
<section anchor="keepalivetimer" title="The Keepalive Interval">

<t>The purpose of the keepalive interval is to manage the generation of
sufficient messages to maintain state in middle boxes (such at NAT gateways
or firewalls) and for the client and server to periodically verify that they
still have connectivity to each other. This allows them to clean up state
when connectivity is lost, and attempt re-connection if appropriate.</t>

<section anchor="keepalive-interval-expiry" title="Keepalive Interval Expiry">

<t>If, at any time during the life of the DSO session,
the keepalive interval value (i.e., 15 seconds by default) elapses
without any DNS messages being sent or received on a DSO session,
the client MUST take action to keep the DSO session alive,
by sending a DSO Keepalive message (see <xref target="keepalive"/>).
A DSO Keepalive message exchange resets only the keepalive timer, 
not the inactivity timer.</t>

<t>If a client disconnects from the network abruptly,
without cleanly closing its DSO session,
leaving long-lived state uncanceled,
the server learns of this after failing to
receive the required keepalive traffic from that client.
If, at any time during the life of the DSO session,
twice the keepalive interval value (i.e., 30 seconds by default) elapses
without any DNS messages being sent or received on a DSO session,
the server SHOULD consider the client delinquent,
and forcibly abort the connection with a TCP RST (or equivalent for other 
protocols).</t>

</section>
<section anchor="values-for-the-keepalive-interval" title="Values for the Keepalive Interval">

<t>For the keepalive interval value, lower values result in higher volume keepalive 
traffic. Higher values of the keepalive interval reduce traffic and CPU load, 
but have minimal effect on the memory burden
at the server, because clients keep a DSO session open for the same length of time
(determined by the inactivity timeout) regardless of the level of keepalive traffic 
required.</t>

<t>It may be appropriate for clients and servers to select different keepalive 
interval values depending on the nature of the network they are on.</t>

<t>A corporate DNS server that knows it is serving only clients on the internal 
network, with no intervening NAT gateways or firewalls, can impose a higher 
keepalive interval, because frequent keepalive traffic is not required.</t>

<t>A public DNS server that is serving primarily residential consumer clients, 
where it is likely there will be a NAT gateway on the path, may impose a lower 
keepalive interval, to generate more frequent keepalive traffic.</t>

<t>A smart client may be adaptive to its environment. A client using
a private IPv4 address <xref target="RFC1918"/> to communicate with a DNS server
at an address outside that IPv4 private address block,
may conclude that there is likely to be a NAT gateway on the path,
and accordingly request a lower keepalive interval.</t>

<t>For environments where there is a NAT gateway or firewalls on the path, it is
RECOMMENDED that clients request, and servers grant, a keepalive interval of 15
minutes. In other environments it is RECOMMENDED that clients request, and 
servers grant, a keepalive interval of 60 minutes.</t>

<t>Note that the lower the keepalive interval value, the higher the load on client
and server. For example, an keepalive interval value of 100ms would result in a
continuous stream of at least ten messages per second, in both directions,
to keep the DSO session alive. And, in this extreme example, a single packet loss and
retransmission over a long path could introduce a momentary pause in the stream of messages,
long enough to cause the server to overzealously abort the connection.</t>

<t>Because of this concern, the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with an keepalive interval value less than ten seconds.
If a client receives an Keepalive message specifying an keepalive interval value
less than ten seconds this is an error and the client MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="server-initiated-termination-on-error" title="Server-Initiated Termination on Error">

<t>After sending an error response to a client, the server MAY close the DSO session,
or may allow the DSO session to remain open. For error conditions
that only affect the single operation in question, the server SHOULD return an
error response to the client and leave the DSO session open for further operations.
For error conditions that are likely to make all operations unsuccessful in the
immediate future, the server SHOULD return an error response to the client and 
then close the DSO session by sending a Retry Delay request message, as described in 
<xref target="delay"/>.</t>

</section>
<section anchor="error" title="Client Behaviour in Receiving an Error">

<t>Upon receiving an error response from the server, a client SHOULD NOT
automatically close the DSO session. An error relating to one particular operation
on a DSO session does not necessarily imply that all other operations on that
DSO session have also failed, or that future operations will fail. The client
should assume that the server will make its own decision about whether or not to
close the DSO session, based on the server’s determination of whether the error
condition pertains to this particular operation, or would also apply to any
subsequent operations. If the server does not close the DSO session then the client
SHOULD continue to use that DSO session for subsequent operations.</t>

</section>
<section anchor="server-initiated-termination-on-overload" title="Server-Initiated Termination on Overload">

<t>Apart from the cases where:</t>

<t><list style="symbols">
  <t>Session Timeouts expire (see <xref target="sessiontimeouts"/>)</t>
  <t>On error (see <xref target="error"/>)</t>
  <t>When under load (see below)</t>
</list></t>

<t>a server MUST NOT close a DSO session with a client, except in extraordinary error 
conditions. Closing the DSO session is the
client’s responsibility, to be done at the client’s discretion, when it so 
chooses. A server only closes a DSO session under exceptional circumstances, such as
when the server application software or underlying operating system is
restarting, the server application terminated unexpectedly (perhaps due to a
bug that makes it crash), or the server is undergoing maintenance procedures.
When possible, a server SHOULD send a Retry Delay message informing the
client of the reason for the DSO session being closed, and allow the client
five seconds to receive it before the server resorts to forcibly aborting the 
connection.</t>

</section>
<section anchor="retry" title="Retry Delay Operation TLV">

<t>There may be rare cases where a server is overloaded and wishes to shed load.
If a server is low on resources it MAY simply terminate a client connection with 
a TCP RST (or equivalent for other protocols).
However, the likely behavior of the client may be simply to to treat this as a
network failure and connect
immediately, putting more burden on the server.</t>

<t>Therefore to avoid this reconnection implosion, a server SHOULD instead choose 
to shed client load by sending a Retry Delay request message, with an RCODE of 
SERVFAIL, to inform the client of the overload situation. After sending a Retry 
Delay request message, the server MUST NOT send any further messages on that 
DSO session.</t>

<t>After sending the Retry Delay request the server SHOULD allow the
client five seconds to close the connection, and if the client has not
closed the connection after five seconds then the server SHOULD abort
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>Upon receipt of a Retry Delay request from the server, the client MUST
make note of the reconnect delay for this server, and then immediately
close the connection. This is to place the burden of TCP’s TIME-WAIT state on 
the client.</t>

<t>A Retry Delay request message MUST NOT be initiated by a client.
If a server receives a Retry Delay request message this is an error
and the server MUST immediately terminate the connection with a TCP RST
(or equivalent for other protocols).</t>

<section anchor="outstanding-operations" title="Outstanding Operations">

<t>At the moment a server chooses to initiate a Retry Delay request message
there may be DNS requests already in flight from client to server on this 
DSO session, which will arrive at the server after its Retry Delay request message 
has been sent.
The server MUST silently ignore such incoming requests, and MUST NOT generate
any response messages for them. When the Retry Delay request message from the
server arrives at the client, the client will determine that any DNS requests
it previously sent on this DSO session, that have not yet received a response, now 
will certainly not be receiving any response. Such requests should be considered
failed, and should be retried at a later time, as appropriate.</t>

<t>In the case where some, but not all, of the existing operations on a DSO session 
have become invalid (perhaps because the server has been reconfigured and is no 
longer authoritative for some of the names),
but the server is terminating all DSO sessions en masse with a REFUSED (5) RCODE,
the RECONNECT DELAY MAY be zero, indicating that the clients SHOULD immediately
attempt to re-establish operations.
It is likely that some of the attempts will be successful and some will not.</t>

<t>In the case where a server is terminating a large number of DSO sessions at once
(e.g., if the system is restarting) and the server doesn’t want to be inundated 
with a flood of simultaneous retries, it SHOULD send different RECONNECT delay 
values to each client.
These adjustments MAY be selected randomly, pseudorandomly, or deterministically
(e.g., incrementing the time value by one tenth of a second for each successive
client, yielding a post-restart reconnection rate of ten clients per second).</t>

</section>
<section anchor="client-reconnection" title="Client Reconnection">

<t>After a DSO session is closed by the server, the client SHOULD try to reconnect,
to that server, or to another suitable server, if more than one is available.
If reconnecting to the same server, the client MUST respect the indicated delay
before attempting to reconnect.</t>

<t>If a particular server does not want a client to reconnect (it is being
de-commissioned), it SHOULD set the retry delay to the maximum value (which is
approximately 497 days). If the server will only be out of service for a maintenance
period, it should use a value closer to the expected maintenance window and
not default to a very large delay value or clients may not attempt to reconnect
after it resumes service.</t>

</section>
</section>
</section>
<section anchor="sharing" title="Connection Sharing">

<t>As previously specified for DNS over TCP <xref target="RFC7766"/>,
to mitigate the risk of unintentional server overload, DNS clients
MUST take care to minimize the number of concurrent TCP connections
made to any individual server.  It is RECOMMENDED that for any given
client/server interaction there SHOULD be no more than one connection
for regular queries, one for zone transfers, and one for each
protocol that is being used on top of TCP (for example, if the
resolver was using TLS).
However, it is noted that certain primary/secondary configurations
with many busy zones might need to use more than one TCP
connection for zone transfers for operational reasons
(for example, to support concurrent transfers of multiple zones).</t>

<t>A single server may support multiple services, including DNS Updates 
<xref target="RFC2136"/>, DNS Push Notifications <xref target="I-D.ietf-dnssd-push"/>,
and other services, for one or more DNS zones.
When a client discovers that the target server for several different operations
is the same target hostname and port, the client SHOULD use a single
shared DSO session for all those operations.
A client SHOULD NOT open multiple connections to the same target host and port
just because the names being operated on are different or
happen to fall within different zones.
This is to reduce unnecessary connection load on the DNS server.</t>

<t>However, server implementers and operators should be aware that connection
sharing may not be possible in all cases.
A single client device may be home to multiple independent client software
instances that don’t coordinate with each other.
Similarly, multiple independent client devices behind the same NAT gateway
will also typically appear to the DNS server as different source ports on
the same client IP address.
Because of these constraints, a DNS server MUST be prepared to accept
multiple connections from different source ports on the same client IP address.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="dso-opcode-registration" title="DSO OPCODE Registration">

<t>IANA are directed to assign a value (tentatively 6)
in the DNS OPCODEs Registry for the DSO OPCODE.</t>

</section>
<section anchor="dso-rcode-registration" title="DSO RCODE Registration">

<t>IANA are directed to assign a value (tentatively 11)
in the DNS RCODE Registry for the DSONOTIMP error code.</t>

</section>
<section anchor="dso-type-codes-registry" title="DSO Type Codes Registry">

<t>IANA are directed to create the 15-bit DSO Type Codes
Registry, with initial values as follows:</t>

<texttable>
      <ttcol align='right'>Type</ttcol>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Status</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>0x0000</c>
      <c>RetryDelay</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0001</c>
      <c>KeepAlive</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0002</c>
      <c>Encryption Padding</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0003 - 0x003F</c>
      <c>Unassigned, reserved for DSO session management TLVs</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x0040 - 0x77FF</c>
      <c>Unassigned</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x7800 - 0x7BFF</c>
      <c>Reserved for local / experimental use</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x7C00 - 0x7FFF</c>
      <c>Reserved for future expansion</c>
      <c>&#160;</c>
      <c>&#160;</c>
</texttable>

<t>Registration of additional DSO Type Codes requires publication
of an appropriate IETF “Standards Action” or “IESG Approval” document <xref target="RFC5226"/>.</t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>If this mechanism is to be used with DNS over TLS, then these messages
are subject to the same constraints as any other DNS over TLS messages
and MUST NOT be sent in the clear before the TLS session is established.</t>

<t>The data field of the “Encryption Padding” TLV could be used as a covert channel.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to
Tim Chown,
Ralph Droms,
Jan Komissar,
Manju Shankar Rao,
and Ted Lemon
for their helpful contributions to this document.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC1035;
&RFC7766;
&RFC6891;
&RFC7828;
&RFC2119;
&RFC7830;
&RFC1034;
&RFC2136;
&RFC2132;
&RFC1918;
&RFC5226;


    </references>

    <references title='Informative References'>

<reference anchor="NagleDA" target="http://www.stuartcheshire.org/papers/nagledelayedack/">
  <front>
    <title>TCP Performance problems caused by interaction between Nagle's Algorithm and Delayed ACK</title>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization></organization>
    </author>
    <date year="2005" month="May" day="20"/>
  </front>
</reference>
&RFC7858;
&RFC6763;
&I-D.ietf-dnssd-push;
&RFC0768;
&I-D.ietf-dprive-padding-policy;


    </references>



  </back>

<!-- ##markdown-source:
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

-->

</rfc>

