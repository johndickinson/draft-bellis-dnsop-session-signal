<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.7 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC7766 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7766.xml">
<!ENTITY RFC6891 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6891.xml">
<!ENTITY RFC7828 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7828.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC7830 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7830.xml">
<!ENTITY RFC1034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC2136 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2136.xml">
<!ENTITY RFC1918 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1918.xml">
<!ENTITY RFC2132 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2132.xml">
<!ENTITY RFC5226 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5226.xml">
<!ENTITY RFC7858 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7858.xml">
<!ENTITY RFC6763 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6763.xml">
<!ENTITY I-D.ietf-dnssd-push SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dnssd-push.xml">
<!ENTITY RFC0768 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.0768.xml">
<!ENTITY I-D.ietf-dprive-padding-policy SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dprive-padding-policy.xml">
]>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-dnsop-session-signal-05" category="std" updates="RFC 7766, RFC 1035">

  <front>
    <title>DNS Stateful Operations</title>

    <author initials="R." surname="Bellis" fullname="Ray Bellis">
      <organization abbrev="ISC">Internet Systems Consortium, Inc.</organization>
      <address>
        <postal>
          <street>950 Charter Street</street>
          <city>Redwood City</city>
          <code>CA 94063</code>
          <country>USA</country>
        </postal>
        <phone>+1 650 423 1200</phone>
        <email>ray@isc.org</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>1 Infinite Loop</street>
          <city>Cupertino</city>
          <code>CA 95014</code>
          <country>USA</country>
        </postal>
        <phone>+1 408 974 3207</phone>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="J." surname="Dickinson" fullname="John Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>jad@sinodun.com</email>
      </address>
    </author>
    <author initials="S." surname="Dickinson" fullname="Sara Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>sara@sinodun.com</email>
      </address>
    </author>
    <author initials="A." surname="Mankin" fullname="Allison Mankin">
      <organization>Salesforce</organization>
      <address>
        <email>allison.mankin@gmail.com</email>
      </address>
    </author>
    <author initials="T." surname="Pusateri" fullname="Tom Pusateri">
      <organization>Unaffiliated</organization>
      <address>
        <postal>
          <street></street>
          <city>Raleigh</city>
          <code>NC 27608</code>
          <country>USA</country>
        </postal>
        <phone>+1 919 867 1330</phone>
        <email>pusateri@bangj.com</email>
      </address>
    </author>

    <date year="2017" month="November" day="19"/>

    <area>Internet</area>
    <workgroup>DNSOP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document defines a new DNS OPCODE, for DNS Stateful Operations (DSO).
DSO messages are used to communicate operations within persistent
stateful sessions, expressed using type-length-value (TLV) syntax.
This document defines an initial set of TLVs, including ones
used to manage session timeouts and termination.
This mechanism is intended to reduce the overhead of existing 
“per-packet” signaling mechanisms with “per-message” semantics as well as 
defining new stateful operations not defined in EDNS(0).</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The use of transports for DNS other than UDP is being increasingly specified,
for example, DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> and DNS over TLS <xref target="RFC7858"/>.
Such transports can offer persistent, long-lived sessions and therefore when
using them for transporting DNS messages it is of benefit to have a mechanism
that can establish parameters associated with those sessions, such as timeouts.
In such situations it is also advantageous to support server initiated messages.</t>

<t>The existing EDNS(0) Extension Mechanism for DNS <xref target="RFC6891"/> is explicitly
defined to only have “per-message” semantics. Whilst EDNS(0) has been used to
signal at least one session-related parameter (the EDNS(0) TCP Keepalive option
<xref target="RFC7828"/>) the result is less than optimal due to the restrictions
imposed by the EDNS(0) semantics and the lack of server-initiated signalling. 
For example, a server cannot arbitrarily 
instruct a client to close a connection because the server can only send EDNS(0) options 
in responses to queries that contained EDNS(0) options.</t>

<t>This document defines a new DNS OPCODE, for DNS Stateful Operations (DSO).
DSO messages are used to communicate operations within persistent
stateful sessions, expressed using type-length-value (TLV) syntax.
This document defines an initial set of TLVs, including ones
used to manage session timeouts and termination.</t>

<t>All three of the TLVs defined here are mandatory for all implementations of DSO.
Additional TLVs may be defined in additional specifications.</t>

<t>It should be noted that the message format for DNS Stateful Operations
(see <xref target="format"/>) differs from the traditional DNS packet
format used for standard queries and responses.
The standard twelve-octet header is used, but the four count fields
(QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) are set to zero and their
corresponding sections are not present.
The actual data pertaining to DNS Stateful Operations
(expressed in TLV format) is appended to the end of the DNS message header.
When displayed using packet analyzer tools that have not been
updated to recognize the DNS Stateful Operations format, this
will result in the Stateful Operations data being displayed
as unknown additional data after the end of the DNS message.
It is likely that future updates to these tools will add the ability
to recognize, decode, and display the Stateful Operations data.</t>

<t>This new format has distinct advantages over an RR-based format because it
is more explicit and more compact. Each TLV definition is specific
to the use case, and as a result contains no redundant or overloaded fields.
Importantly, it completely avoids conflating DNS Stateful Operations in anyway 
with normal DNS operations or with existing EDNS(0) based functionality.
A goal of this approach is to avoid the operational issues that have
befallen EDNS(0), particularly relating to middle-box behaviour.</t>

<t>With EDNS(0), multiple options may be packed into a single OPT pseudo-RR,
and there is no generalized mechanism for a client to be able to tell
whether a server has processed or otherwise acted upon each individual
option within the combined OPT RR.
The specifications for each individual option need to define how each
different option is to be acknowledged, if necessary.</t>

<t>In contrast to EDNS(0), with DNS Stateful Operations there is no
compelling motivation to pack multiple operations into a single
message for efficiency reasons, because DNS Stateful Operations
always operates using a connection-oriented transport protocol.
Each Stateful operation is communicated in its own separate
DNS message, and the transport protocol can take care of packing
separate DNS messages into a single IP packet if appropriate.
For example, TCP can pack multiple small DNS messages into a single TCP segment.
This simplification allows for clearer semantics.
Each DSO request message communicates just one primary operation,
and the RCODE in the corresponding response message indicates the
success or failure of that operation.</t>

</section>
<section anchor="terminology" title="Terminology">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and
“OPTIONAL” in this document are to be interpreted as described in
“Key words for use in RFCs to Indicate Requirement Levels” <xref target="RFC2119"/>.</t>

<t>“DSO” is used to mean DNS Stateful Operation.</t>

<t>The term “connection” means a bidirectional byte stream of reliable,
in-order messages, such as provided by using
DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> or DNS over TLS <xref target="RFC7858"/>.</t>

<t>The unqualified term “session” in the context of this document means the exchange of
DNS messages over a connection where:</t>

<t><list style="symbols">
  <t>The connection between client and server is persistent and relatively
long-lived (i.e., minutes or hours, rather than seconds).</t>
  <t>Either end of the connection may initiate messages to the other.</t>
</list></t>

<t>A “DSO session” is established between two endpoints that
acknowledge persistent DNS state via the exchange of DSO messages
over the connection. This is distinct from, for example a DNS-over-TCP session
as described in RC7766.</t>

<t>A “DSO session” is terminated when the underlying connection is closed.</t>

<t>The term “server” means the software with a listening socket, awaiting
incoming connection requests.</t>

<t>The term “client” means the software which initiates a connection
to the server’s listening socket.</t>

<t>The terms “initiator” and “responder” correspond respectively to the
initial sender and subsequent receiver of a DSO request message,
regardless of which was the “client” and “server” in the usual DNS sense.</t>

<t>The term “sender” may apply to either an initiator
(when sending a DNS Stateful Operation request message)
or a responder (when sending a DNS Stateful Operation response message).</t>

<t>Likewise, the term “receiver” may apply to either a responder
(when receiving a DNS Stateful Operation request message)
or an initiator (when receiving a DNS Stateful Operation response message).</t>

<t>DNS Stateful Operations are expressed using type-length-value (TLV) syntax.</t>

<t>Two timers (elapsed time since an event) are defined in this document:</t>

<t><list style="symbols">
  <t>an inactivity timer (see <xref target="keepalive"/> and <xref target="inactivetimer"/>)</t>
  <t>a keepalive timer (see <xref target="keepalive"/> and <xref target="keepalivetimer"/>)</t>
</list></t>

<t>The timeouts associated with these timers are called the inactivity timeout and 
the keepalive interval respectively. 
The term “Session Timeouts” is used to refer to this pair of timeout values.</t>

<t>Reseting a timer means resetting the timer value to zero and starting the timer 
again. Clearing a timer means resetting the timer value to zero but NOT starting 
the time again.</t>

</section>
<section anchor="discussion" title="Discussion">

<t>There are several use cases for DNS Stateful operations that can 
be described here.</t>

<t>Firstly, establishing session parameters such as server defined timeouts is of 
great use in the 
general management of persistent connections. For example, using DSO sessions 
for stub to recursive DNS-over-TLS <xref target="RFC7858"/> is more flexible for both the 
client and the server than attempting to manage sessions using just the EDNS(0)
TCP Keepalive option
<xref target="RFC7828"/>. The simple set of TLVs defined in this document is
sufficient to greatly enhance connection management for this use case.</t>

<t>Secondly, DNS-SD <xref target="RFC6763"/> has evolved into a naturally session based mechanism where,
for example, long-lived subscriptions lend themselves to ‘push’ mechanisms as 
opposed to polling. Long-lived stateful connections and server initiated 
messages align with this use case <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>A general use case is that DNS traffic is often bursty but session establishment 
can be expensive. One challenge with long-lived connections is to maintain 
sufficient traffic to maintain NAT and firewall state.
To mitigate this issue this document introduces a
new concept for the DNS, that is DSO “Keepalive traffic”.
This traffic carries no DNS data and is not considered ‘activity’
in the classic DNS sense, but serves to maintain state in middle boxes,
and to assure client and server that they still have connectivity to each other.</t>

<t>There are a myriad of other potential use cases for DSO given the versatility 
and extensibility of this specification.</t>

<t><xref target="details"/> of this document describes the protocol details of DNS Stateful
Operations including definitions of three TLVs for session management and 
encryption padding. <xref target="lifecycle"/> presents a
detailed discussion of the DSO Session lifecycle including an
in-depth discussion of keepalive traffic and session termination.</t>

</section>
<section anchor="details" title="Protocol Details">

<section anchor="establishment" title="DSO Session Establishment">

<t>DSO messages MUST only be carried in protocols and in
environments where a session may be established according to the definition above.
Standard DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/>, and DNS over TLS <xref target="RFC7858"/>
are suitable protocols.</t>

<t>DNS over plain UDP <xref target="RFC0768"/> is not appropriate since it fails on the requirement for
in-order message delivery, and, in the presence of NAT gateways and firewalls
with short UDP timeouts, it fails to provide a persistent bi-directional
communication channel unless an excessive amount of keepalive traffic is used.</t>

<t>In some environments it may be known in advance by external means
that both client and server support DSO, and in these cases either
client or server may initiate DSO messages at any time.</t>

<t>However, in the typical case a server will not know in advance whether a
client supports DSO, so in general, unless it is known in advance by other means
that a client does support DSO, a server MUST NOT initiate DSO messages until
a DSO session has been mutually established, as described below.</t>

<t>A client MAY attempt to initiate DSO messages at any time
on a connection; receiving a NOTIMP response in reply indicates that the
server does not implement DSO, and the client SHOULD NOT
issue further DSO messages on that connection.</t>

<t>The DSO message format (see <xref target="tlvformat"/>) includes a bit in the TLV structure
that indicates whether or not a particular DSO request message from the
initiator requires a corresponding DSO response message from the responder.
A “DSO session” is established over a connection by the client
sending a DSO request message of a kind that has the acknowledgement bit set,
indicating that it is a request message of a kind that requires a response.</t>

<t>When the server receives a response-requiring DSO request message
from a client, and transmits its response, the server considers
the DSO session established.</t>

<t>When the client receives the server’s DSO response,
the client considers the DSO session established.</t>

<t>Apart from cases where it is known in advance by external means
that both client and server support DSO,
session establishment can only be performed by the client sending
a DSO request message of a kind that requires a response.</t>

<t>Currently the only suitable such messages are the 
DSO Keepalive Operation TLV (see <xref target="keepalive"/>) and the
DSO Encryption Padding TLV (see <xref target="padding"/>).</t>

<t>If future documents define other client-initiated
response-requiring DSO request messages, then one of these
messages may also be used to establish a DSO session.</t>

<t>Clients MAY send non-response-requiring DSO request messages at any time
on a connection, but a “DSO session” is only considered established after:</t>

<t><list style="symbols">
  <t>the client has sents its first response-requiring DSO request message, and</t>
  <t>(at the server) the server has received this request and transmited its response</t>
  <t>(at the client) the client has received the server’s response</t>
</list></t>

<t>Once a “DSO session” has been established,
either end may unilaterally send DSO messages at any time,
and therefore either client or server may be the initiator of a message.</t>

<t>Once a “DSO session” has been established,
clients and servers should behave as described in this specification with
regard to inactivity timeouts and connection close, not as prescribed in
the previous specification for DNS over TCP <xref target="RFC7766"/>.</t>

<section anchor="middle-box-considerations" title="Middle-box Considerations">

<t>Where an application-layer middle box (e.g., a DNS proxy, forwarder, or
session multiplexer) is in the path the middle box MUST NOT blindly
forward DSO messages in either direction, and MUST treat the inbound
and outbound connections as separate sessions.  This does not preclude
the use of DSO messages in the presence of an IP-layer middle box such
as a NAT that rewrites IP-layer and/or transport-layer headers, but
otherwise preserves the effect of a single session between the client
and the server.</t>

<t>To illustrate the above, consider a network where a middle box
terminates one or more TCP connections from clients and multiplexes the
queries therein over a single TCP connection to an upstream server.  The
DSO messages and any associated state are specific to the individual
TCP connections.  A DSO-aware middle box MAY in some circumstances be
able to retain associated state and pass it between the client and
server (or vice versa) but this would be highly TLV-specific.  For
example, the middle box may be able to maintain a list of which clients
have made Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/> and
make its own subscription(s) on their behalf, relaying any subsequent
notifications to the client (or clients) that have subscribed to that
particular notification.</t>

</section>
</section>
<section anchor="format" title="Message Format">

<t>A DSO message begins with
the standard twelve-octet DNS message header <xref target="RFC1035"/>
with the OPCODE field set to the DSO OPCODE (tentatively 6).
However, unlike standard DNS messages, the question section, answer section,
authority records section and additional records sections are not present.
The corresponding count fields (QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) MUST be
set to zero on transmission.</t>

<t>If a DSO message is received where any of the count fields are
not zero, then a FORMERR MUST be returned,
unless a future document specifies otherwise.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                          MESSAGE ID                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |QR |    OPCODE     |            Z              |     RCODE     |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     QDCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ANCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     NSCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ARCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                           DSO Data                            /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<section anchor="header" title="Header">

<t>In a request the MESSAGE ID field MUST be set to a unique value, that the
initiator is not currently using for any other active operation on this 
connection.
For the purposes here, a MESSAGE ID is in use in this DSO session if the
initiator has used it in a request for which it has not yet received a
response, or if the client has used it to setup state that it has not yet
deleted. For example, state could be a subscription <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>In a response the MESSAGE ID field MUST contain a copy of the value of the
MESSAGE ID field in the request being responded to.</t>

<t>In a request the DNS Header QR bit MUST be zero (QR=0).
If the QR bit is not zero the message is not a request.</t>

<t>In a response the DNS Header QR bit MUST be one (QR=1).
If the QR bit is not one the message is not a response.</t>

<t>The DNS Header OPCODE field holds the DSO OPCODE value (tentatively 6).</t>

<t>The Z bits are currently unused in DSO messages,
and in both DSO requests and DSO responses the
Z bits MUST be set to zero (0) on transmission and MUST be silently ignored
on reception, unless a future document specifies otherwise.</t>

<t>In a request message (QR=0) the RCODE is generally set to zero on transmission,
and silently ignored on reception, except where specified otherwise
(for example, the Retry Delay operation (see <xref target="delay"/>), where the RCODE indicates the reason
for termination).</t>

<t>The RCODE value in a response may be one of the following values:</t>

<texttable>
      <ttcol align='right'>Code</ttcol>
      <ttcol align='left'>Mnemonic</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>0</c>
      <c>NOERROR</c>
      <c>Operation processed successfully</c>
      <c>1</c>
      <c>FORMERR</c>
      <c>Format error</c>
      <c>2</c>
      <c>SERVFAIL</c>
      <c>Server failed to process request due to a problem with the server</c>
      <c>3</c>
      <c>NXDOMAIN</c>
      <c>Name Error — Named entity does not exist (TLV-dependent)</c>
      <c>4</c>
      <c>NOTIMP</c>
      <c>DSO not supported</c>
      <c>5</c>
      <c>REFUSED</c>
      <c>Operation declined for policy reasons</c>
      <c>9</c>
      <c>NOTAUTH</c>
      <c>Not Authoritative (TLV dependent)</c>
      <c>11</c>
      <c>DSONOTIMP</c>
      <c>DSO type code not supported</c>
</texttable>

<t>Use of the above RCODEs is likely to be common in DSO but 
does not preclude the definition and use of other codes in future documents that 
make use of DSO.</t>

<t>If a document describing a DSO makes use of either NXDOMAIN (Name Error)
or NOTAUTH then that document MUST explain the meaning.</t>

</section>
<section anchor="dsodata" title="DSO Data">

<t>The standard twelve-octet DNS message header is followed by the DSO Data.</t>

<t>The first TLV in a DSO request message is called the Operation 
TLV. Any subsequent TLVs after this initial Operation TLV are called Modifier TLVs.</t>

<t>Depending on the operation a DSO response can contain:</t>

<t><list style="symbols">
  <t>No TLVs</t>
  <t>Only an Operation TLV</t>
  <t>An Operation TLV followed by one or more Modifier TLVs</t>
  <t>Only Modifier TLVs</t>
</list></t>

<section anchor="tlvformat" title="TLV Format">

<t>Operation and modifier TLVs both use the same encoding format.</t>

<t>Operation TLVs SHOULD normally require a response and, therefore, set the TLV
Acknowledgement bit in a request. However, for some Operation TLVs, this may be
undesirable and the TLV Acknowledgement bit MAY be cleared in the request. Each
Operation TLV definition should stipulate whether an acknowledgement is
REQUIRED. If the TLV Acknowledgement bit is cleared in a request, a response
MUST NOT be sent. Modifier TLVs MUST NEVER set the Acknowledgement bit. The
Acknowledgement bit is NEVER set in the response to an Operation TLV.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   | A |                        DSO-TYPE                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                        DSO DATA LENGTH                        |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                      TYPE-DEPENDENT DATA                      /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='A:'>
  A 1-bit TLV Response flag indicating whether or not an Operation TLV requires
a response Acknowledgement.</t>
  <t hangText='DSO-TYPE:'>
  A 15-bit field in network order giving the type of the current DSO TLV per
the IANA DSO Type Codes Registry.</t>
  <t hangText='DSO DATA LENGTH:'>
  A 16-bit field in network order giving the size in octets of
the TYPE-DEPENDENT DATA.</t>
  <t hangText='TYPE-DEPENDENT DATA:'>
  Type-code specific format.</t>
</list></t>

<t>Where domain names appear within TYPE-DEPENDENT DATA, they MAY be compressed 
using standard DNS name compression. However, the compression MUST NOT point
outside of the TYPE-DEPENDENT DATA section and offsets MUST be from the start
of the TYPE-DEPENDENT DATA.</t>

</section>
<section anchor="operation-tlvs" title="Operation TLVs">

<t>An “Operation TLV” specifies the operation to be performed.</t>

<t>A DSO message MUST contain at most one Operation TLV.</t>

<t>In all cases a DSO request message MUST contain exactly one 
Operation TLV, indicating the operation to be performed.</t>

<t>Depending on the operation, a DSO response message MAY contain no 
Operation TLV, because it is simply a response to a previous request message,
and the MESSAGE ID in the header is sufficient to identify the request in 
question. Or it may contain a single corresponding response Operation TLV, with 
the same DSO-TYPE as in the request message. The specification for each DSO
type determines whether a response for that operation type 
is required to carry the Operation TLV.</t>

<t>If a DSO response is received for an operation which requires
that the response carry an Operation TLV, and the required Operation TLV is not
the first DSO TLV in the response message, then this is a fatal 
error and the recipient of the defective response message MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
<section anchor="modifier-tlvs" title="Modifier TLVs">

<t>A “Modifier TLV” specifies additional parameters
relating to the operation. Immediately following the Operation TLV, if present,
a DSO message MAY contain one or more Modifier TLVs.</t>

</section>
<section anchor="unrecognized-tlvs" title="Unrecognized TLVs">

<t>If a DSO request is received containing an unrecognized
Operation TLV, the receiver MUST send a response with matching
MESSAGE ID, and RCODE DSONOTIMP (tentatively 11). The response MUST NOT contain 
an Operation TLV.</t>

<t>If a DSO message (request or response) is received
containing one or more unrecognized Modifier TLVs, the unrecognized
Modifier TLVs MUST be silently ignored, and the remainder of the message
is interpreted and handled as if the unrecognized parts were not present.</t>

</section>
</section>
<section anchor="edns0-and-tsig" title="EDNS(0) and TSIG">

<t>Since the ARCOUNT field MUST be zero, a DSO message
MUST NOT contain an EDNS(0) option in the additional records section.
If functionality provided by current or future EDNS(0) options is desired
for DSO messages, an Operation TLV or
Modifier TLV needs to be defined to carry the necessary information.</t>

<t>For example, the EDNS(0) Padding Option <xref target="RFC7830"/> used for security purposes
is not permitted in a DSO message,
so if message padding is desired for DSO messages
then the Encryption Padding TLV described in <xref target="padding"/> MUST be used.</t>

<t>Similarly, a DSO message MUST NOT contain a TSIG record.
A TSIG record in a conventional DNS message is added as the last record
in the additional records section, and carries a signature computed over
the preceding message content. Since DSO data appears
after the additional records section, it would not be included in the
signature calculation. 
If use of signatures with DSO messages becomes necessary in the 
future, an explicit Modifier TLV needs to be defined to 
perform this function.</t>

<t>Note however that, while DSO <spanx style="emph">messages</spanx> cannot include
EDNS(0) or TSIG records, a DSO <spanx style="emph">session</spanx> is typically used to 
carry a whole series of DNS messages of different kinds, including DSO
messages, and other DNS message types like Query <xref target="RFC1034"/> 
<xref target="RFC1035"/> and Update <xref target="RFC2136"/>, and those messages can carry EDNS(0) and 
TSIG records.</t>

<t>This specification explicitly prohibits use of the
EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>
in <spanx style="emph">any</spanx> messages sent on a DSO session (because it duplicates
the functionality provided by the DSO Keepalive operation),
but messages may contain other EDNS(0) options as appropriate.</t>

</section>
</section>
<section anchor="message-handling" title="Message Handling">

<t>The initiator MUST set the value of the QR bit in the DNS header to
zero (0), and the responder MUST set it to one (1).
Every DSO request message (QR=0) with the Acknowledgement bit set in the
operation TLV MUST elicit a response (QR=1), which MUST have the same
MESSAGE ID in the DNS message header as in the corresponding request.
DSO request messages sent by the client with the Acknowledgement
bit set in the operation TLV elicit a response from the server, and
DSO request messages sent by the server with the Acknowledgement
bit set in the operation TLV elicit a response from the client.</t>

<t>With most TCP implementations, the TCP data acknowledgement (generated because 
data has been received by TCP), the TCP window update (generated because TCP has 
delivered that data to the receiving software) and the DSO 
response (generated by the receiving software itself)
are all combined into a single packet, so in practice the requirement that every
DSO request message MUST elicit a 
DSO response incurs minimal extra cost on the network.
Requiring that every request elicit a corresponding response also avoids
performance problems caused by interaction between
Nagle’s Algorithm and Delayed Ack <xref target="NagleDA"/>.</t>

<t>The namespaces of 16-bit MESSAGE IDs are disjoint in each direction.
For example, it is <spanx style="emph">not</spanx> an error for both client and server to send a request
message with the same ID. In effect, the 16-bit MESSAGE ID combined with the 
identity of the initiator (client or server) serves as a 17-bit unique 
identifier for a particular operation on a DSO session.</t>

<t>As described in <xref target="header"/> An initiator MUST NOT reuse a MESSAGE ID that is 
already in use for an 
outstanding request, unless specified otherwise by the relevant specification 
for the DSO in question. At the very least, this means 
that a MESSAGE ID MUST NOT be reused in a particular direction
on a particular DSO session while the initiator is waiting for a response to a 
previous request using that MESSAGE ID on that DSO session,
unless specified otherwise by the relevant 
specification for the DSO in question.
(For a long-lived state the MESSAGE ID for the operation
MUST NOT be reused whilst that state remains active.)</t>

<t>If a client or server receives a response (QR=1) where the MESSAGE ID does not
match any of its outstanding operations, this is a fatal error and it MUST 
immediately terminate the connection with a TCP RST (or equivalent for other 
protocols).</t>

</section>
</section>
<section anchor="lifecycle" title="DSO Session Lifecycle and Timers">

<section anchor="dso-session-initiation" title="DSO Session Initiation">

<t>A session begins when a client makes a new connection to a server.</t>

<t>A DSO session begin as described in <xref target="establishment"/>.</t>

<t>The client may perform as many DNS operations as it wishes using the
newly created DSO session. Operations SHOULD be pipelined (i.e., the
client doesn’t need wait for a response before sending the next message).
The server MUST act on messages in the order they are transmitted, but
responses to those messages MAY be sent out of order, if appropriate.</t>

</section>
<section anchor="sessiontimeouts" title="DSO Session Timeouts">

<t>Two timeout values are associated with a DSO session: the inactivity timeout, and 
the keepalive interval.</t>

<t>The first timeout value, the inactivity timeout, is the maximum time for which
a client may speculatively keep a DSO session open in the expectation that
it may have future requests to send to that server.</t>

<t>The second timeout value, the keepalive interval, is the maximum permitted
interval between client messages to the server if the client wishes to keep
the DSO session alive.</t>

<t>The two timeout values are independent. The inactivity timeout may be lower, the 
same, or higher than the keepalive interval, though in most cases the inactivity 
timeout is expected to be shorter than the keepalive interval.</t>

<t>Only when the client has a very long-lived low-traffic state does the 
keepalive interval come into play, to ensure that a sufficient residual
amount of traffic is generated to maintain NAT and firewall state
and to assure client and server that they still have connectivity to each other.</t>

<t>On a new DSO session, if no explicit DSO Keepalive message exchange has taken 
place, the default value for both timeouts is 15 seconds.
For both timeouts, lower values of the timeout result in higher network traffic
and higher CPU load on the server.</t>

</section>
<section anchor="inactivetimer" title="Inactive DSO Sessions">

<t>At both servers and clients, the generation or reception of any complete
DNS message, including DNS requests, responses, updates, or DSO
messages, resets both timers for that DSO session, with the exception
that a DSO Keepalive message resets only the keepalive timer, not the inactivity 
timeout timer.</t>

<t>In addition, for as long as the client has an outstanding operation in progress,
the inactivity timer remains cleared, and an inactivity 
timeout cannot occur.</t>

<t>For short-lived DNS operations like traditional queries and updates,
an operation is considered in progress for the time between request and 
response, typically a period of a few hundred milliseconds at most.
At the client, the inactivity timer is cleared upon transmission of a 
request and remains cleared until reception of the corresponding response.
At the server, the inactivity timer is cleared upon reception of a request
and remains cleared until transmission of the corresponding response.</t>

<t>For long-lived DNS Stateful operations, an operation is considered in progress
for as long as the state is active, until it is cancelled.
This means that a DSO session can exist, with a state 
active, with no messages flowing in either direction, for far longer than the 
inactivity timeout, and this is not an error. This is why there are two separate 
timers: the inactivity timeout, and the keepalive interval. Just because a DSO 
session has no traffic for an extended period of time
does not automatically make that DSO session “inactive”,
if it has an active state that is awaiting events.</t>

</section>
<section anchor="the-inactivity-timeout" title="The Inactivity Timeout">

<t>The purpose of the inactivity timeout is for the server to balance its trade off 
between the costs of setting up new DSO sessions and the costs of maintaining inactive 
DSO sessions. A server with abundant DSO session capacity can offer a high inactivity timeout, 
to permit clients to keep a speculative DSO session open for a long time, to save 
the cost of establishing a new DSO session for future communications with that 
server. A server with scarce memory resources can offer a low inactivity timeout,
to cause clients to promptly close DSO sessions whenever they have no outstanding
operations with that server, and then create a new DSO session later when needed.</t>

<section anchor="closing-inactive-dso-sessions" title="Closing Inactive DSO Sessions">

<t>A client is NOT required to wait until the inactivity timeout expires
before closing a DSO session.
A client MAY close a DSO session at any time, at the client’s discretion.
If a client determines that it has no current or reasonably anticipated
future need for an inactive DSO session, then the client SHOULD close that connection.</t>

<t>If, at any time during the life of the DSO session,
the inactivity timeout value (i.e., 15 seconds by default) elapses
without there being any operation active on the DSO session,
the client MUST gracefully close the connection with a
TLS close_notify followed by a TCP FIN (or equivalent for other protocols).</t>

<t>If, at any time during the life of the DSO session, twice the inactivity timeout value
(i.e., 30 seconds by default) elapses without there being any operation
active on the DSO session, the server SHOULD consider the client delinquent,
and forcibly abort the DSO session.
For DSO sessions over TCP (or over TLS over TCP),
to avoid the burden of having a connection in TIME-WAIT state, instead of
closing the connection gracefully the server SHOULD abort
the connection with a TCP RST (or equivalent for other protocols).
(In the BSD Sockets API this is achieved by setting the
SO_LINGER option to zero before closing the socket.)</t>

<t>In this context, an operation being active on a DSO session includes
a query waiting for a response, an update waiting for a response,
or active state,
but not a DSO Keepalive message exchange itself.
A DSO Keepalive message exchange resets only the keepalive
interval timer, not the inactivity timeout timer.</t>

<t>If the client wishes to keep an inactive DSO session open for longer than
the default duration without having to send traffic every 15 seconds,
then it uses the DSO Keepalive message to request
longer timeout values, as described in <xref target="keepalive"/>.</t>

</section>
<section anchor="values-for-the-inactivity-timeout" title="Values for the Inactivity Timeout">

<t>For the inactivity timeout value, lower values result in more frequent DSO session 
teardown and re-establishment. Higher values result in lower traffic and CPU
load on the server, but a larger memory burden to maintain state for inactive 
DSO sessions.</t>

<t>A shorter inactivity timeout with a longer keepalive interval signals to the client 
that it should not speculatively keep inactive DSO sessions open for very long without
reason, but when it does have an active reason to keep a DSO session open, it 
doesn’t need to be sending an aggressive level of keepalive traffic.</t>

<t>A longer inactivity timeout with a shorter keepalive interval signals to the client
that it may speculatively keep inactive DSO sessions open for a long time, but it
should be sending a lot of keepalive traffic on those inactive DSO sessions.
This configuration is expected to be less common.</t>

<t>To avoid repeated teardown and re-establishment of sessions,
the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with an inactivity timeout value less than ten seconds.
If a client receives a Keepalive message specifying an inactivity timeout value
less than ten seconds this is an error and the client MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

<t>This does not mean that a client is forced to keep an idle connection open for
ten seconds if it doesn’t need that — a client is free to close an idle connection whenever it chooses —
it means that servers cannot <spanx style="emph">require</spanx> a client to close an idle connection in under ten seconds.</t>

<t>[Do we really want this restriction? How soon does the client reconnect after tearing down the connection? –SC]</t>

</section>
</section>
<section anchor="keepalivetimer" title="The Keepalive Interval">

<t>The purpose of the keepalive interval is to manage the generation of
sufficient messages to maintain state in middle boxes (such at NAT gateways
or firewalls) and for the client and server to periodically verify that they
still have connectivity to each other. This allows them to clean up state
when connectivity is lost, and attempt re-connection if appropriate.</t>

<section anchor="keepalive-interval-expiry" title="Keepalive Interval Expiry">

<t>If, at any time during the life of the DSO session,
the keepalive interval value (i.e., 15 seconds by default) elapses
without any DNS messages being sent or received on a DSO session,
the client MUST take action to keep the DSO session alive,
by sending a DSO Keepalive message (see <xref target="keepalive"/>).
A DSO Keepalive message exchange resets only the keepalive timer, 
not the inactivity timer.</t>

<t>If a client disconnects from the network abruptly,
without cleanly closing its DSO session,
leaving long-lived state uncanceled,
the server learns of this after failing to
receive the required keepalive traffic from that client.
If, at any time during the life of the DSO session,
twice the keepalive interval value (i.e., 30 seconds by default) elapses
without any DNS messages being sent or received on a DSO session,
the server SHOULD consider the client delinquent,
and forcibly abort the connection with a TCP RST (or equivalent for other 
protocols).</t>

</section>
<section anchor="values-for-the-keepalive-interval" title="Values for the Keepalive Interval">

<t>For the keepalive interval value, lower values result in higher volume keepalive 
traffic. Higher values of the keepalive interval reduce traffic and CPU load, 
but have minimal effect on the memory burden
at the server, because clients keep a DSO session open for the same length of time
(determined by the inactivity timeout) regardless of the level of keepalive traffic 
required.</t>

<t>It may be appropriate for clients and servers to select different keepalive 
interval values depending on the nature of the network they are on.</t>

<t>A corporate DNS server that knows it is serving only clients on the internal 
network, with no intervening NAT gateways or firewalls, can impose a higher 
keepalive interval, because frequent keepalive traffic is not required.</t>

<t>A public DNS server that is serving primarily residential consumer clients, 
where it is likely there will be a NAT gateway on the path, may impose a lower 
keepalive interval, to generate more frequent keepalive traffic.</t>

<t>A smart client may be adaptive to its environment. A client using
a private IPv4 address <xref target="RFC1918"/> to communicate with a DNS server
at an address outside that IPv4 private address block,
may conclude that there is likely to be a NAT gateway on the path,
and accordingly request a lower keepalive interval.</t>

<t>For environments where there is a NAT gateway or firewalls on the path, it is
RECOMMENDED that clients request, and servers grant, a keepalive interval of 15
minutes. In other environments it is RECOMMENDED that clients request, and 
servers grant, a keepalive interval of 60 minutes.</t>

<t>Note that the lower the keepalive interval value, the higher the load on client
and server. For example, an keepalive interval value of 100ms would result in a
continuous stream of at least ten messages per second, in both directions,
to keep the DSO session alive. And, in this extreme example, a single packet loss and
retransmission over a long path could introduce a momentary pause in the stream of messages,
long enough to cause the server to overzealously abort the connection.</t>

<t>Because of this concern, the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with an keepalive interval value less than ten seconds.
If a client receives an Keepalive message specifying an keepalive interval value
less than ten seconds this is an error and the client MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="server-initiated-termination-on-error" title="Server-Initiated Termination on Error">

<t>After sending an error response to a client, the server MAY close the DSO session,
or may allow the DSO session to remain open. For error conditions
that only affect the single operation in question, the server SHOULD return an
error response to the client and leave the DSO session open for further operations.
For error conditions that are likely to make all operations unsuccessful in the
immediate future, the server SHOULD return an error response to the client and 
then close the DSO session by sending a Retry Delay request message, as described in 
<xref target="delay"/>.</t>

</section>
<section anchor="error" title="Client Behaviour in Receiving an Error">

<t>Upon receiving an error response from the server, a client SHOULD NOT
automatically close the DSO session. An error relating to one particular operation
on a DSO session does not necessarily imply that all other operations on that
DSO session have also failed, or that future operations will fail. The client
should assume that the server will make its own decision about whether or not to
close the DSO session, based on the server’s determination of whether the error
condition pertains to this particular operation, or would also apply to any
subsequent operations. If the server does not close the DSO session then the client
SHOULD continue to use that DSO session for subsequent operations.</t>

</section>
<section anchor="server-initiated-termination-on-overload" title="Server-Initiated Termination on Overload">

<t>A server MUST NOT close a DSO session with a client,
except in certain exceptional circumstances, as outlined below.
In normal operation, closing a DSO session is the client’s responsibility.
The client makes the determination of when to close a DSO
session based on an evaluation of both its own needs,
and the inactivity timeout value dictated by the server.</t>

<t>Situations where a server may terminate a DSO session include:</t>

<t><list style="symbols">
  <t>The server is undergoing reconfiguration or maintenance procedures
that require clients to be disconnected.</t>
  <t>The server application software or underlying operating system
is shutting down or restarting.</t>
  <t>The server application software terminates unexpectedly
(perhaps due to a bug that makes it crash).</t>
  <t>The client fails to meets its obligation to generate keepalive
traffic or close an inactive session within twice the respective
time intervals dictated by the server (see <xref target="sessiontimeouts"/>).</t>
  <t>The client sends a grossly invalid or malformed request that is
indicative of a seriously defective client implementation (see <xref target="error"/>).</t>
  <t>The server is over capacity and needs to shed some load (see <xref target="retry"/>).</t>
</list></t>

<t>When a server has to close a DSO session with a client
(because of exceptional circumstances such as those outlined above)
the server SHOULD, whenever possible, send a Retry Delay Operation TLV
(see below) informing the client of the reason for the DSO session
being closed, and allow the client five seconds to receive it
before the server resorts to forcibly aborting the connection.</t>

</section>
<section anchor="retry" title="Retry Delay Operation TLV">

<t>There may be rare cases where a server is overloaded and wishes to shed load.
If a server is low on resources it MAY simply terminate a client connection with 
a TCP RST (or equivalent for other protocols).
However, the likely behavior of the client may be simply to to treat this as a
network failure and connect
immediately, putting more burden on the server.</t>

<t>Therefore to avoid this reconnection implosion, a server SHOULD instead choose 
to shed client load by sending a Retry Delay request message, with an RCODE of 
SERVFAIL, to inform the client of the overload situation. After sending a Retry 
Delay request message, the server MUST NOT send any further messages on that 
DSO session.</t>

<t>After sending the Retry Delay request the server SHOULD allow the
client five seconds to close the connection, and if the client has not
closed the connection after five seconds then the server SHOULD abort
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>Upon receipt of a Retry Delay request from the server, the client MUST
make note of the reconnect delay for this server, and then immediately
close the connection. This is to place the burden of TCP’s TIME-WAIT state on 
the client.</t>

<t>A Retry Delay request message MUST NOT be initiated by a client.
If a server receives a Retry Delay request message this is an error
and the server MUST immediately terminate the connection with a TCP RST
(or equivalent for other protocols).</t>

<section anchor="outstanding-operations" title="Outstanding Operations">

<t>At the moment a server chooses to initiate a Retry Delay request message
there may be DNS requests already in flight from client to server on this 
DSO session, which will arrive at the server after its Retry Delay request message 
has been sent.
The server MUST silently ignore such incoming requests, and MUST NOT generate
any response messages for them. When the Retry Delay request message from the
server arrives at the client, the client will determine that any DNS requests
it previously sent on this DSO session, that have not yet received a response, now 
will certainly not be receiving any response. Such requests should be considered
failed, and should be retried at a later time, as appropriate.</t>

<t>In the case where some, but not all, of the existing operations on a DSO session 
have become invalid (perhaps because the server has been reconfigured and is no 
longer authoritative for some of the names),
but the server is terminating all DSO sessions en masse with a REFUSED (5) RCODE,
the RECONNECT DELAY MAY be zero, indicating that the clients SHOULD immediately
attempt to re-establish operations.
It is likely that some of the attempts will be successful and some will not.</t>

<t>In the case where a server is terminating a large number of DSO sessions at once
(e.g., if the system is restarting) and the server doesn’t want to be inundated 
with a flood of simultaneous retries, it SHOULD send different RECONNECT delay 
values to each client.
These adjustments MAY be selected randomly, pseudorandomly, or deterministically
(e.g., incrementing the time value by one tenth of a second for each successive
client, yielding a post-restart reconnection rate of ten clients per second).</t>

</section>
<section anchor="client-reconnection" title="Client Reconnection">

<t>After a DSO session is closed by the server, the client SHOULD try to reconnect,
to that server, or to another suitable server, if more than one is available.
If reconnecting to the same server, the client MUST respect the indicated delay
before attempting to reconnect.</t>

<t>If a particular server does not want a client to reconnect (it is being
de-commissioned), it SHOULD set the retry delay to the maximum value (which is
approximately 497 days). If the server will only be out of service for a maintenance
period, it should use a value closer to the expected maintenance window and
not default to a very large delay value or clients may not attempt to reconnect
after it resumes service.</t>

</section>
</section>
</section>
<section anchor="sharing" title="Connection Sharing">

<t>As previously specified for DNS over TCP <xref target="RFC7766"/>,
to mitigate the risk of unintentional server overload, DNS clients
MUST take care to minimize the number of concurrent TCP connections
made to any individual server.  It is RECOMMENDED that for any given
client/server interaction there SHOULD be no more than one connection
for regular queries, one for zone transfers, and one for each
protocol that is being used on top of TCP (for example, if the
resolver was using TLS).
However, it is noted that certain primary/secondary configurations
with many busy zones might need to use more than one TCP
connection for zone transfers for operational reasons
(for example, to support concurrent transfers of multiple zones).</t>

<t>A single server may support multiple services, including DNS Updates 
<xref target="RFC2136"/>, DNS Push Notifications <xref target="I-D.ietf-dnssd-push"/>,
and other services, for one or more DNS zones.
When a client discovers that the target server for several different operations
is the same target hostname and port, the client SHOULD use a single
shared DSO session for all those operations.
A client SHOULD NOT open multiple connections to the same target host and port
just because the names being operated on are different or
happen to fall within different zones.
This is to reduce unnecessary connection load on the DNS server.</t>

<t>However, server implementers and operators should be aware that connection
sharing may not be possible in all cases.
A single client device may be home to multiple independent client software
instances that don’t coordinate with each other.
Similarly, multiple independent client devices behind the same NAT gateway
will also typically appear to the DNS server as different source ports on
the same client IP address.
Because of these constraints, a DNS server MUST be prepared to accept
multiple connections from different source ports on the same client IP address.</t>

</section>
<section anchor="base-tlvs-for-dns-stateful-operations" title="Base TLVs for DNS Stateful Operations">

<section anchor="delay" title="Retry Delay TLV">

<t>The Retry Delay TLV (DSO-TYPE=0) can be used as an Operation TLV or as
a Modifier TLV.</t>

<t>The TYPE-DEPENDENT DATA for the the Retry Delay TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     RETRY DELAY (32 bits)                     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='RETRY DELAY:'>
  a time value, specified as a 32-bit word in network order in units of 
milliseconds, within which the client MUST NOT retry this operation, or retry 
connecting to this server.</t>
</list></t>

<t>The RECOMMENDED value is 10 seconds.</t>

<section anchor="use-as-an-operation-tlv" title="Use as an Operation TLV">

<t>When sent in a DSO request message, from server to client, the 
Retry Delay TLV (0) is considered an Operation TLV. It is used by a server 
to request that a client close the DSO session and underlying connection, and 
not to reconnect for the indicated time interval.</t>

<t>In this case it applies to the DSO session as a whole, and the client MUST close the 
DSO session, as described in <xref target="retry"/>. The RCODE in the message header 
MUST indicate the reason for the termination:</t>

<t><list style="symbols">
  <t>NOERROR indicates a routine shutdown.</t>
  <t>SERVFAIL indicates that the server is overloaded due to resource exhaustion.</t>
  <t>REFUSED indicates that the server has been reconfigured and is no longer able 
to perform one or more of the functions 
currently being performed on this DSO session (for example, a DNS Push Notification 
server could be reconfigured such that is is no longer accepting DNS Push 
Notification requests for one or more of the currently subscribed names).</t>
</list></t>

<t>This document specifies only these three RCODE values for Retry Delay request.
Servers sending Retry Delay requests SHOULD use one of these three values.
However, future circumstances may create situations where other RCODE values
are appropriate in Retry Delay requests, so clients MUST be prepared
to accept Retry Delay requests with any RCODE value.</t>

<t>An acknowledgement is not desired for a Retry Delay Operation TLV and the TLV
Acknowledgement bit MUST be cleared in the request.</t>

</section>
<section anchor="use-as-a-modifier-tlv" title="Use as a Modifier TLV">

<t>When appended to a DSO response message for some client request,
the Retry Delay TLV (0) is considered a Modifier TLV.
The indicated time interval during which the client SHOULD NOT retry
applies only to the failed operation, not to the DSO session as a whole.</t>

<t>In the case of a client request that returns a nonzero RCODE value, the server 
MAY append a Retry Delay TLV (0) to the response, indicating the time interval
during which the client SHOULD NOT attempt this operation again.</t>

</section>
</section>
<section anchor="keepalive" title="Keepalive Operation TLV">

<t>The Keepalive Operation TLV (DSO-TYPE=1) performs two functions: to reset the
keepalive timer for the DSO session and to establish the values for the Session Timeouts.</t>

<t>The Keepalive Operation TLV resets only the keepalive timer, not the inactivity timer.
The reason for this is that periodic Keepalive Operation TLVs are sent for the
sole purpose of keeping a DSO session alive, because that DSO session has current
or recent non-maintenance activity that warrants keeping the DSO session alive.
If sending keepalive traffic itself were to reset the inactivity timer, then 
that would create a circular livelock where keepalive traffic would be sent 
indefinitely to keep a DSO session alive, where the only activity on that DSO 
session would be the keepalive traffic keeping the DSO session alive so that further 
keepalive traffic can be sent.</t>

<t>Sending keepalive traffic is considered a maintenance activity
that is performed in service of other client activities.
Sending keepalive traffic itself is not considered a client activity.
For a DSO session to be considered active, it must be carrying something more than just keepalive traffic.
This is why merely sending a Keepalive Operation TLV does not reset the inactivity timer.</t>

<t>When sent by a client, the Keepalive Operation TLV MUST have the Acknowledgement bit set.
It resets a DSO session’s keepalive timer, and at the same time requests what the
Session Timeout values should be from this point forward in the DSO session.
If a server receives a Keepalive Operation TLV without the Acknowledgement bit set
then this is a fatal error and the server MUST immediately terminate
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>Once a DSO session is in progress (see <xref target="details"/>) the Keepalive TLV also MAY be initiated by a server.
When sent by a server, the Keepalive Operation TLV MUST NOT have the Acknowledgement bit set.
It resets a DSO session’s keepalive timer, and unilaterally informs the client of
the new Session Timeout values to use from this point forward in this DSO session.
No client response to this unilateral declaration is required.
If a client receives a Keepalive Operation TLV with the Acknowledgement bit set
then this is a fatal error and the client MUST immediately terminate
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>It is not required that the Keepalive TLV be used in every DSO session.
While many DNS Stateful operations
will be used in conjunction with a long-lived session state,
not all DNS Stateful operations require long-lived session state,
and in some cases the default 15-second value for both the inactivity timeout
and keepalive interval may be perfectly appropriate. However, it can be noted 
that for clients that implement only the TLVs defined in this document it is
the only way for a client to initiate a DSO session.</t>

<t>The TYPE-DEPENDENT DATA for the the Keepalive TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 INACTIVITY TIMEOUT (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 KEEPALIVE INTERVAL (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='INACTIVITY TIMEOUT:'>
  the inactivity timeout for the current DSO session, specified as a
32-bit word in network (big endian) order in units of milliseconds.
This is the timeout at which the client MUST close an inactive DSO session.
If the client does not gracefully close an inactive DSO session,
then after twice this interval the server will forcibly terminate
the connection with a TCP RST (or equivalent for other protocols).</t>
  <t hangText='KEEPALIVE INTERVAL:'>
  the keepalive interval for the current DSO session, specified as a
32-bit word in network (big endian) order in units of milliseconds.
This is the interval at which a client MUST generate keepalive
traffic to maintain connection state.
If the client does not generate the necessary keepalive traffic,
then after twice this interval the server will forcibly terminate
the connection with a TCP RST (or equivalent for other protocols).</t>
</list></t>

<t>In a client-initiated DSO Keepalive message,
the Session Timeouts contain the client’s requested values.
In a server response to a client-initiated message, the Session Timeouts contain 
the server’s chosen values, which the client MUST respect.
This is modeled after the DHCP protocol, where the client
requests a certain lease lifetime using DHCP option 51 <xref target="RFC2132"/>,
but the server is the ultimate authority
for deciding what lease lifetime is actually granted.</t>

<t>In a server-initiated DSO Keepalive message, the Session Timeouts
unilaterally inform the client of the new values from this point
forward in this DSO session. The client MUST NOT generate a
response to the server-initiated DSO Keepalive message.</t>

<t>When a client is sending its second and subsequent Keepalive DSO 
requests to the server, the client SHOULD continue to request its preferred 
values each time. This allows flexibility, so that if conditions change during 
the lifetime of a DSO session, the server can adapt its responses to better fit 
the client’s needs.</t>

<section anchor="client-handling-of-received-session-timeout-values" title="Client handling of received Session Timeout values">

<t>When a client receives a response to its client-initiated DSO Keepalive message,
or receives a server-initiated DSO Keepalive message, the client has then 
received Session Timeout values dictated by the server. The two timeout values 
contained in the DSO Keepalive TLV from the server may each be higher, lower, or 
the same as the respective Session Timeout values the client previously had for 
this DSO session.</t>

<t>In the case of the keepalive timer, the handling of the received value is 
straightforward. The act of receiving the message containing the DSO Keepalive 
TLV itself resets the keepalive timer and updates the keepalive interval for the 
DSO session. The new keepalive interval indicates the 
maximum time that may elapse before another message must be sent
or received on this DSO session, if the DSO session is to remain alive.</t>

<t>In the case of the inactivity timeout, the handling of the received value 
is a little more subtle, though the meaning of the inactivity 
timeout is unchanged – it still indicates the maximum permissible time allowed 
without activity on a DSO session.
The act of receiving the message containing the DSO Keepalive TLV does not
itself reset the inactivity timer. The time elapsed since the last useful
activity on this DSO session is unaffected by exchange of DSO Keepalive messages.
The act of receiving the message containing the DSO Keepalive TLV does update 
the timeout associated with the running inactivity timer; that
becomes the new maximum permissible time without activity on a DSO session.</t>

<t><list style="symbols">
  <t>If the current inactivity timer value is not greater than the new inactivity timeout, 
then the DSO session may remain open for now. When the inactivity timer value 
exceeds the new inactivity timeout, the client MUST then close the DSO session,
as described above.</t>
  <t>If the current inactivity timer value is already greater than the new inactivity 
timeout, then this DSO session has already been inactive
for longer than the server permits, and the client MUST immediately close this DSO session.</t>
  <t>If the current inactivity timer value is more than twice the new inactivity timeout, 
then this DSO session is eligible to be
forcibly terminated by the server and and the client MUST immediately close this 
DSO session. However if a server abruptly reduces the
inactivity timeout in this way the server SHOULD give the client a grace period
of one quarter of the new inactivity timeout, to give the client time to close
the connection gracefully before the server resorts to terminating it forcibly.</t>
</list></t>

</section>
<section anchor="relation-to-edns0-tcp-keepalive-option" title="Relation to EDNS(0) TCP Keepalive Option">

<t>The inactivity timeout value in the Keepalive TLV (DSO-TYPE=1) has similar
intent to the EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>.
A client/server pair that supports DSO MUST NOT use the
EDNS(0) TCP KeepAlive option within any message after a DSO 
session has been established.
Once a DSO session has been established, if either
client or server receives a DNS message over the DSO session that contains an
EDNS(0) TCP Keepalive option, this is an error and the receiver of the
EDNS(0) TCP Keepalive option MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="padding" title="Encryption Padding TLV">

<t>The Encryption Padding TLV (DSO-TYPE=2) can only be used as a Modifier TLV.
It is only applicable when the DSO Transport layer uses encryption
such as TLS.</t>

<t>The TYPE-DEPENDENT DATA for the the Padding TLV is optional and is a
variable length field containing non-specified values. A DATA LENGTH
of 0 essentially provides for 4 octets of padding (the minimum amount).</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   /                                                               /
   /                   VARIABLE NUMBER OF OCTETS                   /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t>As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
the PADDING octets SHOULD be set to 0x00.  Other values MAY be used,
for example, in cases where there is a concern that the padded
message could be subject to compression before encryption.
PADDING octets of any value MUST be accepted in the messages received.</t>

<t>The Encryption Padding TLV may be included in either a DSO request, response, or both.
As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
if a request is received with a Encryption Padding TLV,
then the response MUST also include an Encryption Padding TLV.</t>

<t>[Need discussion here of whether the Ack bit is set in requests, responses, or both –SC]</t>

<t>The length of padding is intentionally not specified in this document and
is a function of current best practices with respect to the type and length
of data in the preceding TLVs <xref target="I-D.ietf-dprive-padding-policy"/>.</t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="dso-opcode-registration" title="DSO OPCODE Registration">

<t>IANA are directed to assign a value (tentatively 6)
in the DNS OPCODEs Registry for the DSO OPCODE.</t>

</section>
<section anchor="dso-rcode-registration" title="DSO RCODE Registration">

<t>IANA are directed to assign a value (tentatively 11)
in the DNS RCODE Registry for the DSONOTIMP error code.</t>

</section>
<section anchor="dso-type-codes-registry" title="DSO Type Codes Registry">

<t>IANA are directed to create the 15-bit DSO Type Codes
Registry, with initial values as follows:</t>

<texttable>
      <ttcol align='right'>Type</ttcol>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Status</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>0x0000</c>
      <c>RetryDelay</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0001</c>
      <c>KeepAlive</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0002</c>
      <c>Encryption Padding</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0003 - 0x003F</c>
      <c>Unassigned, reserved for DSO session management TLVs</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x0040 - 0x77FF</c>
      <c>Unassigned</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x7800 - 0x7BFF</c>
      <c>Reserved for local / experimental use</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x7C00 - 0x7FFF</c>
      <c>Reserved for future expansion</c>
      <c>&#160;</c>
      <c>&#160;</c>
</texttable>

<t>Registration of additional DSO Type Codes requires publication
of an appropriate IETF “Standards Action” or “IESG Approval” document <xref target="RFC5226"/>.</t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>If this mechanism is to be used with DNS over TLS, then these messages
are subject to the same constraints as any other DNS over TLS messages
and MUST NOT be sent in the clear before the TLS session is established.</t>

<t>The data field of the “Encryption Padding” TLV could be used as a covert channel.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to
Tim Chown,
Ralph Droms,
Jan Komissar,
Manju Shankar Rao,
and Ted Lemon
for their helpful contributions to this document.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC1035;
&RFC7766;
&RFC6891;
&RFC7828;
&RFC2119;
&RFC7830;
&RFC1034;
&RFC2136;
&RFC1918;
&RFC2132;
&RFC5226;


    </references>

    <references title='Informative References'>

<reference anchor="NagleDA" target="http://www.stuartcheshire.org/papers/nagledelayedack/">
  <front>
    <title>TCP Performance problems caused by interaction between Nagle's Algorithm and Delayed ACK</title>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization></organization>
    </author>
    <date year="2005" month="May" day="20"/>
  </front>
</reference>
&RFC7858;
&RFC6763;
&I-D.ietf-dnssd-push;
&RFC0768;
&I-D.ietf-dprive-padding-policy;


    </references>



  </back>

<!-- ##markdown-source:
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
OJ28d/8X4WOl/cD4AAA=

-->

</rfc>

