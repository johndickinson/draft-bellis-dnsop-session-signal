<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.7 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC7766 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7766.xml">
<!ENTITY RFC6891 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6891.xml">
<!ENTITY RFC7828 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7828.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC7830 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7830.xml">
<!ENTITY RFC1034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC2136 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2136.xml">
<!ENTITY RFC1918 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1918.xml">
<!ENTITY RFC5382 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5382.xml">
<!ENTITY RFC2132 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2132.xml">
<!ENTITY RFC5226 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5226.xml">
<!ENTITY RFC7858 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7858.xml">
<!ENTITY RFC6763 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6763.xml">
<!ENTITY I-D.ietf-dnssd-push SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dnssd-push.xml">
<!ENTITY RFC0768 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.0768.xml">
<!ENTITY RFC7413 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7413.xml">
<!ENTITY I-D.ietf-tls-tls13 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-tls-tls13.xml">
<!ENTITY I-D.sctl-dnssd-mdns-relay SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.sctl-dnssd-mdns-relay.xml">
<!ENTITY RFC1122 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1122.xml">
<!ENTITY I-D.ietf-dprive-padding-policy SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dprive-padding-policy.xml">
]>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-dnsop-session-signal-05" category="std" updates="RFC 7766, RFC 1035">

  <front>
    <title>DNS Stateful Operations</title>

    <author initials="R." surname="Bellis" fullname="Ray Bellis">
      <organization abbrev="ISC">Internet Systems Consortium, Inc.</organization>
      <address>
        <postal>
          <street>950 Charter Street</street>
          <city>Redwood City</city>
          <code>CA 94063</code>
          <country>USA</country>
        </postal>
        <phone>+1 650 423 1200</phone>
        <email>ray@isc.org</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>1 Infinite Loop</street>
          <city>Cupertino</city>
          <code>CA 95014</code>
          <country>USA</country>
        </postal>
        <phone>+1 408 974 3207</phone>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="J." surname="Dickinson" fullname="John Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>jad@sinodun.com</email>
      </address>
    </author>
    <author initials="S." surname="Dickinson" fullname="Sara Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>sara@sinodun.com</email>
      </address>
    </author>
    <author initials="A." surname="Mankin" fullname="Allison Mankin">
      <organization>Salesforce</organization>
      <address>
        <email>allison.mankin@gmail.com</email>
      </address>
    </author>
    <author initials="T." surname="Pusateri" fullname="Tom Pusateri">
      <organization>Unaffiliated</organization>
      <address>
        <postal>
          <street></street>
          <city>Raleigh</city>
          <code>NC 27608</code>
          <country>USA</country>
        </postal>
        <phone>+1 919 867 1330</phone>
        <email>pusateri@bangj.com</email>
      </address>
    </author>

    <date year="2017" month="November" day="30"/>

    <area>Internet</area>
    <workgroup>DNSOP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document defines a new DNS OPCODE for DNS Stateful Operations (DSO).
DSO messages communicate operations within persistent
stateful sessions, using type-length-value (TLV) syntax.
Three TLVs are defined that manage session timeouts,
termination, and encryption padding, and 
a framework is defined for extensions to enable new stateful operations.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The use of transports for DNS other than UDP is being increasingly specified,
for example, DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> and DNS over TLS <xref target="RFC7858"/>.
Such transports can offer persistent, long-lived sessions and therefore when
using them for transporting DNS messages it is of benefit to have a mechanism
that can establish parameters associated with those sessions, such as timeouts.
In such situations it is also advantageous to support server initiated messages.</t>

<t>The existing EDNS(0) Extension Mechanism for DNS <xref target="RFC6891"/> is explicitly
defined to only have “per-message” semantics. Whilst EDNS(0) has been used to
signal at least one session-related parameter (the EDNS(0) TCP Keepalive option
<xref target="RFC7828"/>) the result is less than optimal due to the restrictions
imposed by the EDNS(0) semantics and the lack of server-initiated signalling. 
For example, a server cannot arbitrarily 
instruct a client to close a connection because the server can only send EDNS(0) options 
in responses to queries that contained EDNS(0) options.</t>

<t>This document defines a new DNS OPCODE, DSO (tentatively 6), for DNS Stateful Operations.
DSO messages are used to communicate operations within persistent
stateful sessions, expressed using type-length-value (TLV) syntax.
This document defines an initial set of three TLVs,
used to manage session timeouts, termination, and encryption padding.</t>

<t>All three of the TLVs defined here are mandatory for all implementations of DSO.
Further TLVs may be defined in additional specifications.</t>

<t>The format for DSO messages
(see <xref target="format"/>) differs somewhat from the traditional DNS message
format used for standard queries and responses.
The standard twelve-octet header is used, but the four count fields
(QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) are set to zero and accordingly their
corresponding sections are not present.
The actual data pertaining to DNS Stateful Operations
(expressed in TLV syntax) is appended to the end of the DNS message header.
When displayed using packet analyzer tools that have not been
updated to recognize the DSO format, this
will result in the DSO data being displayed
as unknown additional data after the end of the DNS message.
It is likely that future updates to these tools will add the ability
to recognize, decode, and display the DSO data.</t>

<t>This new format has distinct advantages over an RR-based format because it
is more explicit and more compact. Each TLV definition is specific
to its use case, and as a result contains no redundant or overloaded fields.
Importantly, it completely avoids conflating DNS Stateful Operations in any way 
with normal DNS operations or with existing EDNS(0)-based functionality.
A goal of this approach is to avoid the operational issues that have
befallen EDNS(0), particularly relating to middlebox behaviour.</t>

<t>With EDNS(0), multiple options may be packed into a single OPT pseudo-RR,
and there is no generalized mechanism for a client to be able to tell
whether a server has processed or otherwise acted upon each individual
option within the combined OPT RR.
The specifications for each individual option need to define how each
different option is to be acknowledged, if necessary.</t>

<t>In contrast to EDNS(0), with DSO there is no
compelling motivation to pack multiple operations into a single
message for efficiency reasons, because DSO
always operates using a connection-oriented transport protocol.
Each Stateful operation is communicated in its own separate
DNS message, and the transport protocol can take care of packing
separate DNS messages into a single IP packet if appropriate.
For example, TCP can pack multiple small DNS messages into a single TCP segment.
This simplification allows for clearer semantics.
Each DSO request message communicates just one primary operation,
and the RCODE in the corresponding response message indicates the
success or failure of that operation.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="terminology" title="Terminology">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and
“OPTIONAL” in this document are to be interpreted as described in
“Key words for use in RFCs to Indicate Requirement Levels” <xref target="RFC2119"/>.</t>

<t>“DSO” is used to mean DNS Stateful Operation.</t>

<t>The term “connection” means a bidirectional byte stream of reliable,
in-order messages, such as provided by using
DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> or DNS over TLS <xref target="RFC7858"/>.</t>

<t>The unqualified term “session” in the context of this document means the exchange of
DNS messages over a connection where:</t>

<t><list style="symbols">
  <t>The connection between client and server is persistent and relatively
long-lived (i.e., minutes or hours, rather than seconds).</t>
  <t>Either end of the connection may initiate messages to the other.</t>
</list></t>

<t>A “DSO Session” is established between two endpoints that
acknowledge persistent DNS state via the exchange of DSO messages
over the connection. This is distinct from a DNS-over-TCP session
as described in RC7766.</t>

<t>A “DSO Session” is terminated when the underlying connection is closed.
The underlying connection can be closed in two ways.</t>

<t>Where this specification says, “close gracefully,”
that means sending a TLS close_notify followed by a TCP FIN,
or the equivalents for other protocols.
Where this specification requires a connection to be closed gracefully,
the requirement to initiate that graceful close is placed on the client.
This is to place the burden of TCP’s TIME-WAIT state on the client
rather than the server.</t>

<t>Where this specification says, “forcibly abort,”
that means sending a TCP RST,
or the equivalent for other protocols.
In the BSD Sockets API this is achieved by setting the
SO_LINGER option to zero before closing the socket.</t>

<t>The term “server” means the software with a listening socket, awaiting
incoming connection requests.</t>

<t>The term “client” means the software which initiates a connection
to the server’s listening socket.</t>

<t>The terms “initiator” and “responder” correspond respectively to the
initial sender and subsequent receiver of a DSO request message,
regardless of which was the “client” and “server” in the usual DNS sense.</t>

<t>The term “sender” may apply to
either an initiator (when sending a DSO request message)
or a responder (when sending a DSO response message).</t>

<t>Likewise, the term “receiver” may apply to
either a responder (when receiving a DSO request message)
or an initiator (when receiving a DSO response message).</t>

<t>DNS Stateful Operations uses “DSO request messages” and “DSO response messages”.
DSO request messages are further subdivided into two variants,
“acknowledged request messages”
(which generate a corresponding response message) and
“unacknowledged request messages”
(which do not generate any corresponding response message).</t>

<t>The content of DSO messages is expressed using type-length-value (TLV) syntax.</t>

<t>In a DSO request message the first TLV is referred to as the “Primary TLV”
and determines the nature of the operation being performed,
including whether it is an acknowledged or unacknowledged operation;
any other TLVs in a DSO request message are referred to as “Additional TLVs”
and serve additional non-primary purposes, which may be related to
the primary purpose, or not, as in the case of the encryption padding TLV.</t>

<t>A DSO response message may contain no TLVs, or it may contain one
or more TLVs as appropriate to the information being communicated.
In the context of DSO response messages,
one or more TLVs with the same DSO-TYPE as the Primary TLV in the
corresponding DSO request message are referred to as “Response Primary TLVs”.
Any other TLVs with different DSO-TYPEs are referred to as “Response Additional TLVs”.
The Response Primary TLV(s), if present, MUST occur first in the response message,
before any Response Additional TLVs.</t>

<t>Two timers (elapsed time since an event) are defined in this document:</t>

<t><list style="symbols">
  <t>an inactivity timer (see <xref target="keepalive"/> and <xref target="inactivetimer"/>)</t>
  <t>a keepalive timer (see <xref target="keepalive"/> and <xref target="keepalivetimer"/>)</t>
</list></t>

<t>The timeouts associated with these timers are called the inactivity timeout and 
the keepalive interval respectively. 
The term “Session Timeouts” is used to refer to this pair of timeout values.</t>

<t>Resetting a timer means resetting the timer value to zero and starting the timer again.
Clearing a timer means resetting the timer value to zero but NOT starting the timer again.</t>

</section>
<section anchor="discussion" title="Discussion">

<t>There are several use cases for DNS Stateful operations that can 
be described here.</t>

<t>Firstly, establishing session parameters such as server-defined timeouts is of 
great use in the 
general management of persistent connections. For example, using DSO sessions 
for stub to recursive DNS-over-TLS <xref target="RFC7858"/> is more flexible for both the 
client and the server than attempting to manage sessions using just the EDNS(0)
TCP Keepalive option
<xref target="RFC7828"/>. The simple set of TLVs defined in this document is
sufficient to greatly enhance connection management for this use case.</t>

<t>Secondly, DNS-SD <xref target="RFC6763"/> has evolved into a naturally session based mechanism where,
for example, long-lived subscriptions lend themselves to ‘push’ mechanisms as 
opposed to polling. Long-lived stateful connections and server initiated 
messages align with this use case <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>A general use case is that DNS traffic is often bursty but session establishment 
can be expensive. One challenge with long-lived connections is to maintain 
sufficient traffic to maintain NAT and firewall state.
To mitigate this issue this document introduces a
new concept for the DNS, that is DSO “Keepalive traffic”.
This traffic carries no DNS data and is not considered ‘activity’
in the classic DNS sense, but serves to maintain state in middleboxes,
and to assure client and server that they still have connectivity to each other.</t>

<t>There are a myriad of other potential use cases for DSO given the versatility 
and extensibility of this specification.</t>

<t><xref target="details"/> of this document describes the protocol details of DNS Stateful Operations
including definitions of three TLVs for session management and encryption padding.
<xref target="lifecycle"/> presents a detailed discussion of the DSO Session lifecycle
including an in-depth discussion of keepalive traffic and session termination.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="details" title="Protocol Details">

<section anchor="establishment" title="DSO Session Establishment">

<t>DSO messages MUST only be carried in protocols and in
environments where a session may be established according to the definition above.
Standard DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/>, and DNS over TLS <xref target="RFC7858"/>
are suitable protocols.</t>

<t>DNS over plain UDP <xref target="RFC0768"/> is not appropriate since it fails on the requirement for
in-order message delivery, and, in the presence of NAT gateways and firewalls
with short UDP timeouts, it fails to provide a persistent bi-directional
communication channel unless an excessive amount of keepalive traffic is used.</t>

<t>In some environments it may be known in advance by external means
that both client and server support DSO, and in these cases either
client or server may initiate DSO messages at any time.</t>

<t>However, in the typical case a server will not know in advance whether a
client supports DSO, so in general, unless it is known in advance by other means
that a client does support DSO, a server MUST NOT initiate DSO request messages
until a DSO Session has been mutually established, as described below.
Similarly, unless it is known in advance by other means that a server
does support DSO, a client MUST NOT initiate non-response-requiring
DSO request messages until after a DSO Session has been mutually established.</t>

<t>Whether or not a given DSO request message elicits a response is
determined by whether or not the first DSO TLV (see <xref target="tlvsyntax"/>)
in the message (the Primary TLV) is one that is specified to generate a response.
Whether a Primary TLV will be specified to elicit a response will depend
on the intended use pattern for that particular TLV.</t>

<t>A DSO Session is established over a connection by the client
sending a DSO request message of a kind that requires a response,
such as the DSO Keepalive TLV (see <xref target="keepalive"/>),
and receiving a response, with matching MESSAGE ID, and RCODE
set to NOERROR (0), indicating that the DSO request was successful.</t>

<t>If the RCODE is set to DSONOTIMP (tentatively 11) this indicates
that the server does support DSO, but does not support the particular
operation the client requested.
A server MUST NOT return DSONOTIMP for the DSO Keepalive TLV,
but this could happen in the future, if a client attempts to
establish a DSO Session using a future response-requiring DSO TLV
which the server does not understand.
If the server returns DSONOTIMP then a DSO Session is not
considered established, but the client is permitted to continue
sending DNS messages on the connection,
including other response-requiring DSO messages such as the DSO Keepalive,
which may result in a successful NOERROR response,
yielding the establishment of a DSO Session.</t>

<t>If the RCODE is set to any value other than NOERROR (0) or DSONOTIMP
(tentatively 11), then the client should assume that the server does
not support DSO. In this case the client is permitted to continue
sending DNS messages on that connection, but the client SHOULD NOT
issue further DSO messages on that connection.</t>

<t>When the server receives a response-requiring DSO request message
from a client, and transmits a sucessful NOERROR response to that
request, the server considers the DSO Session established.</t>

<t>When the client receives the server’s NOERROR response to its
DSO request message, the client considers the DSO Session established.</t>

<t>Once a DSO Session has been established,
either end may unilaterally send DSO messages at any time,
and therefore either client or server may be the initiator of a message.</t>

<t>Once a DSO Session has been established,
clients and servers should behave as described in this specification with
regard to inactivity timeouts and connection close, not as prescribed in
the previous specification for DNS over TCP <xref target="RFC7766"/>.</t>

<section anchor="zero-round-trip-operation" title="Zero Round-Trip Operation">

<t>There is increased awareness today of the performance benefits
of eliminating round trips in session establishment.
Technologies like TCP Fast Open <xref target="RFC7413"/>
and TLS 1.3 <xref target="I-D.ietf-tls-tls13"/>
provide mechanisms to reduce or eliminate
round trips in session establishment.</t>

<t>Similarly, DSO supports zero round-trip operation.</t>

<t>Having initiated a connection to a server, possibly using
zero round-trip TCP Fast Open and/or
zero round-trip TLS 1.3, a client MAY send multiple
response-requiring DSO request messages to the server in succession
without having to wait for a response to the first request message
to confirm successful establishment of a DSO session.</t>

<t>However, a client MUST NOT send non-response-requiring DSO request
messages until after a DSO Session has been mutually established.
Similarly, a server MUST NOT send DSO request messages until it
has received a response-requiring DSO request message from a
client and transmitted a sucessful NOERROR response for that request.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="middlebox-considerations" title="Middlebox Considerations">

<t>Where an application-layer middlebox (e.g., a DNS proxy, forwarder, or
session multiplexer) is in the path the middlebox MUST NOT blindly
forward DSO messages in either direction, and MUST treat the inbound
and outbound connections as separate sessions.  This does not preclude
the use of DSO messages in the presence of an IP-layer middlebox, such
as a NAT that rewrites IP-layer and/or transport-layer headers but
otherwise preserves the effect of a single session between the client
and the server.</t>

<t>To illustrate the above, consider a network where a middlebox
terminates one or more TCP connections from clients and multiplexes the
queries therein over a single TCP connection to an upstream server.  The
DSO messages and any associated state are specific to the individual
TCP connections.  A DSO-aware middlebox MAY in some circumstances be
able to retain associated state and pass it between the client and
server (or vice versa) but this would be highly TLV-specific.  For
example, the middlebox may be able to maintain a list of which clients
have made Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/> and
make its own subscription(s) on their behalf, relaying any subsequent
notifications to the client (or clients) that have subscribed to that
particular notification.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="format" title="Message Format">

<t>A DSO message begins with
the standard twelve-octet DNS message header <xref target="RFC1035"/>
with the OPCODE field set to the DSO OPCODE (tentatively 6).
However, unlike standard DNS messages, the question section, answer section,
authority records section and additional records sections are not present.
The corresponding count fields (QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) MUST be
set to zero on transmission.</t>

<t>If a DSO message is received where any of the count fields are
not zero, then a FORMERR MUST be returned,
unless a future document specifies otherwise.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                          MESSAGE ID                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |QR |    OPCODE     |            Z              |     RCODE     |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     QDCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ANCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     NSCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ARCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                           DSO Data                            /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><vspace blankLines='999' /></t>

<section anchor="header" title="Header">

<t>In an unacknowledged request message the MESSAGE ID field MUST be set to zero.
In an acknowledged request message the MESSAGE ID field MUST
be set to a unique nonzero value, that the initiator is not
currently using for any other active operation on this connection.
For the purposes here, a MESSAGE ID is in use in this DSO Session if the
initiator has used it in a request for which it is still awaiting a response,
or if the client has used it to setup state that has not yet been deleted.
For example, state could be a Push Notification subscription <xref target="I-D.ietf-dnssd-push"/>
or a Discovery Relay interface subscription <xref target="I-D.sctl-dnssd-mdns-relay"/>.</t>

<t>Whether a message is acknowledged or unacknowledged is
determined only by the specification for the Primary TLV.
An acknowledgment cannot be requested by including a nonzero message ID
in a message the primary TLV of which is specified to be unacknowledged,
nor can an acknowledgment be prevented by sending a message ID of zero
in a message with a primary TLV that is specified to be acknowledged.
A responder that receives either such malformed message MUST treat it
as a programming error and terminate the connection.</t>

<t>In a request message the DNS Header QR bit MUST be zero (QR=0).<vspace />
If the QR bit is not zero the message is not a request message.</t>

<t>In a response message the DNS Header QR bit MUST be one (QR=1).<vspace />
If the QR bit is not one the message is not a response message.</t>

<t>In a response message (QR=1) the MESSAGE ID field MUST contain a copy of the value of
the MESSAGE ID field in the acknowledged request message being responded to.
In a response message (QR=1) the MESSAGE ID field MUST NOT be zero.
If a response message (QR=1) is received where the MESSAGE ID is zero
this is a fatal error and the receiver MUST forcibly abort the connection immediately.</t>

<t>The DNS Header OPCODE field holds the DSO OPCODE value (tentatively 6).</t>

<t>The Z bits are currently unused in DSO messages,
and in both DSO requests and DSO responses the
Z bits MUST be set to zero (0) on transmission and MUST be silently ignored
on reception, unless a future document specifies otherwise.</t>

<t>In a request message (QR=0) the RCODE is generally set to zero on transmission,
and silently ignored on reception, except where specified otherwise
(for example, the Retry Delay request message (see <xref target="retry"/>),
where the RCODE indicates the reason for termination).</t>

<t><vspace blankLines='999' /></t>

<t>The RCODE value in a response message (QR=1) may be one of the following values:</t>

<texttable>
      <ttcol align='right'>Code</ttcol>
      <ttcol align='left'>Mnemonic</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>0</c>
      <c>NOERROR</c>
      <c>Operation processed successfully</c>
      <c>1</c>
      <c>FORMERR</c>
      <c>Format error</c>
      <c>2</c>
      <c>SERVFAIL</c>
      <c>Server failed to process request due to a problem with the server</c>
      <c>3</c>
      <c>NXDOMAIN</c>
      <c>Name Error — Named entity does not exist (TLV-dependent)</c>
      <c>4</c>
      <c>NOTIMP</c>
      <c>DSO not supported</c>
      <c>5</c>
      <c>REFUSED</c>
      <c>Operation declined for policy reasons</c>
      <c>9</c>
      <c>NOTAUTH</c>
      <c>Not Authoritative (TLV-dependent)</c>
      <c>11</c>
      <c>DSONOTIMP</c>
      <c>DSO type code not supported</c>
</texttable>

<t>Use of the above RCODEs is likely to be common in DSO but 
does not preclude the definition and use of other codes in future documents that 
make use of DSO.</t>

<t>If a document defining a new DSO TLV makes use of NXDOMAIN (Name Error)
or NOTAUTH (Not Authoritative) then that document MUST specify the specific
interpretation of these RCODE values in the context of that new DSO TLV.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="dsodata" title="DSO Data">

<t>The standard twelve-octet DNS message header with its
zero-valued count fields is followed by the DSO Data,
expressed using TLV syntax, as described below <xref target="tlvsyntax"/>.</t>

<t>A DSO message may be either a request message or a response message,
as indicated by the QR bit in the DNS message header.
DSO request messages are further subdivided into two variants,
acknowledged request messages
(which generate a corresponding response message)
and unacknowledged request messages
(which do not generate any corresponding response message).</t>

<t>A DSO request message MUST contain at least one TLV.
The first TLV in a DSO request message is referred to as the “Primary TLV”
and determines the nature of the operation being performed,
including whether it is an acknowledged or unacknowledged operation.
In some cases it may be appropriate to include other TLVs in a request message,
such as the Encryption Padding TLV (<xref target="padding"/>),
and these extra TLVs are referred to as the “Additional TLVs”.</t>

<t>A DSO response message may contain no TLVs,
or it may be specified to contain one or more TLVs
appropriate to the information being communicated.</t>

<t>A DSO response message may contain one or more TLVs with
DSO-TYPE the same as the Primary TLV from the corresponding DSO request message,
in which case those TLV(s) are referred to as “Response Primary TLVs”.
A DSO response message is not required to carry Response Primary TLVs.
The MESSAGE ID field in the DNS message header is sufficient to identify
to which DSO request message this response message relates.</t>

<t>A DSO response message may contain one or more TLVs with
DSO-TYPEs different from the Primary TLV from the corresponding DSO request message,
in which case those TLV(s) are referred to as “Response Additional TLVs”.</t>

<t>Response Primary TLV(s), if present, MUST occur first in the response message,
before any Response Additional TLVs.</t>

<t>It is anticipated that by default most DSO request messages will be specified
to be acknowledged request messages, which generate corresponding responses.
In some specialized high-traffic use cases,
it may be appropriate to specify unacknowledged request messages.
Unacknowledged request messages can be more efficient on the network,
because they don’t generate a stream of corresponding reply messages.
Using unacknowledged request messages can also simplify software
in some cases, by removing need for an initiator to maintain
state while it waits to receive replies it doesn’t care about.
When the specification for a particular TLV states that,
when used as a Primary TLV (i.e., first) in a request message,
that request message is to be unacknowledged,
the MESSAGE ID field MUST be set to zero and
the receiver MUST NOT generate any response message
corresponding to this unacknowledged request message.</t>

<t>The previous point, that the receiver MUST NOT generate responses to
unacknowledged request messages, applies even in the case of errors.
When a DSO request message is received with the MESSAGE ID field
set to zero, the receiver MUST NOT generate any response.
For example, if the DSO-TYPE in the Primary TLV is unrecognized,
then a DSNOTIMP error MUST NOT be returned; instead the receiver
MUST forcibly abort the connection immediately.</t>

<t>Unacknowledged request messages MUST NOT be used “speculatively”
in cases where the sender doesn’t know if the receiver supports
the Primary TLV in the message, because there is no way to receive
any response to indicate success or failure of the request message
(the request message does not contain a unique MESSAGE ID with
which to associate a response with its corresponding request).
Unacknowledged request messages are only appropriate in cases where
the sender already knows that the receiver supports and wishes to
receive these messages.</t>

<t>For example, after a client has subscribed for Push Notifications
<xref target="I-D.ietf-dnssd-push"/>, the subsequent event notifications are
then sent as unacknowledged messages, and this is appropriate
because the client initiated the message stream by virtue of its
Push Notification subscription, thereby indicating its support of
Push Notifications, and its desire to receive those notifications.</t>

<t>After an mDNS Relay client has subscribed to receive inbound mDNS
traffic from an mDNS Relay, the subsequent stream of received
packets is then sent using unacknowledged messages, and this
is appropriate because the client initiated the message stream
by virtue of its mDNS Relay link subscription, thereby indicating
its support of mDNS Relay, and its desire to receive inbound mDNS
packets over that DSO session <xref target="I-D.sctl-dnssd-mdns-relay"/>.</t>

<t><vspace blankLines='999' /></t>

<section anchor="tlvsyntax" title="TLV Syntax">

<t>All TLVs, whether used as “Primary”, “Additional”, or in responses,
use the same encoding syntax.</t>

<t>The specification for a TLV determines whether,
when used as the Primary (i.e., first) TLV in a request message,
that request message is to be acknowledged.
If the request message is to be acknowledged, the specification
also states which TLVs, if any, are to be included in the response.
The Primary TLV may or may not be contained in the response,
depending on what is stated in the specification for that TLV.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                            DSO-TYPE                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                        DSO DATA LENGTH                        |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                      TYPE-DEPENDENT DATA                      /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='DSO-TYPE:'>
  A 16-bit unsigned integer in network (big endian) byte order
giving the type of the current DSO TLV per the IANA DSO Type Code Registry.</t>
  <t hangText='DSO DATA LENGTH:'>
  A 16-bit unsigned integer in network (big endian) byte order
giving the size in octets of the TYPE-DEPENDENT DATA.</t>
  <t hangText='TYPE-DEPENDENT DATA:'>
  Type-code specific format.</t>
</list></t>

<t>Where domain names appear within TYPE-DEPENDENT DATA, they MAY<vspace />
be compressed using standard DNS name compression <xref target="RFC1035"/>.<vspace />
However, the compression offsets MUST be relative to
the start of the TYPE-DEPENDENT DATA and MUST NOT
extend beyond the end of the TYPE-DEPENDENT DATA.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="primary-tlv" title="Primary TLV">

<t>The Primary (first) TLV in a DSO request message indicates the operation to be performed.
A DSO request message MUST contain at at least one TLV, the Primary TLV.</t>

</section>
<section anchor="additional-tlvs" title="Additional TLVs">

<t>An “Additional TLV” specifies additional parameters
relating to the operation. Immediately following the Primary TLV
a DSO request message MAY contain one or more Additional TLVs.</t>

</section>
<section anchor="response-tlvs" title="Response TLVs">

<t>Depending on the operation, a DSO response message MAY contain no TLVs,
because it is simply a response to a previous request message, and the
MESSAGE ID in the header is sufficient to identify the request in question.
Or it may contain a single response TLV, with the same DSO-TYPE as the
Primary TLV in the request message.
Alternatively it may contain one or more TLVs of other
types, or a combination of the above, as appropriate
for the information that needs to be communicated.
The specification for each DSO TLV determines
what TLVs are required in a response to a request using that TLV.</t>

<t>If a DSO response is received for an operation where the specification
requires that the response carry a particular TLV or TLVs,
and the required TLV(s) are not present, then this is a fatal
error and the recipient of the defective response message MUST
forcibly abort the connection immediately.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="unrecognized-tlvs" title="Unrecognized TLVs">

<t>If DSO request is received containing an unrecognized Primary TLV,
with a nonzero MESSAGE ID (indicating that a response is expected),
then the receiver MUST send a response with matching MESSAGE ID,
and RCODE DSONOTIMP (tentatively 11).
The response MUST NOT contain a copy of the unrecognized Primary TLV.</t>

<t>If DSO request is received containing an unrecognized Primary TLV,
with a zero MESSAGE ID (indicating that no response is expected),
the receiver MUST silently ignore the message. A response MUST NOT be sent.</t>

<t>If a DSO request message is received where the Primary TLV is recognized,
containing one or more unrecognized Additional TLVs, the unrecognized
Additional TLVs MUST be silently ignored, and the remainder of the message
is interpreted and handled as if the unrecognized parts were not present.</t>

<t>Similarly, if a DSO response message is received containing one
or more unrecognized TLVs, the unrecognized TLVs MUST be silently
ignored, and the remainder of the message is interpreted and
handled as if the unrecognized parts were not present.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="edns0-and-tsig" title="EDNS(0) and TSIG">

<t>Since the ARCOUNT field MUST be zero, a DSO message
MUST NOT contain an EDNS(0) option in the additional records section.
If functionality provided by current or future EDNS(0) options
is desired for DSO messages, one or more new DSO TLVs
need to be defined to carry the necessary information.</t>

<t>For example, the EDNS(0) Padding Option <xref target="RFC7830"/> used for security purposes
is not permitted in a DSO message,
so if message padding is desired for DSO messages
then the Encryption Padding TLV described in <xref target="padding"/> MUST be used.</t>

<t>Similarly, a DSO message MUST NOT contain a TSIG record.
A TSIG record in a conventional DNS message is added as the last record
in the additional records section, and carries a signature computed over
the preceding message content. Since DSO data appears
after the additional records section, it would not be included in the
signature calculation. 
If use of signatures with DSO messages becomes necessary in the 
future, a new DSO TLV needs to be defined to perform this function.</t>

<t>Note however that, while DSO <spanx style="strong">messages</spanx> cannot include
EDNS(0) or TSIG records, a DSO <spanx style="strong">session</spanx> is typically used to 
carry a whole series of DNS messages of different kinds, including DSO
messages, and other DNS message types like Query <xref target="RFC1034"/> 
<xref target="RFC1035"/> and Update <xref target="RFC2136"/>, and those messages can carry EDNS(0) and 
TSIG records.</t>

<t>This specification explicitly prohibits use of the
EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>
in <spanx style="strong">any</spanx> messages sent on a DSO Session (because it is obsoleted by
the functionality provided by the DSO Keepalive operation),
but messages may contain other EDNS(0) options as appropriate.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="message-handling" title="Message Handling">

<t>The initiator MUST set the value of the QR bit in the DNS header to
zero (0), and the responder MUST set it to one (1).
Every DSO request message (QR=0) with a nonzero MESSAGE ID field
MUST elicit a corresponding response (QR=1), which MUST have the same
MESSAGE ID in the DNS message header as in the corresponding request.
DSO request messages sent by the client with a nonzero MESSAGE ID field
elicit a response from the server, and
DSO request messages sent by the server with a nonzero MESSAGE ID field
elicit a response from the client.</t>

<t>A DSO request message (QR=0) with a zero MESSAGE ID field MUST NOT elicit a response.</t>

<t>The namespaces of 16-bit MESSAGE IDs are disjoint in each direction.
For example, it is <spanx style="strong">not</spanx> an error for both client and server to send a request
message with the same ID. In effect, the 16-bit MESSAGE ID combined with the 
identity of the initiator (client or server) serves as a 17-bit unique 
identifier for a particular operation on a DSO Session.</t>

<t>As described in <xref target="header"/> An initiator MUST NOT reuse a MESSAGE ID that is 
already in use for an 
outstanding request, unless specified otherwise by the relevant specification 
for the DSO in question. At the very least, this means 
that a MESSAGE ID MUST NOT be reused in a particular direction
on a particular DSO Session while the initiator is waiting for a response to a 
previous request using that MESSAGE ID on that DSO Session,
unless specified otherwise by the relevant 
specification for the DSO in question.
(For a long-lived state the MESSAGE ID for the operation
MUST NOT be reused whilst that state remains active.)</t>

<t>If a client or server receives a response (QR=1) where the MESSAGE ID is zero,
or any other value that does not match the MESSAGE ID of any of its outstanding operations,
this is a fatal error and the recipient MUST forcibly abort the connection immediately.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="dso-response-generation" title="DSO Response Generation">

<t>With most TCP implementations, for DSO requests that generate a response,
the TCP data acknowledgement (generated because data has been received by TCP),
the TCP window update (generated because TCP has delivered that data to the receiving software),
and the DSO response (generated by the receiving application-layer software itself)
are all combined into a single IP packet.
Combining these three elements into a single IP packet gives a
potentially significant improvement in network efficiency.</t>

<t>For DSO requests that do not generate a response,
the TCP implementation generally doesn’t have any way to know
that no response will be forthcoming, so it waits fruitlessly
for the application-layer software to generate a response,
until the Delayed ACK timer fires <xref target="RFC1122"/> (typically 200 milliseconds)
and only then does it send the TCP ack and window update.
In conjunction with Nagle’s Algorithm at the sender,
this can delay the sender’s transmission of its next
(non-full-sized) TCP segment, while the sender is waiting for
its previous (non-full-sized) TCP segment to be acknowledged,
which won’t happen until the Delayed ACK timer fires.
Nagle’s Algorithm exists to combine multiple small
application writes into more efficient large TCP segments,
to guard against wasteful use of the network by applications
that would otherwise transmit a stream of small TCP segments,
but in this case Nagle’s Algorithm (created to improve network efficiency)
can interact badly with TCP’s Delayed ACK feature
(also created to improve network efficiency) <xref target="NagleDA"/>
with the result of delaying some messages by up to 200 milliseconds.</t>

<t>Possible mitigations for this problem include:</t>

<t><list style="symbols">
  <t>Disabling Nagle’s Algorithm at the sender.<vspace />
This is not great, because it results<vspace />
in less efficient use of the network.</t>
  <t>Disabling Delayed ACK at the receiver.<vspace />
This is not great, because it results<vspace />
in less efficient use of the network.</t>
  <t>Using a networking API that lets the receiver signal to the TCP
implementation that the receiver has received and processed a client
request for which it will not be generating any immediate response.
This allows the TCP implementation to operate efficiently in both cases;
for requests that generate a response, the TCP ack, window update, and
DSO response are transmitted together in a single TCP segment,
and for requests that do not generate a response,
the application-layer software informs the TCP implementation
that it should go ahead and send the TCP ack and window update
immediately, without waiting for the Delayed ACK timer.
Unfortunately it is not known at this time which (if any) of the
widely-available networking APIs currently include this capability.</t>
</list></t>

</section>
<section anchor="cancellation" title="Responder-Initiated Operation Cancellation">

<t>This document, the base specification for DNS Stateful Operations,
does not itself define any long-lived operations,
but it defines a framework for supporting long-lived operations
such as Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/>
and Discovery Relay interface subscriptions <xref target="I-D.sctl-dnssd-mdns-relay"/>.</t>

<t>Generally speaking, a long-lived operation is initiated by the initiator,
and, if successful, remains active until the initiator terminates the operation.</t>

<t>However, it is possible that a long-lived operation may be valid
at the time it was initiated, but then a later change of circumstances
may render that previously valid operation invalid.</t>

<t>For example, a long-lived client operation may pertain to a name
that the server is authoritative for, but then the server configuration
is changed such that it is no longer authoritative for that name.</t>

<t>In such cases, instead of terminating the entire session
it may be desirable for the responder to be able to cancel
selectively only those operations that have become invalid.</t>

<t>The responder performs this selective cancellation by sending
a new response message, with the MESSAGE ID field containing the
MESSAGE ID of the long-lived operation that is to be terminated
(that it had previously acknowledged with a NOERROR RCODE), and the
RCODE field of the new response message giving the reason for cancellation.</t>

<t>After a response message with nonzero RCODE has been sent,
that operation has been terminated from the responder’s point of view,
and the responder sends no more messages relating to that operation.</t>

<t>After a response message with nonzero RCODE has been received by the initiator,
that operation has been terminated from the initiator’s point of view,
and its MESSAGE ID is now free for reuse.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="lifecycle" title="DSO Session Lifecycle and Timers">

<section anchor="dso-session-initiation" title="DSO Session Initiation">

<t>A DSO Session begins as described in <xref target="establishment"/>.</t>

<t>The client may perform as many DNS operations as it wishes using the
newly created DSO Session. Operations SHOULD be pipelined (i.e., the
client doesn’t need wait for a response before sending the next message).
The server MUST act on messages in the order they are transmitted, but
responses to those messages SHOULD be sent out of order when appropriate.</t>

</section>
<section anchor="sessiontimeouts" title="DSO Session Timeouts">

<t>Two timeout values are associated with a DSO Session: the inactivity timeout, and 
the keepalive interval.</t>

<t>The first timeout value, the inactivity timeout, is the maximum time for which
a client may speculatively keep a DSO Session open in the expectation that
it may have future requests to send to that server.</t>

<t>The second timeout value, the keepalive interval, is the maximum permitted
interval between client messages to the server if the client wishes to keep
the DSO Session alive.</t>

<t>The two timeout values are independent. The inactivity timeout may be lower, the 
same, or higher than the keepalive interval, though in most cases the inactivity 
timeout is expected to be shorter than the keepalive interval.</t>

<t>Only when the client has a very long-lived low-traffic state does the 
keepalive interval come into play, to ensure that a sufficient residual
amount of traffic is generated to maintain NAT and firewall state
and to assure client and server that they still have connectivity to each other.</t>

<t>On a new DSO Session, if no explicit DSO Keepalive message exchange has taken 
place, the default value for both timeouts is 15 seconds.
For both timeouts, lower values of the timeout result in higher network traffic
and higher CPU load on the server.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="inactivetimer" title="Inactive DSO Sessions">

<t>At both servers and clients, the generation or reception of any complete
DNS message, including DNS requests, responses, updates, or DSO
messages, resets both timers for that DSO Session, with the exception
that a DSO Keepalive message resets only the keepalive timer, not the inactivity 
timeout timer.</t>

<t>In addition, for as long as the client has an outstanding operation in progress,
the inactivity timer remains cleared, and an inactivity 
timeout cannot occur.</t>

<t>For short-lived DNS operations like traditional queries and updates,
an operation is considered in progress for the time between request and 
response, typically a period of a few hundred milliseconds at most.
At the client, the inactivity timer is cleared upon transmission of a 
request and remains cleared until reception of the corresponding response.
At the server, the inactivity timer is cleared upon reception of a request
and remains cleared until transmission of the corresponding response.</t>

<t>For long-lived DNS Stateful operations, an operation is considered in progress
for as long as the state is active, until it is cancelled.
This means that a DSO Session can exist, with a state 
active, with no messages flowing in either direction, for far longer than the 
inactivity timeout, and this is not an error. This is why there are two separate 
timers: the inactivity timeout, and the keepalive interval.
Just because a DSO Session has no traffic for an extended period of time
does not automatically make that DSO Session “inactive”,
if it has an active state that is awaiting events.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="the-inactivity-timeout" title="The Inactivity Timeout">

<t>The purpose of the inactivity timeout is for the server to balance its trade off 
between the costs of setting up new DSO Sessions and the costs of maintaining inactive 
DSO Sessions. A server with abundant DSO Session capacity can offer a high inactivity timeout, 
to permit clients to keep a speculative DSO Session open for a long time, to save 
the cost of establishing a new DSO Session for future communications with that 
server. A server with scarce memory resources can offer a low inactivity timeout,
to cause clients to promptly close DSO Sessions whenever they have no outstanding
operations with that server, and then create a new DSO Session later when needed.</t>

<section anchor="closing-inactive-dso-sessions" title="Closing Inactive DSO Sessions">

<t>A client is NOT required to wait until the inactivity timeout expires
before closing a DSO Session.
A client MAY close a DSO Session at any time, at the client’s discretion.
If a client determines that it has no current or reasonably anticipated
future need for an inactive DSO Session, then the client SHOULD close that connection.</t>

<t>If, at any time during the life of the DSO Session,
the inactivity timeout value (i.e., 15 seconds by default) elapses
without there being any operation active on the DSO Session,
the client MUST close the connection gracefully.</t>

<t>If, at any time during the life of the DSO Session,
twice the inactivity timeout value (i.e., 30 seconds by default),
or five seconds, if twice the inactivity timeout value is less than five seconds,
elapses without there being any operation active on the DSO Session,
the server SHOULD consider the client delinquent,
and SHOULD forcibly abort the DSO Session.</t>

<t>In this context, an operation being active on a DSO Session includes
a query waiting for a response, an update waiting for a response,
or active state,
but not a DSO Keepalive message exchange itself.
A DSO Keepalive message exchange resets only the keepalive
interval timer, not the inactivity timeout timer.</t>

<t>If the client wishes to keep an inactive DSO Session open for longer than
the default duration without having to send traffic every 15 seconds,
then it uses the DSO Keepalive message to request
longer timeout values, as described in <xref target="keepalive"/>.</t>

</section>
<section anchor="values-for-the-inactivity-timeout" title="Values for the Inactivity Timeout">

<t>For the inactivity timeout value, lower values result in
more frequent DSO Session teardown and re-establishment.
Higher values result in lower traffic and CPU load on the server,
but higher memory burden to maintain state for inactive DSO Sessions.</t>

<t>A server may dictate (in a server-initiated Keepalive message,
or in a response to a client-initiated Keepalive request message)
any value it chooses for the inactivity timeout.
When a connection’s inactivity timeout is reached the client MUST
begin closing the idle connection, but a client is NOT REQUIRED
to keep an idle connection open until the inactivity timeout is
reached — a client SHOULD begin closing the connection sooner
if it has no reason to expect future operations with that server
before the inactivity timeout is reached.</t>

<t>A shorter inactivity timeout with a longer keepalive interval signals
to the client that it should not speculatively keep an inactive DSO
Session open for very long without reason, but when it does have an
active reason to keep a DSO Session open, it doesn’t need to be sending
an aggressive level of keepalive traffic to maintain that session.</t>

<t>A longer inactivity timeout with a shorter keepalive interval
signals to the client that it may speculatively keep an inactive
DSO Session open for a long time, but to maintain that inactive
DSO Session it should be sending a lot of keepalive traffic.
This configuration is expected to be less common.</t>

<t>A server may dictate any value it chooses for the inactivity timeout
(either in a response to a client-initiated request, or in a server-initiated message)
including values under one second, or even zero.</t>

<t>An inactivity timeout of zero informs the client that it
should not speculatively maintain idle connections at all, and
as soon as the client has completed the operation or operations relating
to this server, the client should immediately begin closing this session.</t>

<t>An inactivity timeout of 0xFFFFFFFF (2^32-1 milliseconds, approximately 49.7 days)
informs the client that it may keep an idle connection open as long as it wishes.
Note that after granting an unlimited inactivity timeout in this way,
at any point the server may revise that inactivity timeout by sending
a new Keepalive TLV dictating new Session Timeout values to the client.</t>

<t>A server will abort an idle client session after twice the
inactivity timeout value, or five seconds, whichever is greater.
In the case of a zero inactivity timeout value, this means that
if a client fails to close an idle client session then the server
will forcibly abort the idle session after five seconds.</t>

</section>
</section>
<section anchor="keepalivetimer" title="The Keepalive Interval">

<t>The purpose of the keepalive interval is to manage the generation of
sufficient messages to maintain state in middleboxes (such at NAT gateways
or firewalls) and for the client and server to periodically verify that they
still have connectivity to each other. This allows them to clean up state
when connectivity is lost, and attempt re-connection if appropriate.</t>

<section anchor="keepalive-interval-expiry" title="Keepalive Interval Expiry">

<t>If, at any time during the life of the DSO Session,
the keepalive interval value (i.e., 15 seconds by default) elapses
without any DNS messages being sent or received on a DSO Session,
the client MUST take action to keep the DSO Session alive,
by sending a DSO Keepalive message (see <xref target="keepalive"/>).
A DSO Keepalive message exchange resets only the keepalive timer, 
not the inactivity timer.</t>

<t>If a client disconnects from the network abruptly,
without cleanly closing its DSO Session,
leaving long-lived state uncanceled,
the server learns of this after failing to
receive the required keepalive traffic from that client.
If, at any time during the life of the DSO Session,
twice the keepalive interval value (i.e., 30 seconds by default) elapses
without any DNS messages being sent or received on a DSO Session,
the server SHOULD consider the client delinquent,
and SHOULD forcibly abort the DSO Session.</t>

</section>
<section anchor="values-for-the-keepalive-interval" title="Values for the Keepalive Interval">

<t>For the keepalive interval value, lower values result in a higher volume of keepalive 
traffic. Higher values of the keepalive interval reduce traffic and CPU load, 
but have minimal effect on the memory burden
at the server, because clients keep a DSO Session open for the same length of time
(determined by the inactivity timeout) regardless of the level of keepalive traffic 
required.</t>

<t>It may be appropriate for clients and servers to select different keepalive 
interval values depending on the nature of the network they are on.</t>

<t>A corporate DNS server that knows it is serving only clients on the internal 
network, with no intervening NAT gateways or firewalls, can impose a higher 
keepalive interval, because frequent keepalive traffic is not required.</t>

<t>A public DNS server that is serving primarily residential consumer clients, 
where it is likely there will be a NAT gateway on the path, may impose a lower 
keepalive interval, to generate more frequent keepalive traffic.</t>

<t>A smart client may be adaptive to its environment. A client using
a private IPv4 address <xref target="RFC1918"/> to communicate with a DNS server
at an address outside that IPv4 private address block,
may conclude that there is likely to be a NAT gateway on the path,
and accordingly request a lower keepalive interval.</t>

<t>By default it is RECOMMENDED that clients request,
and servers grant, a keepalive interval of 60 minutes.
This keepalive interval provides for reasonably timely detection if
a client abruptly disconnects without cleanly closing the session,
and is sufficient to maintain state in firewalls and NAT gateways
that follow the IETF recommended Best Current Practice that the
“established connection idle-timeout” used by middleboxes
be at least 2 hours 4 minutes <xref target="RFC5382"/>.</t>

<t>Note that the lower the keepalive interval value, the higher the load on client
and server. For example, an keepalive interval value of 100ms would result in a
continuous stream of at least ten messages per second, in both directions,
to keep the DSO Session alive. And, in this extreme example, a single packet loss and
retransmission over a long path could introduce a momentary pause in the stream of messages,
long enough to cause the server to overzealously abort the connection.</t>

<t>Because of this concern, the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with an keepalive interval value less than ten seconds.
If a client receives an Keepalive message specifying an keepalive interval value
less than ten seconds this is an error and the client MUST
forcibly abort the connection immediately.</t>

<t>A keepalive interval value of 0xFFFFFFFF (2^32-1 milliseconds, approximately 49.7 days)
informs the client that it should generate no keepalive traffic.
Note that after signaling that the client should generate no keepalive traffic in this way,
at any point the server may revise that keepalive traffic requirement by sending
a new Keepalive TLV dictating new Session Timeout values to the client.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="server-initiated-session-termination" title="Server-Initiated Session Termination">

<t>In addition to cancelling individual operations selectively (see <xref target="cancellation"/>)
there are also occasions where a server may need to terminate
one or more entire sessions wholesale.
An entire session may need to be terminated if the client is defective in some way,
or departs from the network without closing its session.
Sessions may also need to be terminated if the server becomes overloaded,
or if the server is reconfigured and lacks the ability to be selective about
which operations need to be cancelled.</t>

<t>This section discusses various reasons a session may be terminated,
and the mechanisms for doing so.</t>

<section anchor="error" title="Server-Initiated Session Termination on Error">

<t>After sending an error response to a client, the server MAY end the DSO Session,
or may allow the DSO Session to remain open. For error conditions
that only affect the single operation in question, the server SHOULD return an
error response to the client and leave the DSO Session open for further operations.
For error conditions that are likely to make all operations unsuccessful in the
immediate future, the server SHOULD return an error response to the client and 
then end the DSO Session by sending a Retry Delay request message, as described in 
<xref target="retry"/>.</t>

<t>Upon receiving an error response from the server, a client SHOULD NOT
automatically close the DSO Session. An error relating to one particular operation
on a DSO Session does not necessarily imply that all other operations on that
DSO Session have also failed, or that future operations will fail. The client
should assume that the server will make its own decision about whether or not to
end the DSO Session, based on the server’s determination of whether the error
condition pertains to this particular operation, or would also apply to any
subsequent operations. If the server does not end the DSO Session by
sending the client a Retry Delay message (see <xref target="retry"/>) then the client
SHOULD continue to use that DSO Session for subsequent operations.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="server-initiated-session-termination-on-overload" title="Server-Initiated Session Termination on Overload">

<t>A server MUST NOT close a DSO Session with a client,
except in certain exceptional circumstances, as outlined below.
In normal operation, closing a DSO Session is the client’s responsibility.
The client makes the determination of when to close a DSO
Session based on an evaluation of both its own needs,
and the inactivity timeout value dictated by the server.</t>

<t>Some exceptional situations where a server may terminate a DSO Session include:</t>

<t><list style="symbols">
  <t>The server application software or underlying operating system
is shutting down or restarting.</t>
  <t>The server application software terminates unexpectedly
(perhaps due to a bug that makes it crash).</t>
  <t>The server is undergoing a reconfiguration or maintenance
procedure, that, due to the way the server software is
implemented, requires clients to be disconnected.
For example, some software is implemented such that it reads
a configuration file at startup, and changing the server’s
configuration entails modifiying the configuration file
and then killing and restarting the server software,
which generally entails a loss of network connections.</t>
  <t>The client fails to meets its obligation to generate keepalive
traffic or close an inactive session by the prescribed time
(twice the time interval dictated by the server, or five seconds,
whichever is greater, as described in <xref target="sessiontimeouts"/>).</t>
  <t>The client sends a grossly invalid or malformed request that is
indicative of a seriously defective client implementation (see <xref target="error"/>).</t>
  <t>The server is over capacity and needs to shed some load (see <xref target="retry"/>).</t>
</list></t>

<t>When a server has to close a DSO Session with a client
(because of exceptional circumstances such as those outlined above)
the server SHOULD, whenever possible, send a Retry Delay request message
(see below) informing the client of the reason for the DSO Session
being closed, and allow the client five seconds to receive it
before the server resorts to forcibly aborting the connection.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="retry" title="Retry Delay Request Message">

<t>There may be rare cases where a server is overloaded and wishes to shed load.
If a server is low on resources it MAY simply terminate a client connection
by forcibly aborting it.
However, the likely behavior of the client may be simply to to treat this as a
network failure and reconnect
immediately, putting more burden on the server.</t>

<t>Therefore to avoid this reconnection implosion, a server SHOULD instead choose 
to shed client load by sending a Retry Delay request message, with an RCODE of 
SERVFAIL, to inform the client of the overload situation.
The format of the Retry Delay TLV is described in <xref target="delay"/>.
After sending a Retry Delay request message,
the server MUST NOT send any further messages on that DSO Session.</t>

<t>Upon receipt of a Retry Delay request from the server, the client MUST
make note of the reconnect delay for this server, and then immediately
close the connection gracefully.</t>

<t>After sending a Retry Delay request message the server SHOULD allow the
client five seconds to close the connection, and if the client has not
closed the connection after five seconds then the server SHOULD
forcibly abort the connection.</t>

<t>A Retry Delay request message MUST NOT be initiated by a client.
If a server receives a Retry Delay request message this is an error
and the server MUST forcibly abort the connection immediately.</t>

<section anchor="outstanding-operations" title="Outstanding Operations">

<t>At the moment a server chooses to initiate a Retry Delay request message
there may be DNS requests already in flight from client to server on this 
DSO Session, which will arrive at the server after its Retry Delay request message 
has been sent.
The server MUST silently ignore such incoming requests, and MUST NOT generate
any response messages for them. When the Retry Delay request message from the
server arrives at the client, the client will determine that any DNS requests
it previously sent on this DSO Session, that have not yet received a response, now 
will certainly not be receiving any response. Such requests should be considered
failed, and should be retried at a later time, as appropriate.</t>

<t>In the case where some, but not all, of the existing operations on a DSO Session 
have become invalid (perhaps because the server has been reconfigured and is no 
longer authoritative for some of the names),
but the server is terminating all DSO Sessions en masse with a REFUSED (5) RCODE,
the RECONNECT DELAY MAY be zero, indicating that the clients SHOULD immediately
attempt to re-establish operations.</t>

<t>It is likely that some of the attempts will be successful and some will not,
depending on the nature of the reconfiguration.</t>

<t>In the case where a server is terminating a large number of DSO Sessions at once
(e.g., if the system is restarting) and the server doesn’t want to be inundated 
with a flood of simultaneous retries, it SHOULD send different RECONNECT delay 
values to each client.
These adjustments MAY be selected randomly, pseudorandomly, or deterministically
(e.g., incrementing the time value by one tenth of a second for each successive
client, yielding a post-restart reconnection rate of ten clients per second).</t>

</section>
<section anchor="client-reconnection" title="Client Reconnection">

<t>After a DSO Session is closed by the server, the client SHOULD try to reconnect,
to that server, or to another suitable server, if more than one is available.
If reconnecting to the same server, the client MUST respect the indicated delay
before attempting to reconnect.</t>

<t>If a particular server does not want a client to reconnect (it is being
de-commissioned), it SHOULD set the retry delay to the maximum value (which is
approximately 49.7 days). If the server will only be out of service for a maintenance
period, it should use a value closer to the expected maintenance window and
not default to a very large delay value or clients may not attempt to reconnect
after it resumes service.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
</section>
</section>
<section anchor="sharing" title="Connection Sharing">

<t>As previously specified for DNS over TCP <xref target="RFC7766"/>,
to mitigate the risk of unintentional server overload, DNS clients
MUST take care to minimize the number of concurrent TCP connections
made to any individual server.  It is RECOMMENDED that for any given
client/server interaction there SHOULD be no more than one connection
for regular queries, one for zone transfers, and one for each
protocol that is being used on top of TCP (for example, if the
resolver was using TLS).
However, it is noted that certain primary/secondary configurations
with many busy zones might need to use more than one TCP
connection for zone transfers for operational reasons
(for example, to support concurrent transfers of multiple zones).</t>

<t>A single server may support multiple services, including DNS Updates 
<xref target="RFC2136"/>, DNS Push Notifications <xref target="I-D.ietf-dnssd-push"/>,
and other services, for one or more DNS zones.
When a client discovers that the target server for several different operations
is the same target hostname and port, the client SHOULD use a single
shared DSO Session for all those operations.
A client SHOULD NOT open multiple connections to the same target host and port
just because the names being operated on are different or
happen to fall within different zones.
This is to reduce unnecessary connection load on the DNS server.</t>

<t>However, server implementers and operators should be aware that connection
sharing may not be possible in all cases.
A single host device may be home to multiple independent client software
instances that don’t coordinate with each other.
Similarly, multiple independent client devices behind the same NAT gateway
will also typically appear to the DNS server as different source ports on
the same client IP address.
Because of these constraints, a DNS server MUST be prepared to accept
multiple connections from different source ports on the same client IP address.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="base-tlvs-for-dns-stateful-operations" title="Base TLVs for DNS Stateful Operations">

<t>This section describes the three Base TLVs for DNS Stateful Operations,
Retry Delay, Keepalive, and Encryption Padding.</t>

<section anchor="delay" title="Retry Delay TLV">

<t>The Retry Delay TLV (DSO-TYPE=0) can be used as a
Primary TLV (unacknowledged) in a server-to-client message,
or as an Response Additional TLV in a server-to-client response to a client-to-server request message.</t>

<t>The TYPE-DEPENDENT DATA for the the Retry Delay TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     RETRY DELAY (32 bits)                     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='RETRY DELAY:'>
  a time value, specified as
a 32-bit unsigned integer in network (big endian) byte order in units of milliseconds,
within which the client MUST NOT retry this operation, or retry connecting to this server.</t>
</list></t>

<t>The RECOMMENDED value is 10 seconds.</t>

<section anchor="retry-delay-tlv-used-as-a-primary-tlv" title="Retry Delay TLV used as a Primary TLV">

<t>When sent in a DSO request message, from server to client, the 
Retry Delay TLV (0) is used as a Primary TLV. It is used by a server
to instruct a client to close the DSO Session and underlying connection,
and not to reconnect for the indicated time interval.</t>

<t>In this case it applies to the DSO Session as a whole, and the client MUST begin closing the 
DSO Session, as described in <xref target="retry"/>. The RCODE in the message header 
MUST indicate the reason for the termination:</t>

<t><list style="symbols">
  <t>NOERROR indicates a routine shutdown.</t>
  <t>SERVFAIL indicates that the server is overloaded due to resource exhaustion.</t>
  <t>REFUSED indicates that the server has been reconfigured and is no longer able 
to perform one or more of the functions 
currently being performed on this DSO Session (for example, a DNS Push Notification 
server could be reconfigured such that is is no longer accepting DNS Push 
Notification requests for one or more of the currently subscribed names).</t>
</list></t>

<t>This document specifies only these three RCODE values for Retry Delay request.
Servers sending Retry Delay requests SHOULD use one of these three values.
However, future circumstances may create situations where other RCODE values
are appropriate in Retry Delay requests, so clients MUST be prepared
to accept Retry Delay requests with any RCODE value.</t>

<t>A Retry Delay request is an unacknowledged request message;
the MESSAGE ID MUST be set to zero in the request
and the client MUST NOT send a response.</t>

</section>
<section anchor="retry-delay-tlv-used-as-an-response-additional-tlv" title="Retry Delay TLV used as an Response Additional TLV">

<t>In the case of a client request that returns a nonzero RCODE value,
the server MAY append a Retry Delay TLV (0) to the response,
indicating the time interval during which the client
SHOULD NOT attempt this operation again.</t>

<t>The indicated time interval during which the client SHOULD NOT retry
applies only to the failed operation, not to the DSO Session as a whole.</t>

</section>
<section anchor="retry-delay-tlv-is-used-by-server-only" title="Retry Delay TLV is used by server only">

<t>A client MUST NOT send a Retry Delay TLV to a server,
either in a DSO request message, or in a DSO response message.
If a server receives a DSO message containing a Retry Delay TLV,
this is a fatal error and the server MUST forcibly abort the connection immediately.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="keepalive" title="Keepalive TLV">

<t>The Keepalive TLV (DSO-TYPE=1) performs two functions: to reset the
keepalive timer for the DSO Session and to establish the values for the Session Timeouts.</t>

<t>The Keepalive TLV resets only the keepalive timer, not the inactivity timer.
The reason for this is that periodic Keepalive TLVs are sent for the
sole purpose of keeping a DSO Session alive, because that DSO Session has current
or recent non-maintenance activity that warrants keeping the DSO Session alive.
If sending keepalive traffic itself were to reset the inactivity timer, then 
that would create a circular livelock where keepalive traffic would be sent 
indefinitely to keep a DSO Session alive, where the only activity on that DSO 
Session would be the keepalive traffic keeping the DSO Session alive so that further 
keepalive traffic can be sent.</t>

<t>Sending keepalive traffic is considered a maintenance activity
that is performed in service of other client activities.
Sending keepalive traffic itself is not considered a client activity.
For a DSO Session to be considered active, it must be carrying something more than just keepalive traffic.
This is why merely sending a Keepalive TLV does not reset the inactivity timer.</t>

<t>When sent by a client, the Keepalive request message MUST
be sent as an acknowledged request, with a nonzero MESSAGE ID.
It resets a DSO Session’s keepalive timer, and at the same time requests what the
Session Timeout values should be from this point forward in the DSO Session.
If a server receives a Keepalive request message with a zero MESSAGE ID
then this is a fatal error and the server MUST forcibly abort the connection immediately.</t>

<t>Once a DSO Session is in progress (see <xref target="details"/>) the Keepalive TLV also MAY be initiated by a server.
When sent by a server, the Keepalive request message MUST
be sent as an unacknowledged request, with the MESSAGE ID set to zero.
It resets a DSO Session’s keepalive timer, and unilaterally informs the client of
the new Session Timeout values to use from this point forward in this DSO Session.
No client response to this unilateral declaration is required or allowed.
If a client receives a Keepalive request message with a nonzero MESSAGE ID
then this is a fatal error and the client MUST forcibly abort the connection immediately.</t>

<t>The Keepalive TLV is not used as an Additional TLV.</t>

<t>The Keepalive TLV is only used as a Response TLV in response messages
replying to a Keepalive request message from the client.
A Keepalive TLV MUST NOT be added as to other responses a Response Additional TLV.
If the server wishes to update a client’s Session Timeout values
other than in response to a Keepalive request message from the client,
then it does so by sending an unacknowledged Keepalive request message
of its own, as described above.</t>

<t>It is not required that the Keepalive TLV be used in every DSO Session.
While many DNS Stateful operations
will be used in conjunction with a long-lived session state,
not all DNS Stateful operations require long-lived session state,
and in some cases the default 15-second value for both the inactivity timeout
and keepalive interval may be perfectly appropriate.
However, note that for clients that implement only the TLVs defined in
this document it is the only way for a client to initiate a DSO Session.</t>

<t>The TYPE-DEPENDENT DATA for the the Keepalive TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 INACTIVITY TIMEOUT (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 KEEPALIVE INTERVAL (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='INACTIVITY TIMEOUT:'>
  the inactivity timeout for the current DSO Session, specified as
a 32-bit unsigned integer in network (big endian) byte order in units of milliseconds.
This is the timeout at which the client MUST begin closing an inactive DSO Session.
The inactivity timeout can be any value of the server’s choosing.
If the client does not gracefully close an inactive DSO
Session, then after twice this interval, or five seconds,
whichever is greater, the server will forcibly abort the connection.</t>
  <t hangText='KEEPALIVE INTERVAL:'>
  the keepalive interval for the current DSO Session, specified as
a 32-bit unsigned integer in network (big endian) byte order in units of milliseconds.
This is the interval at which a client MUST generate keepalive
traffic to maintain connection state.
The keepalive interval MUST NOT be less than ten seconds.
If the client does not generate the mandated keepalive traffic,
then after twice this interval the server will forcibly abort the connection.
Since the minimum allowed keepalive interval is ten seconds, the
minimum time at which a server will forcibly disconnect a client for
failing to generate the mandated keepalive traffic is twenty seconds.</t>
</list></t>

<t>In a client-initiated DSO Keepalive message,
the Session Timeouts contain the client’s requested values.
In a server response to a client-initiated message, the Session Timeouts contain 
the server’s chosen values, which the client MUST respect.
This is modeled after the DHCP protocol, where the client
requests a certain lease lifetime using DHCP option 51 <xref target="RFC2132"/>,
but the server is the ultimate authority
for deciding what lease lifetime is actually granted.</t>

<t>In a server-initiated DSO Keepalive message, the Session Timeouts
unilaterally inform the client of the new values from this point
forward in this DSO Session. The client MUST NOT generate a
response to the server-initiated DSO Keepalive message.</t>

<t>When a client is sending its second and subsequent Keepalive DSO 
requests to the server, the client SHOULD continue to request its preferred 
values each time. This allows flexibility, so that if conditions change during 
the lifetime of a DSO Session, the server can adapt its responses to better fit 
the client’s needs.</t>

<section anchor="client-handling-of-received-session-timeout-values" title="Client handling of received Session Timeout values">

<t>When a client receives a response to its client-initiated DSO Keepalive message,
or receives a server-initiated DSO Keepalive message, the client has then 
received Session Timeout values dictated by the server. The two timeout values 
contained in the DSO Keepalive TLV from the server may each be higher, lower, or 
the same as the respective Session Timeout values the client previously had for 
this DSO Session.</t>

<t>In the case of the keepalive timer, the handling of the received value is 
straightforward. The act of receiving the message containing the DSO Keepalive 
TLV itself resets the keepalive timer and updates the keepalive interval for the 
DSO Session. The new keepalive interval indicates the 
maximum time that may elapse before another message must be sent
or received on this DSO Session, if the DSO Session is to remain alive.</t>

<t>In the case of the inactivity timeout, the handling of the received value 
is a little more subtle, though the meaning of the inactivity 
timeout is unchanged — it still indicates the maximum permissible time allowed 
without activity on a DSO Session.
The act of receiving the message containing the DSO Keepalive TLV does not
itself reset the inactivity timer. The time elapsed since the last useful
activity on this DSO Session is unaffected by exchange of DSO Keepalive messages.
The new inactivity timeout value in the DSO Keepalive TLV in the received message
does update the timeout associated with the running inactivity timer;
that becomes the new maximum permissible time without activity on a DSO Session.</t>

<t><list style="symbols">
  <t>If the current inactivity timer value is not greater than the
new inactivity timeout, then the DSO Session may remain open for now.
When the inactivity timer value exceeds the new inactivity timeout,
the client MUST then begin closing the DSO Session, as described above.</t>
  <t>If the current inactivity timer value is already greater
than the new inactivity timeout, then this DSO Session has
already been inactive for longer than the server permits,
and the client MUST immediately begin closing this DSO Session.</t>
  <t>If the current inactivity timer value is already more than twice the
new inactivity timeout, then the client is immediately considered delinquent
(this DSO Session is immediately eligible to be forcibly terminated by the server)
and the client MUST immediately begin closing this DSO Session.
However if a server abruptly reduces the inactivity timeout in this
way, then, to give the client time to close the connection gracefully
before the server resorts to forcibly aborting it, the server
SHOULD give the client an additional grace period of one quarter
of the new inactivity timeout, or five seconds, whichever is greater.</t>
</list></t>

</section>
<section anchor="relation-to-edns0-tcp-keepalive-option" title="Relation to EDNS(0) TCP Keepalive Option">

<t>The inactivity timeout value in the Keepalive TLV (DSO-TYPE=1) has similar
intent to the EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>.
A client/server pair that supports DSO MUST NOT use the
EDNS(0) TCP KeepAlive option within any message after a DSO 
Session has been established.
Once a DSO Session has been established, if either
client or server receives a DNS message over the DSO Session that contains an
EDNS(0) TCP Keepalive option, this is an error and the receiver of the
EDNS(0) TCP Keepalive option MUST forcibly abort the connection immediately.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="padding" title="Encryption Padding TLV">

<t>The Encryption Padding TLV (DSO-TYPE=2) can only be used as
an Additional or Response Additional TLV.
It is only applicable when the DSO Transport layer uses encryption
such as TLS.</t>

<t>The TYPE-DEPENDENT DATA for the the Padding TLV is optional and is a
variable length field containing non-specified values. A DATA LENGTH
of 0 essentially provides for 4 octets of padding (the minimum amount).</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   /                                                               /
   /                   VARIABLE NUMBER OF OCTETS                   /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t>As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
the PADDING octets SHOULD be set to 0x00.  Other values MAY be used,
for example, in cases where there is a concern that the padded
message could be subject to compression before encryption.
PADDING octets of any value MUST be accepted in the messages received.</t>

<t>The Encryption Padding TLV may be included in either a DSO request, response, or both.
As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
if a request is received with a Encryption Padding TLV,
then the response MUST also include an Encryption Padding TLV.</t>

<t>The length of padding is intentionally not specified in this document and
is a function of current best practices with respect to the type and length
of data in the preceding TLVs <xref target="I-D.ietf-dprive-padding-policy"/>.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="summary" title="Summary">

<t>This section summarizes some noteworthy highlights about
various components of the DSO protocol.</t>

<section anchor="message-id" title="MESSAGE ID">

<t>In DSO Request Messages the MESSAGE ID may be either
nonzero (signaling that the responder MUST generate a response)
or zero (signaling that the responder MUST NOT generate a response).</t>

<t>In DSO Response Messages the MESSAGE ID MUST NOT be zero
(since this would be a response to a request that had
indicated that a response is not allowed).</t>

<t>The table below illustrates the legal combinations:</t>

<figure><artwork><![CDATA[
                          +--------------------+-------------------+
                          | Nonzero MESSAGE ID |  Zero MESSAGE ID  |
   +----------------------+--------------------+-------------------+
   | DSO Request Message  |         X          |         X         |
   +----------------------+--------------------+-------------------+
   | DSO Response Message |         X          |                   |
   +----------------------+--------------------+-------------------+
]]></artwork></figure>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="tlv-usage" title="TLV Usage">

<t>The table below indicates, for each of the three TLVs defined in this
document, whether they are valid in each of ten different contexts.</t>

<t>The first five contexts are requests from client to server,
and the corresponding responses from server back to client:</t>

<t><list style="symbols">
  <t>C-P - Primary TLV,
sent in DSO Request message,
from client to server,
with nonzero MESSAGE ID indicating that this request MUST generate response message.</t>
  <t>C-U - Primary TLV (unacknowledged),
sent in DSO Request message,
from client to server,
with zero MESSAGE ID indicating that this request MUST NOT generate response message.</t>
  <t>C-A - Additional TLV, optionally added to request message from client to server.</t>
  <t>CRP - Response Primary TLV, included in response message sent to back the client
(in response to a client “C-P” request with nonzero MESSAGE ID indicating that a response is required)
where the DSO-TYPE of the Response TLV matches the DSO-TYPE of the Primary TLV in the request.</t>
  <t>CRA - Response Additional TLV, included in response message sent to back the client
(in response to a client “C-P” request with nonzero MESSAGE ID indicating that a response is required)
where the DSO-TYPE of the Response TLV does not match the DSO-TYPE of the Primary TLV in the request.</t>
</list></t>

<t>The second five contexts are the reverse: requests from server to client,
and the corresponding responses from client back to server.</t>

<figure><artwork><![CDATA[
              +-------------------------+-------------------------+
              | C-P  C-U  C-A  CRP  CRA | S-P  S-U  S-A  SRP  SRA |
 +------------+-------------------------+-------------------------+
 | RetryDelay |                      X  |       X                 |
 +------------+-------------------------+-------------------------+
 | KeepAlive  |  X              X       |       X                 |
 +------------+-------------------------+-------------------------+
 | Padding    |            X         X  |            X         X  |
 +------------+-------------------------+-------------------------+
]]></artwork></figure>

<t>It is recommended that definitions of future TLVs include a
similar table summarizing the contexts where the new TLV is valid.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="inactivity-timeout" title="Inactivity Timeout">

<t>The Inactivity Timeout may have any 32-bit unsigned integer value.</t>

<t>The value zero informs the client that it
should not speculatively maintain idle connections at all, and
as soon as the client has completed the operation or operations relating
to this server, the client should immediately begin closing this session.</t>

<t>The maximum possible value,
0xFFFFFFFF (2^32-1 milliseconds, approximately 49.7 days),
informs the client that it may keep an idle connection open as long as it wishes.</t>

<t>The Inactivity timer is reset by any message <spanx style="strong">except</spanx> the Keepalive TLV,
and remains cleared any time that an operation is outstanding.</t>

</section>
<section anchor="keepalive-interval" title="Keepalive Interval">

<t>The Keepalive Interval is a 32-bit unsigned integer value,
with a minimum value of 10,000 milliseconds (10 seconds).</t>

<t>The maximum possible value,
0xFFFFFFFF (2^32-1 milliseconds, approximately 49.7 days),
informs the client that it should generate no keepalive traffic.</t>

<t>Any message exchange (including the Keepalive TLV) resets the Keepalive timer.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="dso-opcode-registration" title="DSO OPCODE Registration">

<t>The IANA is directed to record the value (tentatively) 6 for the DSO OPCODE
in the DNS OPCODE Registry.</t>

</section>
<section anchor="dso-rcode-registration" title="DSO RCODE Registration">

<t>The IANA is directed to record the value (tentatively) 11 for the DSONOTIMP error code
in the DNS RCODE Registry.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="dso-type-code-registry" title="DSO Type Code Registry">

<t>The IANA is directed to create the 16-bit DSO Type Code Registry,
with initial (hexadecimal) values as shown below:</t>

<texttable>
      <ttcol align='left'>Type</ttcol>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Status</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>0000</c>
      <c>RetryDelay</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0001</c>
      <c>KeepAlive</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0002</c>
      <c>EncryptionPadding</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0003-003F</c>
      <c>Unassigned, reserved for    DSO session-management TLVs</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0040-F7FF</c>
      <c>Unassigned</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>F800-FBFF</c>
      <c>Reserved for experimental/local use</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>FC00-FFFF</c>
      <c>Reserved for future expansion</c>
      <c>&#160;</c>
      <c>&#160;</c>
</texttable>

<t>DSO Type Codes in the “experimental/local” range F800-FBFF
may be used as Experimental Use or Private Use values <xref target="RFC5226"/>
and may be used freely for development purposes,
or for other purposes within a single site.
No attempt is made to prevent multiple sites from using
the same value in different (and incompatible) ways.
There is no need for IANA to review such assignments
(since IANA does not record them) and assignments
are not generally useful for broad interoperability.
It is the responsibility of the sites making use of
“experimental/local” values to ensure that no
conflicts occur within the intended scope of use.</t>

<t>Registration of new DSO Type Codes in
the “Reserved for future expansion” range FC00-FFFF
and “Unassigned, reserved for DSO session-management TLVs” range 0003-003F
requires publication of an IETF Standards Action document <xref target="RFC5226"/>.</t>

<t>Requests to register additional new DSO Type Codes
in the “Unassigned” range 0040-F7FF
are to be recorded by IANA after consulation with the
registry’s Designated Expert <xref target="RFC5226"/> at that time.
At the time of publication of this document, the Designated Expert
for the newly created DSO Type Code registry is [<spanx style="strong">TBD</spanx>].</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>If this mechanism is to be used with DNS over TLS, then these messages
are subject to the same constraints as any other DNS-over-TLS messages
and MUST NOT be sent in the clear before the TLS session is established.</t>

<t>The data field of the “Encryption Padding” TLV could be used as a covert channel.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to
Tim Chown,
Ralph Droms,
Jan Komissar,
Manju Shankar Rao,
and Ted Lemon
for their helpful contributions to this document.</t>

<t><vspace blankLines='999' /></t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC1035;
&RFC7766;
&RFC6891;
&RFC7828;
&RFC2119;
&RFC7830;
&RFC1034;
&RFC2136;
&RFC1918;
&RFC5382;
&RFC2132;
&RFC5226;


    </references>

    <references title='Informative References'>

<reference anchor="NagleDA" target="http://www.stuartcheshire.org/papers/nagledelayedack/">
  <front>
    <title>TCP Performance problems caused by interaction between Nagle's Algorithm and Delayed ACK</title>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization></organization>
    </author>
    <date year="2005" month="May" day="20"/>
  </front>
</reference>
&RFC7858;
&RFC6763;
&I-D.ietf-dnssd-push;
&RFC0768;
&RFC7413;
&I-D.ietf-tls-tls13;
&I-D.sctl-dnssd-mdns-relay;
&RFC1122;
&I-D.ietf-dprive-padding-policy;


    </references>



  </back>

<!-- ##markdown-source:
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
H97hGI7DX7RtNu9oF2K0mqsvuHTkE/Um3VgYkqS/dLYrvQQwyZHne2N3IirE
1wIC3ToPXee+wzXP6/63TUT11iQGvZ2OHMPAhDez2EDshZRx4dCA2TDOfdKv
GFxljMtQq0EN2igGbks+pdxJiHAcAUAcvRzXRGjbUIHRnm+3tkrsge5GzBWV
R1FpDlrlmtEXNaRl40hX0ReSNZAeAr9oWwL9DTVhBNMWHbwIa0FEyySBBzVC
Zp7s6XxhwqECIdEwJ+jm1yBVyVeG46nPcHi4u1yc6uFEXUfKHVLczmrK4qzT
9sqgnod2N6wSyq8UUBe7qVtWU9qvzmslQ0nsmGbxjA2SpW5NnTQFtSBoXBcN
7L3YbQtAA7p+MdJOBkmGnbqTVtsdz9dCqrRvccgkdROyYHviBgjU5tQtjcb1
PFRbc4Dmu4hexK8w5qXWiIxADZTSxhUVO+guNo3shLnBo0kHzYveqVE7Q3WO
tPU25/W2/mVJxHhr3zwYr+NgWqyrtFnm70gDbbelJR8p8SYpQyFXONTl7RMW
vlmxL727k7sPqkOuWw3Da0QGa8MoZWQUcSMOlp9RmBqkOhlVbXyJioFGe4Fq
SbsoKtBBInHeeltqOmM4emdXJDm5ueBEm5r38vih0a1ZSnzYKevna8Qr4ICS
ldUiY4aFw8AxGeHn45TLrSkJ2j729gCktGp5NltoqFdwl9GXcUhxMJyMD6vk
MS11OnO5q4vu10aYNUsnTvgxRU/E0oi/D3bG0YHpNXRbBvHwTCQWu5BNbrF0
yOzimhJpFhAiUviAYaX4z3ZXEO3LEc/va2rBSx2Ly7agFxcFdcGSyinx27gH
BWl1MktXl8uoRAy+vwslFvMveFhaCGsq4sRiyUldhwKDosXYurbDAqiFZ1ph
OnDtX9nZZG6ncbbwwqcnw4wbw91mVRadYme7pH6s7R7q6/eSIEJXLA6NCdYi
drqvuzWFxhosJkCN5vJG0kJ6qifIzoWW1pwAo3OzgB0Pq/ZvaRGETGLnfqG8
k+wFxga57gBibjNIAd46uLlRWfYozuFX4FTHCSoVZohJfASb59AsFOfPv8pR
HdjxXj5UqUkQTSEeZ8vY4njHJVvL/EoqumMBLvYTYhCh8s1Tm2sPZCOXNDkT
hwrHSXF2oKhsaaFnrTREjW0NE+TE2lgGzsP202DRSq0iyb/TMupdlcOXtVdx
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

-->

</rfc>

