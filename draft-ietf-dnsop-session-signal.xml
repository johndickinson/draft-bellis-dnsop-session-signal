<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.1.2 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC7766 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7766.xml">
<!ENTITY RFC6891 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6891.xml">
<!ENTITY RFC7828 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7828.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC7830 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7830.xml">
<!ENTITY RFC1034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC2136 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2136.xml">
<!ENTITY RFC1918 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1918.xml">
<!ENTITY RFC2132 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2132.xml">
<!ENTITY RFC5226 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5226.xml">
<!ENTITY RFC7858 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7858.xml">
<!ENTITY RFC6763 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6763.xml">
<!ENTITY I-D.ietf-dnssd-push SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dnssd-push.xml">
<!ENTITY RFC0768 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.0768.xml">
<!ENTITY RFC1122 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1122.xml">
<!ENTITY I-D.ietf-dprive-padding-policy SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dprive-padding-policy.xml">
]>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-dnsop-session-signal-05" category="std" updates="RFC 7766, RFC 1035">

  <front>
    <title>DNS Stateful Operations</title>

    <author initials="R." surname="Bellis" fullname="Ray Bellis">
      <organization abbrev="ISC">Internet Systems Consortium, Inc.</organization>
      <address>
        <postal>
          <street>950 Charter Street</street>
          <city>Redwood City</city>
          <code>CA 94063</code>
          <country>USA</country>
        </postal>
        <phone>+1 650 423 1200</phone>
        <email>ray@isc.org</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>1 Infinite Loop</street>
          <city>Cupertino</city>
          <code>CA 95014</code>
          <country>USA</country>
        </postal>
        <phone>+1 408 974 3207</phone>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="J." surname="Dickinson" fullname="John Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>jad@sinodun.com</email>
      </address>
    </author>
    <author initials="S." surname="Dickinson" fullname="Sara Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>sara@sinodun.com</email>
      </address>
    </author>
    <author initials="A." surname="Mankin" fullname="Allison Mankin">
      <organization>Salesforce</organization>
      <address>
        <email>allison.mankin@gmail.com</email>
      </address>
    </author>
    <author initials="T." surname="Pusateri" fullname="Tom Pusateri">
      <organization>Unaffiliated</organization>
      <address>
        <postal>
          <street></street>
          <city>Raleigh</city>
          <code>NC 27608</code>
          <country>USA</country>
        </postal>
        <phone>+1 919 867 1330</phone>
        <email>pusateri@bangj.com</email>
      </address>
    </author>

    <date year="2017" month="November" day="30"/>

    <area>Internet</area>
    <workgroup>DNSOP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document defines a new DNS OPCODE, for DNS Stateful Operations (DSO).
DSO messages are used to communicate operations within persistent
stateful sessions, expressed using type-length-value (TLV) syntax.
This document defines an initial set of TLVs, including ones
used to manage session timeouts and termination.
This mechanism is intended to reduce the overhead of existing 
“per-packet” signaling mechanisms with “per-message” semantics as well as 
defining new stateful operations not defined in EDNS(0).</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The use of transports for DNS other than UDP is being increasingly specified,
for example, DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> and DNS over TLS <xref target="RFC7858"/>.
Such transports can offer persistent, long-lived sessions and therefore when
using them for transporting DNS messages it is of benefit to have a mechanism
that can establish parameters associated with those sessions, such as timeouts.
In such situations it is also advantageous to support server initiated messages.</t>

<t>The existing EDNS(0) Extension Mechanism for DNS <xref target="RFC6891"/> is explicitly
defined to only have “per-message” semantics. Whilst EDNS(0) has been used to
signal at least one session-related parameter (the EDNS(0) TCP Keepalive option
<xref target="RFC7828"/>) the result is less than optimal due to the restrictions
imposed by the EDNS(0) semantics and the lack of server-initiated signalling. 
For example, a server cannot arbitrarily 
instruct a client to close a connection because the server can only send EDNS(0) options 
in responses to queries that contained EDNS(0) options.</t>

<t>This document defines a new DNS OPCODE, for DNS Stateful Operations (DSO).
DSO messages are used to communicate operations within persistent
stateful sessions, expressed using type-length-value (TLV) syntax.
This document defines an initial set of TLVs, including ones
used to manage session timeouts and termination.</t>

<t>All three of the TLVs defined here are mandatory for all implementations of DSO.
Additional TLVs may be defined in additional specifications.</t>

<t>It should be noted that the message format for DNS Stateful Operations
(see <xref target="format"/>) differs from the traditional DNS packet
format used for standard queries and responses.
The standard twelve-octet header is used, but the four count fields
(QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) are set to zero and their
corresponding sections are not present.
The actual data pertaining to DNS Stateful Operations
(expressed in TLV format) is appended to the end of the DNS message header.
When displayed using packet analyzer tools that have not been
updated to recognize the DNS Stateful Operations format, this
will result in the Stateful Operations data being displayed
as unknown additional data after the end of the DNS message.
It is likely that future updates to these tools will add the ability
to recognize, decode, and display the Stateful Operations data.</t>

<t>This new format has distinct advantages over an RR-based format because it
is more explicit and more compact. Each TLV definition is specific
to the use case, and as a result contains no redundant or overloaded fields.
Importantly, it completely avoids conflating DNS Stateful Operations in anyway 
with normal DNS operations or with existing EDNS(0) based functionality.
A goal of this approach is to avoid the operational issues that have
befallen EDNS(0), particularly relating to middle-box behaviour.</t>

<t>With EDNS(0), multiple options may be packed into a single OPT pseudo-RR,
and there is no generalized mechanism for a client to be able to tell
whether a server has processed or otherwise acted upon each individual
option within the combined OPT RR.
The specifications for each individual option need to define how each
different option is to be acknowledged, if necessary.</t>

<t>In contrast to EDNS(0), with DNS Stateful Operations there is no
compelling motivation to pack multiple operations into a single
message for efficiency reasons, because DNS Stateful Operations
always operates using a connection-oriented transport protocol.
Each Stateful operation is communicated in its own separate
DNS message, and the transport protocol can take care of packing
separate DNS messages into a single IP packet if appropriate.
For example, TCP can pack multiple small DNS messages into a single TCP segment.
This simplification allows for clearer semantics.
Each DSO request message communicates just one primary operation,
and the RCODE in the corresponding response message indicates the
success or failure of that operation.</t>

</section>
<section anchor="terminology" title="Terminology">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and
“OPTIONAL” in this document are to be interpreted as described in
“Key words for use in RFCs to Indicate Requirement Levels” <xref target="RFC2119"/>.</t>

<t>“DSO” is used to mean DNS Stateful Operation.</t>

<t>The term “connection” means a bidirectional byte stream of reliable,
in-order messages, such as provided by using
DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> or DNS over TLS <xref target="RFC7858"/>.</t>

<t>The unqualified term “session” in the context of this document means the exchange of
DNS messages over a connection where:</t>

<t><list style="symbols">
  <t>The connection between client and server is persistent and relatively
long-lived (i.e., minutes or hours, rather than seconds).</t>
  <t>Either end of the connection may initiate messages to the other.</t>
</list></t>

<t>A “DSO session” is established between two endpoints that
acknowledge persistent DNS state via the exchange of DSO messages
over the connection. This is distinct from, for example a DNS-over-TCP session
as described in RC7766.</t>

<t>A “DSO session” is terminated when the underlying connection is closed.</t>

<t>The term “server” means the software with a listening socket, awaiting
incoming connection requests.</t>

<t>The term “client” means the software which initiates a connection
to the server’s listening socket.</t>

<t>The terms “initiator” and “responder” correspond respectively to the
initial sender and subsequent receiver of a DSO request message,
regardless of which was the “client” and “server” in the usual DNS sense.</t>

<t>The term “sender” may apply to either an initiator
(when sending a DNS Stateful Operation request message)
or a responder (when sending a DNS Stateful Operation response message).</t>

<t>Likewise, the term “receiver” may apply to either a responder
(when receiving a DNS Stateful Operation request message)
or an initiator (when receiving a DNS Stateful Operation response message).</t>

<t>DNS Stateful Operations are expressed using type-length-value (TLV) syntax.</t>

<t>Two timers (elapsed time since an event) are defined in this document:</t>

<t><list style="symbols">
  <t>an inactivity timer (see <xref target="keepalive"/> and <xref target="inactivetimer"/>)</t>
  <t>a keepalive timer (see <xref target="keepalive"/> and <xref target="keepalivetimer"/>)</t>
</list></t>

<t>The timeouts associated with these timers are called the inactivity timeout and 
the keepalive interval respectively. 
The term “Session Timeouts” is used to refer to this pair of timeout values.</t>

<t>Reseting a timer means resetting the timer value to zero and starting the timer 
again. Clearing a timer means resetting the timer value to zero but NOT starting 
the time again.</t>

</section>
<section anchor="discussion" title="Discussion">

<t>There are several use cases for DNS Stateful operations that can 
be described here.</t>

<t>Firstly, establishing session parameters such as server defined timeouts is of 
great use in the 
general management of persistent connections. For example, using DSO sessions 
for stub to recursive DNS-over-TLS <xref target="RFC7858"/> is more flexible for both the 
client and the server than attempting to manage sessions using just the EDNS(0)
TCP Keepalive option
<xref target="RFC7828"/>. The simple set of TLVs defined in this document is
sufficient to greatly enhance connection management for this use case.</t>

<t>Secondly, DNS-SD <xref target="RFC6763"/> has evolved into a naturally session based mechanism where,
for example, long-lived subscriptions lend themselves to ‘push’ mechanisms as 
opposed to polling. Long-lived stateful connections and server initiated 
messages align with this use case <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>A general use case is that DNS traffic is often bursty but session establishment 
can be expensive. One challenge with long-lived connections is to maintain 
sufficient traffic to maintain NAT and firewall state.
To mitigate this issue this document introduces a
new concept for the DNS, that is DSO “Keepalive traffic”.
This traffic carries no DNS data and is not considered ‘activity’
in the classic DNS sense, but serves to maintain state in middle boxes,
and to assure client and server that they still have connectivity to each other.</t>

<t>There are a myriad of other potential use cases for DSO given the versatility 
and extensibility of this specification.</t>

<t><xref target="details"/> of this document describes the protocol details of DNS Stateful
Operations including definitions of three TLVs for session management and 
encryption padding. <xref target="lifecycle"/> presents a
detailed discussion of the DSO Session lifecycle including an
in-depth discussion of keepalive traffic and session termination.</t>

</section>
<section anchor="details" title="Protocol Details">

<section anchor="establishment" title="DSO Session Establishment">

<t>DSO messages MUST only be carried in protocols and in
environments where a session may be established according to the definition above.
Standard DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/>, and DNS over TLS <xref target="RFC7858"/>
are suitable protocols.</t>

<t>DNS over plain UDP <xref target="RFC0768"/> is not appropriate since it fails on the requirement for
in-order message delivery, and, in the presence of NAT gateways and firewalls
with short UDP timeouts, it fails to provide a persistent bi-directional
communication channel unless an excessive amount of keepalive traffic is used.</t>

<t>In some environments it may be known in advance by external means
that both client and server support DSO, and in these cases either
client or server may initiate DSO messages at any time.</t>

<t>However, in the typical case a server will not know in advance whether a
client supports DSO, so in general, unless it is known in advance by other means
that a client does support DSO, a server MUST NOT initiate DSO messages until
a DSO session has been mutually established, as described below.</t>

<t>A client MAY attempt to initiate DSO messages at any time
on a connection; receiving a NOTIMP response in reply indicates that the
server does not implement DSO, and the client SHOULD NOT
issue further DSO messages on that connection.</t>

<t>The DSO message format (see <xref target="tlvformat"/>) includes a bit in the TLV structure
that indicates whether or not a particular DSO request message from the
initiator requires a corresponding DSO response message from the responder.
A “DSO session” is established over a connection by the client
sending a DSO request message of a kind that has the acknowledgement bit set,
indicating that it is a request message of a kind that requires a response.</t>

<t>When the server receives a response-requiring DSO request message
from a client, and transmits its response, the server considers
the DSO session established.</t>

<t>When the client receives the server’s DSO response,
the client considers the DSO session established.</t>

<t>Apart from cases where it is known in advance by external means
that both client and server support DSO,
session establishment can only be performed by the client sending
a DSO request message of a kind that requires a response.</t>

<t>Currently the only suitable such messages are the 
DSO Keepalive Operation TLV (see <xref target="keepalive"/>) and the
DSO Encryption Padding TLV (see <xref target="padding"/>).</t>

<t>If future documents define other client-initiated
response-requiring DSO request messages, then one of these
messages may also be used to establish a DSO session.</t>

<t>Clients MAY send non-response-requiring DSO request messages at any time
on a connection, but a “DSO session” is only considered established after:</t>

<t><list style="symbols">
  <t>the client has sent its first response-requiring DSO request message, and</t>
  <t>(at the server) the server has received this request and transmitted its response</t>
  <t>(at the client) the client has received the server’s response</t>
</list></t>

<t>Once a “DSO session” has been established,
either end may unilaterally send DSO messages at any time,
and therefore either client or server may be the initiator of a message.</t>

<t>Once a “DSO session” has been established,
clients and servers should behave as described in this specification with
regard to inactivity timeouts and connection close, not as prescribed in
the previous specification for DNS over TCP <xref target="RFC7766"/>.</t>

<section anchor="middle-box-considerations" title="Middle-box Considerations">

<t>Where an application-layer middle box (e.g., a DNS proxy, forwarder, or
session multiplexer) is in the path the middle box MUST NOT blindly
forward DSO messages in either direction, and MUST treat the inbound
and outbound connections as separate sessions.  This does not preclude
the use of DSO messages in the presence of an IP-layer middle box such
as a NAT that rewrites IP-layer and/or transport-layer headers, but
otherwise preserves the effect of a single session between the client
and the server.</t>

<t>To illustrate the above, consider a network where a middle box
terminates one or more TCP connections from clients and multiplexes the
queries therein over a single TCP connection to an upstream server.  The
DSO messages and any associated state are specific to the individual
TCP connections.  A DSO-aware middle box MAY in some circumstances be
able to retain associated state and pass it between the client and
server (or vice versa) but this would be highly TLV-specific.  For
example, the middle box may be able to maintain a list of which clients
have made Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/> and
make its own subscription(s) on their behalf, relaying any subsequent
notifications to the client (or clients) that have subscribed to that
particular notification.</t>

</section>
</section>
<section anchor="format" title="Message Format">

<t>A DSO message begins with
the standard twelve-octet DNS message header <xref target="RFC1035"/>
with the OPCODE field set to the DSO OPCODE (tentatively 6).
However, unlike standard DNS messages, the question section, answer section,
authority records section and additional records sections are not present.
The corresponding count fields (QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) MUST be
set to zero on transmission.</t>

<t>If a DSO message is received where any of the count fields are
not zero, then a FORMERR MUST be returned,
unless a future document specifies otherwise.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                          MESSAGE ID                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |QR |    OPCODE     |            Z              |     RCODE     |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     QDCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ANCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     NSCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ARCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                           DSO Data                            /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<section anchor="header" title="Header">

<t>In a request the MESSAGE ID field MUST be set to a unique value, that the
initiator is not currently using for any other active operation on this 
connection.
For the purposes here, a MESSAGE ID is in use in this DSO session if the
initiator has used it in a request for which it has not yet received a
response, or if the client has used it to setup state that it has not yet
deleted. For example, state could be a subscription <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>In a response the MESSAGE ID field MUST contain a copy of the value of the
MESSAGE ID field in the request being responded to.</t>

<t>In a request the DNS Header QR bit MUST be zero (QR=0).
If the QR bit is not zero the message is not a request.</t>

<t>In a response the DNS Header QR bit MUST be one (QR=1).
If the QR bit is not one the message is not a response.</t>

<t>The DNS Header OPCODE field holds the DSO OPCODE value (tentatively 6).</t>

<t>The Z bits are currently unused in DSO messages,
and in both DSO requests and DSO responses the
Z bits MUST be set to zero (0) on transmission and MUST be silently ignored
on reception, unless a future document specifies otherwise.</t>

<t>In a request message (QR=0) the RCODE is generally set to zero on transmission,
and silently ignored on reception, except where specified otherwise
(for example, the Retry Delay operation (see <xref target="delay"/>), where the RCODE indicates the reason
for termination).</t>

<t>The RCODE value in a response may be one of the following values:</t>

<texttable>
      <ttcol align='right'>Code</ttcol>
      <ttcol align='left'>Mnemonic</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>0</c>
      <c>NOERROR</c>
      <c>Operation processed successfully</c>
      <c>1</c>
      <c>FORMERR</c>
      <c>Format error</c>
      <c>2</c>
      <c>SERVFAIL</c>
      <c>Server failed to process request due to a problem with the server</c>
      <c>3</c>
      <c>NXDOMAIN</c>
      <c>Name Error — Named entity does not exist (TLV-dependent)</c>
      <c>4</c>
      <c>NOTIMP</c>
      <c>DSO not supported</c>
      <c>5</c>
      <c>REFUSED</c>
      <c>Operation declined for policy reasons</c>
      <c>9</c>
      <c>NOTAUTH</c>
      <c>Not Authoritative (TLV dependent)</c>
      <c>11</c>
      <c>DSONOTIMP</c>
      <c>DSO type code not supported</c>
</texttable>

<t>Use of the above RCODEs is likely to be common in DSO but 
does not preclude the definition and use of other codes in future documents that 
make use of DSO.</t>

<t>If a document describing a DSO makes use of either NXDOMAIN (Name Error)
or NOTAUTH then that document MUST explain the meaning.</t>

</section>
<section anchor="dsodata" title="DSO Data">

<t>The standard twelve-octet DNS message header is followed by the DSO Data.</t>

<t>The first TLV in a DSO request message is called the Operation 
TLV. Any subsequent TLVs after this initial Operation TLV are called Modifier TLVs.</t>

<t>Depending on the operation a DSO response can contain:</t>

<t><list style="symbols">
  <t>No TLVs</t>
  <t>Only an Operation TLV</t>
  <t>An Operation TLV followed by one or more Modifier TLVs</t>
  <t>Only Modifier TLVs</t>
</list></t>

<section anchor="tlvformat" title="TLV Format">

<t>Operation and modifier TLVs both use the same encoding format.</t>

<t>The Acknowledgement bit in an Operation TLV of a request dictates if a response is to be sent. The Operation TLV may or may not be echoed back in the response according to the definition of the TLV. Each Operation TLV definition should stipulate whether an acknowledgement is REQUIRED. If the Operation TLV is not included in the response according to the TLV definition, the matching identifier in the standard DNS Header response is sufficient as an acknowledgement. If the TLV Acknowledgement bit is cleared in a request, a response MUST NOT be sent. The Acknowledgement bit is NEVER set in a response. Modifier TLVs MUST NEVER set the Acknowledgement bit in request or response.</t>

<t>It is by design that Operation TLVs SHOULD normally require a response and, therefore, set the TLV Acknowledgement bit in a request. However, for some Operation TLVs, this may be undesirable and the TLV Acknowledgement bit MAY be cleared in the request.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   | A |                        DSO-TYPE                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                        DSO DATA LENGTH                        |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                      TYPE-DEPENDENT DATA                      /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='A:'>
  A 1-bit TLV Response flag indicating whether or not an Operation TLV requires
a response Acknowledgement. This bit is never set in responses to Operation TLVs and never set in Modifier TLVs in either direction.</t>
  <t hangText='DSO-TYPE:'>
  A 15-bit field in network order giving the type of the current DSO TLV per
the IANA DSO Type Codes Registry.</t>
  <t hangText='DSO DATA LENGTH:'>
  A 16-bit field in network order giving the size in octets of
the TYPE-DEPENDENT DATA.</t>
  <t hangText='TYPE-DEPENDENT DATA:'>
  Type-code specific format.</t>
</list></t>

<t>Where domain names appear within TYPE-DEPENDENT DATA, they MAY be compressed 
using standard DNS name compression. However, the compression MUST NOT point
outside of the TYPE-DEPENDENT DATA section and offsets MUST be from the start
of the TYPE-DEPENDENT DATA.</t>

</section>
<section anchor="operation-tlvs" title="Operation TLVs">

<t>An “Operation TLV” specifies the operation to be performed.</t>

<t>A DSO message MUST contain at most one Operation TLV.</t>

<t>In all cases a DSO request message MUST contain exactly one 
Operation TLV, indicating the operation to be performed.</t>

<t>Depending on the operation, a DSO response message MAY contain no 
Operation TLV, because it is simply a response to a previous request message,
and the MESSAGE ID in the header is sufficient to identify the request in 
question. Or it may contain a single corresponding response Operation TLV, with 
the same DSO-TYPE as in the request message. The specification for each DSO
type determines whether a response for that operation type 
is required to carry the Operation TLV.</t>

<t>If a DSO response is received for an operation which requires
that the response carry an Operation TLV, and the required Operation TLV is not
the first DSO TLV in the response message, then this is a fatal 
error and the recipient of the defective response message MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
<section anchor="modifier-tlvs" title="Modifier TLVs">

<t>A “Modifier TLV” specifies additional parameters
relating to the operation. Immediately following the Operation TLV, if present,
a DSO message MAY contain one or more Modifier TLVs.</t>

</section>
<section anchor="unrecognized-tlvs" title="Unrecognized TLVs">

<t>If a DSO request is received containing an unrecognized
Operation TLV, the receiver MUST send a response with matching
MESSAGE ID, and RCODE DSONOTIMP (tentatively 11). The response MUST NOT contain 
an Operation TLV.</t>

<t>If a DSO message (request or response) is received
containing one or more unrecognized Modifier TLVs, the unrecognized
Modifier TLVs MUST be silently ignored, and the remainder of the message
is interpreted and handled as if the unrecognized parts were not present.</t>

</section>
</section>
<section anchor="edns0-and-tsig" title="EDNS(0) and TSIG">

<t>Since the ARCOUNT field MUST be zero, a DSO message
MUST NOT contain an EDNS(0) option in the additional records section.
If functionality provided by current or future EDNS(0) options is desired
for DSO messages, an Operation TLV or
Modifier TLV needs to be defined to carry the necessary information.</t>

<t>For example, the EDNS(0) Padding Option <xref target="RFC7830"/> used for security purposes
is not permitted in a DSO message,
so if message padding is desired for DSO messages
then the Encryption Padding TLV described in <xref target="padding"/> MUST be used.</t>

<t>Similarly, a DSO message MUST NOT contain a TSIG record.
A TSIG record in a conventional DNS message is added as the last record
in the additional records section, and carries a signature computed over
the preceding message content. Since DSO data appears
after the additional records section, it would not be included in the
signature calculation. 
If use of signatures with DSO messages becomes necessary in the 
future, an explicit Modifier TLV needs to be defined to 
perform this function.</t>

<t>Note however that, while DSO <spanx style="emph">messages</spanx> cannot include
EDNS(0) or TSIG records, a DSO <spanx style="emph">session</spanx> is typically used to 
carry a whole series of DNS messages of different kinds, including DSO
messages, and other DNS message types like Query <xref target="RFC1034"/> 
<xref target="RFC1035"/> and Update <xref target="RFC2136"/>, and those messages can carry EDNS(0) and 
TSIG records.</t>

<t>This specification explicitly prohibits use of the
EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>
in <spanx style="emph">any</spanx> messages sent on a DSO session (because it duplicates
the functionality provided by the DSO Keepalive operation),
but messages may contain other EDNS(0) options as appropriate.</t>

</section>
</section>
<section anchor="message-handling" title="Message Handling">

<t>The initiator MUST set the value of the QR bit in the DNS header to
zero (0), and the responder MUST set it to one (1).
Every DSO request message (QR=0) with the Acknowledgement bit set in the
operation TLV MUST elicit a response (QR=1), which MUST have the same
MESSAGE ID in the DNS message header as in the corresponding request.
DSO request messages sent by the client with the Acknowledgement
bit set in the operation TLV elicit a response from the server, and
DSO request messages sent by the server with the Acknowledgement
bit set in the operation TLV elicit a response from the client.</t>

<t>A DSO request message (QR=0) with the Acknowledgement bit clear in the
operation TLV MUST NOT elicit a response.</t>

<t>The namespaces of 16-bit MESSAGE IDs are disjoint in each direction.
For example, it is <spanx style="emph">not</spanx> an error for both client and server to send a request
message with the same ID. In effect, the 16-bit MESSAGE ID combined with the 
identity of the initiator (client or server) serves as a 17-bit unique 
identifier for a particular operation on a DSO session.</t>

<t>As described in <xref target="header"/> An initiator MUST NOT reuse a MESSAGE ID that is 
already in use for an 
outstanding request, unless specified otherwise by the relevant specification 
for the DSO in question. At the very least, this means 
that a MESSAGE ID MUST NOT be reused in a particular direction
on a particular DSO session while the initiator is waiting for a response to a 
previous request using that MESSAGE ID on that DSO session,
unless specified otherwise by the relevant 
specification for the DSO in question.
(For a long-lived state the MESSAGE ID for the operation
MUST NOT be reused whilst that state remains active.)</t>

<t>If a client or server receives a response (QR=1) where the MESSAGE ID does not
match any of its outstanding operations, this is a fatal error and it MUST 
immediately terminate the connection with a TCP RST (or equivalent for other 
protocols).</t>

</section>
<section anchor="dso-response-generation" title="DSO Response Generation">

<t>With most TCP implementations, for DSO requests that generate a response,
the TCP data acknowledgement (generated because data has been received by TCP),
the TCP window update (generated because TCP has delivered that data to the receiving software),
and the DSO response (generated by the receiving application-layer software itself)
are all combined into a single packet.
Combining these three elements into a single packet gives a
potentially significant improvement in network efficiency.</t>

<t>For DSO requests that do not generate a response,
the TCP implementation generally doesn’t have any way to know
that no response will be forthcoming, so it waits fruitlessly
for the application-layer software to generate a response,
until the Delayed ACK timer fires <xref target="RFC1122"/> (typically 200 milliseconds)
and only then does it send the TCP ack and window update.
In conjunction with Nagle’s Algorithm at the sender,
this can delay the sender’s transmission of its next
(non-full-sized) TCP segment, while the sender is waiting for
its previous (non-full-sized) TCP segment to be acknowledged.
Nagle’s Algorithm exists to combine multiple small
application writes into more efficient large TCP segments,
to guard against wasteful use of the network by applications
that would otherwise transmit a stream of small TCP segments,
but in this case Nagle’s Algorithm (created to improve network efficiency)
can interact badly with TCP’s Delayed ACK feature
(also created to improve network efficiency) <xref target="NagleDA"/>.</t>

<t>Possible mitigations for this problem include:</t>

<t><list style="symbols">
  <t>Disabling Nagle’s Algorithm at the sender.
This is not great, because it results in less efficient use of the network.</t>
  <t>Disabling Delayed ACK at the receiver.
This is not great, because it results in less efficient use of the network.</t>
  <t>Using a networking API that lets the receiver signal to the TCP
implementation that the receiver has received and processed a client
request for which it will not be generating any immediate response.
This allows the TCP implementation to operate efficiently in both cases;
for requests that generate a response, the TCP ack, window update, and
DSO response are transmitted together in a single TCP segment,
and for requests that do not generate a response,
the application-layer software informs the TCP implementation
that it should go ahead and send the TCP ack and window update
immediately, without waiting for the Delayed ACK timer.
Unfortunately it is not known at this time which (if any) of the
widely-available networking APIs currently include this capability.</t>
</list></t>

</section>
</section>
<section anchor="lifecycle" title="DSO Session Lifecycle and Timers">

<section anchor="dso-session-initiation" title="DSO Session Initiation">

<t>A session begins when a client makes a new connection to a server.</t>

<t>A DSO session begin as described in <xref target="establishment"/>.</t>

<t>The client may perform as many DNS operations as it wishes using the
newly created DSO session. Operations SHOULD be pipelined (i.e., the
client doesn’t need wait for a response before sending the next message).
The server MUST act on messages in the order they are transmitted, but
responses to those messages MAY be sent out of order, if appropriate.</t>

</section>
<section anchor="sessiontimeouts" title="DSO Session Timeouts">

<t>Two timeout values are associated with a DSO session: the inactivity timeout, and 
the keepalive interval.</t>

<t>The first timeout value, the inactivity timeout, is the maximum time for which
a client may speculatively keep a DSO session open in the expectation that
it may have future requests to send to that server.</t>

<t>The second timeout value, the keepalive interval, is the maximum permitted
interval between client messages to the server if the client wishes to keep
the DSO session alive.</t>

<t>The two timeout values are independent. The inactivity timeout may be lower, the 
same, or higher than the keepalive interval, though in most cases the inactivity 
timeout is expected to be shorter than the keepalive interval.</t>

<t>Only when the client has a very long-lived low-traffic state does the 
keepalive interval come into play, to ensure that a sufficient residual
amount of traffic is generated to maintain NAT and firewall state
and to assure client and server that they still have connectivity to each other.</t>

<t>On a new DSO session, if no explicit DSO Keepalive message exchange has taken 
place, the default value for both timeouts is 15 seconds.
For both timeouts, lower values of the timeout result in higher network traffic
and higher CPU load on the server.</t>

</section>
<section anchor="inactivetimer" title="Inactive DSO Sessions">

<t>At both servers and clients, the generation or reception of any complete
DNS message, including DNS requests, responses, updates, or DSO
messages, resets both timers for that DSO session, with the exception
that a DSO Keepalive message resets only the keepalive timer, not the inactivity 
timeout timer.</t>

<t>In addition, for as long as the client has an outstanding operation in progress,
the inactivity timer remains cleared, and an inactivity 
timeout cannot occur.</t>

<t>For short-lived DNS operations like traditional queries and updates,
an operation is considered in progress for the time between request and 
response, typically a period of a few hundred milliseconds at most.
At the client, the inactivity timer is cleared upon transmission of a 
request and remains cleared until reception of the corresponding response.
At the server, the inactivity timer is cleared upon reception of a request
and remains cleared until transmission of the corresponding response.</t>

<t>For long-lived DNS Stateful operations, an operation is considered in progress
for as long as the state is active, until it is cancelled.
This means that a DSO session can exist, with a state 
active, with no messages flowing in either direction, for far longer than the 
inactivity timeout, and this is not an error. This is why there are two separate 
timers: the inactivity timeout, and the keepalive interval. Just because a DSO 
session has no traffic for an extended period of time
does not automatically make that DSO session “inactive”,
if it has an active state that is awaiting events.</t>

</section>
<section anchor="the-inactivity-timeout" title="The Inactivity Timeout">

<t>The purpose of the inactivity timeout is for the server to balance its trade off 
between the costs of setting up new DSO sessions and the costs of maintaining inactive 
DSO sessions. A server with abundant DSO session capacity can offer a high inactivity timeout, 
to permit clients to keep a speculative DSO session open for a long time, to save 
the cost of establishing a new DSO session for future communications with that 
server. A server with scarce memory resources can offer a low inactivity timeout,
to cause clients to promptly close DSO sessions whenever they have no outstanding
operations with that server, and then create a new DSO session later when needed.</t>

<section anchor="closing-inactive-dso-sessions" title="Closing Inactive DSO Sessions">

<t>A client is NOT required to wait until the inactivity timeout expires
before closing a DSO session.
A client MAY close a DSO session at any time, at the client’s discretion.
If a client determines that it has no current or reasonably anticipated
future need for an inactive DSO session, then the client SHOULD close that connection.</t>

<t>If, at any time during the life of the DSO session,
the inactivity timeout value (i.e., 15 seconds by default) elapses
without there being any operation active on the DSO session,
the client MUST gracefully close the connection with a
TLS close_notify followed by a TCP FIN (or equivalent for other protocols).</t>

<t>If, at any time during the life of the DSO session, twice the inactivity timeout value
(i.e., 30 seconds by default) elapses without there being any operation
active on the DSO session, the server SHOULD consider the client delinquent,
and forcibly abort the DSO session.
For DSO sessions over TCP (or over TLS over TCP),
to avoid the burden of having a connection in TIME-WAIT state, instead of
closing the connection gracefully the server SHOULD abort
the connection with a TCP RST (or equivalent for other protocols).
(In the BSD Sockets API this is achieved by setting the
SO_LINGER option to zero before closing the socket.)</t>

<t>In this context, an operation being active on a DSO session includes
a query waiting for a response, an update waiting for a response,
or active state,
but not a DSO Keepalive message exchange itself.
A DSO Keepalive message exchange resets only the keepalive
interval timer, not the inactivity timeout timer.</t>

<t>If the client wishes to keep an inactive DSO session open for longer than
the default duration without having to send traffic every 15 seconds,
then it uses the DSO Keepalive message to request
longer timeout values, as described in <xref target="keepalive"/>.</t>

</section>
<section anchor="values-for-the-inactivity-timeout" title="Values for the Inactivity Timeout">

<t>For the inactivity timeout value, lower values result in more frequent DSO session 
teardown and re-establishment. Higher values result in lower traffic and CPU
load on the server, but a larger memory burden to maintain state for inactive 
DSO sessions.</t>

<t>A shorter inactivity timeout with a longer keepalive interval signals to the client 
that it should not speculatively keep inactive DSO sessions open for very long without
reason, but when it does have an active reason to keep a DSO session open, it 
doesn’t need to be sending an aggressive level of keepalive traffic.</t>

<t>A longer inactivity timeout with a shorter keepalive interval signals to the client
that it may speculatively keep inactive DSO sessions open for a long time, but it
should be sending a lot of keepalive traffic on those inactive DSO sessions.
This configuration is expected to be less common.</t>

<t>To avoid repeated teardown and re-establishment of sessions,
the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with an inactivity timeout value less than ten seconds.
If a client receives a Keepalive message specifying an inactivity timeout value
less than ten seconds this is an error and the client MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

<t>This does not mean that a client is forced to keep an idle connection open for
ten seconds if it doesn’t need that — a client is free to close an idle connection whenever it chooses —
it means that servers cannot <spanx style="emph">require</spanx> a client to close an idle connection in under ten seconds.</t>

<t>[Do we really want this restriction? How soon does the client reconnect after tearing down the connection? –SC]</t>

</section>
</section>
<section anchor="keepalivetimer" title="The Keepalive Interval">

<t>The purpose of the keepalive interval is to manage the generation of
sufficient messages to maintain state in middle boxes (such at NAT gateways
or firewalls) and for the client and server to periodically verify that they
still have connectivity to each other. This allows them to clean up state
when connectivity is lost, and attempt re-connection if appropriate.</t>

<section anchor="keepalive-interval-expiry" title="Keepalive Interval Expiry">

<t>If, at any time during the life of the DSO session,
the keepalive interval value (i.e., 15 seconds by default) elapses
without any DNS messages being sent or received on a DSO session,
the client MUST take action to keep the DSO session alive,
by sending a DSO Keepalive message (see <xref target="keepalive"/>).
A DSO Keepalive message exchange resets only the keepalive timer, 
not the inactivity timer.</t>

<t>If a client disconnects from the network abruptly,
without cleanly closing its DSO session,
leaving long-lived state uncanceled,
the server learns of this after failing to
receive the required keepalive traffic from that client.
If, at any time during the life of the DSO session,
twice the keepalive interval value (i.e., 30 seconds by default) elapses
without any DNS messages being sent or received on a DSO session,
the server SHOULD consider the client delinquent,
and forcibly abort the connection with a TCP RST (or equivalent for other 
protocols).</t>

</section>
<section anchor="values-for-the-keepalive-interval" title="Values for the Keepalive Interval">

<t>For the keepalive interval value, lower values result in higher volume keepalive 
traffic. Higher values of the keepalive interval reduce traffic and CPU load, 
but have minimal effect on the memory burden
at the server, because clients keep a DSO session open for the same length of time
(determined by the inactivity timeout) regardless of the level of keepalive traffic 
required.</t>

<t>It may be appropriate for clients and servers to select different keepalive 
interval values depending on the nature of the network they are on.</t>

<t>A corporate DNS server that knows it is serving only clients on the internal 
network, with no intervening NAT gateways or firewalls, can impose a higher 
keepalive interval, because frequent keepalive traffic is not required.</t>

<t>A public DNS server that is serving primarily residential consumer clients, 
where it is likely there will be a NAT gateway on the path, may impose a lower 
keepalive interval, to generate more frequent keepalive traffic.</t>

<t>A smart client may be adaptive to its environment. A client using
a private IPv4 address <xref target="RFC1918"/> to communicate with a DNS server
at an address outside that IPv4 private address block,
may conclude that there is likely to be a NAT gateway on the path,
and accordingly request a lower keepalive interval.</t>

<t>For environments where there is a NAT gateway or firewalls on the path, it is
RECOMMENDED that clients request, and servers grant, a keepalive interval of 15
minutes. In other environments it is RECOMMENDED that clients request, and 
servers grant, a keepalive interval of 60 minutes.</t>

<t>Note that the lower the keepalive interval value, the higher the load on client
and server. For example, an keepalive interval value of 100ms would result in a
continuous stream of at least ten messages per second, in both directions,
to keep the DSO session alive. And, in this extreme example, a single packet loss and
retransmission over a long path could introduce a momentary pause in the stream of messages,
long enough to cause the server to overzealously abort the connection.</t>

<t>Because of this concern, the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with an keepalive interval value less than ten seconds.
If a client receives an Keepalive message specifying an keepalive interval value
less than ten seconds this is an error and the client MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="server-initiated-termination-on-error" title="Server-Initiated Termination on Error">

<t>After sending an error response to a client, the server MAY close the DSO session,
or may allow the DSO session to remain open. For error conditions
that only affect the single operation in question, the server SHOULD return an
error response to the client and leave the DSO session open for further operations.
For error conditions that are likely to make all operations unsuccessful in the
immediate future, the server SHOULD return an error response to the client and 
then close the DSO session by sending a Retry Delay request message, as described in 
<xref target="delay"/>.</t>

</section>
<section anchor="error" title="Client Behaviour in Receiving an Error">

<t>Upon receiving an error response from the server, a client SHOULD NOT
automatically close the DSO session. An error relating to one particular operation
on a DSO session does not necessarily imply that all other operations on that
DSO session have also failed, or that future operations will fail. The client
should assume that the server will make its own decision about whether or not to
close the DSO session, based on the server’s determination of whether the error
condition pertains to this particular operation, or would also apply to any
subsequent operations. If the server does not close the DSO session then the client
SHOULD continue to use that DSO session for subsequent operations.</t>

</section>
<section anchor="server-initiated-termination-on-overload" title="Server-Initiated Termination on Overload">

<t>A server MUST NOT close a DSO session with a client,
except in certain exceptional circumstances, as outlined below.
In normal operation, closing a DSO session is the client’s responsibility.
The client makes the determination of when to close a DSO
session based on an evaluation of both its own needs,
and the inactivity timeout value dictated by the server.</t>

<t>Situations where a server may terminate a DSO session include:</t>

<t><list style="symbols">
  <t>The server is undergoing reconfiguration or maintenance procedures
that require clients to be disconnected.</t>
  <t>The server application software or underlying operating system
is shutting down or restarting.</t>
  <t>The server application software terminates unexpectedly
(perhaps due to a bug that makes it crash).</t>
  <t>The client fails to meets its obligation to generate keepalive
traffic or close an inactive session within twice the respective
time intervals dictated by the server (see <xref target="sessiontimeouts"/>).</t>
  <t>The client sends a grossly invalid or malformed request that is
indicative of a seriously defective client implementation (see <xref target="error"/>).</t>
  <t>The server is over capacity and needs to shed some load (see <xref target="retry"/>).</t>
</list></t>

<t>When a server has to close a DSO session with a client
(because of exceptional circumstances such as those outlined above)
the server SHOULD, whenever possible, send a Retry Delay Operation TLV
(see below) informing the client of the reason for the DSO session
being closed, and allow the client five seconds to receive it
before the server resorts to forcibly aborting the connection.</t>

</section>
<section anchor="retry" title="Retry Delay Operation TLV">

<t>There may be rare cases where a server is overloaded and wishes to shed load.
If a server is low on resources it MAY simply terminate a client connection with 
a TCP RST (or equivalent for other protocols).
However, the likely behavior of the client may be simply to to treat this as a
network failure and connect
immediately, putting more burden on the server.</t>

<t>Therefore to avoid this reconnection implosion, a server SHOULD instead choose 
to shed client load by sending a Retry Delay request message, with an RCODE of 
SERVFAIL, to inform the client of the overload situation. After sending a Retry 
Delay request message, the server MUST NOT send any further messages on that 
DSO session.</t>

<t>After sending the Retry Delay request the server SHOULD allow the
client five seconds to close the connection, and if the client has not
closed the connection after five seconds then the server SHOULD abort
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>Upon receipt of a Retry Delay request from the server, the client MUST
make note of the reconnect delay for this server, and then immediately
close the connection. This is to place the burden of TCP’s TIME-WAIT state on 
the client.</t>

<t>A Retry Delay request message MUST NOT be initiated by a client.
If a server receives a Retry Delay request message this is an error
and the server MUST immediately terminate the connection with a TCP RST
(or equivalent for other protocols).</t>

<section anchor="outstanding-operations" title="Outstanding Operations">

<t>At the moment a server chooses to initiate a Retry Delay request message
there may be DNS requests already in flight from client to server on this 
DSO session, which will arrive at the server after its Retry Delay request message 
has been sent.
The server MUST silently ignore such incoming requests, and MUST NOT generate
any response messages for them. When the Retry Delay request message from the
server arrives at the client, the client will determine that any DNS requests
it previously sent on this DSO session, that have not yet received a response, now 
will certainly not be receiving any response. Such requests should be considered
failed, and should be retried at a later time, as appropriate.</t>

<t>In the case where some, but not all, of the existing operations on a DSO session 
have become invalid (perhaps because the server has been reconfigured and is no 
longer authoritative for some of the names),
but the server is terminating all DSO sessions en masse with a REFUSED (5) RCODE,
the RECONNECT DELAY MAY be zero, indicating that the clients SHOULD immediately
attempt to re-establish operations.
It is likely that some of the attempts will be successful and some will not.</t>

<t>In the case where a server is terminating a large number of DSO sessions at once
(e.g., if the system is restarting) and the server doesn’t want to be inundated 
with a flood of simultaneous retries, it SHOULD send different RECONNECT delay 
values to each client.
These adjustments MAY be selected randomly, pseudorandomly, or deterministically
(e.g., incrementing the time value by one tenth of a second for each successive
client, yielding a post-restart reconnection rate of ten clients per second).</t>

</section>
<section anchor="client-reconnection" title="Client Reconnection">

<t>After a DSO session is closed by the server, the client SHOULD try to reconnect,
to that server, or to another suitable server, if more than one is available.
If reconnecting to the same server, the client MUST respect the indicated delay
before attempting to reconnect.</t>

<t>If a particular server does not want a client to reconnect (it is being
de-commissioned), it SHOULD set the retry delay to the maximum value (which is
approximately 497 days). If the server will only be out of service for a maintenance
period, it should use a value closer to the expected maintenance window and
not default to a very large delay value or clients may not attempt to reconnect
after it resumes service.</t>

</section>
</section>
</section>
<section anchor="sharing" title="Connection Sharing">

<t>As previously specified for DNS over TCP <xref target="RFC7766"/>,
to mitigate the risk of unintentional server overload, DNS clients
MUST take care to minimize the number of concurrent TCP connections
made to any individual server.  It is RECOMMENDED that for any given
client/server interaction there SHOULD be no more than one connection
for regular queries, one for zone transfers, and one for each
protocol that is being used on top of TCP (for example, if the
resolver was using TLS).
However, it is noted that certain primary/secondary configurations
with many busy zones might need to use more than one TCP
connection for zone transfers for operational reasons
(for example, to support concurrent transfers of multiple zones).</t>

<t>A single server may support multiple services, including DNS Updates 
<xref target="RFC2136"/>, DNS Push Notifications <xref target="I-D.ietf-dnssd-push"/>,
and other services, for one or more DNS zones.
When a client discovers that the target server for several different operations
is the same target hostname and port, the client SHOULD use a single
shared DSO session for all those operations.
A client SHOULD NOT open multiple connections to the same target host and port
just because the names being operated on are different or
happen to fall within different zones.
This is to reduce unnecessary connection load on the DNS server.</t>

<t>However, server implementers and operators should be aware that connection
sharing may not be possible in all cases.
A single client device may be home to multiple independent client software
instances that don’t coordinate with each other.
Similarly, multiple independent client devices behind the same NAT gateway
will also typically appear to the DNS server as different source ports on
the same client IP address.
Because of these constraints, a DNS server MUST be prepared to accept
multiple connections from different source ports on the same client IP address.</t>

</section>
<section anchor="base-tlvs-for-dns-stateful-operations" title="Base TLVs for DNS Stateful Operations">

<section anchor="delay" title="Retry Delay TLV">

<t>The Retry Delay TLV (DSO-TYPE=0) can be used as an Operation TLV or as
a Modifier TLV.</t>

<t>The TYPE-DEPENDENT DATA for the the Retry Delay TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     RETRY DELAY (32 bits)                     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='RETRY DELAY:'>
  a time value, specified as a 32-bit word in network order in units of 
milliseconds, within which the client MUST NOT retry this operation, or retry 
connecting to this server.</t>
</list></t>

<t>The RECOMMENDED value is 10 seconds.</t>

<section anchor="use-as-an-operation-tlv" title="Use as an Operation TLV">

<t>When sent in a DSO request message, from server to client, the 
Retry Delay TLV (0) is considered an Operation TLV. It is used by a server 
to request that a client close the DSO session and underlying connection, and 
not to reconnect for the indicated time interval.</t>

<t>In this case it applies to the DSO session as a whole, and the client MUST close the 
DSO session, as described in <xref target="retry"/>. The RCODE in the message header 
MUST indicate the reason for the termination:</t>

<t><list style="symbols">
  <t>NOERROR indicates a routine shutdown.</t>
  <t>SERVFAIL indicates that the server is overloaded due to resource exhaustion.</t>
  <t>REFUSED indicates that the server has been reconfigured and is no longer able 
to perform one or more of the functions 
currently being performed on this DSO session (for example, a DNS Push Notification 
server could be reconfigured such that is is no longer accepting DNS Push 
Notification requests for one or more of the currently subscribed names).</t>
</list></t>

<t>This document specifies only these three RCODE values for Retry Delay request.
Servers sending Retry Delay requests SHOULD use one of these three values.
However, future circumstances may create situations where other RCODE values
are appropriate in Retry Delay requests, so clients MUST be prepared
to accept Retry Delay requests with any RCODE value.</t>

<t>An acknowledgement is not desired for a Retry Delay Operation TLV and the TLV
Acknowledgement bit MUST be cleared in the request.</t>

</section>
<section anchor="use-as-a-modifier-tlv" title="Use as a Modifier TLV">

<t>When appended to a DSO response message for some client request,
the Retry Delay TLV (0) is considered a Modifier TLV.
The indicated time interval during which the client SHOULD NOT retry
applies only to the failed operation, not to the DSO session as a whole.</t>

<t>In the case of a client request that returns a nonzero RCODE value, the server 
MAY append a Retry Delay TLV (0) to the response, indicating the time interval
during which the client SHOULD NOT attempt this operation again.</t>

</section>
</section>
<section anchor="keepalive" title="Keepalive Operation TLV">

<t>The Keepalive Operation TLV (DSO-TYPE=1) performs two functions: to reset the
keepalive timer for the DSO session and to establish the values for the Session Timeouts.</t>

<t>The Keepalive Operation TLV resets only the keepalive timer, not the inactivity timer.
The reason for this is that periodic Keepalive Operation TLVs are sent for the
sole purpose of keeping a DSO session alive, because that DSO session has current
or recent non-maintenance activity that warrants keeping the DSO session alive.
If sending keepalive traffic itself were to reset the inactivity timer, then 
that would create a circular livelock where keepalive traffic would be sent 
indefinitely to keep a DSO session alive, where the only activity on that DSO 
session would be the keepalive traffic keeping the DSO session alive so that further 
keepalive traffic can be sent.</t>

<t>Sending keepalive traffic is considered a maintenance activity
that is performed in service of other client activities.
Sending keepalive traffic itself is not considered a client activity.
For a DSO session to be considered active, it must be carrying something more than just keepalive traffic.
This is why merely sending a Keepalive Operation TLV does not reset the inactivity timer.</t>

<t>When sent by a client, the Keepalive Operation TLV MUST have the Acknowledgement bit set.
It resets a DSO session’s keepalive timer, and at the same time requests what the
Session Timeout values should be from this point forward in the DSO session.
If a server receives a Keepalive Operation TLV without the Acknowledgement bit set
then this is a fatal error and the server MUST immediately terminate
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>Once a DSO session is in progress (see <xref target="details"/>) the Keepalive TLV also MAY be initiated by a server.
When sent by a server, the Keepalive Operation TLV MUST NOT have the Acknowledgement bit set.
It resets a DSO session’s keepalive timer, and unilaterally informs the client of
the new Session Timeout values to use from this point forward in this DSO session.
No client response to this unilateral declaration is required.
If a client receives a Keepalive Operation TLV with the Acknowledgement bit set
then this is a fatal error and the client MUST immediately terminate
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>It is not required that the Keepalive TLV be used in every DSO session.
While many DNS Stateful operations
will be used in conjunction with a long-lived session state,
not all DNS Stateful operations require long-lived session state,
and in some cases the default 15-second value for both the inactivity timeout
and keepalive interval may be perfectly appropriate. However, it can be noted 
that for clients that implement only the TLVs defined in this document it is
the only way for a client to initiate a DSO session.</t>

<t>The TYPE-DEPENDENT DATA for the the Keepalive TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 INACTIVITY TIMEOUT (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 KEEPALIVE INTERVAL (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='INACTIVITY TIMEOUT:'>
  the inactivity timeout for the current DSO session, specified as a
32-bit word in network (big endian) order in units of milliseconds.
This is the timeout at which the client MUST close an inactive DSO session.
If the client does not gracefully close an inactive DSO session,
then after twice this interval the server will forcibly terminate
the connection with a TCP RST (or equivalent for other protocols).</t>
  <t hangText='KEEPALIVE INTERVAL:'>
  the keepalive interval for the current DSO session, specified as a
32-bit word in network (big endian) order in units of milliseconds.
This is the interval at which a client MUST generate keepalive
traffic to maintain connection state.
If the client does not generate the necessary keepalive traffic,
then after twice this interval the server will forcibly terminate
the connection with a TCP RST (or equivalent for other protocols).</t>
</list></t>

<t>In a client-initiated DSO Keepalive message,
the Session Timeouts contain the client’s requested values.
In a server response to a client-initiated message, the Session Timeouts contain 
the server’s chosen values, which the client MUST respect.
This is modeled after the DHCP protocol, where the client
requests a certain lease lifetime using DHCP option 51 <xref target="RFC2132"/>,
but the server is the ultimate authority
for deciding what lease lifetime is actually granted.</t>

<t>In a server-initiated DSO Keepalive message, the Session Timeouts
unilaterally inform the client of the new values from this point
forward in this DSO session. The client MUST NOT generate a
response to the server-initiated DSO Keepalive message.</t>

<t>When a client is sending its second and subsequent Keepalive DSO 
requests to the server, the client SHOULD continue to request its preferred 
values each time. This allows flexibility, so that if conditions change during 
the lifetime of a DSO session, the server can adapt its responses to better fit 
the client’s needs.</t>

<section anchor="client-handling-of-received-session-timeout-values" title="Client handling of received Session Timeout values">

<t>When a client receives a response to its client-initiated DSO Keepalive message,
or receives a server-initiated DSO Keepalive message, the client has then 
received Session Timeout values dictated by the server. The two timeout values 
contained in the DSO Keepalive TLV from the server may each be higher, lower, or 
the same as the respective Session Timeout values the client previously had for 
this DSO session.</t>

<t>In the case of the keepalive timer, the handling of the received value is 
straightforward. The act of receiving the message containing the DSO Keepalive 
TLV itself resets the keepalive timer and updates the keepalive interval for the 
DSO session. The new keepalive interval indicates the 
maximum time that may elapse before another message must be sent
or received on this DSO session, if the DSO session is to remain alive.</t>

<t>In the case of the inactivity timeout, the handling of the received value 
is a little more subtle, though the meaning of the inactivity 
timeout is unchanged – it still indicates the maximum permissible time allowed 
without activity on a DSO session.
The act of receiving the message containing the DSO Keepalive TLV does not
itself reset the inactivity timer. The time elapsed since the last useful
activity on this DSO session is unaffected by exchange of DSO Keepalive messages.
The act of receiving the message containing the DSO Keepalive TLV does update 
the timeout associated with the running inactivity timer; that
becomes the new maximum permissible time without activity on a DSO session.</t>

<t><list style="symbols">
  <t>If the current inactivity timer value is not greater than the new inactivity timeout, 
then the DSO session may remain open for now. When the inactivity timer value 
exceeds the new inactivity timeout, the client MUST then close the DSO session,
as described above.</t>
  <t>If the current inactivity timer value is already greater than the new inactivity 
timeout, then this DSO session has already been inactive
for longer than the server permits, and the client MUST immediately close this DSO session.</t>
  <t>If the current inactivity timer value is more than twice the new inactivity timeout, 
then this DSO session is eligible to be
forcibly terminated by the server and and the client MUST immediately close this 
DSO session. However if a server abruptly reduces the
inactivity timeout in this way the server SHOULD give the client a grace period
of one quarter of the new inactivity timeout, to give the client time to close
the connection gracefully before the server resorts to terminating it forcibly.</t>
</list></t>

</section>
<section anchor="relation-to-edns0-tcp-keepalive-option" title="Relation to EDNS(0) TCP Keepalive Option">

<t>The inactivity timeout value in the Keepalive TLV (DSO-TYPE=1) has similar
intent to the EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>.
A client/server pair that supports DSO MUST NOT use the
EDNS(0) TCP KeepAlive option within any message after a DSO 
session has been established.
Once a DSO session has been established, if either
client or server receives a DNS message over the DSO session that contains an
EDNS(0) TCP Keepalive option, this is an error and the receiver of the
EDNS(0) TCP Keepalive option MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="padding" title="Encryption Padding TLV">

<t>The Encryption Padding TLV (DSO-TYPE=2) can only be used as a Modifier TLV.
It is only applicable when the DSO Transport layer uses encryption
such as TLS.</t>

<t>The TYPE-DEPENDENT DATA for the the Padding TLV is optional and is a
variable length field containing non-specified values. A DATA LENGTH
of 0 essentially provides for 4 octets of padding (the minimum amount).</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   /                                                               /
   /                   VARIABLE NUMBER OF OCTETS                   /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t>As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
the PADDING octets SHOULD be set to 0x00.  Other values MAY be used,
for example, in cases where there is a concern that the padded
message could be subject to compression before encryption.
PADDING octets of any value MUST be accepted in the messages received.</t>

<t>The Encryption Padding TLV may be included in either a DSO request, response, or both.
As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
if a request is received with a Encryption Padding TLV,
then the response MUST also include an Encryption Padding TLV.</t>

<t>The length of padding is intentionally not specified in this document and
is a function of current best practices with respect to the type and length
of data in the preceding TLVs <xref target="I-D.ietf-dprive-padding-policy"/>.</t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="dso-opcode-registration" title="DSO OPCODE Registration">

<t>IANA are directed to assign a value (tentatively 6)
in the DNS OPCODEs Registry for the DSO OPCODE.</t>

</section>
<section anchor="dso-rcode-registration" title="DSO RCODE Registration">

<t>IANA are directed to assign a value (tentatively 11)
in the DNS RCODE Registry for the DSONOTIMP error code.</t>

</section>
<section anchor="dso-type-codes-registry" title="DSO Type Codes Registry">

<t>IANA are directed to create the 15-bit DSO Type Codes
Registry, with initial values as follows:</t>

<texttable>
      <ttcol align='right'>Type</ttcol>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Status</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>0x0000</c>
      <c>RetryDelay</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0001</c>
      <c>KeepAlive</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0002</c>
      <c>Encryption Padding</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0003 - 0x003F</c>
      <c>Unassigned, reserved for DSO session management TLVs</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x0040 - 0x77FF</c>
      <c>Unassigned</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x7800 - 0x7BFF</c>
      <c>Reserved for local / experimental use</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x7C00 - 0x7FFF</c>
      <c>Reserved for future expansion</c>
      <c>&#160;</c>
      <c>&#160;</c>
</texttable>

<t>Registration of additional DSO Type Codes requires publication
of an appropriate IETF “Standards Action” or “IESG Approval” document <xref target="RFC5226"/>.</t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>If this mechanism is to be used with DNS over TLS, then these messages
are subject to the same constraints as any other DNS over TLS messages
and MUST NOT be sent in the clear before the TLS session is established.</t>

<t>The data field of the “Encryption Padding” TLV could be used as a covert channel.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to
Tim Chown,
Ralph Droms,
Jan Komissar,
Manju Shankar Rao,
and Ted Lemon
for their helpful contributions to this document.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC1035;
&RFC7766;
&RFC6891;
&RFC7828;
&RFC2119;
&RFC7830;
&RFC1034;
&RFC2136;
&RFC1918;
&RFC2132;
&RFC5226;


    </references>

    <references title='Informative References'>

<reference anchor="NagleDA" target="http://www.stuartcheshire.org/papers/nagledelayedack/">
  <front>
    <title>TCP Performance problems caused by interaction between Nagle's Algorithm and Delayed ACK</title>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization></organization>
    </author>
    <date year="2005" month="May" day="20"/>
  </front>
</reference>
&RFC7858;
&RFC6763;
&I-D.ietf-dnssd-push;
&RFC0768;
&RFC1122;
&I-D.ietf-dprive-padding-policy;


    </references>



  </back>

<!-- ##markdown-source:
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

-->

</rfc>

