<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.7 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC7766 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7766.xml">
<!ENTITY RFC6891 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6891.xml">
<!ENTITY RFC7828 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7828.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC7830 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7830.xml">
<!ENTITY RFC1034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC2136 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2136.xml">
<!ENTITY RFC2132 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2132.xml">
<!ENTITY RFC1918 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1918.xml">
<!ENTITY RFC5226 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5226.xml">
<!ENTITY RFC7858 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7858.xml">
<!ENTITY RFC6763 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6763.xml">
<!ENTITY I-D.ietf-dnssd-push SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dnssd-push.xml">
<!ENTITY RFC0768 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.0768.xml">
<!ENTITY I-D.ietf-dprive-padding-policy SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dprive-padding-policy.xml">
]>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-dnsop-session-signal-05" category="std" updates="RFC 7766, RFC 1035">

  <front>
    <title>DNS Stateful Operations</title>

    <author initials="R." surname="Bellis" fullname="Ray Bellis">
      <organization abbrev="ISC">Internet Systems Consortium, Inc.</organization>
      <address>
        <postal>
          <street>950 Charter Street</street>
          <city>Redwood City</city>
          <code>CA 94063</code>
          <country>USA</country>
        </postal>
        <phone>+1 650 423 1200</phone>
        <email>ray@isc.org</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>1 Infinite Loop</street>
          <city>Cupertino</city>
          <code>CA 95014</code>
          <country>USA</country>
        </postal>
        <phone>+1 408 974 3207</phone>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="J." surname="Dickinson" fullname="John Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>jad@sinodun.com</email>
      </address>
    </author>
    <author initials="S." surname="Dickinson" fullname="Sara Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>sara@sinodun.com</email>
      </address>
    </author>
    <author initials="A." surname="Mankin" fullname="Allison Mankin">
      <organization>Salesforce</organization>
      <address>
        <email>allison.mankin@gmail.com</email>
      </address>
    </author>
    <author initials="T." surname="Pusateri" fullname="Tom Pusateri">
      <organization>Unaffiliated</organization>
      <address>
        <postal>
          <street></street>
          <city>Raleigh</city>
          <code>NC 27608</code>
          <country>USA</country>
        </postal>
        <phone>+1 919 867 1330</phone>
        <email>pusateri@bangj.com</email>
      </address>
    </author>

    <date year="2017"/>

    <area>Internet</area>
    <workgroup>DNSOP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document defines a new DNS Stateful Operation OPCODE used to communicate 
operations within persistent stateful sessions, expressed using type-length-value (TLV) 
syntax, and defines an initial set of TLVs used to manage session timeouts and 
termination. This mechanism is intended to reduce the overhead of existing 
“per-packet” signaling mechanisms with “per-message” semantics as well as 
defining new stateful operations not defined in EDNS(0).</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The use of transports for DNS other than UDP is being increasingly specified,
for example, DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> and DNS over TLS <xref target="RFC7858"/>.
Such transports can offer persistent, long-lived sessions and therefore when
using them for transporting DNS messages it is of benefit to have a mechanism
that can establish parameters associated with those sessions, such as timeouts.
In such situations it is also advantageous to support server initiated messages.</t>

<t>The existing EDNS(0) Extension Mechanism for DNS <xref target="RFC6891"/> is explicitly
defined to only have “per-message” semantics. Whilst EDNS(0) has been used to
signal at least one session-related parameter (the EDNS(0) TCP Keepalive option
<xref target="RFC7828"/>) the result is less than optimal due to the restrictions
imposed by the EDNS(0) semantics and the lack of server-initiated signalling. 
For example, a server cannot arbitrarily 
instruct a client to close a connection because the server can only send EDNS(0) options 
in responses to queries that contained EDNS(0) options.</t>

<t>This document defines a new DNS Stateful Operation OPCODE used to carry
operations within persistent stateful connections, expressed using type-length-value (TLV)
syntax, and
defines an initial set of TLVs including ones used to manage session timeouts and termination.</t>

<t>This new format has distinct advantages over an RR-based format because it
is more explicit and more compact. Each TLV definition is specific
to the use case, and as a result contains no redundant or overloaded fields.
Importantly, it completely avoids conflating DNS Stateful Operations in anyway 
with normal DNS operations or with existing EDNS(0) based functionality. A goal 
of this approach is to avoid the operational
issues that have befallen EDNS(0), particularly relating to middle-box 
behaviour.</t>

<t>With EDNS(0), multiple options may be packed into a single OPT pseudo-RR,
and there is no generalized mechanism for a client to be able to tell
whether a server has processed or otherwise acted upon each individual
option within the combined OPT RR.
The specifications for each individual option need to define how each
different option is to be acknowledged, if necessary.</t>

<t>With DNS Stateful Operations, in contrast, there is no compelling motivation
to pack multiple operations into a single message for efficiency reasons.
Each Stateful operation is communicated in its own separate
DNS message, and the transport protocol can take care of packing
separate DNS messages into a single IP packet if appropriate.
For example, TCP can pack multiple small DNS messages into a single TCP segment.
The RCODE in each response message indicates the success or failure of the operation in question.</t>

<t>It should be noted that the message format for DNS Stateful Operations
(see <xref target="format"/>) differs from the traditional DNS packet
format used for standard queries and responses.
The standard twelve-octet header is used, but the four count fields
(QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) are set to zero and their
corresponding sections are not present.
The actual data pertaining to DNS Stateful Operations is
appended to the end of the DNS message header.
When displayed using today’s packet analyzer tools that have not been updated
to recognize the DNS Stateful Operations format, this will result
in the Stateful Operations data being displayed as unknown additional
data after the end of the DNS message. It is likely that future updates
to these tools will add the ability to recognize, decode, and display the
Stateful Operations data.</t>

</section>
<section anchor="terminology" title="Terminology">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and
“OPTIONAL” in this document are to be interpreted as described in
“Key words for use in RFCs to Indicate Requirement Levels” <xref target="RFC2119"/>.</t>

<t>“DSO” is used to mean DNS Stateful Operation.</t>

<t>The term “connection” means a bidirectional byte stream of reliable,
in-order messages, such as provided by using
DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> or DNS over TLS <xref target="RFC7858"/>.</t>

<t>The unqualified term “session” in the context of this document means the exchange of
DNS messages over a connection where:</t>

<t><list style="symbols">
  <t>The connection between client and server is persistent and relatively
long-lived (i.e., minutes or hours, rather than seconds).</t>
  <t>Either end of the connection may initiate messages to the other.</t>
</list></t>

<t>A “DSO session” is established between two endpoints that
acknowledge persistent DNS state via the exchange of DSO messages
over the connection. This is distinct from, for example a DNS-over-TCP session
as described in RC7766.</t>

<t>A “DSO session” is terminated when the underlying connection is closed.</t>

<t>The term “server” means the software with a listening socket, awaiting
incoming connection requests.</t>

<t>The term “client” means the software which initiates a connection
to the server’s listening socket.</t>

<t>The terms “initiator” and “responder” correspond respectively to the
initial sender and subsequent receiver of a DSO request message,
regardless of which was the “client” and “server” in the usual DNS sense.</t>

<t>The term “sender” may apply to either an initiator
(when sending a DNS Stateful Operation request message)
or a responder (when sending a DNS Stateful Operation response message).</t>

<t>Likewise, the term “receiver” may apply to either a responder
(when receiving a DNS Stateful Operation request message)
or an initiator (when receiving a DNS Stateful Operation response message).</t>

<t>DNS Stateful Operations are expressed using type-length-value (TLV) syntax.</t>

<t>Two timers (elapsed time since an event) are defined in this document:</t>

<t><list style="symbols">
  <t>an inactivity timer (see <xref target="keepalive"/> and <xref target="inactivetimer"/>)</t>
  <t>a keepalive timer (see <xref target="keepalive"/> and <xref target="keepalivetimer"/>)</t>
</list></t>

<t>The timeouts associated with these timers are called the inactivity timeout and 
the keepalive interval respectively. 
The term “Session Timeouts” is used to refer to this pair of timeout values.</t>

<t>Reseting a timer means resetting the timer value to zero and starting the timer 
again. Clearing a timer means resetting the timer value to zero but NOT starting 
the time again.</t>

</section>
<section anchor="discussion" title="Discussion">

<t>There are several use cases for DNS Stateful operations that can 
be described here.</t>

<t>Firstly, establishing session parameters such as server defined timeouts is of 
great use in the 
general management of persistent connections. For example, using DSO sessions 
for stub to recursive DNS-over-TLS <xref target="RFC7858"/> is more flexible for both the 
client and the server than attempting to manage sessions using just the EDNS(0)
TCP Keepalive option
<xref target="RFC7828"/>. The simple set of TLVs defined in this document is
sufficient to greatly enhance connection management for this use case.</t>

<t>Secondly, DNS-SD <xref target="RFC6763"/> has evolved into a naturally session based mechanism where,
for example, long-lived subscriptions lend themselves to ‘push’ mechanisms as 
opposed to polling. Long-lived stateful connections and server initiated 
messages align with this use case <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>A general use case is that DNS traffic is often bursty but session establishment 
can be expensive. One challenge with long-lived connections is to maintain 
sufficient traffic to maintain NAT and firewall state.
To mitigate this issue this document introduces a
new concept for the DNS, that is DSO “Keepalive traffic”.
This traffic carries no DNS data and is not considered ‘activity’
in the classic DNS sense, but serves to maintain state in middle boxes,
and to assure client and server that they still have connectivity to each other.</t>

<t>There are a myriad of other potential use cases for DSO given the versatility 
and extensibility of this specification.</t>

<t><xref target="details"/> of this document describes the protocol details of DNS Stateful
Operations including definitions of three TLVs for session management and 
encryption padding. <xref target="lifecycle"/> presents a
detailed discussion of the DSO Session lifecycle including an
in-depth discussion of keepalive traffic and session termination.</t>

</section>
<section anchor="details" title="Protocol Details">

<section anchor="establishment" title="DSO Session Establishment">

<t>DSO messages MUST only be carried in protocols and in
environments where a session may be established according to the definition above.
Standard DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/>, and DNS over TLS <xref target="RFC7858"/>
are suitable protocols.</t>

<t>DNS over plain UDP <xref target="RFC0768"/> is not appropriate since it fails on the requirement for
in-order message delivery, and, in the presence of NAT gateways and firewalls
with short UDP timeouts, it fails to provide a persistent bi-directional
communication channel unless an excessive amount of keepalive traffic is used.</t>

<t>DSO messages relate only to the specific “DSO session” in which
they are being carried. A “DSO session” is established over a connection when
either side of the connection sends the first DSO
TLV and it is acknowledged by the other side. The DSO message format <xref target="dsodata"/> 
includes an option to specify that a DSO request does not require a 
response acknowledgement. Session establishment can only be performed using a 
DSO message that requires a response acknowledgement.</t>

<t>While this 
specification defines an initial set of three TLVs, additional TLVs may be 
defined in additional specifications. All three of the TLVs defined here are 
mandatory to implement.</t>

<t>A client MAY attempt to initiate DSO messages at any time
on a connection; receiving a NOTIMP response in reply indicates that the
server does not implement DSO, and the client SHOULD NOT
issue further DSO messages on that connection.</t>

<t>A server SHOULD NOT initiate DSO messages until a
client-initiated DSO message is received first,
unless in an environment where it is known in advance by other
means that the client supports DSO.
This requirement is to ensure that the clients that do not support
DSO do not receive unsolicited inbound DSO
messages that they would not know how to handle.</t>

<t>On a session between a client and server that support DSO,
once the client has sent at least one DSO message (or it is
known in advance by other means that the client supports DSO)
either end may unilaterally send DSO messages at any time,
and therefore either client or server may be the initiator of a message.</t>

<t>From this point on it is considered that a “DSO session” is in progress.
Clients and servers should behave as described in this specification with
regard to inactivity timeouts and connection close, not as prescribed in
the previous specification for DNS over TCP <xref target="RFC7766"/>.</t>

<section anchor="middle-box-considerations" title="Middle-box Considerations">

<t>Where an application-layer middle box (e.g., a DNS proxy, forwarder, or
session multiplexer) is in the path the middle box MUST NOT blindly
forward DSO messages in either direction, and MUST treat the inbound
and outbound connections as separate sessions.  This does not preclude
the use of DSO messages in the presence of an IP-layer middle box such
as a NAT that rewrites IP-layer and/or transport-layer headers, but
otherwise preserves the effect of a single session between the client
and the server.</t>

<t>To illustrate the above, consider a network where a middle box
terminates one or more TCP connections from clients and multiplexes the
queries therein over a single TCP connection to an upstream server.  The
DSO messages and any associated state are specific to the individual
TCP connections.  A DSO-aware middle box MAY in some circumstances be
able to retain associated state and pass it between the client and
server (or vice versa) but this would be highly TLV-specific.  For
example, the middle box may be able to maintain a list of which clients
have made Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/> and
make its own subscription(s) on their behalf, relaying any subsequent
notifications to the client (or clients) that have subscribed to that
particular notification.</t>

</section>
</section>
<section anchor="format" title="Message Format">

<t>A DSO message begins with
the standard twelve-octet DNS message header <xref target="RFC1035"/>
with the OPCODE field set to the DSO OPCODE (tentatively 6).
However, unlike standard DNS messages, the question section, answer section,
authority records section and additional records sections are not present.
The corresponding count fields (QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) MUST be
set to zero on transmission.</t>

<t>If a DSO message is received where any of the count fields are
not zero, then a FORMERR MUST be returned,
unless a future document specifies otherwise.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                          MESSAGE ID                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |QR |    OPCODE     |            Z              |     RCODE     |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     QDCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ANCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     NSCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ARCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                           DSO Data                            /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<section anchor="header" title="Header">

<t>In a request the MESSAGE ID field MUST be set to a unique value, that the
initiator is not currently using for any other active operation on this 
connection.
For the purposes here, a MESSAGE ID is in use in this DSO session if the
initiator has used it in a request for which it has not yet received a
response, or if the client has used it to setup state that it has not yet
deleted. For example, state could be a subscription <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>In a response the MESSAGE ID field MUST contain a copy of the value of the
MESSAGE ID field in the request being responded to.</t>

<t>In a request the DNS Header QR bit MUST be zero (QR=0).
If the QR bit is not zero the message is not a request.</t>

<t>In a response the DNS Header QR bit MUST be one (QR=1).
If the QR bit is not one the message is not a response.</t>

<t>The DNS Header OPCODE field holds the DSO OPCODE value (tentatively 6).</t>

<t>The Z bits are currently unused in DSO messages,
and in both DSO requests and DSO responses the
Z bits MUST be set to zero (0) on transmission and MUST be silently ignored
on reception, unless a future document specifies otherwise.</t>

<t>In a request message (QR=0) the RCODE is generally set to zero on transmission,
and silently ignored on reception, except where specified otherwise
(for example, the Retry Delay operation (see <xref target="delay"/>), where the RCODE indicates the reason
for termination).</t>

<t>The RCODE value in a response may be one of the following values:</t>

<texttable>
      <ttcol align='right'>Code</ttcol>
      <ttcol align='left'>Mnemonic</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>0</c>
      <c>NOERROR</c>
      <c>Operation processed successfully</c>
      <c>1</c>
      <c>FORMERR</c>
      <c>Format error</c>
      <c>2</c>
      <c>SERVFAIL</c>
      <c>Server failed to process request due to a problem with the server</c>
      <c>3</c>
      <c>NXDOMAIN</c>
      <c>Name Error — Named entity does not exist (TLV-dependent)</c>
      <c>4</c>
      <c>NOTIMP</c>
      <c>DSO not supported</c>
      <c>5</c>
      <c>REFUSED</c>
      <c>Operation declined for policy reasons</c>
      <c>9</c>
      <c>NOTAUTH</c>
      <c>Not Authoritative (TLV dependent)</c>
      <c>11</c>
      <c>DSONOTIMP</c>
      <c>DSO type code not supported</c>
</texttable>

<t>Use of the above RCODEs is likely to be common in DSO but 
does not preclude the definition and use of other codes in future documents that 
make use of DSO.</t>

<t>If a document describing a DSO makes use of either NXDOMAIN (Name Error)
or NOTAUTH then that document MUST explain the meaning.</t>

</section>
<section anchor="dsodata" title="DSO Data">

<t>The standard twelve-octet DNS message header is followed by the DSO Data.</t>

<t>The first TLV in a DSO request message is called the Operation 
TLV. Any subsequent TLVs after this initial Operation TLV are called Modifier TLVs.</t>

<t>Depending on the operation a DSO response can contain:</t>

<t><list style="symbols">
  <t>No TLVs</t>
  <t>Only an Operation TLV</t>
  <t>An Operation TLV followed by one or more Modifier TLVs</t>
  <t>Only Modifier TLVs</t>
</list></t>

<section anchor="tlv-format" title="TLV Format">

<t>Operation and modifier TLVs both use the same encoding format.</t>

<t>Operation TLVs SHOULD normally require a response and, therefore, set the TLV
Acknowledgement bit in a request. However, for some Operation TLVs, this may be
undesirable and the TLV Acknowledgement bit MAY be cleared in the request. Each
Operation TLV definition should stipulate whether an acknowledgement is
REQUIRED. If the TLV Acknowledgement bit is cleared in a request, a response
MUST NOT be sent. Modifier TLVs MUST NEVER set the Acknowledgement bit. The
Acknowledgement bit is NEVER set in the response to an Operation TLV.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   | A |                        DSO-TYPE                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                        DSO DATA LENGTH                        |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                      TYPE-DEPENDENT DATA                      /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='A:'>
  A 1-bit TLV Response flag indicating whether or not an Operation TLV requires
a response Acknowledgement.</t>
  <t hangText='DSO-TYPE:'>
  A 15-bit field in network order giving the type of the current DSO TLV per
the IANA DSO Type Codes Registry.</t>
  <t hangText='DSO DATA LENGTH:'>
  A 16-bit field in network order giving the size in octets of
the TYPE-DEPENDENT DATA.</t>
  <t hangText='TYPE-DEPENDENT DATA:'>
  Type-code specific format.</t>
</list></t>

<t>Where domain names appear within TYPE-DEPENDENT DATA, they MAY be compressed 
using standard DNS name compression. However, the compression MUST NOT point
outside of the TYPE-DEPENDENT DATA section and offsets MUST be from the start
of the TYPE-DEPENDENT DATA.</t>

</section>
<section anchor="operation-tlvs" title="Operation TLVs">

<t>An “Operation TLV” specifies the operation to be performed.</t>

<t>A DSO message MUST contain at most one Operation TLV.</t>

<t>In all cases a DSO request message MUST contain exactly one 
Operation TLV, indicating the operation to be performed.</t>

<t>Depending on the operation, a DSO response message MAY contain no 
Operation TLV, because it is simply a response to a previous request message,
and the MESSAGE ID in the header is sufficient to identify the request in 
question. Or it may contain a single corresponding response Operation TLV, with 
the same DSO-TYPE as in the request message. The specification for each DSO
type determines whether a response for that operation type 
is required to carry the Operation TLV.</t>

<t>If a DSO response is received for an operation which requires
that the response carry an Operation TLV, and the required Operation TLV is not
the first DSO TLV in the response message, then this is a fatal 
error and the recipient of the defective response message MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
<section anchor="modifier-tlvs" title="Modifier TLVs">

<t>A “Modifier TLV” specifies additional parameters
relating to the operation. Immediately following the Operation TLV, if present,
a DSO message MAY contain one or more Modifier TLVs.</t>

</section>
<section anchor="unrecognized-tlvs" title="Unrecognized TLVs">

<t>If a DSO request is received containing an unrecognized
Operation TLV, the receiver MUST send a response with matching
MESSAGE ID, and RCODE DSONOTIMP (tentatively 11). The response MUST NOT contain 
an Operation TLV.</t>

<t>If a DSO message (request or response) is received
containing one or more unrecognized Modifier TLVs, the unrecognized
Modifier TLVs MUST be silently ignored, and the remainder of the message
is interpreted and handled as if the unrecognized parts were not present.</t>

</section>
</section>
<section anchor="edns0-and-tsig" title="EDNS(0) and TSIG">

<t>Since the ARCOUNT field MUST be zero, a DSO message
MUST NOT contain an EDNS(0) option in the additional records section.
If functionality provided by current or future EDNS(0) options is desired
for DSO messages, an Operation TLV or
Modifier TLV needs to be defined to carry the necessary information.</t>

<t>For example, the EDNS(0) Padding Option <xref target="RFC7830"/> used for security purposes
is not permitted in a DSO message,
so if message padding is desired for DSO messages
then the Encryption Padding TLV described in <xref target="padding"/> MUST be used.</t>

<t>Similarly, a DSO message MUST NOT contain a TSIG record.
A TSIG record in a conventional DNS message is added as the last record
in the additional records section, and carries a signature computed over
the preceding message content. Since DSO data appears
after the additional records section, it would not be included in the
signature calculation. 
If use of signatures with DSO messages becomes necessary in the 
future, an explicit Modifier TLV needs to be defined to 
perform this function.</t>

<t>Note however that, while DSO <spanx style="emph">messages</spanx> cannot include
EDNS(0) or TSIG records, a DSO <spanx style="emph">session</spanx> is typically used to 
carry a whole series of DNS messages of different kinds, including DSO
messages, and other DNS message types like Query <xref target="RFC1034"/> 
<xref target="RFC1035"/> and Update <xref target="RFC2136"/>, and those messages can carry EDNS(0) and 
TSIG records.</t>

<t>This specification explicitly prohibits use of the
EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>
in <spanx style="emph">any</spanx> messages sent on a DSO session (because it duplicates
the functionality provided by the DSO Keepalive operation),
but messages may contain other EDNS(0) options as appropriate.</t>

</section>
</section>
<section anchor="message-handling" title="Message Handling">

<t>The initiator MUST set the value of the QR bit in the DNS header to
zero (0), and the responder MUST set it to one (1).
Every DSO request message (QR=0) with the Acknowledgement bit set in the
operation TLV MUST elicit a response (QR=1), which MUST have the same
MESSAGE ID in the DNS message header as in the corresponding request.
DSO request messages sent by the client with the Acknowledgement
bit set in the operation TLV elicit a response from the server, and
DSO request messages sent by the server with the Acknowledgement
bit set in the operation TLV elicit a response from the client.</t>

<t>With most TCP implementations, the TCP data acknowledgement (generated because 
data has been received by TCP), the TCP window update (generated because TCP has 
delivered that data to the receiving software) and the DSO 
response (generated by the receiving software itself)
are all combined into a single packet, so in practice the requirement that every
DSO request message MUST elicit a 
DSO response incurs minimal extra cost on the network.
Requiring that every request elicit a corresponding response also avoids
performance problems caused by interaction between
Nagle’s Algorithm and Delayed Ack <xref target="NagleDA"/>.</t>

<t>The namespaces of 16-bit MESSAGE IDs are disjoint in each direction.
For example, it is <spanx style="emph">not</spanx> an error for both client and server to send a request
message with the same ID. In effect, the 16-bit MESSAGE ID combined with the 
identity of the initiator (client or server) serves as a 17-bit unique 
identifier for a particular operation on a DSO session.</t>

<t>As described in <xref target="header"/> An initiator MUST NOT reuse a MESSAGE ID that is 
already in use for an 
outstanding request, unless specified otherwise by the relevant specification 
for the DSO in question. At the very least, this means 
that a MESSAGE ID MUST NOT be reused in a particular direction
on a particular DSO session while the initiator is waiting for a response to a 
previous request using that MESSAGE ID on that DSO session,
unless specified otherwise by the relevant 
specification for the DSO in question.
(For a long-lived state the MESSAGE ID for the operation
MUST NOT be reused whilst that state remains active.)</t>

<t>If a client or server receives a response (QR=1) where the MESSAGE ID does not
match any of its outstanding operations, this is a fatal error and it MUST 
immediately terminate the connection with a TCP RST (or equivalent for other 
protocols).</t>

</section>
</section>
<section anchor="keepalive" title="Keepalive Operation TLV">

<t>The Keepalive Operation TLV (DSO-TYPE=1) performs two functions: to reset the
keepalive timer for the DSO session and to establish the values for the Session Timeouts.</t>

<t>The Keepalive Operation TLV resets only the keepalive timer, not the inactivity timer.
The reason for this is that periodic Keepalive Operation TLVs are sent for the
sole purpose of keeping a DSO session alive, because that DSO session has current
or recent non-maintenance activity that warrants keeping the DSO session alive.
If sending keepalive traffic itself were to reset the inactivity timer, then 
that would create a circular livelock where keepalive traffic would be sent 
indefinitely to keep a DSO session alive, where the only activity on that DSO 
session would be the keepalive traffic keeping the DSO session alive so that further 
keepalive traffic can be sent.</t>

<t>Sending keepalive traffic is considered a maintenance activity
that is performed in service of other client activities.
Sending keepalive traffic itself is not considered a client activity.
For a DSO session to be considered active, it must be carrying something more than just keepalive traffic.
This is why merely sending a Keepalive Operation TLV does not reset the inactivity timer.</t>

<t>When sent by a client, the Keepalive Operation TLV resets a DSO session’s keepalive timer,
and at the same time requests what the Session Timeout values should be from this point forward in the DSO session.</t>

<t>An acknowledgement is always required for a Keepalive Operation TLV and the TLV
Acknowledgement bit MUST be set in the request when originated by either the
client or the server.</t>

<t>Once a DSO session is in progress (see <xref target="details"/>)
the Keepalive TLV also MAY be initiated by a server.
When sent by a server, it resets a DSO session’s keepalive timer,
and unilaterally informs the client of the new Session Timeout values to use 
from this point forward in this DSO session.</t>

<t>It is not required that the Keepalive TLV be used in every DSO session.
While many DNS Stateful operations
will be used in conjunction with a long-lived session state,
not all DNS Stateful operations require long-lived session state,
and in some cases the default 15-second value for both the inactivity timeout
and keepalive interval may be perfectly appropriate. However, it can be noted 
that for clients that implement only the TLVs defined in this document it is
the only way for a client to initiate a DSO session.</t>

<t>The TYPE-DEPENDENT DATA for the the Keepalive TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 INACTIVITY TIMEOUT (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 KEEPALIVE INTERVAL (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='INACTIVITY TIMEOUT:'>
  the inactivity timeout for the current DSO session, specified as a
32-bit word in network (big endian) order in units of milliseconds.
This is the timeout at which the client MUST close an inactive DSO session.
If the client does not gracefully close an inactive DSO session,
then after twice this interval the server will forcibly terminate
the connection with a TCP RST (or equivalent for other protocols).</t>
  <t hangText='KEEPALIVE INTERVAL:'>
  the keepalive interval for the current DSO session, specified as a
32-bit word in network (big endian) order in units of milliseconds.
This is the interval at which a client MUST generate keepalive
traffic to maintain connection state.
If the client does not generate the necessary keepalive traffic,
then after twice this interval the server will forcibly terminate
the connection with a TCP RST (or equivalent for other protocols).</t>
</list></t>

<t>In a client-initiated DSO Keepalive message,
the Session Timeouts contain the client’s requested values.
In a server response to a client-initiated message, the Session Timeouts contain 
the server’s chosen values, which the client MUST respect.
This is modeled after the DHCP protocol, where the client
requests a certain lease lifetime using DHCP option 51 <xref target="RFC2132"/>,
but the server is the ultimate authority
for deciding what lease lifetime is actually granted.</t>

<t>In a server-initiated DSO Keepalive message, the Session Timeouts unilaterally 
inform the client of the new values from this 
point forward in this DSO session. The client MUST generate a response to the 
server-initiated DSO Keepalive message.
The MESSAGE ID in the response message MUST match the ID from the 
server-initiated DSO Keepalive message, and the response message 
MUST NOT contain any Operation TLV.</t>

<t>When a client is sending its second and subsequent Keepalive DSO 
requests to the server, the client SHOULD continue to request its preferred 
values each time. This allows flexibility, so that if conditions change during 
the lifetime of a DSO session, the server can adapt its responses to better fit 
the client’s needs.</t>

<section anchor="client-handling-of-received-session-timeout-values" title="Client handling of received Session Timeout values">

<t>When a client receives a response to its client-initiated DSO Keepalive message,
or receives a server-initiated DSO Keepalive message, the client has then 
received Session Timeout values dictated by the server. The two timeout values 
contained in the DSO Keepalive TLV from the server may each be higher, lower, or 
the same as the respective Session Timeout values the client previously had for 
this DSO session.</t>

<t>In the case of the keepalive timer, the handling of the received value is 
straightforward. The act of receiving the message containing the DSO Keepalive 
TLV itself resets the keepalive timer and updates the keepalive interval for the 
DSO session. The new keepalive interval indicates the 
maximum time that may elapse before another message must be sent
or received on this DSO session, if the DSO session is to remain alive.</t>

<t>In the case of the inactivity timeout, the handling of the received value 
is a little more subtle, though the meaning of the inactivity 
timeout is unchanged – it still indicates the maximum permissible time allowed 
without activity on a DSO session.
The act of receiving the message containing the DSO Keepalive TLV does not
itself reset the inactivity timer. The time elapsed since the last useful
activity on this DSO session is unaffected by exchange of DSO Keepalive messages.
The act of receiving the message containing the DSO Keepalive TLV does update 
the timeout associated with the running inactivity timer; that
becomes the new maximum permissible time without activity on a DSO session.</t>

<t><list style="symbols">
  <t>If the current inactivity timer value is not greater than the new inactivity timeout, 
then the DSO session may remain open for now. When the inactivity timer value 
exceeds the new inactivity timeout, the client MUST then close the DSO session,
as described above.</t>
  <t>If the current inactivity timer value is already greater than the new inactivity 
timeout, then this DSO session has already been inactive
for longer than the server permits, and the client MUST immediately close this DSO session.</t>
  <t>If the current inactivity timer value is more than twice the new inactivity timeout, 
then this DSO session is eligible to be
forcibly terminated by the server and and the client MUST immediately close this 
DSO session. However if a server abruptly reduces the
inactivity timeout in this way the server SHOULD give the client a grace period
of one quarter of the new inactivity timeout, to give the client time to close
the connection gracefully before the server resorts to terminating it forcibly.</t>
</list></t>

</section>
<section anchor="relation-to-edns0-tcp-keepalive-option" title="Relation to EDNS(0) TCP Keepalive Option">

<t>The inactivity timeout value in the Keepalive TLV (DSO-TYPE=1) has similar
intent to the EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>.
A client/server pair that supports DSO MUST NOT use the
EDNS(0) TCP KeepAlive option within any message after a DSO 
session has been established.
Once a DSO session has been established, if either
client or server receives a DNS message over the DSO session that contains an
EDNS(0) TCP Keepalive option, this is an error and the receiver of the
EDNS(0) TCP Keepalive option MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="delay" title="Retry Delay TLV">

<t>The Retry Delay TLV (DSO-TYPE=0) can be used as an Operation TLV or as
a Modifier TLV.</t>

<t>The TYPE-DEPENDENT DATA for the the Retry Delay TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     RETRY DELAY (32 bits)                     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='RETRY DELAY:'>
  a time value, specified as a 32-bit word in network order in units of 
milliseconds, within which the client MUST NOT retry this operation, or retry 
connecting to this server.</t>
</list></t>

<t>The RECOMMENDED value is 10 seconds.</t>

<section anchor="use-as-an-operation-tlv" title="Use as an Operation TLV">

<t>When sent in a DSO request message, from server to client, the 
Retry Delay TLV (0) is considered an Operation TLV. It is used by a server 
to request that a client close the DSO session and underlying connection, and 
not to reconnect for the indicated time interval.</t>

<t>In this case it applies to the DSO session as a whole, and the client MUST close the 
DSO session, as described in section <xref target="retry"/>. The RCODE in the message header 
MUST indicate the reason for the termination:</t>

<t><list style="symbols">
  <t>NOERROR indicates a routine shutdown.</t>
  <t>SERVFAIL indicates that the server is overloaded due to resource exhaustion.</t>
  <t>REFUSED indicates that the server has been reconfigured and is no longer able 
to perform one or more of the functions 
currently being performed on this DSO session (for example, a DNS Push Notification 
server could be reconfigured such that is is no longer accepting DNS Push 
Notification requests for one or more of the currently subscribed names).</t>
</list></t>

<t>This document specifies only these three RCODE values for Retry Delay request.
Servers sending Retry Delay requests SHOULD use one of these three values.
However, future circumstances may create situations where other RCODE values
are appropriate in Retry Delay requests, so clients MUST be prepared
to accept Retry Delay requests with any RCODE value.</t>

<t>An acknowledgement is not desired for a Retry Delay Operation TLV and the TLV
Acknowledgement bit MUST be cleared in the request.</t>

</section>
<section anchor="use-as-a-modifier-tlv" title="Use as a Modifier TLV">

<t>When appended to a DSO response message for some client request,
the Retry Delay TLV (0) is considered a Modifier TLV.
The indicated time interval during which the client SHOULD NOT retry
applies only to the failed operation, not to the DSO session as a whole.</t>

<t>In the case of a client request that returns a nonzero RCODE value, the server 
MAY append a Retry Delay TLV (0) to the response, indicating the time interval
during which the client SHOULD NOT attempt this operation again.</t>

</section>
</section>
<section anchor="padding" title="Encryption Padding TLV">

<t>The Encryption Padding TLV (DSO-TYPE=2) can only be used as a Modifier TLV.
It is only applicable when the DSO Transport layer uses encryption
such as TLS.</t>

<t>The TYPE-DEPENDENT DATA for the the Padding TLV is optional and is a
variable length field containing non-specified values. A DATA LENGTH
of 0 essentially provides for 4 octets of padding (the minimum amount).</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   /                                                               /
   /                   VARIABLE NUMBER OF OCTETS                   /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t>As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
the PADDING octets SHOULD be set to 0x00.  Other values MAY be used,
for example, in cases where there is a concern that the padded
message could be subject to compression before encryption.
PADDING octets of any value MUST be accepted in the messages received.</t>

<t>The Encryption Padding TLV may be included in either a DSO request, response, or both.
As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
if a request is received with a Encryption Padding TLV,
then the response MUST also include an Encryption Padding TLV.</t>

<t>The length of padding is intentionally not specified in this document and
is a function of current best practices with respect to the type and length
of data in the preceding TLVs <xref target="I-D.ietf-dprive-padding-policy"/>.</t>

</section>
<section anchor="lifecycle" title="DSO Session Lifecycle and Timers">

<section anchor="dso-session-initiation" title="DSO Session Initiation">

<t>A session begins when a client makes a new connection to a server.</t>

<t>A DSO session begin as described in <xref target="establishment"/>.</t>

<t>The client may perform as many DNS operations as it wishes using the
newly created DSO session. Operations SHOULD be pipelined (i.e., the
client doesn’t need wait for a response before sending the next message).
The server MUST act on messages in the order they are transmitted, but
responses to those messages MAY be sent out of order, if appropriate.</t>

</section>
<section anchor="sessiontimeouts" title="DSO Session Timeouts">

<t>Two timeout values are associated with a DSO session: the inactivity timeout, and 
the keepalive interval.</t>

<t>The first timeout value, the inactivity timeout, is the maximum time for which
a client may speculatively keep a DSO session open in the expectation that
it may have future requests to send to that server.</t>

<t>The second timeout value, the keepalive interval, is the maximum permitted
interval between client messages to the server if the client wishes to keep
the DSO session alive.</t>

<t>The two timeout values are independent. The inactivity timeout may be lower, the 
same, or higher than the keepalive interval, though in most cases the inactivity 
timeout is expected to be shorter than the keepalive interval.</t>

<t>Only when the client has a very long-lived low-traffic state does the 
keepalive interval come into play, to ensure that a sufficient residual
amount of traffic is generated to maintain NAT and firewall state
and to assure client and server that they still have connectivity to each other.</t>

<t>On a new DSO session, if no explicit DSO Keepalive message exchange has taken 
place, the default value for both timeouts is 15 seconds.
For both timeouts, lower values of the timeout result in higher network traffic
and higher CPU load on the server.</t>

</section>
<section anchor="inactivetimer" title="Inactive DSO Sessions">

<t>At both servers and clients, the generation or reception of any complete
DNS message, including DNS requests, responses, updates, or DSO
messages, resets both timers for that DSO session, with the exception
that a DSO Keepalive message resets only the keepalive timer, not the inactivity 
timeout timer.</t>

<t>In addition, for as long as the client has an outstanding operation in progress,
the inactivity timer remains cleared, and an inactivity 
timeout cannot occur.</t>

<t>For short-lived DNS operations like traditional queries and updates,
an operation is considered in progress for the time between request and 
response, typically a period of a few hundred milliseconds at most.
At the client, the inactivity timer is cleared upon transmission of a 
request and remains cleared until reception of the corresponding response.
At the server, the inactivity timer is cleared upon reception of a request
and remains cleared until transmission of the corresponding response.</t>

<t>For long-lived DNS Stateful operations, an operation is considered in progress
for as long as the state is active, until it is cancelled.
This means that a DSO session can exist, with a state 
active, with no messages flowing in either direction, for far longer than the 
inactivity timeout, and this is not an error. This is why there are two separate 
timers: the inactivity timeout, and the keepalive interval. Just because a DSO 
session has no traffic for an extended period of time
does not automatically make that DSO session “inactive”,
if it has an active state that is awaiting events.</t>

</section>
<section anchor="the-inactivity-timeout" title="The Inactivity Timeout">

<t>The purpose of the inactivity timeout is for the server to balance its trade off 
between the costs of setting up new DSO sessions and the costs of maintaining inactive 
DSO sessions. A server with abundant DSO session capacity can offer a high inactivity timeout, 
to permit clients to keep a speculative DSO session open for a long time, to save 
the cost of establishing a new DSO session for future communications with that 
server. A server with scarce memory resources can offer a low inactivity timeout,
to cause clients to promptly close DSO sessions whenever they have no outstanding
operations with that server, and then create a new DSO session later when needed.</t>

<section anchor="closing-inactive-dso-sessions" title="Closing Inactive DSO Sessions">

<t>A client is NOT required to wait until the inactivity timeout expires
before closing a DSO session.
A client MAY close a DSO session at any time, at the client’s discretion.
If a client determines that it has no current or reasonably anticipated
future need for an inactive DSO session, then the client SHOULD close that connection.</t>

<t>If, at any time during the life of the DSO session,
the inactivity timeout value (i.e., 15 seconds by default) elapses
without there being any operation active on the DSO session,
the client MUST gracefully close the connection with a
TLS close_notify followed by a TCP FIN (or equivalent for other protocols).</t>

<t>If, at any time during the life of the DSO session, twice the inactivity timeout value
(i.e., 30 seconds by default) elapses without there being any operation
active on the DSO session, the server SHOULD consider the client delinquent,
and forcibly abort the DSO session.
For DSO sessions over TCP (or over TLS over TCP),
to avoid the burden of having a connection in TIME-WAIT state, instead of
closing the connection gracefully the server SHOULD abort
the connection with a TCP RST (or equivalent for other protocols).
(In the BSD Sockets API this is achieved by setting the
SO_LINGER option to zero before closing the socket.)</t>

<t>In this context, an operation being active on a DSO session includes
a query waiting for a response, an update waiting for a response,
or active state,
but not a DSO Keepalive message exchange itself.
A DSO Keepalive message exchange resets only the keepalive
interval timer, not the inactivity timeout timer.</t>

<t>If the client wishes to keep an inactive DSO session open for longer than
the default duration without having to send traffic every 15 seconds,
then it uses the DSO Keepalive message to request
longer timeout values, as described in <xref target="keepalive"/>.</t>

</section>
<section anchor="values-for-the-inactivity-timeout" title="Values for the Inactivity Timeout">

<t>For the inactivity timeout value, lower values result in more frequent DSO session 
teardown and re-establishment. Higher values result in lower traffic and CPU
load on the server, but a larger memory burden to maintain state for inactive 
DSO sessions.</t>

<t>A shorter inactivity timeout with a longer keepalive interval signals to the client 
that it should not speculatively keep inactive DSO sessions open for very long without
reason, but when it does have an active reason to keep a DSO session open, it 
doesn’t need to be sending an aggressive level of keepalive traffic.</t>

<t>A longer inactivity timeout with a shorter keepalive interval signals to the client
that it may speculatively keep inactive DSO sessions open for a long time, but it
should be sending a lot of keepalive traffic on those inactive DSO sessions.
This configuration is expected to be less common.</t>

<t>To avoid repeated teardown and re-establishment of sessions,
the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with an inactivity timeout value less than ten seconds.
If a client receives a Keepalive message specifying an inactivity timeout value
less than ten seconds this is an error and the client MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="keepalivetimer" title="The Keepalive Interval">

<t>The purpose of the keepalive interval is to manage the generation of
sufficient messages to maintain state in middle boxes (such at NAT gateways
or firewalls) and for the client and server to periodically verify that they
still have connectivity to each other. This allows them to clean up state
when connectivity is lost, and attempt re-connection if appropriate.</t>

<section anchor="keepalive-interval-expiry" title="Keepalive Interval Expiry">

<t>If, at any time during the life of the DSO session,
the keepalive interval value (i.e., 15 seconds by default) elapses
without any DNS messages being sent or received on a DSO session,
the client MUST take action to keep the DSO session alive,
by sending a DSO Keepalive message (see <xref target="keepalive"/>).
A DSO Keepalive message exchange resets only the keepalive timer, 
not the inactivity timer.</t>

<t>If a client disconnects from the network abruptly,
without cleanly closing its DSO session,
leaving long-lived state uncanceled,
the server learns of this after failing to
receive the required keepalive traffic from that client.
If, at any time during the life of the DSO session,
twice the keepalive interval value (i.e., 30 seconds by default) elapses
without any DNS messages being sent or received on a DSO session,
the server SHOULD consider the client delinquent,
and forcibly abort the connection with a TCP RST (or equivalent for other 
protocols).</t>

</section>
<section anchor="values-for-the-keepalive-interval" title="Values for the Keepalive Interval">

<t>For the keepalive interval value, lower values result in higher volume keepalive 
traffic. Higher values of the keepalive interval reduce traffic and CPU load, 
but have minimal effect on the memory burden
at the server, because clients keep a DSO session open for the same length of time
(determined by the inactivity timeout) regardless of the level of keepalive traffic 
required.</t>

<t>It may be appropriate for clients and servers to select different keepalive 
interval values depending on the nature of the network they are on.</t>

<t>A corporate DNS server that knows it is serving only clients on the internal 
network, with no intervening NAT gateways or firewalls, can impose a higher 
keepalive interval, because frequent keepalive traffic is not required.</t>

<t>A public DNS server that is serving primarily residential consumer clients, 
where it is likely there will be a NAT gateway on the path, may impose a lower 
keepalive interval, to generate more frequent keepalive traffic.</t>

<t>A smart client may be adaptive to its environment. A client using
a private IPv4 address <xref target="RFC1918"/> to communicate with a DNS server
at an address outside that IPv4 private address block,
may conclude that there is likely to be a NAT gateway on the path,
and accordingly request a lower keepalive interval.</t>

<t>For environments where there is a NAT gateway or firewalls on the path, it is
RECOMMENDED that clients request, and servers grant, a keepalive interval of 15
minutes. In other environments it is RECOMMENDED that clients request, and 
servers grant, a keepalive interval of 60 minutes.</t>

<t>Note that the lower the keepalive interval value, the higher the load on client
and server. For example, an keepalive interval value of 100ms would result in a
continuous stream of at least ten messages per second, in both directions,
to keep the DSO session alive. And, in this extreme example, a single packet loss and
retransmission over a long path could introduce a momentary pause in the stream of messages,
long enough to cause the server to overzealously abort the connection.</t>

<t>Because of this concern, the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with an keepalive interval value less than ten seconds.
If a client receives an Keepalive message specifying an keepalive interval value
less than ten seconds this is an error and the client MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="server-initiated-termination-on-error" title="Server-Initiated Termination on Error">

<t>After sending an error response to a client, the server MAY close the DSO session,
or may allow the DSO session to remain open. For error conditions
that only affect the single operation in question, the server SHOULD return an
error response to the client and leave the DSO session open for further operations.
For error conditions that are likely to make all operations unsuccessful in the
immediate future, the server SHOULD return an error response to the client and 
then close the DSO session by sending a Retry Delay request message, as described in 
<xref target="delay"/>.</t>

</section>
<section anchor="error" title="Client Behaviour in Receiving an Error">

<t>Upon receiving an error response from the server, a client SHOULD NOT
automatically close the DSO session. An error relating to one particular operation
on a DSO session does not necessarily imply that all other operations on that
DSO session have also failed, or that future operations will fail. The client
should assume that the server will make its own decision about whether or not to
close the DSO session, based on the server’s determination of whether the error
condition pertains to this particular operation, or would also apply to any
subsequent operations. If the server does not close the DSO session then the client
SHOULD continue to use that DSO session for subsequent operations.</t>

</section>
<section anchor="server-initiated-termination-on-overload" title="Server-Initiated Termination on Overload">

<t>Apart from the cases where:</t>

<t><list style="symbols">
  <t>Session Timeouts expire (see <xref target="sessiontimeouts"/>)</t>
  <t>On error (see <xref target="error"/>)</t>
  <t>When under load (see below)</t>
</list></t>

<t>a server MUST NOT close a DSO session with a client, except in extraordinary error 
conditions. Closing the DSO session is the
client’s responsibility, to be done at the client’s discretion, when it so 
chooses. A server only closes a DSO session under exceptional circumstances, such as
when the server application software or underlying operating system is
restarting, the server application terminated unexpectedly (perhaps due to a
bug that makes it crash), or the server is undergoing maintenance procedures.
When possible, a server SHOULD send a Retry Delay message informing the
client of the reason for the DSO session being closed, and allow the client
five seconds to receive it before the server resorts to forcibly aborting the 
connection.</t>

</section>
<section anchor="retry" title="Retry Delay Operation TLV">

<t>There may be rare cases where a server is overloaded and wishes to shed load.
If a server is low on resources it MAY simply terminate a client connection with 
a TCP RST (or equivalent for other protocols).
However, the likely behavior of the client may be simply to to treat this as a
network failure and connect
immediately, putting more burden on the server.</t>

<t>Therefore to avoid this reconnection implosion, a server SHOULD instead choose 
to shed client load by sending a Retry Delay request message, with an RCODE of 
SERVFAIL, to inform the client of the overload situation. After sending a Retry 
Delay request message, the server MUST NOT send any further messages on that 
DSO session.</t>

<t>After sending the Retry Delay request the server SHOULD allow the
client five seconds to close the connection, and if the client has not
closed the connection after five seconds then the server SHOULD abort
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>Upon receipt of a Retry Delay request from the server, the client MUST
make note of the reconnect delay for this server, and then immediately
close the connection. This is to place the burden of TCP’s TIME-WAIT state on 
the client.</t>

<t>A Retry Delay request message MUST NOT be initiated by a client.
If a server receives a Retry Delay request message this is an error
and the server MUST immediately terminate the connection with a TCP RST
(or equivalent for other protocols).</t>

<section anchor="outstanding-operations" title="Outstanding Operations">

<t>At the moment a server chooses to initiate a Retry Delay request message
there may be DNS requests already in flight from client to server on this 
DSO session, which will arrive at the server after its Retry Delay request message 
has been sent.
The server MUST silently ignore such incoming requests, and MUST NOT generate
any response messages for them. When the Retry Delay request message from the
server arrives at the client, the client will determine that any DNS requests
it previously sent on this DSO session, that have not yet received a response, now 
will certainly not be receiving any response. Such requests should be considered
failed, and should be retried at a later time, as appropriate.</t>

<t>In the case where some, but not all, of the existing operations on a DSO session 
have become invalid (perhaps because the server has been reconfigured and is no 
longer authoritative for some of the names),
but the server is terminating all DSO sessions en masse with a REFUSED (5) RCODE,
the RECONNECT DELAY MAY be zero, indicating that the clients SHOULD immediately
attempt to re-establish operations.
It is likely that some of the attempts will be successful and some will not.</t>

<t>In the case where a server is terminating a large number of DSO sessions at once
(e.g., if the system is restarting) and the server doesn’t want to be inundated 
with a flood of simultaneous retries, it SHOULD send different RECONNECT delay 
values to each client.
These adjustments MAY be selected randomly, pseudorandomly, or deterministically
(e.g., incrementing the time value by one tenth of a second for each successive
client, yielding a post-restart reconnection rate of ten clients per second).</t>

</section>
<section anchor="client-reconnection" title="Client Reconnection">

<t>After a DSO session is closed by the server, the client SHOULD try to reconnect,
to that server, or to another suitable server, if more than one is available.
If reconnecting to the same server, the client MUST respect the indicated delay
before attempting to reconnect.</t>

<t>If a particular server does not want a client to reconnect (it is being
de-commissioned), it SHOULD set the retry delay to the maximum value (which is
approximately 497 days). If the server will only be out of service for a maintenance
period, it should use a value closer to the expected maintenance window and
not default to a very large delay value or clients may not attempt to reconnect
after it resumes service.</t>

</section>
</section>
</section>
<section anchor="sharing" title="Connection Sharing">

<t>As previously specified for DNS over TCP <xref target="RFC7766"/>,
to mitigate the risk of unintentional server overload, DNS clients
MUST take care to minimize the number of concurrent TCP connections
made to any individual server.  It is RECOMMENDED that for any given
client/server interaction there SHOULD be no more than one connection
for regular queries, one for zone transfers, and one for each
protocol that is being used on top of TCP (for example, if the
resolver was using TLS).
However, it is noted that certain primary/secondary configurations
with many busy zones might need to use more than one TCP
connection for zone transfers for operational reasons
(for example, to support concurrent transfers of multiple zones).</t>

<t>A single server may support multiple services, including DNS Updates 
<xref target="RFC2136"/>, DNS Push Notifications <xref target="I-D.ietf-dnssd-push"/>,
and other services, for one or more DNS zones.
When a client discovers that the target server for several different operations
is the same target hostname and port, the client SHOULD use a single
shared DSO session for all those operations.
A client SHOULD NOT open multiple connections to the same target host and port
just because the names being operated on are different or
happen to fall within different zones.
This is to reduce unnecessary connection load on the DNS server.</t>

<t>However, server implementers and operators should be aware that connection
sharing may not be possible in all cases.
A single client device may be home to multiple independent client software
instances that don’t coordinate with each other.
Similarly, multiple independent client devices behind the same NAT gateway
will also typically appear to the DNS server as different source ports on
the same client IP address.
Because of these constraints, a DNS server MUST be prepared to accept
multiple connections from different source ports on the same client IP address.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="dso-opcode-registration" title="DSO OPCODE Registration">

<t>IANA are directed to assign a value (tentatively 6)
in the DNS OPCODEs Registry for the DSO OPCODE.</t>

</section>
<section anchor="dso-rcode-registration" title="DSO RCODE Registration">

<t>IANA are directed to assign a value (tentatively 11)
in the DNS RCODE Registry for the DSONOTIMP error code.</t>

</section>
<section anchor="dso-type-codes-registry" title="DSO Type Codes Registry">

<t>IANA are directed to create the 15-bit DSO Type Codes
Registry, with initial values as follows:</t>

<texttable>
      <ttcol align='right'>Type</ttcol>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Status</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>0x0000</c>
      <c>RetryDelay</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0001</c>
      <c>KeepAlive</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0002</c>
      <c>Encryption Padding</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0003 - 0x003F</c>
      <c>Unassigned, reserved for DSO session management TLVs</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x0040 - 0x77FF</c>
      <c>Unassigned</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x7800 - 0x7BFF</c>
      <c>Reserved for local / experimental use</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x7C00 - 0x7FFF</c>
      <c>Reserved for future expansion</c>
      <c>&#160;</c>
      <c>&#160;</c>
</texttable>

<t>Registration of additional DSO Type Codes requires publication
of an appropriate IETF “Standards Action” or “IESG Approval” document <xref target="RFC5226"/>.</t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>If this mechanism is to be used with DNS over TLS, then these messages
are subject to the same constraints as any other DNS over TLS messages
and MUST NOT be sent in the clear before the TLS session is established.</t>

<t>The data field of the “Encryption Padding” TLV could be used as a covert channel.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to
Tim Chown,
Ralph Droms,
Jan Komissar,
Manju Shankar Rao,
and Ted Lemon
for their helpful contributions to this document.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC1035;
&RFC7766;
&RFC6891;
&RFC7828;
&RFC2119;
&RFC7830;
&RFC1034;
&RFC2136;
&RFC2132;
&RFC1918;
&RFC5226;


    </references>

    <references title='Informative References'>

<reference anchor="NagleDA" target="http://www.stuartcheshire.org/papers/nagledelayedack/">
  <front>
    <title>TCP Performance problems caused by interaction between Nagle's Algorithm and Delayed ACK</title>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization></organization>
    </author>
    <date year="2005" month="May" day="20"/>
  </front>
</reference>
&RFC7858;
&RFC6763;
&I-D.ietf-dnssd-push;
&RFC0768;
&I-D.ietf-dprive-padding-policy;


    </references>



  </back>

<!-- ##markdown-source:
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

-->

</rfc>

