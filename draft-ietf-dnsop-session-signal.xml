<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.1.1 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC7766 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7766.xml">
<!ENTITY RFC6891 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6891.xml">
<!ENTITY RFC7828 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7828.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC7830 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7830.xml">
<!ENTITY RFC1034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC2136 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2136.xml">
<!ENTITY RFC2132 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2132.xml">
<!ENTITY RFC1918 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1918.xml">
<!ENTITY RFC5226 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5226.xml">
<!ENTITY RFC7858 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7858.xml">
<!ENTITY I-D.ietf-dnssd-push SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dnssd-push.xml">
<!ENTITY RFC0768 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.0768.xml">
<!ENTITY I-D.ietf-dprive-padding-policy SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dprive-padding-policy.xml">
]>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-dnsop-session-signal-04" category="std" updates="RFC 7766, RFC 1035">

  <front>
    <title>DNS Stateful Operations</title>

    <author initials="R." surname="Bellis" fullname="Ray Bellis">
      <organization abbrev="ISC">Internet Systems Consortium, Inc.</organization>
      <address>
        <postal>
          <street>950 Charter Street</street>
          <city>Redwood City</city>
          <code>CA 94063</code>
          <country>USA</country>
        </postal>
        <phone>+1 650 423 1200</phone>
        <email>ray@isc.org</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>1 Infinite Loop</street>
          <city>Cupertino</city>
          <code>CA 95014</code>
          <country>USA</country>
        </postal>
        <phone>+1 408 974 3207</phone>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="J." surname="Dickinson" fullname="John Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>jad@sinodun.com</email>
      </address>
    </author>
    <author initials="S." surname="Dickinson" fullname="Sara Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>sara@sinodun.com</email>
      </address>
    </author>
    <author initials="A." surname="Mankin" fullname="Allison Mankin">
      <organization>Salesforce</organization>
      <address>
        <email>allison.mankin@gmail.com</email>
      </address>
    </author>
    <author initials="T." surname="Pusateri" fullname="Tom Pusateri">
      <organization>Unaffiliated</organization>
      <address>
        <phone>+1 919 867 1330</phone>
        <email>pusateri@bangj.com</email>
      </address>
    </author>

    <date year="2017" month="September" day="08"/>

    <area>Internet</area>
    <workgroup>DNSOP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document defines a new DNS Stateful Operation OPCODE used to communicate 
operations within persistent stateful sessions, expressed using type-length-value (TLV) 
syntax, and defines an initial set of TLVs used to manage session timeouts and 
termination. This mechanism is intended to reduce the overhead of existing 
“per-packet” signaling mechanisms with “per-message” semantics as well as 
defining new stateful operations not defined in EDNS(0).</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The use of transports for DNS other than UDP is being increasingly specified,
for example, DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> and DNS over TLS <xref target="RFC7858"/>.
Such transports can offer persistent, long-lived sessions and therefore when
using them for transporting DNS messages it is of benefit to have a mechanism
that can establish parameters associated with those sessions, such as timeouts.
In such situations it is also advantageous to support server initiated messages.</t>

<t>The existing EDNS(0) Extension Mechanism for DNS <xref target="RFC6891"/> is explicitly
defined to only have “per-message” semantics. Whilst EDNS(0) has been used to
signal at least one session related parameter (the EDNS(0) TCP Keepalive option
<xref target="RFC7828"/>) the result is less than optimal due to the restrictions
imposed by the EDNS(0) semantics and the lack of server-initiated signalling. 
For example, a server cannot arbitrarily 
instruct a client to close a connection because the server can only send EDNS(0) options 
in responses to queries that contained EDNS(0) options.</t>

<t>This document defines a new DNS Stateful Operation OPCODE used to carry
operations within persistent stateful connections, expressed using type-length-value (TLV)
syntax, and
defines an initial set of TLVs including ones used to manage session timeouts and termination.</t>

<t>This new format has distinct advantages over an RR based format because it
is more explicit and more compact. Each TLV definition is specific
to the use case, and as a result contains no redundant or overloaded fields.
Importantly, it completely avoids conflating DNS Stateful Operations in anyway 
with normal DNS operations or with existing EDNS(0) based functionality. A goal 
of this approach is to avoid the operational
issues that have befallen EDNS(0), particularly relating to middle-box 
behaviour.</t>

<t>With EDNS(0), multiple options may be packed into a single OPT pseudo-RR,
and there is no generalized mechanism for a client to be able to tell
whether a server has processed or otherwise acted upon each individual
option within the combined OPT RR.
The specifications for each individual option need to define how each
different option is to be acknowledged, if necessary.</t>

<t>With DNS Stateful Operations, in contrast, there is no compelling motivation
to pack multiple operations into a single message for efficiency reasons.
Each Stateful operation is communicated in its own separate
DNS message, and the transport protocol can take care of packing
separate DNS messages into a single IP packet if appropriate.
For example, TCP can pack multiple small DNS messages into a single TCP segment.
The RCODE in each response message indicates the success or failure of the operation in question.</t>

<t>It should be noted that the message format for DNS Stateful Operations
(see <xref target="format"/>) differs from the traditional DNS packet
format used for standard queries and responses.
The standard twelve-octet header is used, but the four count fields
(QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) are set to zero and their
corresponding sections are not present.
The actual data pertaining to DNS Stateful Operations is
appended to the end of the DNS message header.
When displayed using today’s packet analyzer tools that have not been updated
to recognize the DNS Stateful Operations format, this will result
in the Stateful Operations data being displayed as unknown additional
data after the end of the DNS message. It is likely that future updates
to these tools will add the ability to recognize, decode, and display the
Stateful Operations data.</t>

</section>
<section anchor="terminology" title="Terminology">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and
“OPTIONAL” in this document are to be interpreted as described in
“Key words for use in RFCs to Indicate Requirement Levels” <xref target="RFC2119"/>.</t>

<t>“DSO” is used to mean DNS Stateful Operation.</t>

<t>The term “connection” means a bidirectional byte stream of reliable,
in-order messages, such as provided by using
DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> or DNS over TLS <xref target="RFC7858"/>.</t>

<t>The unqualified term “session” in the context of this document means the exchange of
DNS messages over a connection where:</t>

<t><list style="symbols">
  <t>The connection between client and server is persistent and relatively
long-lived (i.e., minutes or hours, rather than seconds).</t>
  <t>Either end of the connection may initiate messages to the other.</t>
</list></t>

<t>A “DSO session” is established between two endpoints that
acknowledge persistent DNS state via the exchange of DSO messages
over the connection. This is distinct from, for example a DNS-over-TCP session
as described in RC7766.</t>

<t>A “DSO session” is terminated when the underlying connection is closed.</t>

<t>The term “server” means the software with a listening socket, awaiting
incoming connection requests.</t>

<t>The term “client” means the software which initiates a connection
to the server’s listening socket.</t>

<t>The terms “initiator” and “responder” correspond respectively to the
initial sender and subsequent receiver of a DSO request message,
regardless of which was the “client” and “server” in the usual DNS sense.</t>

<t>The term “sender” may apply to either an initiator
(when sending a DNS Stateful Operation request message)
or a responder (when sending a DNS Stateful Operation response message).</t>

<t>Likewise, the term “receiver” may apply to either a responder
(when receiving a DNS Stateful Operation request message)
or an initiator (when receiving a DNS Stateful Operation response message).</t>

<t>DNS Stateful Operations are expressed using type-length-value (TLV) syntax.</t>

<t>Two timers (elapsed time since an event) are defined in this document:</t>

<t><list style="symbols">
  <t>an inactivity timer (see <xref target="keepalive"/> and <xref target="inactivetimer"/>)</t>
  <t>a keepalive timer (see <xref target="keepalive"/> and <xref target="keepalivetimer"/>)</t>
</list></t>

<t>The timeouts associated with these timers are called the inactivity timeout and 
the keepalive interval respectively. 
The term “Session Timeouts” is used to refer to this pair of timeout values.</t>

<t>Reseting a timer means resetting the timer value to zero and starting the timer 
again. Clearing a timer means resetting the timer value to zero but NOT starting 
the time again.</t>

</section>
<section anchor="discussion" title="Discussion">

<t>There are several use cases for DNS Stateful operations that can 
be described here.</t>

<t>Firstly, establishing session parameters such as server defined timeouts is of 
great use in the 
general management of persistent connections. For example, using DSO sessions 
for stub to recursive DNS-over-TLS <xref target="RFC7858"/> is more flexible for both the 
client and the server than attempting to manage sessions using just the EDNS(0)
TCP Keepalive option
<xref target="RFC7828"/>. The simple set of TLVs defined in this document is
sufficient to greatly enhance connection management for this use case.</t>

<t>Secondly, DNS-SD has evolved into a naturally session based mechanism where, for 
example, long-lived subscriptions lend themselves to ‘push’ mechanisms as 
opposed to polling. Long-lived stateful connections and server initiated 
messages align with this use case as described in <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>A general use case is that DNS traffic is often bursty but session establishment 
can be expensive. One challenge with long-lived connections is to maintain 
sufficient traffic to maintain NAT and firewall state. To mitigate this issue 
this document introduces a 
new concept for the DNS, that is DSO “Keepalive traffic”. This traffic carries 
no DNS data and is not considered ‘activity’ in the classic DNS sense but serves 
to reset a keepalive timer in order to avoid re-cycling a DSO session.</t>

<t>There are a myriad of other potential use cases for DSO given the versatility 
and extensibility of this specification.</t>

<t><xref target="details"/> of this document first describes the protocol details of DNS Stateful
Operations including definitions of three TLVs for session management and 
encryption padding. <xref target="lifecycle"/> then presents a
detailed discussion of the DSO Session lifecycle including an
in-depth discussion of keepalive traffic and session termination.</t>

</section>
<section anchor="details" title="Protocol Details">

<section anchor="establishment" title="DSO Session Establishment">

<t>DSO messages MUST only be carried in protocols and in
environments where a session may be established according to the definition above.
Standard DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/>, and DNS over TLS <xref target="RFC7858"/>
are suitable protocols.</t>

<t>DNS over plain UDP <xref target="RFC0768"/> is not appropriate since it fails on the requirement for
in-order message delivery, and, in the presence of NAT gateways and firewalls
with short UDP timeouts, it fails to provide a persistent bi-directional
communication channel unless an excessive amount of keepalive traffic is used.</t>

<t>DSO messages relate only to the specific “DSO session” in which
they are being carried. A “DSO session” is established over a connection when
either side of the connection sends the first DSO
TLV and it is acknowledged by the other side. The DSO message format <xref target="dsodata"/> 
includes an option to specify that a DSO request does not require a 
response acknowledgement. Session establishment can only be performed using a 
DSO message that requires a response acknowledgement.</t>

<t>While this 
specification defines an initial set of three TLVs, additional TLVs may be 
defined in additional specifications. All three of the TLVs defined here are 
mandatory to implement.</t>

<t>A client MAY attempt to initiate DSO messages at any time
on a connection; receiving a NOTIMP response in reply indicates that the
server does not implement DSO, and the client SHOULD NOT
issue further DSO messages on that connection.</t>

<t>A server SHOULD NOT initiate DSO messages until a
client-initiated DSO message is received first,
unless in an environment where it is known in advance by other
means that the client supports DSO.
This requirement is to ensure that the clients that do not support
DSO do not receive unsolicited inbound DSO
messages that they would not know how to handle.</t>

<t>On a session between a client and server that support DSO,
once the client has sent at least one DSO message (or it is
known in advance by other means that the client supports DSO)
either end may unilaterally send DSO messages at any time,
and therefore either client or server may be the initiator of a message.</t>

<t>From this point on it is considered that a “DSO session” is in
progress. Clients and servers should behave as described in this specification
with regard to inactivity timeouts and connection close, not as prescribed in <xref target="RFC7766"/>.</t>

<section anchor="middle-box-considerations" title="Middle-box Considerations">

<t>Where an application-layer middle box (e.g., a DNS proxy, forwarder, or
session multiplexer) is in the path the middle box MUST NOT blindly
forward DSO messages in either direction, and MUST treat the inbound
and outbound connections as separate sessions.  This does not preclude
the use of DSO messages in the presence of an IP-layer middle box such
as a NAT that rewrites IP-layer and/or transport-layer headers, but
otherwise preserves the effect of a single session between the client
and the server.</t>

<t>To illustrate the above, consider a network where a middle box
terminates one or more TCP connections from clients and multiplexes the
queries therein over a single TCP connection to an upstream server.  The
DSO messages and any associated state are specific to the individual
TCP connections.  A DSO-aware middle box MAY in some circumstances be
able to retain associated state and pass it between the client and
server (or vice versa) but this would be highly TLV-specific.  For
example, the middle box may be able to maintain a list of which clients
have made Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/> and
make its own subscription(s) on their behalf, relaying any subsequent
notifications to the client (or clients) that have subscribed to that
particular notification.</t>

</section>
</section>
<section anchor="format" title="Message Format">

<t>A DSO message begins with
the standard twelve-octet DNS message header <xref target="RFC1035"/>
with the OPCODE field set to the DSO OPCODE (tentatively 6).
However, unlike standard DNS messages, the question section, answer section,
authority records section and additional records sections are not present.
The corresponding count fields (QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) MUST be
set to zero on transmission.</t>

<t>If a DSO message is received where any of the count fields are
not zero, then a FORMERR MUST be returned.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                          MESSAGE ID                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |QR |    OPCODE     |            Z              |     RCODE     |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     QDCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ANCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     NSCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ARCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                           DSO Data                            /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<section anchor="header" title="Header">

<t>In a request the MESSAGE ID field MUST be set to a unique value, that the
initiator is not currently using for any other active operation on this 
connection.
For the purposes here, a MESSAGE ID is in use in this DSO session if the
initiator has used it in a request for which it has not yet received a
response, or if the client has used it to setup state that it has not yet ready
to delete. For example, state could be a subscription as defined in 
<xref target="I-D.ietf-dnssd-push"/>.</t>

<t>In a response the MESSAGE ID field MUST contain a copy of the value of the
MESSAGE ID field in the request being responded to.</t>

<t>In a request the DNS Header QR bit MUST be zero (QR=0).
If the QR bit is not zero the message is not a request.</t>

<t>In a response the DNS Header QR bit MUST be one (QR=1).
If the QR bit is not one the message is not a response.</t>

<t>The DNS Header OPCODE field holds the DSO OPCODE value (tentatively 6).</t>

<t>The Z bits are currently unused, and in both requests and responses the
Z bits MUST be set to zero (0) on transmission and MUST be silently ignored
on reception, unless a future document specifies otherwise.</t>

<t>In a request message (QR=0) the RCODE is generally set to zero on transmission,
and silently ignored on reception, except where specified otherwise
(for example, the Retry Delay operation (see <xref target="delay"/>), where the RCODE indicates the reason
for termination).</t>

<t>The RCODE value in a response may be one of the following values:</t>

<texttable>
      <ttcol align='right'>Code</ttcol>
      <ttcol align='left'>Mnemonic</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>0</c>
      <c>NOERROR</c>
      <c>Operation processed successfully</c>
      <c>1</c>
      <c>FORMERR</c>
      <c>Format error</c>
      <c>2</c>
      <c>SERVFAIL</c>
      <c>Server failed to process request due to a problem with the server</c>
      <c>3</c>
      <c>NXDOMAIN</c>
      <c>TLV dependent</c>
      <c>4</c>
      <c>NOTIMP</c>
      <c>DSO not supported</c>
      <c>5</c>
      <c>REFUSED</c>
      <c>Operation declined for policy reasons</c>
      <c>9</c>
      <c>NOTAUTH</c>
      <c>Not Authoritative (TLV dependent)</c>
      <c>11</c>
      <c>DSONOTIMP</c>
      <c>DSO type code not supported</c>
</texttable>

<t>Use of the above RCODE’s is likely to be common in DSO but 
does not preclude the definition and use of other codes in future documents that 
make use of DSO.</t>

<t>If a document describing a DSO makes use of either NXDOMAIN 
or NOTAUTH then that document MUST explain the meaning.</t>

</section>
<section anchor="dsodata" title="DSO Data">

<t>The standard twelve-octet DNS message header is followed by the DSO Data.</t>

<t>The first TLV in a DSO request message is called the Operation 
TLV. Any subsequent TLVs after this initial Operation TLV are called Modifier TLVs.</t>

<t>Depending on the operation a DSO response can contain:</t>

<t><list style="symbols">
  <t>No TLVs</t>
  <t>Only an Operation TLV</t>
  <t>An Operation TLV followed by one or more Modifier TLVs</t>
  <t>Only Modifier TLVs</t>
</list></t>

<section anchor="tlv-format" title="TLV Format">

<t>Operation and modifier TLVs both use the same encoding format.</t>

<t>Operation TLVs SHOULD normally require a response and, therefore, set the TLV
Acknowledgement bit in a request. However, for some Operation TLVs, this may be
undesirable and the TLV Acknowledgement bit MAY be cleared in the request. Each
Operation TLV definition should stipulate whether an acknowledgement is
REQUIRED. If the TLV Acknowledgement bit is cleared in a request, a response
MUST NOT be sent. Modifier TLVs MUST NEVER set the Acknowledgement bit. The
Acknowledgement bit is NEVER set in the response to an Operation TLV.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   | A |                        DSO-TYPE                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                        DSO DATA LENGTH                        |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                      TYPE-DEPENDENT DATA                      /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='A:'>
  A 1 bit TLV Response flag indicating whether or not an Operation TLV requires
a response Acknowledgement.
DSO-TYPE:</t>
  <t>A 15 bit field in network order giving the type of the current DSO TLV per
the IANA DSO Type Codes Registry.</t>
  <t hangText='DSO DATA LENGTH:'>
  A 16 bit field in network order giving the size in octets of
the TYPE-DEPENDENT DATA.</t>
  <t hangText='TYPE-DEPENDENT DATA:'>
  Type-code specific format.</t>
</list></t>

<t>Where domain names appear within TYPE-DEPENDENT DATA, they MAY be compressed 
using standard DNS name compression. However, the compression MUST NOT point
outside of the TYPE-DEPENDENT DATA section and offsets MUST be from the start
of the TYPE-DEPENDENT DATA.</t>

</section>
<section anchor="operation-tlvs" title="Operation TLVs">

<t>An “Operation TLV” specifies the operation to be performed.</t>

<t>A DSO message MUST contain at most one Operation TLV.</t>

<t>In all cases a DSO request message MUST contain exactly one 
Operation TLV, indicating the operation to be performed.</t>

<t>Depending on the operation, a DSO response message MAY contain no 
Operation TLV, because it is simply a response to a previous request message,
and the MESSAGE ID in the header is sufficient to identify the request in 
question. Or it may contain a single corresponding response Operation TLV, with 
the same DSO-TYPE as in the request message. The specification for each DSO
type determines whether a response for that operation type 
is required to carry the Operation TLV.</t>

<t>If a DSO response is received for an operation which requires
that the response carry an Operation TLV, and the required Operation TLV is not
the first DSO TLV in the response message, then this is a fatal 
error and the recipient of the defective response message MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
<section anchor="modifier-tlvs" title="Modifier TLVs">

<t>A “Modifier TLV” specifies additional parameters
relating to the operation. Immediately following the Operation TLV, if present,
a DSO message MAY contain one or more Modifier TLVs.</t>

</section>
<section anchor="unrecognized-tlvs" title="Unrecognized TLVs">

<t>If a DSO request is received containing an unrecognized
Operation TLV, the receiver MUST send a response with matching
MESSAGE ID, and RCODE DSONOTIMP (tentatively 11). The response MUST NOT contain 
an Operation TLV.</t>

<t>If a DSO message (request or response) is received
containing one or more unrecognized Modifier TLVs, the unrecognized
Modifier TLVs MUST be silently ignored, and the remainder of the message
is interpreted and handled as if the unrecognized parts were not present.</t>

</section>
</section>
<section anchor="edns0-and-tsig" title="EDNS(0) and TSIG">

<t>Since the ARCOUNT field MUST be zero, a DSO message
MUST NOT contain an EDNS(0) option in the additional records section.
If functionality provided by current or future EDNS(0) options is desired
for DSO messages, an Operation TLV or
Modifier TLV needs to be defined to carry the necessary information.</t>

<t>For example, the EDNS(0) Padding Option <xref target="RFC7830"/> used for security purposes
is not permitted in a DSO message,
so if message padding is desired for DSO messages
then the Encryption Padding TLV described in <xref target="padding"/> MUST be used.</t>

<t>Similarly, a DSO message MUST NOT contain a TSIG record.
A TSIG record in a conventional DNS message is added as the last record
in the additional records section, and carries a signature computed over
the preceding message content. Since DSO data appears
after the additional records section, it would not be included in the
signature calculation. 
If use of signatures with DSO messages becomes necessary in the 
future, an explicit Modifier TLV needs to be defined to 
perform this function.</t>

<t>Note however that, while DSO <spanx style="emph">messages</spanx> cannot include
EDNS(0) or TSIG records, a DSO <spanx style="emph">session</spanx> is typically used to 
carry a whole series of DNS messages of different kinds, including DSO
messages, and other DNS message types like Query <xref target="RFC1034"/> 
<xref target="RFC1035"/> and Update <xref target="RFC2136"/>, and those messages can carry EDNS(0) and 
TSIG records.</t>

<t>This specification explicitly prohibits use of the
EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>
in <spanx style="emph">any</spanx> messages sent on a DSO session (because it duplicates
the functionality provided by the DSO Keepalive operation),
but messages may contain other EDNS(0) options as appropriate.</t>

</section>
</section>
<section anchor="message-handling" title="Message Handling">

<t>The initiator MUST set the value of the QR bit in the DNS header to zero
(0), and the responder MUST set it to one (1). Every DSO request 
message (QR=0) MUST elicit a response (QR=1), 
which MUST have the same MESSAGE ID in the DNS message header as in the 
corresponding request. DSO request messages sent by the client 
elicit a response from the server, and DSO request messages sent 
the server elicit a response from the client.</t>

<t>With most TCP implementations, the TCP data acknowledgement (generated because 
data has been received by TCP), the TCP window update (generated because TCP has 
delivered that data to the receiving software) and the DSO 
response (generated by the receiving software itself)
are all combined into a single packet, so in practice the requirement that every
DSO request message MUST elicit a 
DSO response incurs minimal extra cost on the network.
Requiring that every request elicit a corresponding response also avoids
performance problems caused by interaction between
Nagle’s Algorithm and Delayed Ack <xref target="NagleDA"/>.</t>

<t>The namespaces of 16-bit MESSAGE IDs are disjoint in each direction.
For example, it is <spanx style="emph">not</spanx> an error for both client and server to send a request
message with the same ID. In effect, the 16-bit MESSAGE ID combined with the 
identity of the initiator (client or server) serves as a 17-bit unique 
identifier for a particular operation on a DSO session.</t>

<t>As described in <xref target="header"/> An initiator MUST NOT reuse a MESSAGE ID that is 
already in use for an 
outstanding request, unless specified otherwise by the relevant specification 
for the DSO in question. At the very least, this means 
that a MESSAGE ID MUST NOT be reused in a particular direction
on a particular DSO session while the initiator is waiting for a response to a 
previous request on that DSO session, unless specified otherwise by the relevant 
specification for the DSO in question.
(For a long-lived state the MESSAGE ID for the operation
MUST NOT be reused whilst that state remains active.)</t>

<t>If a client or server receives a response (QR=1) where the MESSAGE ID does not
match any of its outstanding operations, this is a fatal error and it MUST 
immediately terminate the connection with a TCP RST (or equivalent for other 
protocols).</t>

</section>
</section>
<section anchor="keepalive" title="Keepalive Operation TLV">

<t>The Keepalive Operation TLV (DSO-TYPE=1) performs two functions: to reset the
keepalive timer for the DSO session and to establish the values for the Session Timeouts.</t>

<t>The Keepalive Operation TLV resets only the keepalive timer, not the inactivity 
timer. The reason for this is that periodic Keepalive Operation TLVs are sent 
for the sole purpose of keeping a DSO session alive because that DSO session has 
current or recent activity that warrants keeping the DSO session alive.
If sending keepalive traffic itself were to reset the inactivity timer, then 
that would create a circular livelock where keepalive traffic would be sent 
indefinitely to keep a DSO session alive, where the only activity on that DSO 
session would be keepalive traffic keeping the DSO session alive so that further 
keepalive traffic can be sent.</t>

<t>Sending keepalive traffic is considered a maintenance activity
that is performed in service of other client activities.
Sending keepalive traffic itself is not considered a client activity.
For a DSO session to be considered active, it must be carrying something more than just keepalive traffic.
This is why merely sending a Keepalive Operation TLV does not reset the inactivity timer.</t>

<t>When sent by a client, the Keepalive Operation TLV resets a DSO session’s keepalive timer,
and at the same time requests what the Session Timeout values should be from this point forward in the DSO session.</t>

<t>An acknowledgement is always required for a Keepalive Operation TLV and the TLV
Acknowledgement bit MUST be set in the request when originated by either the
client or the server.</t>

<t>Once a DSO session is in progress (see <xref target="details"/>)
the Keepalive TLV also MAY be initiated by a server.
When sent by a server, it resets a DSO session’s keepalive timer,
and unilaterally informs the client of the new Session Timeout values to use 
from this point forward in this DSO session.</t>

<t>It is not required that the Keepalive TLV be used in every DSO session.
While many DNS Stateful operations
will be used in conjunction with a long-lived session state,
not all DNS Stateful operations require long-lived session state,
and in some cases the default 15-second value for both the inactivity timeout
and keepalive interval may be perfectly appropriate. However, it can be noted 
that for clients that implement only the TLVs defined in this document it is
the only way for a client to initiate a DSO session.</t>

<t>The TYPE-DEPENDENT DATA for the the Keepalive TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 INACTIVITY TIMEOUT (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 KEEPALIVE INTERVAL (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='INACTIVITY TIMEOUT:'>
  the inactivity timeout for the current DSO session, specified as a 32
bit word in network (big endian) order in units of milliseconds.
This is the timeout at which the client MUST close an inactive DSO session.
If the client does not gracefully close an inactive DSO session then after
twice this interval the server will forcibly terminate the connection
with a TCP RST (or equivalent for other protocols).</t>
  <t hangText='KEEPALIVE INTERVAL:'>
  the keepalive interval for the current DSO session, specified as a 32-bit
word, in network (big endian) order, in units of milliseconds.
This is the interval at which a client MUST generate keepalive
traffic to maintain connection state.
If the client does not generate the necessary keepalive traffic then after
twice this interval the server will forcibly terminate the connection
with a TCP RST (or equivalent for other protocols).</t>
</list></t>

<t>In a client-initiated DSO Keepalive message,
the Session Timeouts contain the client’s requested values.
In a server response to a client-initiated message, the Session Timeouts contain 
the server’s chosen values, which the client MUST 
respect. This is modeled after the DHCP protocol, where the client
requests a certain lease lifetime using DHCP option 51 <xref target="RFC2132"/>,
but the server is the ultimate authority
for deciding what lease lifetime is actually granted.</t>

<t>In a server-initiated DSO Keepalive message, the Session Timeouts unilaterally 
inform the client of the new values from this 
point forward in this DSO session. The client MUST generate a response to the 
server-initiated DSO Keepalive message.
The MESSAGE ID in the response message MUST match the ID from the 
server-initiated DSO Keepalive message, and the response message 
MUST NOT contain any Operation TLV.</t>

<t>When a client is sending its second and subsequent Keepalive DSO 
requests to the server, the client SHOULD continue to request its preferred 
values each time. This allows flexibility, so that if conditions change during 
the lifetime of a DSO session, the server can adapt its responses to better fit 
the client’s needs.</t>

<section anchor="client-handling-of-received-session-timeout-values" title="Client handling of received Session Timeout values">

<t>When a client receives a response to its client-initiated DSO Keepalive message,
or receives a server-initiated DSO Keepalive message, the client has then 
received Session Timeout values dictated by the server. The two timeout values 
contained in the DSO Keepalive TLV from the server may each be higher, lower, or 
the same as the respective Session Timeout values the client previously had for 
this DSO session.</t>

<t>In the case of the keepalive timer, the handling of the received value is 
straightforward. The act of receiving the message containing the DSO Keepalive 
TLV itself resets the keepalive timer and updates the keepalive interval for the 
DSO session. The new keepalive interval indicates the 
maximum time that may elapse before another message must be sent
or received on this DSO session, if the DSO session is to remain alive.</t>

<t>In the case of the inactivity timeout, the handling of the received value 
superficially appears a little more subtle, though the meaning of the inactivity 
timeout is unchanged – it still indicates the maximum permissible time allowed 
without activity on a DSO session.
The act of receiving the message containing the DSO Keepalive TLV does not
itself reset the inactivity timer. The time elapsed since the last useful
activity on this DSO session is unaffected by exchange of DSO Keepalive messages.
The act of receiving the message containing the DSO Keepalive TLV does update 
the timeout associated with the running inactivity timer; that
becomes the new maximum permissible time without activity on a DSO session.</t>

<t><list style="symbols">
  <t>If the inactivity timer value is not greater than the new inactivity timeout, 
then the DSO session may remain open for now. When the inactivity timer value 
exceeds the new inactivity timeout, the client MUST then close the DSO session,
as described above.</t>
  <t>If the inactivity timer value is already greater than the new inactivity 
timeout, then this DSO session has already been inactive
for longer than the server permits, and the client MUST immediately close this DSO session.</t>
  <t>If the inactivity timer value is more than twice the new inactivity timeout, 
then this DSO session is eligible to be
forcibly terminated by the server and and the client MUST immediately close this 
DSO session. However if a server abruptly reduces the
inactivity timeout in this way the server SHOULD give the client a grace period
of one quarter of the new inactivity timeout, to give the client time to close
the connection gracefully before the server resorts to terminating it forcibly.</t>
</list></t>

</section>
<section anchor="relation-to-edns0-tcp-keepalive-option" title="Relation to EDNS(0) TCP Keepalive Option">

<t>The inactivity timeout value in the Keepalive TLV (DSO-TYPE=1) has similar
intent to the EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>.
A client/server pair that supports DSO MUST NOT use the
EDNS(0) TCP KeepAlive option within any message after a DSO 
session has been established.
Once a DSO session has been established, if either
client or server receives a DNS message over the DSO session that contains an
EDNS(0) TCP Keepalive option, this is an error and the receiver of the
EDNS(0) TCP Keepalive option MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="delay" title="Retry Delay TLV">

<t>The Retry Delay TLV (DSO-TYPE=0) can be used as an Operation TLV or as
a Modifier TLV.</t>

<t>The TYPE-DEPENDENT DATA for the the Retry Delay TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     RETRY DELAY (32 bits)                     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='RETRY DELAY:'>
  a time value, specified as a 32 bit word in network order in units of 
milliseconds, within which the client MUST NOT retry this operation, or retry 
connecting to this server.</t>
</list></t>

<t>The RECOMMENDED value is 10 seconds.</t>

<section anchor="use-as-an-operation-tlv" title="Use as an Operation TLV">

<t>When sent in a DSO request message, from server to client, the 
Retry Delay TLV (0) is considered an Operation TLV. It is used by a server 
to request that a client close the DSO session and underlying connection, and 
not to reconnect for the indicated time interval.</t>

<t>In this case it applies to the DSO session as a whole, and the client MUST close the 
DSO session, as described in section <xref target="retry"/>. The RCODE in the message header 
MUST indicate the reason for the termination:</t>

<t><list style="symbols">
  <t>NOERROR indicates a routine shutdown.</t>
  <t>SERVFAIL indicates that the server is overloaded due to resource exhaustion.</t>
  <t>REFUSED indicates that the server has been reconfigured and is no longer able 
to perform one or more of the functions 
currently being performed on this DSO session (for example, a DNS Push Notification 
server could be reconfigured such that is is no longer accepting DNS Push 
Notification requests for one or more of the currently subscribed names).</t>
</list></t>

<t>This document specifies only these three RCODE values for Retry Delay request.
Servers sending Retry Delay requests SHOULD use one of these three values.
However, future circumstances may create situations where other RCODE values
are appropriate in Retry Delay requests, so clients MUST be prepared
to accept Retry Delay requests with any RCODE value.</t>

<t>An acknowledgement is not desired for a Retry Delay Operation TLV and the TLV
Acknowledgement bit MUST be cleared in the request.</t>

</section>
<section anchor="use-as-a-modifier-tlv" title="Use as a Modifier TLV">

<t>When appended to a DSO response message for some client request,
the Retry Delay TLV (0) is considered a Modifier TLV.
The indicated time interval during which the client SHOULD NOT retry
applies only to the failed operation, not to the DSO session as a whole.</t>

<t>In the case of a client request that returns a nonzero RCODE value, the server 
MAY append a Retry Delay TLV (0) to the response, indicating the time interval
during which the client SHOULD NOT attempt this operation again.</t>

</section>
</section>
<section anchor="padding" title="Encryption Padding TLV">

<t>The Encryption Padding TLV (DSO-TYPE=2) can only be used as a Modifier TLV.
It is only applicable when the DSO Transport layer uses encryption
such as TLS.</t>

<t>The TYPE-DEPENDENT DATA for the the Padding TLV is optional and is a
variable length field containing non-specified values. A DATA LENGTH
of 0 essentially provides for 4 octets of padding (the minimum amount).</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   /                                                               /
   /                   VARIABLE NUMBER OF OCTETS                   /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t>As in <xref target="RFC7830"/> the PADDING octets SHOULD be set to 0x00.  Other values MAY be used,
for example, in cases where there is a concern that the padded
message could be subject to compression before encryption.
PADDING octets of any value MUST be accepted in the messages received.</t>

<t>The Encryption Padding TLV may be included in either a DSO
request, response, or both. As in <xref target="RFC7830"/> if a request is received with a Encryption
Padding TLV, then the response MUST also include an Encryption Padding TLV.</t>

<t>The length of padding is intentionally not specified in this document and
is a function of current best practices with respect to the type and length
of data in the preceding TLVs. See <xref target="I-D.ietf-dprive-padding-policy"/></t>

</section>
<section anchor="lifecycle" title="DSO Session Lifecycle and Timers">

<section anchor="dso-session-initiation" title="DSO Session Initiation">

<t>A session begins when a client makes a new connection to a server.</t>

<t>A DSO session begin as described in <xref target="establishment"/>.</t>

<t>The client may perform as many DNS operations as it wishes using the
newly created DSO session. Operations SHOULD be pipelined (i.e., the
client doesn’t need wait for a response before sending the next message).
The server MUST act on messages in the order they are transmitted, but
responses to those messages MAY be sent out of order, if appropriate.</t>

</section>
<section anchor="sessiontimeouts" title="DSO Session Timeouts">

<t>Two timeout values are associated with a DSO session: the inactivity timeout, and 
the keepalive interval.</t>

<t>The first timeout value, the inactivity timeout, is the maximum time for which
a client may speculatively keep a DSO session open in the expectation that
it may have future requests to send to that server.</t>

<t>The second timeout value, the keepalive interval, is the maximum permitted
interval between client messages to the server if the client wishes to keep
the DSO session alive.</t>

<t>The two timeout values are independent. The inactivity timeout may be lower, the 
same, or higher than the keepalive interval, though in most cases the inactivity 
timeout is expected to be shorter than the keepalive interval.</t>

<t>Only when the client has a very long-lived low-traffic state does the 
keepalive interval come into play, to ensure that a sufficient residual
amount of traffic is generated to maintain NAT and firewall state.</t>

<t>On a new DSO session, if no explicit DSO Keepalive message exchange has taken 
place, the default value for both timeouts is 15 seconds.
For both timeouts, lower values of the timeout result in higher network traffic
and higher CPU load on the server.</t>

</section>
<section anchor="inactivetimer" title="Inactive DSO Sessions">

<t>At both servers and clients, the generation or reception of any complete
DNS message, including DNS requests, responses, updates, or DSO
messages, resets both timers for that DSO session, with the exception
that a DSO Keepalive message resets only the keepalive timer, not the inactivity 
timeout timer.</t>

<t>In addition, for as long as the client has an outstanding operation in progress,
the inactivity timer remains cleared, and an inactivity 
timeout cannot occur.</t>

<t>For short-lived DNS operations like traditional queries and updates,
an operation is considered in progress for the time between request and 
response, typically a period of a few hundred milliseconds at most.
At the client, the inactivity timer is cleared upon transmission of a 
request and remains cleared until reception of the corresponding response.
At the server, the inactivity timer is cleared upon reception of a request
and remains cleared until transmission of the corresponding response.</t>

<t>For long-lived DNS Stateful operations, an operation is considered in progress
for as long as the state is active, until it is cancelled.
This means that a DSO session can exist, with a state 
active, with no messages flowing in either direction, for far longer than the 
inactivity timeout, and this is not an error. This is why there are two separate 
timers: the inactivity timeout, and the keepalive interval. Just because a DSO 
session has no traffic for an extended period of time
does not automatically make that DSO session “inactive”, if it has an active 
state that is awaiting for events.</t>

</section>
<section anchor="the-inactivity-timeout" title="The Inactivity Timeout">

<t>The purpose of the inactivity timeout is for the server to balance its trade off 
between the costs of setting up new DSO sessions and the costs of maintaining inactive 
DSO sessions. A server with abundant DSO session capacity can offer a high inactivity timeout, 
to permit clients to keep a speculative DSO session open for a long time, to save 
the cost of establishing a new DSO session for future communications with that 
server. A server with scarce memory resources can offer a low inactivity timeout,
to cause clients to promptly close DSO sessions whenever they have no outstanding
operations with that server, and then create a new DSO session later when needed.</t>

<section anchor="closing-inactive-dso-sessions" title="Closing Inactive DSO Sessions">

<t>A client is NOT required to wait until the inactivity timeout expires
before closing a DSO session.
A client MAY close a DSO session at any time, at the client’s discretion.
If a client determines that it has no current or reasonably anticipated
future need for an inactive DSO session, then the client SHOULD close that connection.</t>

<t>If, at any time during the life of the DSO session,
the inactivity timeout value (i.e., 15 seconds by default) elapses
without there being any operation active on the DSO session,
the client MUST gracefully close the connection with a TCP FIN
(or equivalent for other protocols).</t>

<t>If, at any time during the life of the DSO session, twice the inactivity timeout value
(i.e., 30 seconds by default) elapses without there being any operation
active on the DSO session, the server SHOULD consider the client delinquent,
and forcibly abort the DSO session.
For DSO sessions over TCP (or over TLS over TCP),
to avoid the burden of having a connection in TIME-WAIT state, instead of
closing the connection gracefully with a TCP FIN the server SHOULD abort
the connection with a TCP RST (or equivalent for other protocols).
(In the BSD Sockets API this is achieved by setting the
SO_LINGER option to zero before closing the socket.)</t>

<t>In this context, an operation being active on a DSO session includes
a query waiting for a response, an update waiting for a response,
or active state,
but not a DSO Keepalive message exchange itself.
A DSO Keepalive message exchange resets only the keepalive
interval timer, not the inactivity timeout timer.</t>

<t>If the client wishes to keep an inactive DSO session open for longer than
the default duration without having to send traffic every 15 seconds,
then it uses the DSO Keepalive message to request
longer timeout values, as described in <xref target="keepalive"/>.</t>

</section>
<section anchor="values-for-the-inactivity-timeout" title="Values for the Inactivity Timeout">

<t>For the inactivity timeout value, lower values result in more frequent DSO session 
teardown and re-establishment. Higher values result in lower traffic and CPU
load on the server, but a larger memory burden to maintain state for inactive 
DSO sessions.</t>

<t>A shorter inactivity timeout with a longer keepalive interval signals to the client 
that it should not speculatively keep inactive DSO sessions open for very long for no 
reason, but when it does have an active reason to keep a DSO session open, it 
doesn’t need to be sending an aggressive level of keepalive traffic.</t>

<t>A longer inactivity timeout with a shorter keepalive interval signals to the client
that it may speculatively keep inactive DSO sessions open for a long time, but it
should be sending a lot of keepalive traffic on those inactive DSO sessions.
This configuration is expected to be less common.</t>

<t>To avoid excessive traffic the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with an inactivity timeout value less than ten seconds.
If a client receives a Keepalive message specifying an inactivity timeout value
less than ten seconds this is an error and the client MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="keepalivetimer" title="The Keepalive Interval">

<t>The purpose of the keepalive interval is to manage the generation of
sufficient messages to maintain state in middle-boxes (such at NAT gateways
or firewalls) and for the client and server to periodically verify that they
still have connectivity to each other. This allows them to clean up state
when connectivity is lost, and attempt re-connection if appropriate.</t>

<section anchor="keepalive-interval-expiry" title="Keepalive Interval Expiry">

<t>If, at any time during the life of the DSO session,
the keepalive interval value (i.e., 15 seconds by default) elapses
without any DNS messages being sent or received on a DSO session,
the client MUST take action to keep the DSO session alive.
To keep the DSO session alive the client MUST send a
DSO Keepalive message (see <xref target="keepalive"/>).
A DSO Keepalive message exchange resets only the keepalive timer, 
not the inactivity timer.</t>

<t>If a client disconnects from the network abruptly,
without cleanly closing its DSO session,
leaving long-lived state uncanceled,
the server learns of this after failing to
receive the required keepalive traffic from that client.
If, at any time during the life of the DSO session,
twice the keepalive interval value (i.e., 30 seconds by default) elapses
without any DNS messages being sent or received on a DSO session,
the server SHOULD consider the client delinquent,
and forcibly abort the connection with a TCP RST (or equivalent for other 
protocols).</t>

</section>
<section anchor="values-for-the-keepalive-interval" title="Values for the Keepalive Interval">

<t>For the keepalive interval value, lower values result in higher volume keepalive 
traffic. Higher values of the keepalive interval reduce traffic and CPU load, 
but have minimal effect on the memory burden
at the server, because clients keep a DSO session open for the same length of time
(determined by the inactivity timeout) regardless of the level of keepalive traffic 
required.</t>

<t>It may be appropriate for clients and servers to select different keepalive 
interval values depending on the nature of the network they are on.</t>

<t>A corporate DNS server that knows it is serving only clients on the internal 
network, with no intervening NAT gateways or firewalls, can impose a higher 
keepalive interval, because frequent keepalive traffic is not required.</t>

<t>A public DNS server that is serving primarily residential consumer clients, 
where it is likely there will be a NAT gateway on the path, may impose a lower 
keepalive interval, to generate more frequent keepalive traffic.</t>

<t>A smart client may be adaptive to its environment. A client using
a private IPv4 address <xref target="RFC1918"/> to communicate with a DNS server
at an address that is not in the same IPv4 private address block,
may conclude that there is likely to be a NAT gateway on the path,
and accordingly request a lower keepalive interval.</t>

<t>For environments where there is a NAT gateway or firewalls on the path, it is
RECOMMENDED that clients request, and servers grant, a keepalive interval of 15
minutes. In other environments it is RECOMMENDED that clients request, and 
servers grant, a keepalive interval of 60 minutes.</t>

<t>Note that the lower the keepalive interval value, the higher the load on client
and server. For example, an keepalive interval value of 100ms would result in a
continuous stream of at least ten messages per second, in both directions,
to keep the DSO session alive. And, in this extreme example, a single packet loss and
retransmission over a long path could introduce a momentary pause in the stream of messages,
long enough to cause the server to overzealously abort the connection.</t>

<t>Because of this concern, the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with an keepalive interval value less than ten seconds.
If a client receives an Keepalive message specifying an keepalive interval value
less than ten seconds this is an error and the client MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="server-initiated-termination-on-error" title="Server-Initiated Termination on Error">

<t>After sending an error response to a client, the server MAY close the DSO session,
or may allow the DSO session to remain open. For error conditions
that only affect the single operation in question, the server SHOULD return an
error response to the client and leave the DSO session open for further operations.
For error conditions that are likely to make all operations unsuccessful in the
immediate future, the server SHOULD return an error response to the client and 
then close the DSO session by sending a Retry Delay request message, as described in 
<xref target="delay"/>.</t>

</section>
<section anchor="error" title="Client Behaviour in Receiving an Error">

<t>Upon receiving an error response from the server, a client SHOULD NOT
automatically close the DSO session. An error relating to one particular operation
on a DSO session does not necessarily imply that all other operations on that
DSO session have also failed, or that future operations will fail. The client
should assume that the server will make its own decision about whether or not to
close the DSO session, based on the server’s determination of whether the error
condition pertains to this particular operation, or would also apply to any
subsequent operations. If the server does not close the DSO session then the client
SHOULD continue to use that DSO session for subsequent operations.</t>

</section>
<section anchor="server-initiated-termination-on-overload" title="Server-Initiated Termination on Overload">

<t>Apart from the cases where:</t>

<t><list style="symbols">
  <t>Session Timeouts expire (see <xref target="sessiontimeouts"/>)</t>
  <t>On error (see {Section <xref target="error"/>)</t>
  <t>When under load (see below)</t>
</list></t>

<t>a server MUST NOT close a DSO session with a client, except in extraordinary error 
conditions. Closing the DSO session is the
client’s responsibility, to be done at the client’s discretion, when it so 
chooses. A server only closes a DSO session under exceptional circumstances, such as
when the server application software or underlying operating system is
restarting, the server application terminated unexpectedly (perhaps due to a
bug that makes it crash), or the server is undergoing maintenance procedures.
When possible, a server SHOULD send a Retry Delay message informing the
client of the reason for the DSO session being closed, and allow the client
five seconds to receive it before the server resorts to forcibly aborting the 
connection.</t>

</section>
<section anchor="retry" title="Retry Delay Operation TLV">

<t>There may be rare cases where a server is overloaded and wishes to shed load.
If a server is low on resources it MAY simply terminate a client connection with 
a TCP RST (or equivalent for other protocols).
However, the likely behavior of the client may be simply to to treat this as a
network failure and connect
immediately, putting more burden on the server.</t>

<t>Therefore to avoid this reconnection implosion, a server SHOULD instead choose 
to shed client load by sending a Retry Delay request message, with an RCODE of 
SERVFAIL, to inform the client of the overload situation. After sending a Retry 
Delay request message, the server MUST NOT send any further messages on that 
DSO session.</t>

<t>After sending the Retry Delay request the server SHOULD allow the
client five seconds to close the connection, and if the client has not
closed the connection after five seconds then the server SHOULD abort
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>Upon receipt of a Retry Delay request from the server, the client MUST
make note of the reconnect delay for this server, and then immediately
close the connection. This is to place the burden of TCP’s TIME-WAIT state on 
the client.</t>

<t>A Retry Delay request message MUST NOT be initiated by a client.
If a server receives a Retry Delay request message this is an error
and the server MUST immediately terminate the connection with a TCP RST
(or equivalent for other protocols).</t>

<section anchor="outstanding-operations" title="Outstanding Operations">

<t>At the moment a server chooses to initiate a Retry Delay request message
there may be DNS requests already in flight from client to server on this 
DSO session, which will arrive at the server after its Retry Delay request message 
has been sent.
The server MUST silently ignore such incoming requests, and MUST NOT generate
any response messages for them. When the Retry Delay request message from the
server arrives at the client, the client will determine that any DNS requests
it previously sent on this DSO session, that have not yet received a response, now 
will certainly not be receiving any response. Such requests should be considered
failed, and should be retried at a later time, as appropriate.</t>

<t>In the case where some, but not all, of the existing operations on a DSO session 
have become invalid (perhaps because the server has been reconfigured and is no 
longer authoritative for some of the names),
but the server is terminating all DSO sessions en masse with a REFUSED (5) RCODE,
the RECONNECT DELAY MAY be zero, indicating that the clients SHOULD immediately
attempt to re-establish operations.
It is likely that some of the attempts will be successful and some will not.</t>

<t>In the case where a server is terminating a large number of DSO sessions at once
(e.g., if the system is restarting) and the server doesn’t want to be inundated 
with a flood of simultaneous retries, it SHOULD send different RECONNECT delay 
values to each client.
These adjustments MAY be selected randomly, pseudorandomly, or deterministically
(e.g., incrementing the time value by one tenth of a second for each successive
client, yielding a post-restart reconnection rate of ten clients per second).</t>

</section>
<section anchor="client-reconnection" title="Client Reconnection">

<t>After a DSO session is closed by the server, the client SHOULD try to reconnect,
to that server, or to another suitable server, if more than one is available.
If reconnecting to the same server, the client MUST respect the indicated delay
before attempting to reconnect.</t>

<t>If a particular server does not want a client to reconnect (it is being
de-commissioned), it SHOULD set the retry delay to the maximum value (which is
approximately 497 days). If the server will only be out of service for a maintenance
period, it should use a value closer to the expected maintenance window and
not default to a very large delay value or clients may not attempt to reconnect
after it resumes service.</t>

</section>
</section>
</section>
<section anchor="sharing" title="Connection Sharing">

<t>As in <xref target="RFC7766"/>, to mitigate the risk of unintentional server overload, DNS clients
MUST take care to minimize the number of concurrent TCP connections
made to any individual server.  It is RECOMMENDED that for any given
client/server interaction there SHOULD be no more than one connection
for regular queries, one for zone transfers, and one for each
protocol that is being used on top of TCP (for example, if the
resolver was using TLS).  However, it is noted that certain primary/
secondary configurations with many busy zones might need to use more
than one TCP connection for zone transfers for operational reasons
(for example, to support concurrent transfers of multiple zones).</t>

<t>A single server may support multiple services, including DNS Updates 
<xref target="RFC2136"/>, DNS Push Notifications <xref target="I-D.ietf-dnssd-push"/>,
and other services, for one or more DNS zones.
When a client discovers that the target server for several different operations
is the same target hostname and port, the client SHOULD use a single
shared DSO session for all those operations.
A client SHOULD NOT open multiple connections to the same target host and port
just because the names being operated on are different or
happen to fall within different zones.
This is to reduce unnecessary connection load on the DNS server.</t>

<t>However, server implementers and operators should be aware that connection
sharing may not be possible in all cases.
A single client device may be home to multiple independent client software
instances that don’t coordinate with each other.
Similarly, multiple independent client devices behind the same NAT gateway
will also typically appear to the DNS server as different source ports on
the same client IP address.
Because of these constraints, a DNS server MUST be prepared to accept
multiple connections from different source ports on the same client IP address.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="dso-opcode-registration" title="DSO OPCODE Registration">

<t>IANA are directed to assign a value (tentatively 6)
in the DNS OPCODEs Registry for the DSO OPCODE.</t>

</section>
<section anchor="dso-rcode-registration" title="DSO RCODE Registration">

<t>IANA are directed to assign a value (tentatively 11)
in the DNS RCODE Registry for the DSONOTIMP error code.</t>

</section>
<section anchor="dso-type-codes-registry" title="DSO Type Codes Registry">

<t>IANA are directed to create the DSO Type Codes
Registry, with initial values as follows:</t>

<texttable>
      <ttcol align='right'>Type</ttcol>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Status</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>0x0000</c>
      <c>RetryDelay</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0001</c>
      <c>KeepAlive</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0002</c>
      <c>Encryption Padding</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0003 - 0x003F</c>
      <c>Unassigned, reserved for DSO session management TLVs</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x0040 - 0xF7FF</c>
      <c>Unassigned</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0xF800 - 0xFBFF</c>
      <c>Reserved for local / experimental use</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0xFC00 - 0xFFFF</c>
      <c>Reserved for future expansion</c>
      <c>&#160;</c>
      <c>&#160;</c>
</texttable>

<t>Registration of additional DSO Type Codes requires publication
of an appropriate IETF “Standards Action” or “IESG Approval” document <xref target="RFC5226"/>.</t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>If this mechanism is to be used with DNS over TLS, then these messages
are subject to the same constraints as any other DNS over TLS messages
and MUST NOT be sent in the clear before the TLS session is established.</t>

<t>The data field of the “Encryption Padding” TLV could be used as a covert channel.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to
Tim Chown,
Ralph Droms,
Jan Komissar,
and Manju Shankar Rao
for their helpful contributions to this document.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC1035;
&RFC7766;
&RFC6891;
&RFC7828;
&RFC2119;
&RFC7830;
&RFC1034;
&RFC2136;
&RFC2132;
&RFC1918;
&RFC5226;


    </references>

    <references title='Informative References'>

<reference anchor="NagleDA" target="http://www.stuartcheshire.org/papers/nagledelayedack/">
  <front>
    <title>TCP Performance problems caused by interaction between Nagle's Algorithm and Delayed ACK</title>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization></organization>
    </author>
    <date year="2005" month="May" day="20"/>
  </front>
</reference>
&RFC7858;
&I-D.ietf-dnssd-push;
&RFC0768;
&I-D.ietf-dprive-padding-policy;


    </references>



  </back>

<!-- ##markdown-source:
H4sIAMyCslkAA+1963IbR5bm/3yKXOmHSQ8Ak7rZ1sTGNk1RbnZLopqk3NPz
Z6MAFMiygCp0VYEUWlLEPMjuy82T7LlmnqwqULTb29sxsXKrRQJVeT157ufL
8Xjs2qJd5s/9izcX/qLN2nyxWfqzdV5nbVGVjZtXszJbwQPzOlu04yJvF+N5
2VTrcZM3DTwyboqrMluOD564Obz+3D86OPx2fPD9+OA7V6zr576tN0376ODg
+4NHLqvz7Lk/Ldu8LvPW3V5Rx2dv/Z+r+n1RXvkf62qzdu9v40PjF9ixm2Xt
c9+0c7dZYzfNc3/+8th/++2zZyP66fDg8VPnZtUcWnnuNzDK79y6eO68H/u2
mtG/zXZV54uGf67qln5x2aa9rmp6Ev56X5TY+MT/kC+XRUMf8QqcZ1v7YVVf
xVH6i23T5qvGH8OiQdPFZjWCL2cTejSbTuv8Bp6+OKbfG+g6h/l8//TAH19n
NbQBi4+f0dezot1Cd/n8tqrm/hh+44+rOYzi+Mh//+Tg2WP5aFO2NTz87uKI
PlhfVyU89C+H/hm0/eTRY38IS09f5ausWD73dbb9XdHMJjD8dMoXExhL3lwX
dW4mfdFuYHzpNzTzo/V6mccp6pQO4aNFURZt7l9V1drM53gDVNUWZdWZzNOD
wydfmsyTg+/8998+8Y8fHXxrJzOTYf0uw9FMZtUqndMfJv5FMQPKaqrSTOoP
1XXZ+YLmdAGjm2/KuKuX+ey6rJbVVZE3yU7Kk3bq9PPYv86usnm2zEt/nMN0
cvn47MOiquf+Ylbk5Sz3b7P6vVkb/tYszNm/PfFPfjzqrAsu69z/EUh8TjMN
6/BzNv9dw0PqL8LF8CJcZHX2X2oRGpjQ7lU4msCoSpisWYIjPMxVab/gJYCh
NzCYWW7bz/jpyYqe/t0Vftrv53Li324aYFF1YXq6rFbpx9TPuzJbLIplAR/P
OxT//eH3/rtn3/rDx4+T47uWRn43zcqrn6l7V5Qw1hUw7JscN+BNdrXMXxzx
XrRZfYXn8rpt18+/+eb29nbS0JHWo4OM4Jt1Bmez+abEN+f5Mtvm82z2/htu
gQXE5fFb/zavqSfcvHVdTZfI8WbZpoENmW5h/jCybIaCw0/z9jaH/afBfNXA
Ul9VddFer3xWzv0L7sMfHf+RKSrw4Ls5zw5WpYLn4OkY/vfowLnxeAxkCkQJ
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

-->

</rfc>

