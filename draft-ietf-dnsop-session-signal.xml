<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.7 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC7766 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7766.xml">
<!ENTITY RFC6891 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6891.xml">
<!ENTITY RFC7828 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7828.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC7830 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7830.xml">
<!ENTITY RFC1034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC2136 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2136.xml">
<!ENTITY RFC2132 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2132.xml">
<!ENTITY RFC1918 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1918.xml">
<!ENTITY RFC5226 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5226.xml">
<!ENTITY RFC7858 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7858.xml">
<!ENTITY RFC6763 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6763.xml">
<!ENTITY I-D.ietf-dnssd-push SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dnssd-push.xml">
<!ENTITY RFC0768 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.0768.xml">
<!ENTITY I-D.ietf-dprive-padding-policy SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dprive-padding-policy.xml">
]>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-dnsop-session-signal-05" category="std" updates="RFC 7766, RFC 1035">

  <front>
    <title>DNS Stateful Operations</title>

    <author initials="R." surname="Bellis" fullname="Ray Bellis">
      <organization abbrev="ISC">Internet Systems Consortium, Inc.</organization>
      <address>
        <postal>
          <street>950 Charter Street</street>
          <city>Redwood City</city>
          <code>CA 94063</code>
          <country>USA</country>
        </postal>
        <phone>+1 650 423 1200</phone>
        <email>ray@isc.org</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>1 Infinite Loop</street>
          <city>Cupertino</city>
          <code>CA 95014</code>
          <country>USA</country>
        </postal>
        <phone>+1 408 974 3207</phone>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="J." surname="Dickinson" fullname="John Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>jad@sinodun.com</email>
      </address>
    </author>
    <author initials="S." surname="Dickinson" fullname="Sara Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>sara@sinodun.com</email>
      </address>
    </author>
    <author initials="A." surname="Mankin" fullname="Allison Mankin">
      <organization>Salesforce</organization>
      <address>
        <email>allison.mankin@gmail.com</email>
      </address>
    </author>
    <author initials="T." surname="Pusateri" fullname="Tom Pusateri">
      <organization>Unaffiliated</organization>
      <address>
        <postal>
          <street></street>
          <city>Raleigh</city>
          <code>NC 27608</code>
          <country>USA</country>
        </postal>
        <phone>+1 919 867 1330</phone>
        <email>pusateri@bangj.com</email>
      </address>
    </author>

    <date year="2017" month="November" day="19"/>

    <area>Internet</area>
    <workgroup>DNSOP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document defines a new DNS Stateful Operation OPCODE used to communicate 
operations within persistent stateful sessions, expressed using type-length-value (TLV) 
syntax, and defines an initial set of TLVs used to manage session timeouts and 
termination. This mechanism is intended to reduce the overhead of existing 
“per-packet” signaling mechanisms with “per-message” semantics as well as 
defining new stateful operations not defined in EDNS(0).</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The use of transports for DNS other than UDP is being increasingly specified,
for example, DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> and DNS over TLS <xref target="RFC7858"/>.
Such transports can offer persistent, long-lived sessions and therefore when
using them for transporting DNS messages it is of benefit to have a mechanism
that can establish parameters associated with those sessions, such as timeouts.
In such situations it is also advantageous to support server initiated messages.</t>

<t>The existing EDNS(0) Extension Mechanism for DNS <xref target="RFC6891"/> is explicitly
defined to only have “per-message” semantics. Whilst EDNS(0) has been used to
signal at least one session-related parameter (the EDNS(0) TCP Keepalive option
<xref target="RFC7828"/>) the result is less than optimal due to the restrictions
imposed by the EDNS(0) semantics and the lack of server-initiated signalling. 
For example, a server cannot arbitrarily 
instruct a client to close a connection because the server can only send EDNS(0) options 
in responses to queries that contained EDNS(0) options.</t>

<t>This document defines a new DNS Stateful Operation OPCODE used to
carry operations within persistent stateful connections, expressed
using type-length-value (TLV) syntax, and defines an initial set of
TLVs including ones used to manage session timeouts and termination.</t>

<t>It should be noted that the message format for DNS Stateful Operations
(see <xref target="format"/>) differs from the traditional DNS packet
format used for standard queries and responses.
The standard twelve-octet header is used, but the four count fields
(QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) are set to zero and their
corresponding sections are not present.
The actual data pertaining to DNS Stateful Operations
(expressed in TLV format) is appended to the end of the DNS message header.
When displayed using packet analyzer tools that have not been
updated to recognize the DNS Stateful Operations format, this
will result in the Stateful Operations data being displayed
as unknown additional data after the end of the DNS message.
It is likely that future updates to these tools will add the ability
to recognize, decode, and display the Stateful Operations data.</t>

<t>This new format has distinct advantages over an RR-based format because it
is more explicit and more compact. Each TLV definition is specific
to the use case, and as a result contains no redundant or overloaded fields.
Importantly, it completely avoids conflating DNS Stateful Operations in anyway 
with normal DNS operations or with existing EDNS(0) based functionality.
A goal of this approach is to avoid the operational issues that have
befallen EDNS(0), particularly relating to middle-box behaviour.</t>

<t>With EDNS(0), multiple options may be packed into a single OPT pseudo-RR,
and there is no generalized mechanism for a client to be able to tell
whether a server has processed or otherwise acted upon each individual
option within the combined OPT RR.
The specifications for each individual option need to define how each
different option is to be acknowledged, if necessary.</t>

<t>In contrast to EDNS(0), with DNS Stateful Operations there is no
compelling motivation to pack multiple operations into a single
message for efficiency reasons, because DNS Stateful Operations
always operates using a connection-oriented transport protocol.
Each Stateful operation is communicated in its own separate
DNS message, and the transport protocol can take care of packing
separate DNS messages into a single IP packet if appropriate.
For example, TCP can pack multiple small DNS messages into a single TCP segment.
This simplification allows for clearer semantics.
Each DSO request message communicates just one primary operation,
and the RCODE in the corresponding response message indicates the
success or failure of that operation.</t>

</section>
<section anchor="terminology" title="Terminology">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and
“OPTIONAL” in this document are to be interpreted as described in
“Key words for use in RFCs to Indicate Requirement Levels” <xref target="RFC2119"/>.</t>

<t>“DSO” is used to mean DNS Stateful Operation.</t>

<t>The term “connection” means a bidirectional byte stream of reliable,
in-order messages, such as provided by using
DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> or DNS over TLS <xref target="RFC7858"/>.</t>

<t>The unqualified term “session” in the context of this document means the exchange of
DNS messages over a connection where:</t>

<t><list style="symbols">
  <t>The connection between client and server is persistent and relatively
long-lived (i.e., minutes or hours, rather than seconds).</t>
  <t>Either end of the connection may initiate messages to the other.</t>
</list></t>

<t>A “DSO session” is established between two endpoints that
acknowledge persistent DNS state via the exchange of DSO messages
over the connection. This is distinct from, for example a DNS-over-TCP session
as described in RC7766.</t>

<t>A “DSO session” is terminated when the underlying connection is closed.</t>

<t>The term “server” means the software with a listening socket, awaiting
incoming connection requests.</t>

<t>The term “client” means the software which initiates a connection
to the server’s listening socket.</t>

<t>The terms “initiator” and “responder” correspond respectively to the
initial sender and subsequent receiver of a DSO request message,
regardless of which was the “client” and “server” in the usual DNS sense.</t>

<t>The term “sender” may apply to either an initiator
(when sending a DNS Stateful Operation request message)
or a responder (when sending a DNS Stateful Operation response message).</t>

<t>Likewise, the term “receiver” may apply to either a responder
(when receiving a DNS Stateful Operation request message)
or an initiator (when receiving a DNS Stateful Operation response message).</t>

<t>DNS Stateful Operations are expressed using type-length-value (TLV) syntax.</t>

<t>Two timers (elapsed time since an event) are defined in this document:</t>

<t><list style="symbols">
  <t>an inactivity timer (see <xref target="keepalive"/> and <xref target="inactivetimer"/>)</t>
  <t>a keepalive timer (see <xref target="keepalive"/> and <xref target="keepalivetimer"/>)</t>
</list></t>

<t>The timeouts associated with these timers are called the inactivity timeout and 
the keepalive interval respectively. 
The term “Session Timeouts” is used to refer to this pair of timeout values.</t>

<t>Reseting a timer means resetting the timer value to zero and starting the timer 
again. Clearing a timer means resetting the timer value to zero but NOT starting 
the time again.</t>

</section>
<section anchor="discussion" title="Discussion">

<t>There are several use cases for DNS Stateful operations that can 
be described here.</t>

<t>Firstly, establishing session parameters such as server defined timeouts is of 
great use in the 
general management of persistent connections. For example, using DSO sessions 
for stub to recursive DNS-over-TLS <xref target="RFC7858"/> is more flexible for both the 
client and the server than attempting to manage sessions using just the EDNS(0)
TCP Keepalive option
<xref target="RFC7828"/>. The simple set of TLVs defined in this document is
sufficient to greatly enhance connection management for this use case.</t>

<t>Secondly, DNS-SD <xref target="RFC6763"/> has evolved into a naturally session based mechanism where,
for example, long-lived subscriptions lend themselves to ‘push’ mechanisms as 
opposed to polling. Long-lived stateful connections and server initiated 
messages align with this use case <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>A general use case is that DNS traffic is often bursty but session establishment 
can be expensive. One challenge with long-lived connections is to maintain 
sufficient traffic to maintain NAT and firewall state.
To mitigate this issue this document introduces a
new concept for the DNS, that is DSO “Keepalive traffic”.
This traffic carries no DNS data and is not considered ‘activity’
in the classic DNS sense, but serves to maintain state in middle boxes,
and to assure client and server that they still have connectivity to each other.</t>

<t>There are a myriad of other potential use cases for DSO given the versatility 
and extensibility of this specification.</t>

<t><xref target="details"/> of this document describes the protocol details of DNS Stateful
Operations including definitions of three TLVs for session management and 
encryption padding. <xref target="lifecycle"/> presents a
detailed discussion of the DSO Session lifecycle including an
in-depth discussion of keepalive traffic and session termination.</t>

</section>
<section anchor="details" title="Protocol Details">

<section anchor="establishment" title="DSO Session Establishment">

<t>DSO messages MUST only be carried in protocols and in
environments where a session may be established according to the definition above.
Standard DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/>, and DNS over TLS <xref target="RFC7858"/>
are suitable protocols.</t>

<t>DNS over plain UDP <xref target="RFC0768"/> is not appropriate since it fails on the requirement for
in-order message delivery, and, in the presence of NAT gateways and firewalls
with short UDP timeouts, it fails to provide a persistent bi-directional
communication channel unless an excessive amount of keepalive traffic is used.</t>

<t>DSO messages relate only to the specific “DSO session” in which
they are being carried. A “DSO session” is established over a connection when
either side of the connection sends the first DSO
TLV and it is acknowledged by the other side. The DSO message format <xref target="dsodata"/> 
includes an option to specify that a DSO request does not require a 
response acknowledgement. Session establishment can only be performed using a 
DSO message that requires a response acknowledgement.</t>

<t>While this 
specification defines an initial set of three TLVs, additional TLVs may be 
defined in additional specifications. All three of the TLVs defined here are 
mandatory to implement.</t>

<t>A client MAY attempt to initiate DSO messages at any time
on a connection; receiving a NOTIMP response in reply indicates that the
server does not implement DSO, and the client SHOULD NOT
issue further DSO messages on that connection.</t>

<t>A server SHOULD NOT initiate DSO messages until a
client-initiated DSO message is received first,
unless in an environment where it is known in advance by other
means that the client supports DSO.
This requirement is to ensure that the clients that do not support
DSO do not receive unsolicited inbound DSO
messages that they would not know how to handle.</t>

<t>On a session between a client and server that support DSO,
once the client has sent at least one DSO message (or it is
known in advance by other means that the client supports DSO)
either end may unilaterally send DSO messages at any time,
and therefore either client or server may be the initiator of a message.</t>

<t>From this point on it is considered that a “DSO session” is in progress.
Clients and servers should behave as described in this specification with
regard to inactivity timeouts and connection close, not as prescribed in
the previous specification for DNS over TCP <xref target="RFC7766"/>.</t>

<section anchor="middle-box-considerations" title="Middle-box Considerations">

<t>Where an application-layer middle box (e.g., a DNS proxy, forwarder, or
session multiplexer) is in the path the middle box MUST NOT blindly
forward DSO messages in either direction, and MUST treat the inbound
and outbound connections as separate sessions.  This does not preclude
the use of DSO messages in the presence of an IP-layer middle box such
as a NAT that rewrites IP-layer and/or transport-layer headers, but
otherwise preserves the effect of a single session between the client
and the server.</t>

<t>To illustrate the above, consider a network where a middle box
terminates one or more TCP connections from clients and multiplexes the
queries therein over a single TCP connection to an upstream server.  The
DSO messages and any associated state are specific to the individual
TCP connections.  A DSO-aware middle box MAY in some circumstances be
able to retain associated state and pass it between the client and
server (or vice versa) but this would be highly TLV-specific.  For
example, the middle box may be able to maintain a list of which clients
have made Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/> and
make its own subscription(s) on their behalf, relaying any subsequent
notifications to the client (or clients) that have subscribed to that
particular notification.</t>

</section>
</section>
<section anchor="format" title="Message Format">

<t>A DSO message begins with
the standard twelve-octet DNS message header <xref target="RFC1035"/>
with the OPCODE field set to the DSO OPCODE (tentatively 6).
However, unlike standard DNS messages, the question section, answer section,
authority records section and additional records sections are not present.
The corresponding count fields (QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) MUST be
set to zero on transmission.</t>

<t>If a DSO message is received where any of the count fields are
not zero, then a FORMERR MUST be returned,
unless a future document specifies otherwise.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                          MESSAGE ID                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |QR |    OPCODE     |            Z              |     RCODE     |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     QDCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ANCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     NSCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ARCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                           DSO Data                            /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<section anchor="header" title="Header">

<t>In a request the MESSAGE ID field MUST be set to a unique value, that the
initiator is not currently using for any other active operation on this 
connection.
For the purposes here, a MESSAGE ID is in use in this DSO session if the
initiator has used it in a request for which it has not yet received a
response, or if the client has used it to setup state that it has not yet
deleted. For example, state could be a subscription <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>In a response the MESSAGE ID field MUST contain a copy of the value of the
MESSAGE ID field in the request being responded to.</t>

<t>In a request the DNS Header QR bit MUST be zero (QR=0).
If the QR bit is not zero the message is not a request.</t>

<t>In a response the DNS Header QR bit MUST be one (QR=1).
If the QR bit is not one the message is not a response.</t>

<t>The DNS Header OPCODE field holds the DSO OPCODE value (tentatively 6).</t>

<t>The Z bits are currently unused in DSO messages,
and in both DSO requests and DSO responses the
Z bits MUST be set to zero (0) on transmission and MUST be silently ignored
on reception, unless a future document specifies otherwise.</t>

<t>In a request message (QR=0) the RCODE is generally set to zero on transmission,
and silently ignored on reception, except where specified otherwise
(for example, the Retry Delay operation (see <xref target="delay"/>), where the RCODE indicates the reason
for termination).</t>

<t>The RCODE value in a response may be one of the following values:</t>

<texttable>
      <ttcol align='right'>Code</ttcol>
      <ttcol align='left'>Mnemonic</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>0</c>
      <c>NOERROR</c>
      <c>Operation processed successfully</c>
      <c>1</c>
      <c>FORMERR</c>
      <c>Format error</c>
      <c>2</c>
      <c>SERVFAIL</c>
      <c>Server failed to process request due to a problem with the server</c>
      <c>3</c>
      <c>NXDOMAIN</c>
      <c>Name Error — Named entity does not exist (TLV-dependent)</c>
      <c>4</c>
      <c>NOTIMP</c>
      <c>DSO not supported</c>
      <c>5</c>
      <c>REFUSED</c>
      <c>Operation declined for policy reasons</c>
      <c>9</c>
      <c>NOTAUTH</c>
      <c>Not Authoritative (TLV dependent)</c>
      <c>11</c>
      <c>DSONOTIMP</c>
      <c>DSO type code not supported</c>
</texttable>

<t>Use of the above RCODEs is likely to be common in DSO but 
does not preclude the definition and use of other codes in future documents that 
make use of DSO.</t>

<t>If a document describing a DSO makes use of either NXDOMAIN (Name Error)
or NOTAUTH then that document MUST explain the meaning.</t>

</section>
<section anchor="dsodata" title="DSO Data">

<t>The standard twelve-octet DNS message header is followed by the DSO Data.</t>

<t>The first TLV in a DSO request message is called the Operation 
TLV. Any subsequent TLVs after this initial Operation TLV are called Modifier TLVs.</t>

<t>Depending on the operation a DSO response can contain:</t>

<t><list style="symbols">
  <t>No TLVs</t>
  <t>Only an Operation TLV</t>
  <t>An Operation TLV followed by one or more Modifier TLVs</t>
  <t>Only Modifier TLVs</t>
</list></t>

<section anchor="tlv-format" title="TLV Format">

<t>Operation and modifier TLVs both use the same encoding format.</t>

<t>Operation TLVs SHOULD normally require a response and, therefore, set the TLV
Acknowledgement bit in a request. However, for some Operation TLVs, this may be
undesirable and the TLV Acknowledgement bit MAY be cleared in the request. Each
Operation TLV definition should stipulate whether an acknowledgement is
REQUIRED. If the TLV Acknowledgement bit is cleared in a request, a response
MUST NOT be sent. Modifier TLVs MUST NEVER set the Acknowledgement bit. The
Acknowledgement bit is NEVER set in the response to an Operation TLV.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   | A |                        DSO-TYPE                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                        DSO DATA LENGTH                        |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                      TYPE-DEPENDENT DATA                      /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='A:'>
  A 1-bit TLV Response flag indicating whether or not an Operation TLV requires
a response Acknowledgement.</t>
  <t hangText='DSO-TYPE:'>
  A 15-bit field in network order giving the type of the current DSO TLV per
the IANA DSO Type Codes Registry.</t>
  <t hangText='DSO DATA LENGTH:'>
  A 16-bit field in network order giving the size in octets of
the TYPE-DEPENDENT DATA.</t>
  <t hangText='TYPE-DEPENDENT DATA:'>
  Type-code specific format.</t>
</list></t>

<t>Where domain names appear within TYPE-DEPENDENT DATA, they MAY be compressed 
using standard DNS name compression. However, the compression MUST NOT point
outside of the TYPE-DEPENDENT DATA section and offsets MUST be from the start
of the TYPE-DEPENDENT DATA.</t>

</section>
<section anchor="operation-tlvs" title="Operation TLVs">

<t>An “Operation TLV” specifies the operation to be performed.</t>

<t>A DSO message MUST contain at most one Operation TLV.</t>

<t>In all cases a DSO request message MUST contain exactly one 
Operation TLV, indicating the operation to be performed.</t>

<t>Depending on the operation, a DSO response message MAY contain no 
Operation TLV, because it is simply a response to a previous request message,
and the MESSAGE ID in the header is sufficient to identify the request in 
question. Or it may contain a single corresponding response Operation TLV, with 
the same DSO-TYPE as in the request message. The specification for each DSO
type determines whether a response for that operation type 
is required to carry the Operation TLV.</t>

<t>If a DSO response is received for an operation which requires
that the response carry an Operation TLV, and the required Operation TLV is not
the first DSO TLV in the response message, then this is a fatal 
error and the recipient of the defective response message MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
<section anchor="modifier-tlvs" title="Modifier TLVs">

<t>A “Modifier TLV” specifies additional parameters
relating to the operation. Immediately following the Operation TLV, if present,
a DSO message MAY contain one or more Modifier TLVs.</t>

</section>
<section anchor="unrecognized-tlvs" title="Unrecognized TLVs">

<t>If a DSO request is received containing an unrecognized
Operation TLV, the receiver MUST send a response with matching
MESSAGE ID, and RCODE DSONOTIMP (tentatively 11). The response MUST NOT contain 
an Operation TLV.</t>

<t>If a DSO message (request or response) is received
containing one or more unrecognized Modifier TLVs, the unrecognized
Modifier TLVs MUST be silently ignored, and the remainder of the message
is interpreted and handled as if the unrecognized parts were not present.</t>

</section>
</section>
<section anchor="edns0-and-tsig" title="EDNS(0) and TSIG">

<t>Since the ARCOUNT field MUST be zero, a DSO message
MUST NOT contain an EDNS(0) option in the additional records section.
If functionality provided by current or future EDNS(0) options is desired
for DSO messages, an Operation TLV or
Modifier TLV needs to be defined to carry the necessary information.</t>

<t>For example, the EDNS(0) Padding Option <xref target="RFC7830"/> used for security purposes
is not permitted in a DSO message,
so if message padding is desired for DSO messages
then the Encryption Padding TLV described in <xref target="padding"/> MUST be used.</t>

<t>Similarly, a DSO message MUST NOT contain a TSIG record.
A TSIG record in a conventional DNS message is added as the last record
in the additional records section, and carries a signature computed over
the preceding message content. Since DSO data appears
after the additional records section, it would not be included in the
signature calculation. 
If use of signatures with DSO messages becomes necessary in the 
future, an explicit Modifier TLV needs to be defined to 
perform this function.</t>

<t>Note however that, while DSO <spanx style="emph">messages</spanx> cannot include
EDNS(0) or TSIG records, a DSO <spanx style="emph">session</spanx> is typically used to 
carry a whole series of DNS messages of different kinds, including DSO
messages, and other DNS message types like Query <xref target="RFC1034"/> 
<xref target="RFC1035"/> and Update <xref target="RFC2136"/>, and those messages can carry EDNS(0) and 
TSIG records.</t>

<t>This specification explicitly prohibits use of the
EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>
in <spanx style="emph">any</spanx> messages sent on a DSO session (because it duplicates
the functionality provided by the DSO Keepalive operation),
but messages may contain other EDNS(0) options as appropriate.</t>

</section>
</section>
<section anchor="message-handling" title="Message Handling">

<t>The initiator MUST set the value of the QR bit in the DNS header to
zero (0), and the responder MUST set it to one (1).
Every DSO request message (QR=0) with the Acknowledgement bit set in the
operation TLV MUST elicit a response (QR=1), which MUST have the same
MESSAGE ID in the DNS message header as in the corresponding request.
DSO request messages sent by the client with the Acknowledgement
bit set in the operation TLV elicit a response from the server, and
DSO request messages sent by the server with the Acknowledgement
bit set in the operation TLV elicit a response from the client.</t>

<t>With most TCP implementations, the TCP data acknowledgement (generated because 
data has been received by TCP), the TCP window update (generated because TCP has 
delivered that data to the receiving software) and the DSO 
response (generated by the receiving software itself)
are all combined into a single packet, so in practice the requirement that every
DSO request message MUST elicit a 
DSO response incurs minimal extra cost on the network.
Requiring that every request elicit a corresponding response also avoids
performance problems caused by interaction between
Nagle’s Algorithm and Delayed Ack <xref target="NagleDA"/>.</t>

<t>The namespaces of 16-bit MESSAGE IDs are disjoint in each direction.
For example, it is <spanx style="emph">not</spanx> an error for both client and server to send a request
message with the same ID. In effect, the 16-bit MESSAGE ID combined with the 
identity of the initiator (client or server) serves as a 17-bit unique 
identifier for a particular operation on a DSO session.</t>

<t>As described in <xref target="header"/> An initiator MUST NOT reuse a MESSAGE ID that is 
already in use for an 
outstanding request, unless specified otherwise by the relevant specification 
for the DSO in question. At the very least, this means 
that a MESSAGE ID MUST NOT be reused in a particular direction
on a particular DSO session while the initiator is waiting for a response to a 
previous request using that MESSAGE ID on that DSO session,
unless specified otherwise by the relevant 
specification for the DSO in question.
(For a long-lived state the MESSAGE ID for the operation
MUST NOT be reused whilst that state remains active.)</t>

<t>If a client or server receives a response (QR=1) where the MESSAGE ID does not
match any of its outstanding operations, this is a fatal error and it MUST 
immediately terminate the connection with a TCP RST (or equivalent for other 
protocols).</t>

</section>
</section>
<section anchor="keepalive" title="Keepalive Operation TLV">

<t>The Keepalive Operation TLV (DSO-TYPE=1) performs two functions: to reset the
keepalive timer for the DSO session and to establish the values for the Session Timeouts.</t>

<t>The Keepalive Operation TLV resets only the keepalive timer, not the inactivity timer.
The reason for this is that periodic Keepalive Operation TLVs are sent for the
sole purpose of keeping a DSO session alive, because that DSO session has current
or recent non-maintenance activity that warrants keeping the DSO session alive.
If sending keepalive traffic itself were to reset the inactivity timer, then 
that would create a circular livelock where keepalive traffic would be sent 
indefinitely to keep a DSO session alive, where the only activity on that DSO 
session would be the keepalive traffic keeping the DSO session alive so that further 
keepalive traffic can be sent.</t>

<t>Sending keepalive traffic is considered a maintenance activity
that is performed in service of other client activities.
Sending keepalive traffic itself is not considered a client activity.
For a DSO session to be considered active, it must be carrying something more than just keepalive traffic.
This is why merely sending a Keepalive Operation TLV does not reset the inactivity timer.</t>

<t>When sent by a client, the Keepalive Operation TLV MUST have the Acknowledgement bit set.
It resets a DSO session’s keepalive timer, and at the same time requests what the
Session Timeout values should be from this point forward in the DSO session.
If a server receives a Keepalive Operation TLV without the Acknowledgement bit set
then this is a fatal error and the server MUST immediately terminate
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>Once a DSO session is in progress (see <xref target="details"/>) the Keepalive TLV also MAY be initiated by a server.
When sent by a server, the Keepalive Operation TLV MUST NOT have the Acknowledgement bit set.
It resets a DSO session’s keepalive timer, and unilaterally informs the client of
the new Session Timeout values to use from this point forward in this DSO session.
No client response to this unilateral declaration is required.
If a client receives a Keepalive Operation TLV with the Acknowledgement bit set
then this is a fatal error and the client MUST immediately terminate
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>It is not required that the Keepalive TLV be used in every DSO session.
While many DNS Stateful operations
will be used in conjunction with a long-lived session state,
not all DNS Stateful operations require long-lived session state,
and in some cases the default 15-second value for both the inactivity timeout
and keepalive interval may be perfectly appropriate. However, it can be noted 
that for clients that implement only the TLVs defined in this document it is
the only way for a client to initiate a DSO session.</t>

<t>The TYPE-DEPENDENT DATA for the the Keepalive TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 INACTIVITY TIMEOUT (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 KEEPALIVE INTERVAL (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='INACTIVITY TIMEOUT:'>
  the inactivity timeout for the current DSO session, specified as a
32-bit word in network (big endian) order in units of milliseconds.
This is the timeout at which the client MUST close an inactive DSO session.
If the client does not gracefully close an inactive DSO session,
then after twice this interval the server will forcibly terminate
the connection with a TCP RST (or equivalent for other protocols).</t>
  <t hangText='KEEPALIVE INTERVAL:'>
  the keepalive interval for the current DSO session, specified as a
32-bit word in network (big endian) order in units of milliseconds.
This is the interval at which a client MUST generate keepalive
traffic to maintain connection state.
If the client does not generate the necessary keepalive traffic,
then after twice this interval the server will forcibly terminate
the connection with a TCP RST (or equivalent for other protocols).</t>
</list></t>

<t>In a client-initiated DSO Keepalive message,
the Session Timeouts contain the client’s requested values.
In a server response to a client-initiated message, the Session Timeouts contain 
the server’s chosen values, which the client MUST respect.
This is modeled after the DHCP protocol, where the client
requests a certain lease lifetime using DHCP option 51 <xref target="RFC2132"/>,
but the server is the ultimate authority
for deciding what lease lifetime is actually granted.</t>

<t>In a server-initiated DSO Keepalive message, the Session Timeouts
unilaterally inform the client of the new values from this point
forward in this DSO session. The client MUST NOT generate a
response to the server-initiated DSO Keepalive message.</t>

<t>When a client is sending its second and subsequent Keepalive DSO 
requests to the server, the client SHOULD continue to request its preferred 
values each time. This allows flexibility, so that if conditions change during 
the lifetime of a DSO session, the server can adapt its responses to better fit 
the client’s needs.</t>

<section anchor="client-handling-of-received-session-timeout-values" title="Client handling of received Session Timeout values">

<t>When a client receives a response to its client-initiated DSO Keepalive message,
or receives a server-initiated DSO Keepalive message, the client has then 
received Session Timeout values dictated by the server. The two timeout values 
contained in the DSO Keepalive TLV from the server may each be higher, lower, or 
the same as the respective Session Timeout values the client previously had for 
this DSO session.</t>

<t>In the case of the keepalive timer, the handling of the received value is 
straightforward. The act of receiving the message containing the DSO Keepalive 
TLV itself resets the keepalive timer and updates the keepalive interval for the 
DSO session. The new keepalive interval indicates the 
maximum time that may elapse before another message must be sent
or received on this DSO session, if the DSO session is to remain alive.</t>

<t>In the case of the inactivity timeout, the handling of the received value 
is a little more subtle, though the meaning of the inactivity 
timeout is unchanged – it still indicates the maximum permissible time allowed 
without activity on a DSO session.
The act of receiving the message containing the DSO Keepalive TLV does not
itself reset the inactivity timer. The time elapsed since the last useful
activity on this DSO session is unaffected by exchange of DSO Keepalive messages.
The act of receiving the message containing the DSO Keepalive TLV does update 
the timeout associated with the running inactivity timer; that
becomes the new maximum permissible time without activity on a DSO session.</t>

<t><list style="symbols">
  <t>If the current inactivity timer value is not greater than the new inactivity timeout, 
then the DSO session may remain open for now. When the inactivity timer value 
exceeds the new inactivity timeout, the client MUST then close the DSO session,
as described above.</t>
  <t>If the current inactivity timer value is already greater than the new inactivity 
timeout, then this DSO session has already been inactive
for longer than the server permits, and the client MUST immediately close this DSO session.</t>
  <t>If the current inactivity timer value is more than twice the new inactivity timeout, 
then this DSO session is eligible to be
forcibly terminated by the server and and the client MUST immediately close this 
DSO session. However if a server abruptly reduces the
inactivity timeout in this way the server SHOULD give the client a grace period
of one quarter of the new inactivity timeout, to give the client time to close
the connection gracefully before the server resorts to terminating it forcibly.</t>
</list></t>

</section>
<section anchor="relation-to-edns0-tcp-keepalive-option" title="Relation to EDNS(0) TCP Keepalive Option">

<t>The inactivity timeout value in the Keepalive TLV (DSO-TYPE=1) has similar
intent to the EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>.
A client/server pair that supports DSO MUST NOT use the
EDNS(0) TCP KeepAlive option within any message after a DSO 
session has been established.
Once a DSO session has been established, if either
client or server receives a DNS message over the DSO session that contains an
EDNS(0) TCP Keepalive option, this is an error and the receiver of the
EDNS(0) TCP Keepalive option MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="delay" title="Retry Delay TLV">

<t>The Retry Delay TLV (DSO-TYPE=0) can be used as an Operation TLV or as
a Modifier TLV.</t>

<t>The TYPE-DEPENDENT DATA for the the Retry Delay TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     RETRY DELAY (32 bits)                     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='RETRY DELAY:'>
  a time value, specified as a 32-bit word in network order in units of 
milliseconds, within which the client MUST NOT retry this operation, or retry 
connecting to this server.</t>
</list></t>

<t>The RECOMMENDED value is 10 seconds.</t>

<section anchor="use-as-an-operation-tlv" title="Use as an Operation TLV">

<t>When sent in a DSO request message, from server to client, the 
Retry Delay TLV (0) is considered an Operation TLV. It is used by a server 
to request that a client close the DSO session and underlying connection, and 
not to reconnect for the indicated time interval.</t>

<t>In this case it applies to the DSO session as a whole, and the client MUST close the 
DSO session, as described in section <xref target="retry"/>. The RCODE in the message header 
MUST indicate the reason for the termination:</t>

<t><list style="symbols">
  <t>NOERROR indicates a routine shutdown.</t>
  <t>SERVFAIL indicates that the server is overloaded due to resource exhaustion.</t>
  <t>REFUSED indicates that the server has been reconfigured and is no longer able 
to perform one or more of the functions 
currently being performed on this DSO session (for example, a DNS Push Notification 
server could be reconfigured such that is is no longer accepting DNS Push 
Notification requests for one or more of the currently subscribed names).</t>
</list></t>

<t>This document specifies only these three RCODE values for Retry Delay request.
Servers sending Retry Delay requests SHOULD use one of these three values.
However, future circumstances may create situations where other RCODE values
are appropriate in Retry Delay requests, so clients MUST be prepared
to accept Retry Delay requests with any RCODE value.</t>

<t>An acknowledgement is not desired for a Retry Delay Operation TLV and the TLV
Acknowledgement bit MUST be cleared in the request.</t>

</section>
<section anchor="use-as-a-modifier-tlv" title="Use as a Modifier TLV">

<t>When appended to a DSO response message for some client request,
the Retry Delay TLV (0) is considered a Modifier TLV.
The indicated time interval during which the client SHOULD NOT retry
applies only to the failed operation, not to the DSO session as a whole.</t>

<t>In the case of a client request that returns a nonzero RCODE value, the server 
MAY append a Retry Delay TLV (0) to the response, indicating the time interval
during which the client SHOULD NOT attempt this operation again.</t>

</section>
</section>
<section anchor="padding" title="Encryption Padding TLV">

<t>The Encryption Padding TLV (DSO-TYPE=2) can only be used as a Modifier TLV.
It is only applicable when the DSO Transport layer uses encryption
such as TLS.</t>

<t>The TYPE-DEPENDENT DATA for the the Padding TLV is optional and is a
variable length field containing non-specified values. A DATA LENGTH
of 0 essentially provides for 4 octets of padding (the minimum amount).</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   /                                                               /
   /                   VARIABLE NUMBER OF OCTETS                   /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t>As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
the PADDING octets SHOULD be set to 0x00.  Other values MAY be used,
for example, in cases where there is a concern that the padded
message could be subject to compression before encryption.
PADDING octets of any value MUST be accepted in the messages received.</t>

<t>The Encryption Padding TLV may be included in either a DSO request, response, or both.
As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
if a request is received with a Encryption Padding TLV,
then the response MUST also include an Encryption Padding TLV.</t>

<t>The length of padding is intentionally not specified in this document and
is a function of current best practices with respect to the type and length
of data in the preceding TLVs <xref target="I-D.ietf-dprive-padding-policy"/>.</t>

</section>
<section anchor="lifecycle" title="DSO Session Lifecycle and Timers">

<section anchor="dso-session-initiation" title="DSO Session Initiation">

<t>A session begins when a client makes a new connection to a server.</t>

<t>A DSO session begin as described in <xref target="establishment"/>.</t>

<t>The client may perform as many DNS operations as it wishes using the
newly created DSO session. Operations SHOULD be pipelined (i.e., the
client doesn’t need wait for a response before sending the next message).
The server MUST act on messages in the order they are transmitted, but
responses to those messages MAY be sent out of order, if appropriate.</t>

</section>
<section anchor="sessiontimeouts" title="DSO Session Timeouts">

<t>Two timeout values are associated with a DSO session: the inactivity timeout, and 
the keepalive interval.</t>

<t>The first timeout value, the inactivity timeout, is the maximum time for which
a client may speculatively keep a DSO session open in the expectation that
it may have future requests to send to that server.</t>

<t>The second timeout value, the keepalive interval, is the maximum permitted
interval between client messages to the server if the client wishes to keep
the DSO session alive.</t>

<t>The two timeout values are independent. The inactivity timeout may be lower, the 
same, or higher than the keepalive interval, though in most cases the inactivity 
timeout is expected to be shorter than the keepalive interval.</t>

<t>Only when the client has a very long-lived low-traffic state does the 
keepalive interval come into play, to ensure that a sufficient residual
amount of traffic is generated to maintain NAT and firewall state
and to assure client and server that they still have connectivity to each other.</t>

<t>On a new DSO session, if no explicit DSO Keepalive message exchange has taken 
place, the default value for both timeouts is 15 seconds.
For both timeouts, lower values of the timeout result in higher network traffic
and higher CPU load on the server.</t>

</section>
<section anchor="inactivetimer" title="Inactive DSO Sessions">

<t>At both servers and clients, the generation or reception of any complete
DNS message, including DNS requests, responses, updates, or DSO
messages, resets both timers for that DSO session, with the exception
that a DSO Keepalive message resets only the keepalive timer, not the inactivity 
timeout timer.</t>

<t>In addition, for as long as the client has an outstanding operation in progress,
the inactivity timer remains cleared, and an inactivity 
timeout cannot occur.</t>

<t>For short-lived DNS operations like traditional queries and updates,
an operation is considered in progress for the time between request and 
response, typically a period of a few hundred milliseconds at most.
At the client, the inactivity timer is cleared upon transmission of a 
request and remains cleared until reception of the corresponding response.
At the server, the inactivity timer is cleared upon reception of a request
and remains cleared until transmission of the corresponding response.</t>

<t>For long-lived DNS Stateful operations, an operation is considered in progress
for as long as the state is active, until it is cancelled.
This means that a DSO session can exist, with a state 
active, with no messages flowing in either direction, for far longer than the 
inactivity timeout, and this is not an error. This is why there are two separate 
timers: the inactivity timeout, and the keepalive interval. Just because a DSO 
session has no traffic for an extended period of time
does not automatically make that DSO session “inactive”,
if it has an active state that is awaiting events.</t>

</section>
<section anchor="the-inactivity-timeout" title="The Inactivity Timeout">

<t>The purpose of the inactivity timeout is for the server to balance its trade off 
between the costs of setting up new DSO sessions and the costs of maintaining inactive 
DSO sessions. A server with abundant DSO session capacity can offer a high inactivity timeout, 
to permit clients to keep a speculative DSO session open for a long time, to save 
the cost of establishing a new DSO session for future communications with that 
server. A server with scarce memory resources can offer a low inactivity timeout,
to cause clients to promptly close DSO sessions whenever they have no outstanding
operations with that server, and then create a new DSO session later when needed.</t>

<section anchor="closing-inactive-dso-sessions" title="Closing Inactive DSO Sessions">

<t>A client is NOT required to wait until the inactivity timeout expires
before closing a DSO session.
A client MAY close a DSO session at any time, at the client’s discretion.
If a client determines that it has no current or reasonably anticipated
future need for an inactive DSO session, then the client SHOULD close that connection.</t>

<t>If, at any time during the life of the DSO session,
the inactivity timeout value (i.e., 15 seconds by default) elapses
without there being any operation active on the DSO session,
the client MUST gracefully close the connection with a
TLS close_notify followed by a TCP FIN (or equivalent for other protocols).</t>

<t>If, at any time during the life of the DSO session, twice the inactivity timeout value
(i.e., 30 seconds by default) elapses without there being any operation
active on the DSO session, the server SHOULD consider the client delinquent,
and forcibly abort the DSO session.
For DSO sessions over TCP (or over TLS over TCP),
to avoid the burden of having a connection in TIME-WAIT state, instead of
closing the connection gracefully the server SHOULD abort
the connection with a TCP RST (or equivalent for other protocols).
(In the BSD Sockets API this is achieved by setting the
SO_LINGER option to zero before closing the socket.)</t>

<t>In this context, an operation being active on a DSO session includes
a query waiting for a response, an update waiting for a response,
or active state,
but not a DSO Keepalive message exchange itself.
A DSO Keepalive message exchange resets only the keepalive
interval timer, not the inactivity timeout timer.</t>

<t>If the client wishes to keep an inactive DSO session open for longer than
the default duration without having to send traffic every 15 seconds,
then it uses the DSO Keepalive message to request
longer timeout values, as described in <xref target="keepalive"/>.</t>

</section>
<section anchor="values-for-the-inactivity-timeout" title="Values for the Inactivity Timeout">

<t>For the inactivity timeout value, lower values result in more frequent DSO session 
teardown and re-establishment. Higher values result in lower traffic and CPU
load on the server, but a larger memory burden to maintain state for inactive 
DSO sessions.</t>

<t>A shorter inactivity timeout with a longer keepalive interval signals to the client 
that it should not speculatively keep inactive DSO sessions open for very long without
reason, but when it does have an active reason to keep a DSO session open, it 
doesn’t need to be sending an aggressive level of keepalive traffic.</t>

<t>A longer inactivity timeout with a shorter keepalive interval signals to the client
that it may speculatively keep inactive DSO sessions open for a long time, but it
should be sending a lot of keepalive traffic on those inactive DSO sessions.
This configuration is expected to be less common.</t>

<t>To avoid repeated teardown and re-establishment of sessions,
the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with an inactivity timeout value less than ten seconds.
If a client receives a Keepalive message specifying an inactivity timeout value
less than ten seconds this is an error and the client MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

<t>This does not mean that a client is forced to keep an idle connection open for
ten seconds if it doesn’t need that — a client is free to close an idle connection whenever it chooses —
it means that servers cannot <spanx style="emph">require</spanx> a client to close an idle connection in under ten seconds.</t>

<t>[Do we really want this restriction? How soon does the client reconnect after tearing down the connection? –SC]</t>

</section>
</section>
<section anchor="keepalivetimer" title="The Keepalive Interval">

<t>The purpose of the keepalive interval is to manage the generation of
sufficient messages to maintain state in middle boxes (such at NAT gateways
or firewalls) and for the client and server to periodically verify that they
still have connectivity to each other. This allows them to clean up state
when connectivity is lost, and attempt re-connection if appropriate.</t>

<section anchor="keepalive-interval-expiry" title="Keepalive Interval Expiry">

<t>If, at any time during the life of the DSO session,
the keepalive interval value (i.e., 15 seconds by default) elapses
without any DNS messages being sent or received on a DSO session,
the client MUST take action to keep the DSO session alive,
by sending a DSO Keepalive message (see <xref target="keepalive"/>).
A DSO Keepalive message exchange resets only the keepalive timer, 
not the inactivity timer.</t>

<t>If a client disconnects from the network abruptly,
without cleanly closing its DSO session,
leaving long-lived state uncanceled,
the server learns of this after failing to
receive the required keepalive traffic from that client.
If, at any time during the life of the DSO session,
twice the keepalive interval value (i.e., 30 seconds by default) elapses
without any DNS messages being sent or received on a DSO session,
the server SHOULD consider the client delinquent,
and forcibly abort the connection with a TCP RST (or equivalent for other 
protocols).</t>

</section>
<section anchor="values-for-the-keepalive-interval" title="Values for the Keepalive Interval">

<t>For the keepalive interval value, lower values result in higher volume keepalive 
traffic. Higher values of the keepalive interval reduce traffic and CPU load, 
but have minimal effect on the memory burden
at the server, because clients keep a DSO session open for the same length of time
(determined by the inactivity timeout) regardless of the level of keepalive traffic 
required.</t>

<t>It may be appropriate for clients and servers to select different keepalive 
interval values depending on the nature of the network they are on.</t>

<t>A corporate DNS server that knows it is serving only clients on the internal 
network, with no intervening NAT gateways or firewalls, can impose a higher 
keepalive interval, because frequent keepalive traffic is not required.</t>

<t>A public DNS server that is serving primarily residential consumer clients, 
where it is likely there will be a NAT gateway on the path, may impose a lower 
keepalive interval, to generate more frequent keepalive traffic.</t>

<t>A smart client may be adaptive to its environment. A client using
a private IPv4 address <xref target="RFC1918"/> to communicate with a DNS server
at an address outside that IPv4 private address block,
may conclude that there is likely to be a NAT gateway on the path,
and accordingly request a lower keepalive interval.</t>

<t>For environments where there is a NAT gateway or firewalls on the path, it is
RECOMMENDED that clients request, and servers grant, a keepalive interval of 15
minutes. In other environments it is RECOMMENDED that clients request, and 
servers grant, a keepalive interval of 60 minutes.</t>

<t>Note that the lower the keepalive interval value, the higher the load on client
and server. For example, an keepalive interval value of 100ms would result in a
continuous stream of at least ten messages per second, in both directions,
to keep the DSO session alive. And, in this extreme example, a single packet loss and
retransmission over a long path could introduce a momentary pause in the stream of messages,
long enough to cause the server to overzealously abort the connection.</t>

<t>Because of this concern, the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with an keepalive interval value less than ten seconds.
If a client receives an Keepalive message specifying an keepalive interval value
less than ten seconds this is an error and the client MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="server-initiated-termination-on-error" title="Server-Initiated Termination on Error">

<t>After sending an error response to a client, the server MAY close the DSO session,
or may allow the DSO session to remain open. For error conditions
that only affect the single operation in question, the server SHOULD return an
error response to the client and leave the DSO session open for further operations.
For error conditions that are likely to make all operations unsuccessful in the
immediate future, the server SHOULD return an error response to the client and 
then close the DSO session by sending a Retry Delay request message, as described in 
<xref target="delay"/>.</t>

</section>
<section anchor="error" title="Client Behaviour in Receiving an Error">

<t>Upon receiving an error response from the server, a client SHOULD NOT
automatically close the DSO session. An error relating to one particular operation
on a DSO session does not necessarily imply that all other operations on that
DSO session have also failed, or that future operations will fail. The client
should assume that the server will make its own decision about whether or not to
close the DSO session, based on the server’s determination of whether the error
condition pertains to this particular operation, or would also apply to any
subsequent operations. If the server does not close the DSO session then the client
SHOULD continue to use that DSO session for subsequent operations.</t>

</section>
<section anchor="server-initiated-termination-on-overload" title="Server-Initiated Termination on Overload">

<t>A server MUST NOT close a DSO session with a client,
except in certain exceptional circumstances, as outlined below.
In normal operation, closing a DSO session is the client’s responsibility.
The client makes the determination of when to close a DSO
session based on an evaluation of both its own needs,
and the inactivity timeout value dictated by the server.</t>

<t>Situations where a server may terminate a DSO session include:</t>

<t><list style="symbols">
  <t>The server is undergoing reconfiguration or maintenance procedures
that require clients to be disconnected.</t>
  <t>The server application software or underlying operating system
is shutting down or restarting.</t>
  <t>The server application software terminates unexpectedly
(perhaps due to a bug that makes it crash).</t>
  <t>The client fails to meets its obligation to generate keepalive
traffic or close an inactive session within twice the respective
time intervals dictated by the server (see <xref target="sessiontimeouts"/>).</t>
  <t>The client sends a grossly invalid or malformed request that is
indicative of a seriously defective client implementation (see <xref target="error"/>).</t>
  <t>The server is over capacity and needs to shed some load (see <xref target="retry"/>).</t>
</list></t>

<t>When a server has to close a DSO session with a client
(because of exceptional circumstances such as those outlined above)
the server SHOULD, whenever possible, send a Retry Delay Operation TLV
(see below) informing the client of the reason for the DSO session
being closed, and allow the client five seconds to receive it
before the server resorts to forcibly aborting the connection.</t>

</section>
<section anchor="retry" title="Retry Delay Operation TLV">

<t>There may be rare cases where a server is overloaded and wishes to shed load.
If a server is low on resources it MAY simply terminate a client connection with 
a TCP RST (or equivalent for other protocols).
However, the likely behavior of the client may be simply to to treat this as a
network failure and connect
immediately, putting more burden on the server.</t>

<t>Therefore to avoid this reconnection implosion, a server SHOULD instead choose 
to shed client load by sending a Retry Delay request message, with an RCODE of 
SERVFAIL, to inform the client of the overload situation. After sending a Retry 
Delay request message, the server MUST NOT send any further messages on that 
DSO session.</t>

<t>After sending the Retry Delay request the server SHOULD allow the
client five seconds to close the connection, and if the client has not
closed the connection after five seconds then the server SHOULD abort
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>Upon receipt of a Retry Delay request from the server, the client MUST
make note of the reconnect delay for this server, and then immediately
close the connection. This is to place the burden of TCP’s TIME-WAIT state on 
the client.</t>

<t>A Retry Delay request message MUST NOT be initiated by a client.
If a server receives a Retry Delay request message this is an error
and the server MUST immediately terminate the connection with a TCP RST
(or equivalent for other protocols).</t>

<section anchor="outstanding-operations" title="Outstanding Operations">

<t>At the moment a server chooses to initiate a Retry Delay request message
there may be DNS requests already in flight from client to server on this 
DSO session, which will arrive at the server after its Retry Delay request message 
has been sent.
The server MUST silently ignore such incoming requests, and MUST NOT generate
any response messages for them. When the Retry Delay request message from the
server arrives at the client, the client will determine that any DNS requests
it previously sent on this DSO session, that have not yet received a response, now 
will certainly not be receiving any response. Such requests should be considered
failed, and should be retried at a later time, as appropriate.</t>

<t>In the case where some, but not all, of the existing operations on a DSO session 
have become invalid (perhaps because the server has been reconfigured and is no 
longer authoritative for some of the names),
but the server is terminating all DSO sessions en masse with a REFUSED (5) RCODE,
the RECONNECT DELAY MAY be zero, indicating that the clients SHOULD immediately
attempt to re-establish operations.
It is likely that some of the attempts will be successful and some will not.</t>

<t>In the case where a server is terminating a large number of DSO sessions at once
(e.g., if the system is restarting) and the server doesn’t want to be inundated 
with a flood of simultaneous retries, it SHOULD send different RECONNECT delay 
values to each client.
These adjustments MAY be selected randomly, pseudorandomly, or deterministically
(e.g., incrementing the time value by one tenth of a second for each successive
client, yielding a post-restart reconnection rate of ten clients per second).</t>

</section>
<section anchor="client-reconnection" title="Client Reconnection">

<t>After a DSO session is closed by the server, the client SHOULD try to reconnect,
to that server, or to another suitable server, if more than one is available.
If reconnecting to the same server, the client MUST respect the indicated delay
before attempting to reconnect.</t>

<t>If a particular server does not want a client to reconnect (it is being
de-commissioned), it SHOULD set the retry delay to the maximum value (which is
approximately 497 days). If the server will only be out of service for a maintenance
period, it should use a value closer to the expected maintenance window and
not default to a very large delay value or clients may not attempt to reconnect
after it resumes service.</t>

</section>
</section>
</section>
<section anchor="sharing" title="Connection Sharing">

<t>As previously specified for DNS over TCP <xref target="RFC7766"/>,
to mitigate the risk of unintentional server overload, DNS clients
MUST take care to minimize the number of concurrent TCP connections
made to any individual server.  It is RECOMMENDED that for any given
client/server interaction there SHOULD be no more than one connection
for regular queries, one for zone transfers, and one for each
protocol that is being used on top of TCP (for example, if the
resolver was using TLS).
However, it is noted that certain primary/secondary configurations
with many busy zones might need to use more than one TCP
connection for zone transfers for operational reasons
(for example, to support concurrent transfers of multiple zones).</t>

<t>A single server may support multiple services, including DNS Updates 
<xref target="RFC2136"/>, DNS Push Notifications <xref target="I-D.ietf-dnssd-push"/>,
and other services, for one or more DNS zones.
When a client discovers that the target server for several different operations
is the same target hostname and port, the client SHOULD use a single
shared DSO session for all those operations.
A client SHOULD NOT open multiple connections to the same target host and port
just because the names being operated on are different or
happen to fall within different zones.
This is to reduce unnecessary connection load on the DNS server.</t>

<t>However, server implementers and operators should be aware that connection
sharing may not be possible in all cases.
A single client device may be home to multiple independent client software
instances that don’t coordinate with each other.
Similarly, multiple independent client devices behind the same NAT gateway
will also typically appear to the DNS server as different source ports on
the same client IP address.
Because of these constraints, a DNS server MUST be prepared to accept
multiple connections from different source ports on the same client IP address.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="dso-opcode-registration" title="DSO OPCODE Registration">

<t>IANA are directed to assign a value (tentatively 6)
in the DNS OPCODEs Registry for the DSO OPCODE.</t>

</section>
<section anchor="dso-rcode-registration" title="DSO RCODE Registration">

<t>IANA are directed to assign a value (tentatively 11)
in the DNS RCODE Registry for the DSONOTIMP error code.</t>

</section>
<section anchor="dso-type-codes-registry" title="DSO Type Codes Registry">

<t>IANA are directed to create the 15-bit DSO Type Codes
Registry, with initial values as follows:</t>

<texttable>
      <ttcol align='right'>Type</ttcol>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Status</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>0x0000</c>
      <c>RetryDelay</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0001</c>
      <c>KeepAlive</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0002</c>
      <c>Encryption Padding</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0003 - 0x003F</c>
      <c>Unassigned, reserved for DSO session management TLVs</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x0040 - 0x77FF</c>
      <c>Unassigned</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x7800 - 0x7BFF</c>
      <c>Reserved for local / experimental use</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x7C00 - 0x7FFF</c>
      <c>Reserved for future expansion</c>
      <c>&#160;</c>
      <c>&#160;</c>
</texttable>

<t>Registration of additional DSO Type Codes requires publication
of an appropriate IETF “Standards Action” or “IESG Approval” document <xref target="RFC5226"/>.</t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>If this mechanism is to be used with DNS over TLS, then these messages
are subject to the same constraints as any other DNS over TLS messages
and MUST NOT be sent in the clear before the TLS session is established.</t>

<t>The data field of the “Encryption Padding” TLV could be used as a covert channel.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to
Tim Chown,
Ralph Droms,
Jan Komissar,
Manju Shankar Rao,
and Ted Lemon
for their helpful contributions to this document.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC1035;
&RFC7766;
&RFC6891;
&RFC7828;
&RFC2119;
&RFC7830;
&RFC1034;
&RFC2136;
&RFC2132;
&RFC1918;
&RFC5226;


    </references>

    <references title='Informative References'>

<reference anchor="NagleDA" target="http://www.stuartcheshire.org/papers/nagledelayedack/">
  <front>
    <title>TCP Performance problems caused by interaction between Nagle's Algorithm and Delayed ACK</title>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization></organization>
    </author>
    <date year="2005" month="May" day="20"/>
  </front>
</reference>
&RFC7858;
&RFC6763;
&I-D.ietf-dnssd-push;
&RFC0768;
&I-D.ietf-dprive-padding-policy;


    </references>



  </back>

<!-- ##markdown-source:
H4sIAIykFVoAA+1923Icx5Xge35FLvggQNPdAniVOLFhQyAowSYJGgDl8exu
TFR3F4ASu6vaVdUAIZIR8yG7PzdfsueaebKqGoBs2uOYXco0ge6qvJw8ee6X
8Xjs2qJd5M/9izen/rTN2vx8vfDHq7zO2qIqGzevZmW2hAfmdXbejou8PR/P
y6ZajZu8aeCRcVNclNlivPvEzeH15/7h7t6z8d7eeO87V6zq576t1037cHf3
u92HLqvz7Lk/Ktu8LvPWXV/QxMdv/R+r+n1RXvgf6mq9cu+v40PjFzixm2Xt
c9+0c7de4TTNc3/y8sA/e/b06Yh+2tt99MS5WTWHUZ77NazyW7cqnjvvx76t
ZvRvc7Os8/OGf67qln5x2bq9rGp6Ev56X5Q4+MR/ny8WRUMfMQROshv7YVVf
xFX605umzZeNPwCgwdDFejmCL2cTejSbTuv8Cp4+PaDfG5g6h/1892TXH1xm
NYwBwMfP6OtZ0d7AdPn8uqrm/gB+44+rOaziYN9/93j36SP5aF22NTz87nSf
PlhdViU89E97/imM/fjhI78HoKev8mVWLJ77Orv5bdHMJrD8dMunE1hL3lwW
dW42fdquYX3pN7Tz/dVqkcct6pb24KPzoiza3L+qqpXZz8EasKotyqqzmSe7
e4/v2szj3W/9d88e+0cPd5/ZzcxkWb/NcDWTWbVM9/S7iX9RzACzmqo0m/pd
dVl2vqA9ncLq5usynupZPrssq0V1UeRNcpLypN06/Tz2r7OLbJ4t8tIf5LCd
XD4+/nBe1XN/Oivycpb7t1n93sCGvzWAOf6Xx/7xD/sduCBY5/73gOJz2mmA
w8/Z/LcNL6kPhNNhIJxmdfZfCggNbGgzFPYnsKoSNmtAsI+XuSrtFwwCWHoD
i5nldvyMn54s6enfXuCn/XnOJv7tugESVRdmprNqmX5M87wrs/PzYlHAx/Pk
Fm1tWUIAqykuLg1g3hz4h8+e7n5717X5bu87/+3TZ37v0aOEBqxkJb+dZuXF
z7QHV5Sw4SVQ/ascT/FNdrHIX+zzgbZZfYHLumzb1fNvvrm+vp40RBf0/iE1
+WaVwQVvvinxzXm+yG7yeTZ7/w2PwFzm7OCtf5vXNBNiwKqupgskm7Ns3cCp
Tm8AiLCybIbcx0/z9joHJKLFfNXAeV1UddFeLn1Wzv0LnsPvH/ye0TIQ8tvJ
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
ujCFcZrN3rv/C4vovaSi8wAA

-->

</rfc>

