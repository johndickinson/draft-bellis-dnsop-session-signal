<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.1.1 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC7766 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7766.xml">
<!ENTITY RFC6891 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6891.xml">
<!ENTITY RFC7828 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7828.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC7830 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7830.xml">
<!ENTITY RFC1034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC2136 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2136.xml">
<!ENTITY RFC2132 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2132.xml">
<!ENTITY RFC1918 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1918.xml">
<!ENTITY RFC5226 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5226.xml">
<!ENTITY RFC7858 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7858.xml">
<!ENTITY I-D.ietf-dnssd-push SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dnssd-push.xml">
<!ENTITY RFC0768 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.0768.xml">
<!ENTITY I-D.ietf-dprive-padding-policy SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dprive-padding-policy.xml">
]>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-dnsop-session-signal-04" category="std" updates="RFC 7766, RFC 1035">

  <front>
    <title>DNS Stateful Operations</title>

    <author initials="R." surname="Bellis" fullname="Ray Bellis">
      <organization abbrev="ISC">Internet Systems Consortium, Inc.</organization>
      <address>
        <postal>
          <street>950 Charter Street</street>
          <city>Redwood City</city>
          <code>CA 94063</code>
          <country>USA</country>
        </postal>
        <phone>+1 650 423 1200</phone>
        <email>ray@isc.org</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>1 Infinite Loop</street>
          <city>Cupertino</city>
          <code>CA 95014</code>
          <country>USA</country>
        </postal>
        <phone>+1 408 974 3207</phone>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="J." surname="Dickinson" fullname="John Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>jad@sinodun.com</email>
      </address>
    </author>
    <author initials="S." surname="Dickinson" fullname="Sara Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>sara@sinodun.com</email>
      </address>
    </author>
    <author initials="A." surname="Mankin" fullname="Allison Mankin">
      <organization>Salesforce</organization>
      <address>
        <email>allison.mankin@gmail.com</email>
      </address>
    </author>
    <author initials="T." surname="Pusateri" fullname="Tom Pusateri">
      <organization>Unaffiliated</organization>
      <address>
        <phone>+1 919 867 1330</phone>
        <email>pusateri@bangj.com</email>
      </address>
    </author>

    <date year="2017" month="September" day="04"/>

    <area>Internet</area>
    <workgroup>DNSOP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document defines a new DNS Stateful Operations OPCODE used to communicate 
operations within persistent stateful sessions, expressed using type-length-value (TLV) 
syntax, and defines an initial set of TLVs used to manage session timeouts and 
termination. This mechanism is intended to reduce the overhead of existing 
“per-packet” signaling mechanisms with “per-message” semantics as well as 
defining new stateful operations not defined in EDNS(0).</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The use of transports for DNS other than UDP is being increasingly specified,
for example, DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> and DNS over TLS <xref target="RFC7858"/>.
Such transports can offer persistent, long-lived sessions and therefore when
using them for transporting DNS messages it is of benefit to have a mechanism
that can establish parameters associated with those sessions, such as timeouts.
In such situations it is also advantageous to support server initiated messages.</t>

<t>The existing EDNS(0) Extension Mechanism for DNS <xref target="RFC6891"/> is explicitly
defined to only have “per-message” semantics. Whilst EDNS(0) has been used to
signal at least one session related parameter (the EDNS(0) TCP Keepalive option
<xref target="RFC7828"/>) the result is less than optimal due to the restrictions
imposed by the EDNS(0) semantics and the lack of server-initiated signalling. 
For example, a server cannot arbitrarily 
instruct a client to close a connection because the server can only send EDNS(0) options 
in responses to queries that contained EDNS(0) options.</t>

<t>This document defines a new DNS Stateful Operations OPCODE used to carry
operations within persistent stateful connections, expressed using type-length-value (TLV)
syntax, and
defines an initial set of TLVs including ones used to manage session timeouts and termination.</t>

<t>This new format has distinct advantages over the an RR based format because it
is more generic, more flexible and more compact. Each TLV definition is specific
to the use case, and as a result contains no redundant or overloaded fields.
Importantly, it completely avoids conflating DNS Stateful Operations in anyway 
with normal DNS operations or with existing EDNS(0) based functionality. A goal 
of this approach is to avoid the operational
issues that have befallen EDNS(0), particularly relating to middle-box 
behaviour.</t>

<t>With EDNS(0), multiple options may be packed into a single OPT pseudo-RR,
and there is no generalized mechanism for a client to be able to tell
whether a server has processed or otherwise acted upon each individual
option within the combined OPT RR.
The specifications for each individual option need to define how each
different option is to be acknowledged, if necessary.</t>

<t>With DNS Stateful Operations, in contrast, there is no compelling motivation
to pack multiple operations into a single message for efficiency reasons.
Each Stateful operation is communicated in its own separate
DNS message, and the transport protocol can take care of packing
separate DNS messages into a single IP packet if appropriate.
For example, TCP can pack multiple small DNS messages into a single TCP segment.
The RCODE in each response message indicates the success or failure of the operation in question.</t>

<t>It should be noted that the message format for DNS Stateful Operations
(see <xref target="format"/>) differs from the traditional DNS packet
format used for standard queries and responses.
The standard twelve-octet header is used, but the four count fields
(QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) are set to zero and their
corresponding sections are not present.
The actual data pertaining to DNS Stateful Operations is
appended to the end of the DNS message header.
When displayed using today’s packet analyzer tools that have not been updated
to recognize the DNS Stateful Operations format, this will result
in the Stateful Operations data being displayed as unknown additional
data after the end of the DNS message. It is likely that future updates
to these tools will add the ability to recognize, decode, and display the
Stateful Operations data.</t>

</section>
<section anchor="terminology" title="Terminology">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and
“OPTIONAL” in this document are to be interpreted as described in
“Key words for use in RFCs to Indicate Requirement Levels” <xref target="RFC2119"/>.</t>

<t>“DSO” is used to mean DNS Stateful Operation.</t>

<t>The term “connection” means a bidirectional byte stream of reliable,
in-order messages, such as provided by using
DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> or DNS over TLS <xref target="RFC7858"/>.</t>

<t>The unqualified term “session” in the context of this document means the exchange of
DNS messages over a connection where:</t>

<t><list style="symbols">
  <t>The connection between client and server is persistent and relatively
long-lived (i.e., minutes or hours, rather than seconds).</t>
  <t>Either end of the connection may initiate messages to the other.</t>
</list></t>

<t>A “DSO session” is established between two endpoints that
acknowledge persistent DNS state via the exchange of DSO messages
over the connection. This is distinct from, for example a DNS-over-TCP session
as described in RC7766.</t>

<t>A “DSO session” is terminated when the underlying connection is closed.</t>

<t>The term “server” means the software with a listening socket, awaiting
incoming connection requests.</t>

<t>The term “client” means the software which initiates a connection
to the server’s listening socket.</t>

<t>The terms “initiator” and “responder” correspond respectively to the
initial sender and subsequent receiver of a DSO request message,
regardless of which was the “client” and “server” in the usual DNS sense.</t>

<t>The term “sender” may apply to either an initiator
(when sending a DNS Stateful Operation request message)
or a responder (when sending a DNS Stateful Operation response message).</t>

<t>Likewise, the term “receiver” may apply to either a responder
(when receiving a DNS Stateful Operation request message)
or an initiator (when receiving a DNS Stateful Operation response message).</t>

<t>DNS Stateful Operations are expressed using type-length-value (TLV) syntax.</t>

<t>Two timers are defined in this document: an inactivity timeout and a keepalive
interval. The term “Session Timers” is used to refer to this pair of values.</t>

</section>
<section anchor="discussion" title="Discussion">

<t>There are several use cases for DNS Stateful operations that can 
be described here.</t>

<t>Firstly, establishing session parameters such as server defined timeouts is of 
great use in the 
general management of persistent connections. For example, using DSO sessions 
for stub to recursive DNS-over-TLS <xref target="RFC7858"/> is more flexible for both the 
client and the server than attempting to manage sessions using just the EDNS(0)
TCP Keepalive option
<xref target="RFC7828"/>. The simple set of TLVs defined in this document is
sufficient to greatly enhance connection management for this use case.</t>

<t>Secondly, DNS-SD has evolved into a naturally session based mechanism where, for 
example, long-lived subscriptions lend themselves to ‘push’ mechanisms as 
opposed to polling. Long-lived stateful connections and server initiated 
messages align with this use case as described in <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>A general use case is that DNS traffic is often bursty but session establishment can be expensive. One 
challenge with long-lived connections is to maintain sufficient traffic to 
maintain NAT and firewall state. To mitigate this issue this document introduces a 
new concept for the DNS, that is DSO “Keepalive traffic”. This traffic carries 
no DNS data and is not considered ‘activity’ in the classic DNS sense but serves 
to reset a keepalive timer in order to avoid re-cycling a DSO session.</t>

<t>There are a myriad of other potential use cases for DSO given the versatility 
and extensibility of this specification.</t>

<t><xref target="details"/> of this document first describes the protocol details of DNS Stateful Operations including definitions of three TLVs for session management and encryption padding. <xref target="lifecycle"/> then presents a
detailed discussion of the DSO Session lifecycle including an
in-depth discussion of keepalive traffic and session termination.</t>

</section>
<section anchor="details" title="Protocol Details">

<section anchor="establishment" title="DSO Session Establishment">

<t>DSO messages MUST only be carried in protocols and in
environments where a session may be established according to the definition above.
Standard DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/>, and DNS over TLS <xref target="RFC7858"/>
are suitable protocols.</t>

<t>DNS over plain UDP <xref target="RFC0768"/> is not appropriate since it fails on the requirement for
in-order message delivery, and, in the presence of NAT gateways and firewalls
with short UDP timeouts, it fails to provide a persistent bi-directional
communication channel unless an excessive amount of keepalive traffic is used.</t>

<t>DSO messages relate only to the specific “DSO session” in which
they are being carried. A “DSO session” is established over a connection when
either side of the connection sends the first DSO
TLV and it is acknowledged by the other side. While this specification defines
an initial set of three TLVs, additional TLVs may be defined in
additional specifications. All three of the TLVs defined are mandatory to implement.</t>

<t>A client MAY attempt to initiate DSO messages at any time
on a connection; receiving a NOTIMP response in reply indicates that the
server does not implement DSO, and the client SHOULD NOT
issue further DSO messages on that connection.</t>

<t>A server SHOULD NOT initiate DSO messages until a
client-initiated DSO message is received first,
unless in an environment where it is known in advance by other
means that the client supports DSO.
This requirement is to ensure that the clients that do not support
DSO do not receive unsolicited inbound DSO
messages that they would not know how to handle.</t>

<t>On a session between a client and server that support DSO,
once the client has sent at least one DSO message (or it is
known in advance by other means that the client supports DSO)
either end may unilaterally send DSO messages at any time,
and therefore either client or server may be the initiator of a message.</t>

<t>From this point on it is considered that a “DSO session” is in
progress. Clients and servers should behave as described in this specification
with regard to inactivity timeouts and connection close, not as prescribed in <xref target="RFC7766"/>.</t>

<section anchor="middle-box-considerations" title="Middle-box Considerations">

<t>Where an application-layer middle box (e.g., a DNS proxy, forwarder, or
session multiplexer) is in the path the middle box MUST NOT blindly
forward DSO messages in either direction, and MUST treat the inbound
and outbound connections as separate sessions.  This does not preclude
the use of DSO messages in the presence of an IP-layer middle box such
as a NAT that rewrites IP-layer and/or transport-layer headers, but
otherwise preserves the effect of a single session between the client
and the server.</t>

<t>To illustrate the above, consider a network where a middle box
terminates one or more TCP connections from clients and multiplexes the
queries therein over a single TCP connection to an upstream server.  The
DSO messages and any associated state are specific to the individual
TCP connections.  A DSO-aware middle box MAY in some circumstances be
able to retain associated state and pass it between the client and
server (or vice versa) but this would be highly TLV-specific.  For
example, the middle box may be able to maintain a list of which clients
have made Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/> and
make its own subscription(s) on their behalf, relaying any subsequent
notifications to the client (or clients) that have subscribed to that
particular notification.</t>

</section>
</section>
<section anchor="format" title="Message Format">

<t>A DSO message begins with
the standard twelve-octet DNS message header <xref target="RFC1035"/>
with the OPCODE field set to the DSO OPCODE (tentatively 6).
However, unlike standard DNS messages, the question section, answer section,
authority records section and additional records sections are not present.
The corresponding count fields (QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) MUST be
set to zero on transmission.</t>

<t>If a DSO message is received where any of the count fields are
not zero, then a FORMERR MUST be returned.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                          MESSAGE ID                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |QR |    OPCODE     |            Z              |     RCODE     |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     QDCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ANCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     NSCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ARCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                           DSO Data                            /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<section anchor="header" title="Header">

<t>In a request the MESSAGE ID field MUST be set to a unique value, that the
initiator is not currently using for any other active operation on this 
connection.
For the purposes here, a MESSAGE ID is in use in this DSO session if the
initiator has used it in a request for which it has not yet received a
response, or if the client has used it to setup state that it has not yet ready
to delete. For example, state could be a subscription as defined in 
<xref target="I-D.ietf-dnssd-push"/>.</t>

<t>In a response the MESSAGE ID field MUST contain a copy of the value of the
MESSAGE ID field in the request being responded to.</t>

<t>In a request the DNS Header QR bit MUST be zero (QR=0).
If the QR bit is not zero the message is not a request.</t>

<t>In a response the DNS Header QR bit MUST be one (QR=1).
If the QR bit is not one the message is not a response.</t>

<t>The DNS Header OPCODE field holds the DSO OPCODE value (tentatively 6).</t>

<t>The Z bits are currently unused, and in both requests and responses the
Z bits MUST be set to zero (0) on transmission and MUST be silently ignored
on reception, unless a future document specifies otherwise.</t>

<t>In a request message (QR=0) the RCODE is generally set to zero on transmission,
and silently ignored on reception, except where specified otherwise
(for example, the Retry Delay operation (see <xref target="delay"/>), where the RCODE indicates the reason
for termination).</t>

<t>The RCODE value in a response may be one of the following values:</t>

<texttable>
      <ttcol align='right'>Code</ttcol>
      <ttcol align='left'>Mnemonic</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>0</c>
      <c>NOERROR</c>
      <c>Operation processed successfully</c>
      <c>1</c>
      <c>FORMERR</c>
      <c>Format error</c>
      <c>2</c>
      <c>SERVFAIL</c>
      <c>Server failed to process request due to a problem with the server</c>
      <c>3</c>
      <c>NXDOMAIN</c>
      <c>TLV dependent</c>
      <c>4</c>
      <c>NOTIMP</c>
      <c>DSO not supported</c>
      <c>5</c>
      <c>REFUSED</c>
      <c>Operation declined for policy reasons</c>
      <c>9</c>
      <c>NOTAUTH</c>
      <c>Not Authoritative (TLV dependent)</c>
      <c>11</c>
      <c>DSONOTIMP</c>
      <c>DSO type code not supported</c>
</texttable>

<t>Use of the above RCODE’s is likely to be common in DSO but 
does not preclude the definition and use of other codes in future documents that 
make use of DSO.</t>

<t>If a document describing a DSO makes use of either NXDOMAIN 
or NOTAUTH then that document MUST explain the meaning.</t>

</section>
<section anchor="dso-data" title="DSO Data">

<t>The standard twelve-octet DNS message header is followed by the DSO Data.</t>

<t>The first TLV in a DSO request message is called the Operation 
TLV. Any subsequent TLVs after this initial Operation TLV are called Modifier TLVs.</t>

<t>Depending on the operation a DSO response can contain:</t>

<t><list style="symbols">
  <t>No TLVs</t>
  <t>Only an Operation TLV</t>
  <t>An Operation TLV followed by one or more Modifier TLVs</t>
  <t>Only Modifier TLVs</t>
</list></t>

<section anchor="tlv-format" title="TLV Format">

<t>Operation and modifier TLVs both use the same encoding format.</t>

<t>Operation TLVs SHOULD normally require a response and, therefore, set the TLV
Acknowledgement bit in a request. However, for some Operation TLVs, this may be
undesirable and the TLV Acknowledgement bit MAY be cleared in the request. Each
Operation TLV definition should stipulate whether an acknowledgement is
REQUIRED. If the TLV Acknowledgement bit is cleared in a request, a response
MUST NOT be sent. Modifier TLVs MUST NEVER set the Acknowledgement bit. The
Acknowledgement bit is NEVER set in the response to an Operation TLV.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   | A |                        DSO-TYPE                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                        DSO DATA LENGTH                        |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                      TYPE-DEPENDENT DATA                      /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='A:'>
  A 1 bit TLV Response flag indicating whether or not an Operation TLV requires
a response Acknowledgement.
DSO-TYPE:</t>
  <t>A 15 bit field in network order giving the type of the current DSO TLV per
the IANA DSO Type Codes Registry.</t>
  <t hangText='DSO DATA LENGTH:'>
  A 16 bit field in network order giving the size in octets of
the TYPE-DEPENDENT DATA.</t>
  <t hangText='TYPE-DEPENDENT DATA:'>
  Type-code specific format.</t>
</list></t>

<t>Where domain names appear within TYPE-DEPENDENT DATA, they MAY be compressed 
using standard DNS name compression. However, the compression MUST NOT point
outside of the TYPE-DEPENDENT DATA section and offsets MUST be from the start
of the TYPE-DEPENDENT DATA.</t>

</section>
<section anchor="operation-tlvs" title="Operation TLVs">

<t>An “Operation TLV” specifies the operation to be performed.</t>

<t>A DSO message MUST contain at most one Operation TLV.</t>

<t>In all cases a DSO request message MUST contain exactly one 
Operation TLV, indicating the operation to be performed.</t>

<t>Depending on the operation, a DSO response message MAY contain no 
Operation TLV, because it is simply a response to a previous request message,
and the MESSAGE ID in the header is sufficient to identify the request in 
question. Or it may contain a single corresponding response Operation TLV, with 
the same DSO-TYPE as in the request message. The specification for each DSO
type determines whether a response for that operation type 
is required to carry the Operation TLV.</t>

<t>If a DSO response is received for an operation which requires
that the response carry an Operation TLV, and the required Operation TLV is not
the first DSO TLV in the response message, then this is a fatal 
error and the recipient of the defective response message MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
<section anchor="modifier-tlvs" title="Modifier TLVs">

<t>A “Modifier TLV” specifies additional parameters
relating to the operation. Immediately following the Operation TLV, if present,
a DSO message MAY contain one or more Modifier TLVs.</t>

</section>
<section anchor="unrecognized-tlvs" title="Unrecognized TLVs">

<t>If a DSO request is received containing an unrecognized
Operation TLV, the receiver MUST send a response with matching
MESSAGE ID, and RCODE DSONOTIMP (tentatively 11). The response MUST NOT contain 
an Operation TLV.</t>

<t>If a DSO message (request or response) is received
containing one or more unrecognized Modifier TLVs, the unrecognized
Modifier TLVs MUST be silently ignored, and the remainder of the message
is interpreted and handled as if the unrecognized parts were not present.</t>

</section>
</section>
<section anchor="edns0-and-tsig" title="EDNS(0) and TSIG">

<t>Since the ARCOUNT field MUST be zero, a DSO message
MUST NOT contain an EDNS(0) option in the additional records section.
If functionality provided by current or future EDNS(0) options is desired
for DSO messages, an Operation TLV or
Modifier TLV needs to be defined to carry the necessary information.</t>

<t>For example, the EDNS(0) Padding Option <xref target="RFC7830"/> used for security purposes
is not permitted in a DSO message,
so if message padding is desired for DSO messages
then the Encryption Padding TLV described in <xref target="padding"/> MUST be used.</t>

<t>Similarly, a DSO message MUST NOT contain a TSIG record.
A TSIG record in a conventional DNS message is added as the last record
in the additional records section, and carries a signature computed over
the preceding message content. Since DSO data appears
after the additional records section, it would not be included in the
signature calculation. 
If use of signatures with DSO messages becomes necessary in the 
future, an explicit Modifier TLV needs to be defined to 
perform this function.</t>

<t>Note however that, while DSO <spanx style="emph">messages</spanx> cannot include
EDNS(0) or TSIG records, a DSO <spanx style="emph">session</spanx> is typically used to 
carry a whole series of DNS messages of different kinds, including DSO
messages, and other DNS message types like Query <xref target="RFC1034"/> 
<xref target="RFC1035"/> and Update <xref target="RFC2136"/>, and those messages can carry EDNS(0) and 
TSIG records.</t>

<t>This specification explicitly prohibits use of the
EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>
in <spanx style="emph">any</spanx> messages sent on a DSO session (because it duplicates
the functionality provided by the DSO Keepalive operation),
but messages may contain other EDNS(0) options as appropriate.</t>

</section>
</section>
<section anchor="message-handling" title="Message Handling">

<t>The initiator MUST set the value of the QR bit in the DNS header to zero
(0), and the responder MUST set it to one (1). Every DSO request 
message (QR=0) MUST elicit a response (QR=1), 
which MUST have the same MESSAGE ID in the DNS message header as in the 
corresponding request. DSO request messages sent by the client 
elicit a response from the server, and DSO request messages sent 
the server elicit a response from the client.</t>

<t>With most TCP implementations, the TCP data acknowledgement (generated because 
data has been received by TCP), the TCP window update (generated because TCP has 
delivered that data to the receiving software) and the DSO 
response (generated by the receiving software itself)
are all combined into a single packet, so in practice the requirement that every
DSO request message MUST elicit a 
DSO response incurs minimal extra cost on the network.
Requiring that every request elicit a corresponding response also avoids
performance problems caused by interaction between
Nagle’s Algorithm and Delayed Ack <xref target="NagleDA"/>.</t>

<t>The namespaces of 16-bit MESSAGE IDs are disjoint in each direction.
For example, it is <spanx style="emph">not</spanx> an error for both client and server to send a request
message with the same ID. In effect, the 16-bit MESSAGE ID combined with the 
identity of the initiator (client or server) serves as a 17-bit unique 
identifier for a particular operation on a DSO session.</t>

<t>As described in <xref target="header"/> An initiator MUST NOT reuse a MESSAGE ID that is 
already in use for an 
outstanding request, unless specified otherwise by the relevant specification 
for the DSO in question. At the very least, this means 
that a MESSAGE ID MUST NOT be reused in a particular direction
on a particular DSO session while the initiator is waiting for a response to a 
previous request on that DSO session, unless specified otherwise by the relevant 
specification for the DSO in question.
(For a long-lived state the MESSAGE ID for the operation
MUST NOT be reused whilst that state remains active.)</t>

<t>If a client or server receives a response (QR=1) where the MESSAGE ID does not
match any of its outstanding operations, this is a fatal error and it MUST 
immediately terminate the connection with a TCP RST (or equivalent for other 
protocols).</t>

</section>
</section>
<section anchor="keepalive" title="Keepalive Operation TLV">

<t>The Keepalive Operation TLV (DSO-TYPE=1) performs two functions: to reset the
keepalive timer for the DSO session and to establish the values for the Session Timers.</t>

<t>The Keepalive Operation TLV resets only the keepalive timer, not the inactivity timer.
The reason for this is that periodic Keepalive Operation TLVs are sent for the
sole purpose of keeping a DSO session alive because that DSO session has current or recent
activity that warrants keeping the DSO session alive.
If sending keepalive traffic itself were to reset the inactivity timer, then that would
create a circular livelock where keepalive traffic would be sent indefinitely to keep
a DSO session alive, where the only activity on that DSO session would be keepalive traffic
keeping the DSO session alive so that further keepalive traffic can be sent.</t>

<t>Sending keepalive traffic is considered a maintenance activity
that is performed in service of other client activities.
Sending keepalive traffic itself is not considered a client activity.
For a DSO session to be considered active, it must be carrying something more than just keepalive traffic.
This is why merely sending a Keepalive Operation TLV does not reset the inactivity timer.</t>

<t>When sent by a client, the Keepalive Operation TLV resets a DSO session’s keepalive timer,
and at the same time requests what the Session Timer timeout values should be from this point forward in the DSO session.</t>

<t>An acknowledgement is always required for a Keepalive Operation TLV and the TLV
Acknowledgement bit MUST be set in the request when originated by either the
client or the server.</t>

<t>Once a DSO session is in progress (see <xref target="details"/>)
the Keepalive TLV also MAY be initiated by a server.
When sent by a server, it resets a DSO session’s keepalive timer,
and unilaterally informs the client of the new Session Timer values to use from 
this point forward in this DSO session.</t>

<t>It is not required that the Keepalive TLV be used in every DSO session.
While many DNS Stateful operations
will be used in conjunction with a long-lived session state,
not all DNS Stateful operations require long-lived session state,
and in some cases the default 15-second value for both the inactivity timeout
and keepalive interval may be perfectly appropriate.</t>

<t>The TYPE-DEPENDENT DATA for the the Keepalive TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 INACTIVITY TIMEOUT (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 KEEPALIVE INTERVAL (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='INACTIVITY TIMEOUT:'>
  the inactivity timeout for the current DSO session, specified as a 32
bit word in network (big endian) order in units of milliseconds.
This is the timeout at which the client MUST close an inactive DSO session.
If the client does not gracefully close an inactive DSO session then after
twice this interval the server will forcibly terminate the connection
with a TCP RST (or equivalent for other protocols).</t>
  <t hangText='KEEPALIVE INTERVAL:'>
  the keepalive interval for the current DSO session, specified as a 32-bit
word, in network (big endian) order, in units of milliseconds.
This is the interval at which a client MUST generate keepalive
traffic to maintain connection state.
If the client does not generate the necessary keepalive traffic then after
twice this interval the server will forcibly terminate the connection
with a TCP RST (or equivalent for other protocols).</t>
</list></t>

<t>In a client-initiated DSO Keepalive message,
the inactivity timeout and keepalive interval contain the client’s requested values.
In a server response to a client-initiated message, the inactivity timeout and 
keepalive interval contain the server’s chosen values, which the client MUST 
respect. This is modeled after the DHCP protocol, where the client
requests a certain lease lifetime using DHCP option 51 <xref target="RFC2132"/>,
but the server is the ultimate authority
for deciding what lease lifetime is actually granted.</t>

<t>In a server-initiated DSO Keepalive message, the inactivity timeout and 
keepalive interval unilaterally inform the client of the new values from this 
point forward in this DSO session. The client MUST generate a response to the 
server-initiated DSO Keepalive message.
The MESSAGE ID in the response message MUST match the ID from the 
server-initiated DSO Keepalive message, and the response message 
MUST NOT contain any Operation TLV.</t>

<t>TODO: We may wish to change this, now that we’ve decided that we don’t need
all requests to generate responses.</t>

<t>When a client is sending its second and subsequent Keepalive DSO 
requests to the server, the client SHOULD continue to request its preferred 
values each time. This allows flexibility, so that if conditions change during 
the lifetime of a DSO session, the server can adapt its responses to better fit the
client’s needs.</t>

<section anchor="client-handling-of-received-session-timer-values" title="Client handling of received Session Timer values">

<t>When a client receives a response to its client-initiated DSO Keepalive message,
or receives a server-initiated DSO Keepalive message, the client has then received
Session Timer values dictated by the server. The two timer values contained in the
DSO Keepalive TLV from the server may each be higher, lower, or the same as the
respective Session Timer values the client previously had for this DSO session.</t>

<t>In the case of the keepalive timer, the handling of the received value is straightforward.
The act of receiving the message containing the DSO Keepalive TLV itself resets
the keepalive timer, and the keepalive interval given in the DSO Keepalive TLV
indicates the maximum time that may elapse before another message must be sent
or received on this DSO session, if the DSO session is to remain alive.</t>

<t>In the case of the inactivity timeout, the handling of the received value superficially
appears a little more subtle, though the meaning of the inactivity timeout is unchanged –
it still indicates the maximum permissible time allowed without activity on a DSO session.
The act of receiving the message containing the DSO Keepalive TLV does not
itself reset the inactivity timer. The time elapsed since the last useful
activity on this DSO session is unaffected by exchange of DSO Keepalive messages.
Upon reception of an inactivity timeout value from the server, that
becomes the new maximum permissible time without activity on a DSO session.</t>

<t><list style="symbols">
  <t>If the time since the last non-keepalive activity on this DSO session is not
greater than the inactivity timeout, then the DSO session may remain open for now.
When such time comes that the time since the last non-keepalive activity on this DSO session exceeds
the inactivity timeout dictated by the server, the client MUST then close the DSO session,
as described above.</t>
  <t>If more than the maximum permissible time has already elapsed since the last
non-keepalive activity on this DSO session, then this DSO session has already been inactive
for longer than the server permits, and the client MUST immediately close this DSO session.</t>
  <t>If more than twice the new maximum permissible time has already elapsed since the last
non-keepalive activity on this DSO session, then this DSO session is eligible to be
forcibly terminated by the server, though if a server abruptly reduces the
inactivity timeout in this way the server SHOULD give the client a grace period
of one quarter of the new inactivity timeout, to give the client time to close
the connection gracefully before the server resorts to terminating it forcibly.</t>
</list></t>

</section>
<section anchor="relation-to-edns0-tcp-keepalive-option" title="Relation to EDNS(0) TCP Keepalive Option">

<t>The inactivity timeout value in the Keepalive TLV (DSO-TYPE=1) has similar
intent to the EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>.
A client/server pair that supports DSO MUST NOT use the
EDNS(0) TCP KeepAlive option within any message after a DSO 
session has been established.
Once a DSO session has been established, if either
client or server receives a DNS message over the DSO session that contains an
EDNS(0) TCP Keepalive option, this is an error and the receiver of the
EDNS(0) TCP Keepalive option MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="delay" title="Retry Delay TLV">

<t>The Retry Delay TLV (DSO-TYPE=0) can be used as an Operation TLV or as
a Modifier TLV.</t>

<t>The TYPE-DEPENDENT DATA for the the Retry Delay TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     RETRY DELAY (32 bits)                     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='RETRY DELAY:'>
  a time value, specified as a 32 bit word in network order in units of 
milliseconds, within which the client MUST NOT retry this operation, or retry 
connecting to this server.</t>
</list></t>

<t>The RECOMMENDED value is 10 seconds.</t>

<section anchor="use-as-an-operation-tlv" title="Use as an Operation TLV">

<t>When sent in a DSO request message, from server to client, the 
Retry Delay TLV (0) is considered an Operation TLV. It is used by a server 
to request that a client close the DSO session and underlying connection, and 
not to reconnect for the indicated time interval.</t>

<t>In this case it applies to the DSO session as a whole, and the client MUST close the 
DSO session, as described in section <xref target="retry"/>. The RCODE in the message header 
MUST indicate the reason for the termination:</t>

<t><list style="symbols">
  <t>NOERROR indicates a routine shutdown.</t>
  <t>SERVFAIL indicates that the server is overloaded due to resource exhaustion.</t>
  <t>REFUSED indicates that the server has been reconfigured and is no longer able 
to perform one or more of the functions 
currently being performed on this DSO session (for example, a DNS Push Notification 
server could be reconfigured such that is is no longer accepting DNS Push 
Notification requests for one or more of the currently subscribed names).</t>
</list></t>

<t>This document specifies only these three RCODE values for Retry Delay request.
Servers sending Retry Delay requests SHOULD use one of these three values.
However, future circumstances may create situations where other RCODE values
are appropriate in Retry Delay requests, so clients MUST be prepared
to accept Retry Delay requests with any RCODE value.</t>

<t>An acknowledgement is not desired for a Retry Delay Operation TLV and the TLV
Acknowledgement bit MUST be cleared in the request.</t>

</section>
<section anchor="use-as-a-modifier-tlv" title="Use as a Modifier TLV">

<t>When appended to a DSO response message for some client request,
the Retry Delay TLV (0) is considered a Modifier TLV.
The indicated time interval during which the client SHOULD NOT retry
applies only to the failed operation, not to the DSO session as a whole.</t>

<t>In the case of a client request that returns a nonzero RCODE value, the server 
MAY append a Retry Delay TLV (0) to the response, indicating the time interval
during which the client SHOULD NOT attempt this operation again.</t>

</section>
</section>
<section anchor="padding" title="Encryption Padding TLV">

<t>The Encryption Padding TLV (DSO-TYPE=2) can only be used as a Modifier TLV.
It is only applicable when the DSO Transport layer uses encryption
such as TLS.</t>

<t>The TYPE-DEPENDENT DATA for the the Padding TLV is optional and is a
variable length field containing non-specified values. A DATA LENGTH
of 0 essentially provides for 4 octets of padding (the minimum amount).</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   /                                                               /
   /                   VARIABLE NUMBER OF OCTETS                   /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t>As in <xref target="RFC7830"/> the PADDING octets SHOULD be set to 0x00.  Other values MAY be used,
for example, in cases where there is a concern that the padded
message could be subject to compression before encryption.
PADDING octets of any value MUST be accepted in the messages received.</t>

<t>The Encryption Padding TLV may be included in either a DSO
request, response, or both. As in <xref target="RFC7830"/> if a request is received with a Encryption
Padding TLV, then the response MUST also include an Encryption Padding TLV.</t>

<t>The length of padding is intentionally not specified in this document and
is a function of current best practices with respect to the type and length
of data in the preceding TLVs. See <xref target="I-D.ietf-dprive-padding-policy"/></t>

</section>
<section anchor="lifecycle" title="DSO Session Lifecycle and Timers">

<section anchor="dso-session-initiation" title="DSO Session Initiation">

<t>A session begins when a client makes a new connection to a server.</t>

<t>A DSO session begin as described in <xref target="establishment"/>.</t>

<t>The client may perform as many DNS operations as it wishes using the
newly created DSO session. Operations SHOULD be pipelined (i.e., the
client doesn’t need wait for a response before sending the next message).
The server MUST act on messages in the order they are transmitted, but
responses to those messages MAY be sent out of order, if appropriate.</t>

</section>
<section anchor="timers" title="Timers">

<t>Two timer values are associated with a DSO session: the inactivity timeout, and the
keepalive interval.</t>

<t>The first timer value, the inactivity timeout, is the maximum time for which
a client may speculatively keep a DSO session open in the expectation that
it may have future requests to send to that server.</t>

<t>The second timer value, the keepalive interval, is the maximum permitted
interval between client messages to the server if the client wishes to keep
the DSO session alive.</t>

<t>The two timer values are independent. The inactivity timeout may be lower, the same,
or higher than the keepalive interval, though in most cases the inactivity timeout is 
expected to be shorter than the keepalive interval.</t>

<t>Only when the client has a very long-lived low-traffic state does the 
keepalive interval timer come into play, to ensure that a sufficient residual
amount of traffic is generated to maintain NAT and firewall state.</t>

<t>On a new DSO session, if no explicit DSO
Keepalive message exchange has taken place, the default value for both timers is 15 seconds.
For both timers, lower values of the timer result in higher network traffic
and higher CPU load on the server.</t>

</section>
<section anchor="inactive-dso-sessions" title="Inactive DSO Sessions">

<t>At both servers and clients, the generation or reception of any complete
DNS message, including DNS requests, responses, updates, or DSO
messages, resets both timers for that DSO session, with the exception
that a DSO Keepalive message resets only the keepalive interval 
timer, not the inactivity timeout timer.</t>

<t>In addition, for as long as the client has an outstanding operation in progress,
the inactivity timeout timer remains conceptually fixed at zero, and an inactivity timeout cannot
occur.</t>

<t>For short-lived DNS operations like traditional queries and updates,
an operation is considered in progress for the time between request and 
response, typically a period of a few hundred milliseconds at most.
At the client, the inactivity timeout timer is cleared upon transmission of a 
request and remains cleared until reception of the corresponding response.
At the server, the inactivity timeout timer is cleared upon reception of a request
and remains cleared until transmission of the corresponding response.</t>

<t>For long-lived DNS Stateful operations, an operation is considered in progress for
as long as the state is active, until it is cancelled.
This means that a DSO session can exist, with a state 
active, with no messages flowing in either direction, for far longer than the 
inactivity timeout, and this is not an error. This is why there are two separate 
timers: the inactivity timeout, and the keepalive interval. Just because a DSO session has 
no traffic for an extended period of time
does not automatically make that DSO session “inactive”, if it has an active state 
that is awaiting for events.</t>

</section>
<section anchor="the-inactivity-timeout" title="The Inactivity Timeout">

<t>The purpose of the inactivity timeout is for the server to balance its trade off 
between the costs of setting up new DSO sessions and the costs of maintaining inactive 
DSO sessions. A server with abundant DSO session capacity can offer a high inactivity timeout, 
to permit clients to keep a speculative DSO session open for a long time, to save 
the cost of establishing a new DSO session for future communications with that 
server. A server with scarce memory resources can offer a low inactivity timeout,
to cause clients to promptly close DSO sessions whenever they have no outstanding
operations with that server, and then create a new DSO session later when needed.</t>

<section anchor="closing-inactive-dso-sessions" title="Closing Inactive DSO Sessions">

<t>A client is NOT required to wait until the inactivity timeout timer expires
before closing a DSO session.
A client MAY close a DSO session at any time, at the client’s discretion.
If a client determines that it has no current or reasonably anticipated
future need for an inactive DSO session, then the client SHOULD close that connection.</t>

<t>If, at any time during the life of the DSO session,
the inactivity timeout value (i.e., 15 seconds by default) elapses
without there being any operation active on the DSO session,
the client MUST gracefully close the connection with a TCP FIN
(or equivalent for other protocols).</t>

<t>If, at any time during the life of the DSO session, twice the inactivity timeout value
(i.e., 30 seconds by default) elapses without there being any operation
active on the DSO session, the server SHOULD consider the client delinquent,
and forcibly abort the DSO session.
For DSO sessions over TCP (or over TLS over TCP),
to avoid the burden of having a connection in TIME-WAIT state, instead of
closing the connection gracefully with a TCP FIN the server SHOULD abort
the connection with a TCP RST (or equivalent for other protocols).
(In the BSD Sockets API this is achieved by setting the
SO_LINGER option to zero before closing the socket.)</t>

<t>In this context, an operation being active on a DSO session includes
a query waiting for a response, an update waiting for a response,
or active state,
but not a DSO Keepalive message exchange itself.
A DSO Keepalive message exchange resets only the keepalive
interval timer, not the inactivity timeout timer.</t>

<t>If the client wishes to keep an inactive DSO session open for longer than
the default duration without having to send traffic every 15 seconds,
then it uses the DSO Keepalive message to request
longer timeout values, as described in <xref target="keepalive"/>.</t>

</section>
<section anchor="values-for-the-inactivity-timeout" title="Values for the Inactivity Timeout">

<t>For the inactivity timeout value, lower values result in more frequent DSO session 
teardown and re-establishment. Higher values result in lower traffic and CPU
load on the server, but a larger memory burden to maintain state for inactive 
DSO sessions.</t>

<t>A shorter inactivity timeout with a longer keepalive interval signals to the client 
that it should not speculatively keep inactive DSO sessions open for very long for no 
reason, but when it does have an active reason to keep a DSO session open, it 
doesn’t need to be sending an agressive level of keepalive traffic.</t>

<t>A longer inactivity timeout with a shorter keepalive interval signals to the client
that it may speculatively keep inactive DSO sessions open for a long time, but it
should be sending a lot of keepalive traffic on those inactive DSO sessions.
This configuration is expected to be less common.</t>

<t>To avoid excessive traffic the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with an inactivity timeout value less than ten seconds.
If a client receives an Keepalive message specifying an inactivity timeout value
less than ten seconds this is an error and the client MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="the-keepalive-interval" title="The Keepalive Interval">

<t>The purpose of the keepalive interval is to manage the generation of
sufficient messages to maintain state in middle-boxes (such at NAT gateways
or firewalls) and for the client and server to periodically verify that they
still have connectivity to each other. This allows them to clean up state
when connectivity is lost, and attempt re-connection if appropriate.</t>

<section anchor="keepalive-interval-expiry" title="Keepalive Interval Expiry">

<t>If, at any time during the life of the DSO session,
the keepalive interval value (i.e., 15 seconds by default) elapses
without any DNS messages being sent or received on a DSO session,
the client MUST take action to keep the DSO session alive.
To keep the DSO session alive the client MUST send a
DSO Keepalive message (see <xref target="keepalive"/>).
A DSO Keepalive message exchange resets only the keepalive
interval timer, not the inactivity timeout timer.</t>

<t>If a client disconnects from the network abruptly,
without cleanly closing its DSO session,
leaving long-lived state uncanceled,
the server learns of this after failing to
receive the required keepalive traffic from that client.
If, at any time during the life of the DSO session,
twice the keepalive interval value (i.e., 30 seconds by default) elapses
without any DNS messages being sent or received on a DSO session,
the server SHOULD consider the client delinquent,
and forcibly abort the connection with a TCP RST (or equivalent for other 
protocols).</t>

</section>
<section anchor="values-for-the-keepalive-interval" title="Values for the Keepalive Interval">

<t>For the keepalive interval value, lower values result in higher volume keepalive 
traffic. Higher values of the keepalive interval reduce traffic and CPU load, 
but have minimal effect on the memory burden
at the server, because clients keep a DSO session open for the same length of time
(determined by the inactivity timeout) regardless of the level of keepalive traffic 
required.</t>

<t>It may be appropriate for clients and servers to select different keepalive 
interval values depending on the nature of the network they are on.</t>

<t>A corporate DNS server that knows it is serving only clients on the internal 
network, with no intervening NAT gateways or firewalls, can impose a higher 
keepalive interval, because frequent keepalive traffic is not required.</t>

<t>A public DNS server that is serving primarily residential consumer clients, 
where it is likely there will be a NAT gateway on the path, may impose a lower 
keepalive interval, to generate more frequent keepalive traffic.</t>

<t>A smart client may be adaptive to its environment. A client using
a private IPv4 address <xref target="RFC1918"/> to communicate with a DNS server
at an address that is not in the same IPv4 private address block,
may conclude that there is likely to be a NAT gateway on the path,
and accordingly request a lower keepalive interval.</t>

<t>For environments where there is a NAT gateway or firewalls on the path, it is
RECOMMENDED that clients request, and servers grant, a keepalive interval of 15
minutes. In other environments it is RECOMMENDED that clients request, and 
servers grant, a keepalive interval of 60 minutes.</t>

<t>Note that the lower the keepalive interval value, the higher the load on client
and server. For example, an keepalive interval value of 100ms would result in a
continuous stream of at least ten messages per second, in both directions,
to keep the DSO session alive. And, in this extreme example, a single packet loss and
retransmission over a long path could introduce a momentary pause in the stream of messages,
long enough to cause the server to overzealously abort the connection.</t>

<t>Because of this concern, the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with an keepalive interval value less than ten seconds.
If a client receives an Keepalive message specifying an keepalive interval value
less than ten seconds this is an error and the client MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="server-initiated-termination-on-error" title="Server-Initiated Termination on Error">

<t>After sending an error response to a client, the server MAY close the DSO session,
or may allow the DSO session to remain open. For error conditions
that only affect the single operation in question, the server SHOULD return an
error response to the client and leave the DSO session open for further operations.
For error conditions that are likely to make all operations unsuccessful in the
immediate future, the server SHOULD return an error response to the client and 
then close the DSO session by sending a Retry Delay request message, as described in 
<xref target="delay"/>.</t>

</section>
<section anchor="client-behaviour-in-receiving-an-error" title="Client Behaviour in Receiving an Error">

<t>Upon receiving an error response from the server, a client SHOULD NOT
automatically close the DSO session. An error relating to one particular operation
on a DSO session does not necessarily imply that all other operations on that
DSO session have also failed, or that future operations will fail. The client
should assume that the server will make its own decision about whether or not to
close the DSO session, based on the server’s determination of whether the error
condition pertains to this particular operation, or would also apply to any
subsequent operations. If the server does not close the DSO session then the client
SHOULD continue to use that DSO session for subsequent operations.</t>

</section>
<section anchor="server-initiated-termination-on-overload" title="Server-Initiated Termination on Overload">

<t>Apart from the cases where:</t>

<t><list style="symbols">
  <t>Session Timer expire (see Section xx)</t>
  <t>On error (see Section xx)</t>
  <t>When under load (see below)</t>
</list></t>

<t>a server MUST NOT close a DSO session with a client, except in extraordinary error 
conditions. Closing the DSO session is the
client’s responsibility, to be done at the client’s discretion, when it so 
chooses. A server only closes a DSO session under exceptional circumstances, such as
when the server application software or underlying operating system is
restarting, the server application terminated unexpectedly (perhaps due to a
bug that makes it crash), or the server is undergoing maintenance procedures.
When possible, a server SHOULD send a Retry Delay message informing the
client of the reason for the DSO session being closed, and allow the client
five seconds to receive it before the server resorts to forcibly aborting the 
connection.</t>

</section>
<section anchor="retry" title="Retry Delay Operation TLV">

<t>There may be rare cases where a server is overloaded and wishes to shed load.
If a server is low on resources it MAY simply terminate a client connection with 
a TCP RST (or equivalent for other protocols).
However, the likely behavior of the client may be simply to to treat this as a
network failure and connect
immediately, putting more burden on the server.</t>

<t>Therefore to avoid this reconnection implosion, a server SHOULD instead choose 
to shed client load by sending a Retry Delay request message, with an RCODE of 
SERVFAIL, to inform the client of the overload situation. After sending a Retry 
Delay request message, the server MUST NOT send any further messages on that 
DSO session.</t>

<t>After sending the Retry Delay request the server SHOULD allow the
client five seconds to close the connection, and if the client has not
closed the connection after five seconds then the server SHOULD abort
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>Upon receipt of a Retry Delay request from the server, the client MUST
make note of the reconnect delay for this server, and then immediately
close the connection. This is to place the burden of TCP’s TIME-WAIT state on 
the client.</t>

<t>A Retry Delay request message MUST NOT be initiated by a client.
If a server receives a Retry Delay request message this is an error
and the server MUST immediately terminate the connection with a TCP RST
(or equivalent for other protocols).</t>

<section anchor="outstanding-operations" title="Outstanding Operations">

<t>At the moment a server chooses to initiate a Retry Delay request message
there may be DNS requests already in flight from client to server on this 
DSO session, which will arrive at the server after its Retry Delay request message 
has been sent.
The server MUST silently ignore such incoming requests, and MUST NOT generate
any response messages for them. When the Retry Delay request message from the
server arrives at the client, the client will determine that any DNS requests
it previously sent on this DSO session, that have not yet received a response, now 
will certainly not be receiving any response. Such requests should be considered
failed, and should be retried at a later time, as appropriate.</t>

<t>In the case where some, but not all, of the existing operations on a DSO session 
have become invalid (perhaps because the server has been reconfigured and is no 
longer authoritative for some of the names),
but the server is terminating all DSO sessions en masse with a REFUSED (5) RCODE,
the RECONNECT DELAY MAY be zero, indicating that the clients SHOULD immediately
attempt to re-establish operations.
It is likely that some of the attempts will be successful and some will not.</t>

<t>In the case where a server is terminating a large number of DSO sessions at once
(e.g., if the system is restarting) and the server doesn’t want to be inundated 
with a flood of simultaneous retries, it SHOULD send different RECONNECT delay 
values to each client.
These adjustments MAY be selected randomly, pseudorandomly, or deterministically
(e.g., incrementing the time value by one tenth of a second for each successive
client, yielding a post-restart reconnection rate of ten clients per second).</t>

</section>
<section anchor="client-reconnection" title="Client Reconnection">

<t>After a DSO session is closed by the server, the client SHOULD try to reconnect,
to that server, or to another suitable server, if more than one is available.
If reconnecting to the same server, the client MUST respect the indicated delay
before attempting to reconnect.</t>

<t>If a particular server does not want a client to reconnect (it is being
de-commissioned), it SHOULD set the retry delay to the maximum value (which is
approximately 497 days). If the server will only be out of service for a maintenance
period, it should use a value closer to the expected maintenance window and
not default to a very large delay value or clients may not attempt to reconnect
after it resumes service.</t>

</section>
</section>
</section>
<section anchor="sharing" title="Connection Sharing">

<t>As in <xref target="RFC7766"/>, to mitigate the risk of unintentional server overload, DNS clients
MUST take care to minimize the number of concurrent TCP connections
made to any individual server.  It is RECOMMENDED that for any given
client/server interaction there SHOULD be no more than one connection
for regular queries, one for zone transfers, and one for each
protocol that is being used on top of TCP (for example, if the
resolver was using TLS).  However, it is noted that certain primary/
secondary configurations with many busy zones might need to use more
than one TCP connection for zone transfers for operational reasons
(for example, to support concurrent transfers of multiple zones).</t>

<t>A single server may support multiple services, including DNS Updates 
<xref target="RFC2136"/>, DNS Push Notifications <xref target="I-D.ietf-dnssd-push"/>,
and other services, for one or more DNS zones.
When a client discovers that the target server for several different operations
is the same target hostname and port, the client SHOULD use a single
shared DSO session for all those operations.
A client SHOULD NOT open multiple connections to the same target host and port
just because the names being operated on are different or
happen to fall within different zones.
This is to reduce unnecessary connection load on the DNS server.</t>

<t>However, server implementers and operators should be aware that connection
sharing may not be possible in all cases.
A single client device may be home to multiple independent client software
instances that don’t coordinate with each other.
Similarly, multiple independent client devices behind the same NAT gateway
will also typically appear to the DNS server as different source ports on
the same client IP address.
Because of these constraints, a DNS server MUST be prepared to accept
multiple connections from different source ports on the same client IP address.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="dso-opcode-registration" title="DSO OPCODE Registration">

<t>IANA are directed to assign a value (tentatively 6)
in the DNS OPCODEs Registry for the DSO OPCODE.</t>

</section>
<section anchor="dso-rcode-registration" title="DSO RCODE Registration">

<t>IANA are directed to assign a value (tentatively 11)
in the DNS RCODE Registry for the DSONOTIMP error code.</t>

</section>
<section anchor="dso-type-codes-registry" title="DSO Type Codes Registry">

<t>IANA are directed to create the DSO Type Codes
Registry, with initial values as follows:</t>

<texttable>
      <ttcol align='right'>Type</ttcol>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Status</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>0x0000</c>
      <c>RetryDelay</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0001</c>
      <c>KeepAlive</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0002</c>
      <c>Encryption Padding</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0003 - 0x003F</c>
      <c>Unassigned, reserved for DSO session management TLVs</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x0040 - 0xF7FF</c>
      <c>Unassigned</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0xF800 - 0xFBFF</c>
      <c>Reserved for local / experimental use</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0xFC00 - 0xFFFF</c>
      <c>Reserved for future expansion</c>
      <c>&#160;</c>
      <c>&#160;</c>
</texttable>

<t>Registration of additional DSO Type Codes requires publication
of an appropriate IETF “Standards Action” or “IESG Approval” document <xref target="RFC5226"/>.</t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>If this mechanism is to be used with DNS over TLS, then these messages
are subject to the same constraints as any other DNS over TLS messages
and MUST NOT be sent in the clear before the TLS session is established.</t>

<t>The data field of the “Encryption Padding” TLV could be used as a covert channel.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to
Tim Chown,
Ralph Droms,
Jan Komissar,
and Manju Shankar Rao
for their helpful contributions to this document.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC1035;
&RFC7766;
&RFC6891;
&RFC7828;
&RFC2119;
&RFC7830;
&RFC1034;
&RFC2136;
&RFC2132;
&RFC1918;
&RFC5226;


    </references>

    <references title='Informative References'>

<reference anchor="NagleDA" target="http://www.stuartcheshire.org/papers/nagledelayedack/">
  <front>
    <title>TCP Performance problems caused by interaction between Nagle's Algorithm and Delayed ACK</title>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization></organization>
    </author>
    <date year="2005" month="May" day="20"/>
  </front>
</reference>
&RFC7858;
&I-D.ietf-dnssd-push;
&RFC0768;
&I-D.ietf-dprive-padding-policy;


    </references>



  </back>

<!-- ##markdown-source:
H4sIAC09rVkAA+1963IbR5bm/3yKXOqHRQ8Ak7rZ1sbGNk1RbnZLopqk3NPz
Z6MAFMiygCp0VYEUWlLEPMjuy82T7LlmnqwqULTb29MxsXKrRQJVeT157ufL
8Xjs2qJd5s/9izcX/qLN2nyxWfqzdV5nbVGVjZtXszJbwQPzOlu04yJvF+N5
2VTrcZM3DTwyboqrMluOD564Obz+3D86OPx2fPA9flCs6+e+rTdN++jg4PuD
Ry6r8+y5Py3bvC7z1t1eUcdnb/2fq/p9UV75H+tqs3bvb+ND4xfYsZtl7XPf
tHO3WWM3zXN//vLYf/vts2cj+unw4PFT52bVHFp57jcwyu/cunjuvB/7tprR
v812VeeLhn+u6pZ+cdmmva5qehL+el+U2PjE/5Avl0VDH/EKnGdb+2FVX8VR
+ott0+arxh/DokHTxWY1gi9nE3o0m07r/Aaevjim3xvoOof5fP/0wB9fZzW0
AYuPn9HXs6LdQnf5/Laq5v4YfuOPqzmM4vjIf//k4Nlj+WhTtjU8/O7iiD5Y
X1clPPQvh/4ZtP3k0WN/CEtPX+WrrFg+93W2/V3RzCYw/HTKFxMYS95cF3Vu
Jn3RbmB86Tc086P1epnHKeqUDuGjRVEWbe5fVdXazOd4A1TVFmXVmczTg8Mn
X5rMk4Pv/PffPvGPHx18ayczk2H9LsPRTGbVKp3THyb+RTEDymqq0kzqD9V1
2fmC5nQBo5tvyrirl/nsuqyW1VWRN8lOypN26vTz2L/OrrJ5tsxLf5zDdHL5
+OzDoqrn/mJW5OUs92+z+r1ZG/7WLMzZvz7xT3486qwLLuvc/xFIfE4zDevw
czb/XcND6i/CxfAiXGR19l9qERqY0O5VOJrAqEqYrFmCIzzMVWm/4CWAoTcw
mFlu28/46cmKnv7dFX7a7+dy4t9uGmBRdWF6uqxW6cfUz7syWyyKZQEfzzsU
//3h9/67Z9/6w8ePk+O7lkZ+N83Kq5+pe1eUMNYVMOybHDfgTXa1zF8c8V60
WX2F5/K6bdfPv/nm9vZ20tCR1qODjOCbdQZns/mmxDfn+TLb5vNs9v4bboEF
xOXxW/82r6kn3Lx1XU2XyPFm2aaBDZluYf4wsmyGgsNP8/Y2h/2nwXzVwFJf
VXXRXq98Vs79C+7DHx3/kSkq8OC7Oc8OVqWC5+DpGP736MC58XgMZApECcNx
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
nguApazVfENhEuJx4awEKPAgr8wZRBdFNs/WPKTkArBp3iJ3oEvtgh33VcOR
ew6PHmvVLkdH+XICiYYNmUHdhR/yqGJuJV7fd092XiV+2V9y+E3JcXtt4nhu
0ICbF7PWhtYU4QcPWasA2vpwvC5N8izSYVBFURryJMqn/RfkHKQlLDkiEKvo
VeDBKkfHxobNzTg/ddrTTXzz6LLsWJoi4rJYWtdzieKHdqtjhFElIZ0k0A1g
/K2wu3BPTCQOdanZVBe9OKYX0Cczi/1UbK+7wbEpAxrg3AxIaxwnSeMuLUJd
ZR+K1WbF3hs6aLQxy2zd0GVgFcG2KKgcj1+dXehkMPQ4D9X4yeErIvircXwQ
b6CkePHCDu1IX1zda1MavCMaU5dRdjlJICJQpbZFt0BF4KfTltPGqs2VAKJx
ZeHuzgnms2TWM/fjsSswooJ63vCaUiIZzJjgnXB9MymqQ6WPZK/x03aifn8/
EYVojKWmYT8hH2ocIW/8XDBdia1iCtimQTvHpX7lLmYCLk5G0VXxiXXu5Oix
JWCq79a2Flsw3AZWXtwg3bQJgpDSpCzVR3Yu/z2W3X2t1XL0RmcZyqocxwP3
pdXAtSfQdoWWv4Oke15OOoZyQqp1zqEXUArUv7cRyel17uIl+zuHjbXwIO12
GQ3DQiERLwwGeJ0LNGJ3XqP0ChUBN+Zlj57yO08RCjANYw/Tq7v/jG0SfDfA
pJ1Q1osa9qSro1/P7qrINM4cbXrwrd28+LA0PbHUXYdbTUK5k7D/ISuCiMPL
4qoQsLoprUTHuh0gDGKvxSKai9m03qxbqttllPmWkFb6zFbGcJvZJlXJvCpu
EtjUjL0xEpDEaiTMJPsrXv4dM7lxEQcPYNVrj+WhXDXrUqPdOn5ERJoBAp8l
jFW6flJgHUjRDt4A1iXP82UoF7orvVBT8HbwRJHzKe9PotKEKMvZw3RXSRkA
7e6d1TgJkMnfKKnjvSUWzZaJJVg/UtLdS5w8MjdkaAkcWkgq1thCZ67s7GGk
Q2ggrydDEZWhB0kD4fiMuyvFweYAhlujUi9eZq6KzcodSaGVwIqE3IbS9ypq
wp1FQ0tkm/l/XVLjHiRYJpz7wAAmAkPS+TZSFoxY4r0UQsmaoUx/+NhlSSK0
Jip8KfDQ7fj/hx7wz/nJ5flf/IuTV0d/ucvL/xs7+k2v6DLOmDsKllfPGeyH
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
EAmDgWPup9nsvfu/lgNcQZLoAAA=

-->

</rfc>

