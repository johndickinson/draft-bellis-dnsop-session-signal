<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.7 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC7766 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7766.xml">
<!ENTITY RFC6891 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6891.xml">
<!ENTITY RFC7828 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7828.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC7830 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7830.xml">
<!ENTITY RFC1034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC2136 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2136.xml">
<!ENTITY RFC1918 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1918.xml">
<!ENTITY RFC5382 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5382.xml">
<!ENTITY RFC2132 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2132.xml">
<!ENTITY RFC5226 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5226.xml">
<!ENTITY RFC7858 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7858.xml">
<!ENTITY RFC6763 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6763.xml">
<!ENTITY I-D.ietf-dnssd-push SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dnssd-push.xml">
<!ENTITY RFC0768 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.0768.xml">
<!ENTITY I-D.sctl-dnssd-mdns-relay SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.sctl-dnssd-mdns-relay.xml">
<!ENTITY RFC1122 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1122.xml">
<!ENTITY I-D.ietf-dprive-padding-policy SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dprive-padding-policy.xml">
]>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-dnsop-session-signal-05" category="std" updates="RFC 7766, RFC 1035">

  <front>
    <title>DNS Stateful Operations</title>

    <author initials="R." surname="Bellis" fullname="Ray Bellis">
      <organization abbrev="ISC">Internet Systems Consortium, Inc.</organization>
      <address>
        <postal>
          <street>950 Charter Street</street>
          <city>Redwood City</city>
          <code>CA 94063</code>
          <country>USA</country>
        </postal>
        <phone>+1 650 423 1200</phone>
        <email>ray@isc.org</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>1 Infinite Loop</street>
          <city>Cupertino</city>
          <code>CA 95014</code>
          <country>USA</country>
        </postal>
        <phone>+1 408 974 3207</phone>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="J." surname="Dickinson" fullname="John Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>jad@sinodun.com</email>
      </address>
    </author>
    <author initials="S." surname="Dickinson" fullname="Sara Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>sara@sinodun.com</email>
      </address>
    </author>
    <author initials="A." surname="Mankin" fullname="Allison Mankin">
      <organization>Salesforce</organization>
      <address>
        <email>allison.mankin@gmail.com</email>
      </address>
    </author>
    <author initials="T." surname="Pusateri" fullname="Tom Pusateri">
      <organization>Unaffiliated</organization>
      <address>
        <postal>
          <street></street>
          <city>Raleigh</city>
          <code>NC 27608</code>
          <country>USA</country>
        </postal>
        <phone>+1 919 867 1330</phone>
        <email>pusateri@bangj.com</email>
      </address>
    </author>

    <date year="2017" month="November" day="30"/>

    <area>Internet</area>
    <workgroup>DNSOP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document defines a new DNS OPCODE for DNS Stateful Operations (DSO).
DSO messages communicate operations within persistent
stateful sessions, using type-length-value (TLV) syntax.
Three TLVs are defined that manage session timeouts,
termination, and encryption padding, and 
a framework is defined for extensions to enable new stateful operations.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The use of transports for DNS other than UDP is being increasingly specified,
for example, DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> and DNS over TLS <xref target="RFC7858"/>.
Such transports can offer persistent, long-lived sessions and therefore when
using them for transporting DNS messages it is of benefit to have a mechanism
that can establish parameters associated with those sessions, such as timeouts.
In such situations it is also advantageous to support server initiated messages.</t>

<t>The existing EDNS(0) Extension Mechanism for DNS <xref target="RFC6891"/> is explicitly
defined to only have “per-message” semantics. Whilst EDNS(0) has been used to
signal at least one session-related parameter (the EDNS(0) TCP Keepalive option
<xref target="RFC7828"/>) the result is less than optimal due to the restrictions
imposed by the EDNS(0) semantics and the lack of server-initiated signalling. 
For example, a server cannot arbitrarily 
instruct a client to close a connection because the server can only send EDNS(0) options 
in responses to queries that contained EDNS(0) options.</t>

<t>This document defines a new DNS OPCODE, DSO (tentatively 6), for DNS Stateful Operations.
DSO messages are used to communicate operations within persistent
stateful sessions, expressed using type-length-value (TLV) syntax.
This document defines an initial set of three TLVs,
used to manage session timeouts, termination, and encryption padding.</t>

<t>All three of the TLVs defined here are mandatory for all implementations of DSO.
Further TLVs may be defined in additional specifications.</t>

<t>The format for DSO messages
(see <xref target="format"/>) differs somewhat from the traditional DNS message
format used for standard queries and responses.
The standard twelve-octet header is used, but the four count fields
(QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) are set to zero and accordingly their
corresponding sections are not present.
The actual data pertaining to DNS Stateful Operations
(expressed in TLV syntax) is appended to the end of the DNS message header.
When displayed using packet analyzer tools that have not been
updated to recognize the DSO format, this
will result in the DSO data being displayed
as unknown additional data after the end of the DNS message.
It is likely that future updates to these tools will add the ability
to recognize, decode, and display the DSO data.</t>

<t>This new format has distinct advantages over an RR-based format because it
is more explicit and more compact. Each TLV definition is specific
to its use case, and as a result contains no redundant or overloaded fields.
Importantly, it completely avoids conflating DNS Stateful Operations in any way 
with normal DNS operations or with existing EDNS(0)-based functionality.
A goal of this approach is to avoid the operational issues that have
befallen EDNS(0), particularly relating to middlebox behaviour.</t>

<t>With EDNS(0), multiple options may be packed into a single OPT pseudo-RR,
and there is no generalized mechanism for a client to be able to tell
whether a server has processed or otherwise acted upon each individual
option within the combined OPT RR.
The specifications for each individual option need to define how each
different option is to be acknowledged, if necessary.</t>

<t>In contrast to EDNS(0), with DSO there is no
compelling motivation to pack multiple operations into a single
message for efficiency reasons, because DSO
always operates using a connection-oriented transport protocol.
Each Stateful operation is communicated in its own separate
DNS message, and the transport protocol can take care of packing
separate DNS messages into a single IP packet if appropriate.
For example, TCP can pack multiple small DNS messages into a single TCP segment.
This simplification allows for clearer semantics.
Each DSO request message communicates just one primary operation,
and the RCODE in the corresponding response message indicates the
success or failure of that operation.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="terminology" title="Terminology">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and
“OPTIONAL” in this document are to be interpreted as described in
“Key words for use in RFCs to Indicate Requirement Levels” <xref target="RFC2119"/>.</t>

<t>“DSO” is used to mean DNS Stateful Operation.</t>

<t>The term “connection” means a bidirectional byte stream of reliable,
in-order messages, such as provided by using
DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> or DNS over TLS <xref target="RFC7858"/>.</t>

<t>The unqualified term “session” in the context of this document means the exchange of
DNS messages over a connection where:</t>

<t><list style="symbols">
  <t>The connection between client and server is persistent and relatively
long-lived (i.e., minutes or hours, rather than seconds).</t>
  <t>Either end of the connection may initiate messages to the other.</t>
</list></t>

<t>A “DSO Session” is established between two endpoints that
acknowledge persistent DNS state via the exchange of DSO messages
over the connection. This is distinct from a DNS-over-TCP session
as described in RC7766.</t>

<t>A “DSO Session” is terminated when the underlying connection is closed.
The underlying connection can be closed in two ways.</t>

<t>Where this specification says, “close gracefully,”
that means sending a TLS close_notify followed by a TCP FIN,
or the equivalents for other protocols.</t>

<t>Where this specification says, “forcibly abort,”
that means sending a TCP RST,
or the equivalent for other protocols.
In the BSD Sockets API this is achieved by setting the
SO_LINGER option to zero before closing the socket.</t>

<t>The term “server” means the software with a listening socket, awaiting
incoming connection requests.</t>

<t>The term “client” means the software which initiates a connection
to the server’s listening socket.</t>

<t>The terms “initiator” and “responder” correspond respectively to the
initial sender and subsequent receiver of a DSO request message,
regardless of which was the “client” and “server” in the usual DNS sense.</t>

<t>The term “sender” may apply to
either an initiator (when sending a DSO request message)
or a responder (when sending a DSO response message).</t>

<t>Likewise, the term “receiver” may apply to
either a responder (when receiving a DSO request message)
or an initiator (when receiving a DSO response message).</t>

<t>DNS Stateful Operations uses “DSO request messages” and “DSO response messages”.
DSO request messages are further subdivided into two variants,
“acknowledged request messages”
(which generate a corresponding response message) and
“unacknowledged request messages”
(which do not generate any corresponding response message).</t>

<t>The content of DSO messages is expressed using type-length-value (TLV) syntax.</t>

<t>In a DSO request message the first TLV is referred to as the “Primary TLV”
and determines the nature of the operation being performed,
including whether it is an acknowledged or unacknowledged operation;
any other TLVs in a DSO request message are referred to as “Additional TLVs”
and serve as modifiers affecting the primary operation.</t>

<t>A DSO response message may contain no TLVs, or it may contain one
or more TLVs as appropriate to the information being communicated.
In the context of DSO response messages,
one or more TLVs with the same DSO-TYPE as the Primary TLV in the
corresponding DSO request message are referred to as “Response TLVs”.
Any other TLVs with different DSO-TYPEs are referred to as “Extra TLVs”.
The Response TLV(s), if present, MUST occur first in the response message,
before any Extra TLVs.</t>

<t>Two timers (elapsed time since an event) are defined in this document:</t>

<t><list style="symbols">
  <t>an inactivity timer (see <xref target="keepalive"/> and <xref target="inactivetimer"/>)</t>
  <t>a keepalive timer (see <xref target="keepalive"/> and <xref target="keepalivetimer"/>)</t>
</list></t>

<t>The timeouts associated with these timers are called the inactivity timeout and 
the keepalive interval respectively. 
The term “Session Timeouts” is used to refer to this pair of timeout values.</t>

<t>Resetting a timer means resetting the timer value to zero and starting the timer again.
Clearing a timer means resetting the timer value to zero but NOT starting the timer again.</t>

</section>
<section anchor="discussion" title="Discussion">

<t>There are several use cases for DNS Stateful operations that can 
be described here.</t>

<t>Firstly, establishing session parameters such as server-defined timeouts is of 
great use in the 
general management of persistent connections. For example, using DSO sessions 
for stub to recursive DNS-over-TLS <xref target="RFC7858"/> is more flexible for both the 
client and the server than attempting to manage sessions using just the EDNS(0)
TCP Keepalive option
<xref target="RFC7828"/>. The simple set of TLVs defined in this document is
sufficient to greatly enhance connection management for this use case.</t>

<t>Secondly, DNS-SD <xref target="RFC6763"/> has evolved into a naturally session based mechanism where,
for example, long-lived subscriptions lend themselves to ‘push’ mechanisms as 
opposed to polling. Long-lived stateful connections and server initiated 
messages align with this use case <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>A general use case is that DNS traffic is often bursty but session establishment 
can be expensive. One challenge with long-lived connections is to maintain 
sufficient traffic to maintain NAT and firewall state.
To mitigate this issue this document introduces a
new concept for the DNS, that is DSO “Keepalive traffic”.
This traffic carries no DNS data and is not considered ‘activity’
in the classic DNS sense, but serves to maintain state in middleboxes,
and to assure client and server that they still have connectivity to each other.</t>

<t>There are a myriad of other potential use cases for DSO given the versatility 
and extensibility of this specification.</t>

<t><xref target="details"/> of this document describes the protocol details of DNS Stateful Operations
including definitions of three TLVs for session management and encryption padding.
<xref target="lifecycle"/> presents a detailed discussion of the DSO Session lifecycle
including an in-depth discussion of keepalive traffic and session termination.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="details" title="Protocol Details">

<section anchor="establishment" title="DSO Session Establishment">

<t>DSO messages MUST only be carried in protocols and in
environments where a session may be established according to the definition above.
Standard DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/>, and DNS over TLS <xref target="RFC7858"/>
are suitable protocols.</t>

<t>DNS over plain UDP <xref target="RFC0768"/> is not appropriate since it fails on the requirement for
in-order message delivery, and, in the presence of NAT gateways and firewalls
with short UDP timeouts, it fails to provide a persistent bi-directional
communication channel unless an excessive amount of keepalive traffic is used.</t>

<t>In some environments it may be known in advance by external means
that both client and server support DSO, and in these cases either
client or server may initiate DSO messages at any time.</t>

<t>However, in the typical case a server will not know in advance whether a
client supports DSO, so in general, unless it is known in advance by other means
that a client does support DSO, a server MUST NOT initiate DSO request messages
until a DSO Session has been mutually established, as described below.
Similarly, unless it is known in advance by other means that a server
does support DSO, a client MUST NOT initiate non-response-requiring
DSO request messages until after a DSO Session has been mutually established.</t>

<t>Whether or not a given DSO request message elicits a response is
determined by whether or not the first DSO TLV (see <xref target="tlvsyntax"/>)
in the message (the Primary TLV) is one that is specified to generate a response.
Whether a Primary TLV will be specified to elicit a response will depend
on the intended use pattern for that particular TLV.</t>

<t>A DSO Session is established over a connection by the client
sending a DSO request message of a kind that requires a response,
such as the DSO Keepalive TLV (see <xref target="keepalive"/>),
and receiving a response, with matching MESSAGE ID, and RCODE
set to NOERROR (0), indicating that the DSO request was successful.</t>

<t>If the RCODE is set to DSONOTIMP (tentatively 11) this indicates
that the server does support DSO, but does not support the particular
operation the client requested.
A server MUST NOT return DSONOTIMP for the DSO Keepalive TLV,
but this could happen in the future, if a client attempts to
establish a DSO Session using a future response-requiring DSO TLV
which the server does not understand.
If the server returns DSONOTIMP then a DSO Session is not
considered established, but the client is permitted to continue
sending DNS messages on the connection,
including other response-requiring DSO messages such as the DSO Keepalive,
which may result in a successful NOERROR response,
yielding the establishment of a DSO Session.</t>

<t>If the RCODE is set to any value other than NOERROR (0) or DSONOTIMP
(tentatively 11), then the client should assume that the server does
not support DSO. In this case the client is permitted to continue
sending DNS messages on that connection, but the client SHOULD NOT
issue further DSO messages on that connection.</t>

<t>When the server receives a response-requiring DSO request message
from a client, and transmits a sucessful NOERROR response to that
request, the server considers the DSO Session established.</t>

<t>When the client receives the server’s NOERROR response to its
DSO request message, the client considers the DSO Session established.</t>

<t>Once a DSO Session has been established,
either end may unilaterally send DSO messages at any time,
and therefore either client or server may be the initiator of a message.</t>

<t>Once a DSO Session has been established,
clients and servers should behave as described in this specification with
regard to inactivity timeouts and connection close, not as prescribed in
the previous specification for DNS over TCP <xref target="RFC7766"/>.</t>

<t><vspace blankLines='999' /></t>

<section anchor="middlebox-considerations" title="Middlebox Considerations">

<t>Where an application-layer middlebox (e.g., a DNS proxy, forwarder, or
session multiplexer) is in the path the middlebox MUST NOT blindly
forward DSO messages in either direction, and MUST treat the inbound
and outbound connections as separate sessions.  This does not preclude
the use of DSO messages in the presence of an IP-layer middlebox, such
as a NAT that rewrites IP-layer and/or transport-layer headers but
otherwise preserves the effect of a single session between the client
and the server.</t>

<t>To illustrate the above, consider a network where a middlebox
terminates one or more TCP connections from clients and multiplexes the
queries therein over a single TCP connection to an upstream server.  The
DSO messages and any associated state are specific to the individual
TCP connections.  A DSO-aware middlebox MAY in some circumstances be
able to retain associated state and pass it between the client and
server (or vice versa) but this would be highly TLV-specific.  For
example, the middlebox may be able to maintain a list of which clients
have made Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/> and
make its own subscription(s) on their behalf, relaying any subsequent
notifications to the client (or clients) that have subscribed to that
particular notification.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="format" title="Message Format">

<t>A DSO message begins with
the standard twelve-octet DNS message header <xref target="RFC1035"/>
with the OPCODE field set to the DSO OPCODE (tentatively 6).
However, unlike standard DNS messages, the question section, answer section,
authority records section and additional records sections are not present.
The corresponding count fields (QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) MUST be
set to zero on transmission.</t>

<t>If a DSO message is received where any of the count fields are
not zero, then a FORMERR MUST be returned,
unless a future document specifies otherwise.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                          MESSAGE ID                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |QR |    OPCODE     |            Z              |     RCODE     |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     QDCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ANCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     NSCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ARCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                           DSO Data                            /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><vspace blankLines='999' /></t>

<section anchor="header" title="Header">

<t>In an unacknowledged request message the MESSAGE ID field MUST be set to zero.
In an acknowledged request message the MESSAGE ID field MUST
be set to a unique nonzero value, that the initiator is not
currently using for any other active operation on this connection.
For the purposes here, a MESSAGE ID is in use in this DSO Session if the
initiator has used it in a request for which it is still awaiting a response,
or if the client has used it to setup state that has not yet been deleted.
For example, state could be a Push Notification subscription <xref target="I-D.ietf-dnssd-push"/>
or a Discovery Relay interface subscription <xref target="I-D.sctl-dnssd-mdns-relay"/>.</t>

<t>Whether a message is acknowledged or unacknowledged is
determined only by the specification for the Primary TLV.
An acknowledgment cannot be requested by including a nonzero message ID
in a message the primary TLV of which is specified to be unacknowledged,
nor can an acknowledgment be prevented by sending a message ID of zero
in a message with a primary TLV that is specified to be acknowledged.
A responder that receives either such malformed message MUST treat it
as a programming error and terminate the connection.</t>

<t>In a request message the DNS Header QR bit MUST be zero (QR=0).<vspace />
If the QR bit is not zero the message is not a request message.</t>

<t>In a response message the DNS Header QR bit MUST be one (QR=1).<vspace />
If the QR bit is not one the message is not a response message.</t>

<t>In a response message (QR=1) the MESSAGE ID field MUST contain a copy of the value of
the MESSAGE ID field in the acknowledged request message being responded to.
In a response message (QR=1) the MESSAGE ID field MUST NOT be zero.
If a response message (QR=1) is received where the MESSAGE ID is zero
this is a fatal error and the receiver MUST forcibly abort the connection immediately.</t>

<t>The DNS Header OPCODE field holds the DSO OPCODE value (tentatively 6).</t>

<t>The Z bits are currently unused in DSO messages,
and in both DSO requests and DSO responses the
Z bits MUST be set to zero (0) on transmission and MUST be silently ignored
on reception, unless a future document specifies otherwise.</t>

<t>In a request message (QR=0) the RCODE is generally set to zero on transmission,
and silently ignored on reception, except where specified otherwise
(for example, the Retry Delay request message (see <xref target="retry"/>),
where the RCODE indicates the reason for termination).</t>

<t><vspace blankLines='999' /></t>

<t>The RCODE value in a response message (QR=1) may be one of the following values:</t>

<texttable>
      <ttcol align='right'>Code</ttcol>
      <ttcol align='left'>Mnemonic</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>0</c>
      <c>NOERROR</c>
      <c>Operation processed successfully</c>
      <c>1</c>
      <c>FORMERR</c>
      <c>Format error</c>
      <c>2</c>
      <c>SERVFAIL</c>
      <c>Server failed to process request due to a problem with the server</c>
      <c>3</c>
      <c>NXDOMAIN</c>
      <c>Name Error — Named entity does not exist (TLV-dependent)</c>
      <c>4</c>
      <c>NOTIMP</c>
      <c>DSO not supported</c>
      <c>5</c>
      <c>REFUSED</c>
      <c>Operation declined for policy reasons</c>
      <c>9</c>
      <c>NOTAUTH</c>
      <c>Not Authoritative (TLV-dependent)</c>
      <c>11</c>
      <c>DSONOTIMP</c>
      <c>DSO type code not supported</c>
</texttable>

<t>Use of the above RCODEs is likely to be common in DSO but 
does not preclude the definition and use of other codes in future documents that 
make use of DSO.</t>

<t>If a document defining a new DSO TLV makes use of NXDOMAIN (Name Error)
or NOTAUTH (Not Authoritative) then that document MUST specify the specific
interpretation of these RCODE values in the context of that new DSO TLV.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="dsodata" title="DSO Data">

<t>The standard twelve-octet DNS message header with its
zero-valued count fields is followed by the DSO Data,
expressed using TLV syntax, as described below <xref target="tlvsyntax"/>.</t>

<t>A DSO message may be either a request message or a response message,
as indicated by the QR bit in the DNS message header.
DSO request messages are further subdivided into two variants,
acknowledged request messages
(which generate a corresponding response message)
and unacknowledged request messages
(which do not generate any corresponding response message).</t>

<t>A DSO request message MUST contain at least one TLV.
The first TLV in a DSO request message is referred to as the “Primary TLV”
and determines the nature of the operation being performed,
including whether it is an acknowledged or unacknowledged operation.
In some cases it may be appropriate to include other TLVs in a request message,
such as the Encryption Padding TLV (<xref target="padding"/>),
and these extra TLVs are referred to as the “Additional TLVs”.</t>

<t>A DSO response message may contain no TLVs,
or it may be specified to contain one or more TLVs
appropriate to the information being communicated.</t>

<t>A DSO response message may contain one or more TLVs with
DSO-TYPE the same as the Primary TLV from the corresponding DSO request message,
in which case those TLV(s) are referred to as “Response TLVs”.
A DSO response message is not required to carry Response TLVs.
The MESSAGE ID field in the DNS message header is sufficient to identify
to which DSO request message this response message relates.</t>

<t>A DSO response message may contain one or more TLVs with
DSO-TYPEs different from the Primary TLV from the corresponding DSO request message,
in which case those TLV(s) are referred to as “Extra TLVs”.</t>

<t>Response TLV(s), if present, MUST occur first in the response message,
before any Extra TLVs.</t>

<t>It is anticipated that by default most DSO request messages will be specified
to be acknowledged request messages, which generate corresponding responses.
In some specialized high-traffic use cases,
it may be appropriate to specify unacknowledged request messages.
Unacknowledged request messages can be more efficient on the network,
because they don’t generate a stream of corresponding reply messages.
Using unacknowledged request messages can also simplify software
in some cases, by removing need for an initiator to maintain
state while it waits to receive replies it doesn’t care about.
When the specification for a particular TLV states that,
when used as a Primary TLV (i.e., first) in a request message,
that request message is to be unacknowledged,
the MESSAGE ID field MUST be set to zero and
the receiver MUST NOT generate any response message
corresponding to this unacknowledged request message.</t>

<t>The previous point, that the receiver MUST NOT generate responses to
unacknowledged request messages, applies even in the case of errors.
When a DSO request message is received with the MESSAGE ID field
set to zero, the receiver MUST NOT generate any response.
For example, if the DSO-TYPE in the Primary TLV is unrecognized,
then a DSNOTIMP error MUST NOT be returned; instead the receiver
MUST forcibly abort the connection immediately.</t>

<t>Unacknowledged request messages MUST NOT be used “speculatively”
in cases where the sender doesn’t know if the receiver supports
the Primary TLV in the message, because there is no way to receive
any response to indicate success or failure of the request message
(the request message does not contain a unique MESSAGE ID with
which to associate a response with its corresponding request).
Unacknowledged request messages are only appropriate in cases where
the sender already knows that the receiver supports and wishes to
receive these messages.</t>

<t>For example, after a client has subscribed for Push Notifications
<xref target="I-D.ietf-dnssd-push"/>, the subsequent event notifications are
then sent as unacknowledged messages, and this is appropriate
because the client initiated the message stream by virtue of its
Push Notification subscription, thereby indicating its support of
Push Notifications, and its desire to receive those notifications.</t>

<t>After an mDNS Relay client has subscribed to receive inbound mDNS
traffic from an mDNS Relay, the subsequent stream of received
packets is then sent using unacknowledged messages, and this
is appropriate because the client initiated the message stream
by virtue of its mDNS Relay link subscription, thereby indicating
its support of mDNS Relay, and its desire to receive inbound mDNS
packets over that DSO session <xref target="I-D.sctl-dnssd-mdns-relay"/>.</t>

<t><vspace blankLines='999' /></t>

<section anchor="tlvsyntax" title="TLV Syntax">

<t>All TLVs, whether used as “Primary”, “Additional”, or in responses,
use the same encoding syntax.</t>

<t>The specification for a TLV determines whether,
when used as the Primary (i.e., first) TLV in a request message,
that request message is to be acknowledged.
If the request message is to be acknowledged, the specification
also states which TLVs, if any, are to be included in the response.
The Primary TLV may or may not be contained in the response,
depending on what is stated in the specification for that TLV.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                            DSO-TYPE                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                        DSO DATA LENGTH                        |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                      TYPE-DEPENDENT DATA                      /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='DSO-TYPE:'>
  A 16-bit unsigned integer in network (big endian) byte order
giving the type of the current DSO TLV per the IANA DSO Type Code Registry.</t>
  <t hangText='DSO DATA LENGTH:'>
  A 16-bit unsigned integer in network (big endian) byte order
giving the size in octets of the TYPE-DEPENDENT DATA.</t>
  <t hangText='TYPE-DEPENDENT DATA:'>
  Type-code specific format.</t>
</list></t>

<t>Where domain names appear within TYPE-DEPENDENT DATA, they MAY<vspace />
be compressed using standard DNS name compression <xref target="RFC1035"/>.<vspace />
However, the compression offsets MUST be relative to
the start of the TYPE-DEPENDENT DATA and MUST NOT
extend beyond the end of the TYPE-DEPENDENT DATA.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="primary-tlv" title="Primary TLV">

<t>The Primary (first) TLV in a DSO request message indicates the operation to be performed.
A DSO request message MUST contain at at least one TLV, the Primary TLV.</t>

</section>
<section anchor="additional-tlvs" title="Additional TLVs">

<t>An “Additional TLV” specifies additional parameters
relating to the operation. Immediately following the Primary TLV
a DSO request message MAY contain one or more Additional TLVs.</t>

</section>
<section anchor="response-tlvs" title="Response TLVs">

<t>Depending on the operation, a DSO response message MAY contain no TLVs,
because it is simply a response to a previous request message, and the
MESSAGE ID in the header is sufficient to identify the request in question.
Or it may contain a single response TLV, with the same DSO-TYPE as the
Primary TLV in the request message.
Alternatively it may contain one or more TLVs of other
types, or a combination of the above, as appropriate
for the information that needs to be communicated.
The specification for each DSO TLV determines
what TLVs are required in a response to a request using that TLV.</t>

<t>If a DSO response is received for an operation where the specification
requires that the response carry a particular TLV or TLVs,
and the required TLV(s) are not present, then this is a fatal
error and the recipient of the defective response message MUST
forcibly abort the connection immediately.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="unrecognized-tlvs" title="Unrecognized TLVs">

<t>If DSO request is received containing an unrecognized Primary TLV,
with a nonzero MESSAGE ID (indicating that a response is expected),
then the receiver MUST send a response with matching MESSAGE ID,
and RCODE DSONOTIMP (tentatively 11).
The response MUST NOT contain a copy of the unrecognized Primary TLV.</t>

<t>If DSO request is received containing an unrecognized Primary TLV,
with a zero MESSAGE ID (indicating that no response is expected),
the receiver MUST silently ignore the message. A response MUST NOT be sent.</t>

<t>If a DSO request message is received where the Primary TLV is recognized,
containing one or more unrecognized Additional TLVs, the unrecognized
Additional TLVs MUST be silently ignored, and the remainder of the message
is interpreted and handled as if the unrecognized parts were not present.</t>

<t>Similarly, if a DSO response message is received containing one
or more unrecognized TLVs, the unrecognized TLVs MUST be silently
ignored, and the remainder of the message is interpreted and
handled as if the unrecognized parts were not present.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="edns0-and-tsig" title="EDNS(0) and TSIG">

<t>Since the ARCOUNT field MUST be zero, a DSO message
MUST NOT contain an EDNS(0) option in the additional records section.
If functionality provided by current or future EDNS(0) options
is desired for DSO messages, one or more new DSO TLVs
need to be defined to carry the necessary information.</t>

<t>For example, the EDNS(0) Padding Option <xref target="RFC7830"/> used for security purposes
is not permitted in a DSO message,
so if message padding is desired for DSO messages
then the Encryption Padding TLV described in <xref target="padding"/> MUST be used.</t>

<t>Similarly, a DSO message MUST NOT contain a TSIG record.
A TSIG record in a conventional DNS message is added as the last record
in the additional records section, and carries a signature computed over
the preceding message content. Since DSO data appears
after the additional records section, it would not be included in the
signature calculation. 
If use of signatures with DSO messages becomes necessary in the 
future, a new DSO TLV needs to be defined to perform this function.</t>

<t>Note however that, while DSO <spanx style="strong">messages</spanx> cannot include
EDNS(0) or TSIG records, a DSO <spanx style="strong">session</spanx> is typically used to 
carry a whole series of DNS messages of different kinds, including DSO
messages, and other DNS message types like Query <xref target="RFC1034"/> 
<xref target="RFC1035"/> and Update <xref target="RFC2136"/>, and those messages can carry EDNS(0) and 
TSIG records.</t>

<t>This specification explicitly prohibits use of the
EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>
in <spanx style="strong">any</spanx> messages sent on a DSO Session (because it is obsoleted by
the functionality provided by the DSO Keepalive operation),
but messages may contain other EDNS(0) options as appropriate.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="message-handling" title="Message Handling">

<t>The initiator MUST set the value of the QR bit in the DNS header to
zero (0), and the responder MUST set it to one (1).
Every DSO request message (QR=0) with a nonzero MESSAGE ID field
MUST elicit a corresponding response (QR=1), which MUST have the same
MESSAGE ID in the DNS message header as in the corresponding request.
DSO request messages sent by the client with a nonzero MESSAGE ID field
elicit a response from the server, and
DSO request messages sent by the server with a nonzero MESSAGE ID field
elicit a response from the client.</t>

<t>A DSO request message (QR=0) with a zero MESSAGE ID field MUST NOT elicit a response.</t>

<t>The namespaces of 16-bit MESSAGE IDs are disjoint in each direction.
For example, it is <spanx style="strong">not</spanx> an error for both client and server to send a request
message with the same ID. In effect, the 16-bit MESSAGE ID combined with the 
identity of the initiator (client or server) serves as a 17-bit unique 
identifier for a particular operation on a DSO Session.</t>

<t>As described in <xref target="header"/> An initiator MUST NOT reuse a MESSAGE ID that is 
already in use for an 
outstanding request, unless specified otherwise by the relevant specification 
for the DSO in question. At the very least, this means 
that a MESSAGE ID MUST NOT be reused in a particular direction
on a particular DSO Session while the initiator is waiting for a response to a 
previous request using that MESSAGE ID on that DSO Session,
unless specified otherwise by the relevant 
specification for the DSO in question.
(For a long-lived state the MESSAGE ID for the operation
MUST NOT be reused whilst that state remains active.)</t>

<t>If a client or server receives a response (QR=1) where the MESSAGE ID is zero,
or any other value that does not match the MESSAGE ID of any of its outstanding operations,
this is a fatal error and the recipient MUST forcibly abort the connection immediately.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="dso-response-generation" title="DSO Response Generation">

<t>With most TCP implementations, for DSO requests that generate a response,
the TCP data acknowledgement (generated because data has been received by TCP),
the TCP window update (generated because TCP has delivered that data to the receiving software),
and the DSO response (generated by the receiving application-layer software itself)
are all combined into a single IP packet.
Combining these three elements into a single IP packet gives a
potentially significant improvement in network efficiency.</t>

<t>For DSO requests that do not generate a response,
the TCP implementation generally doesn’t have any way to know
that no response will be forthcoming, so it waits fruitlessly
for the application-layer software to generate a response,
until the Delayed ACK timer fires <xref target="RFC1122"/> (typically 200 milliseconds)
and only then does it send the TCP ack and window update.
In conjunction with Nagle’s Algorithm at the sender,
this can delay the sender’s transmission of its next
(non-full-sized) TCP segment, while the sender is waiting for
its previous (non-full-sized) TCP segment to be acknowledged,
which won’t happen until the Delayed ACK timer fires.
Nagle’s Algorithm exists to combine multiple small
application writes into more efficient large TCP segments,
to guard against wasteful use of the network by applications
that would otherwise transmit a stream of small TCP segments,
but in this case Nagle’s Algorithm (created to improve network efficiency)
can interact badly with TCP’s Delayed ACK feature
(also created to improve network efficiency) <xref target="NagleDA"/>
with the result of delaying some messages by up to 200 milliseconds.</t>

<t>Possible mitigations for this problem include:</t>

<t><list style="symbols">
  <t>Disabling Nagle’s Algorithm at the sender.<vspace />
This is not great, because it results<vspace />
in less efficient use of the network.</t>
  <t>Disabling Delayed ACK at the receiver.<vspace />
This is not great, because it results<vspace />
in less efficient use of the network.</t>
  <t>Using a networking API that lets the receiver signal to the TCP
implementation that the receiver has received and processed a client
request for which it will not be generating any immediate response.
This allows the TCP implementation to operate efficiently in both cases;
for requests that generate a response, the TCP ack, window update, and
DSO response are transmitted together in a single TCP segment,
and for requests that do not generate a response,
the application-layer software informs the TCP implementation
that it should go ahead and send the TCP ack and window update
immediately, without waiting for the Delayed ACK timer.
Unfortunately it is not known at this time which (if any) of the
widely-available networking APIs currently include this capability.</t>
</list></t>

</section>
<section anchor="cancellation" title="Responder-Initiated Operation Cancellation">

<t>This document, the base specification for DNS Stateful Operations,
does not itself define any long-lived operations,
but it defines a framework for supporting long-lived operations
such as Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/>
and Discovery Relay interface subscriptions <xref target="I-D.sctl-dnssd-mdns-relay"/>.</t>

<t>Generally speaking, a long-lived operation is initiated by the initiator,
and, if successful, remains active until the initiator terminates the operation.</t>

<t>However, it is possible that a long-lived operation may be valid
at the time it was initiated, but then a later change of circumstances
may render that previously valid operation invalid.</t>

<t>For example, a long-lived client operation may pertain to a name
that the server is authoritative for, but then the server configuration
is changed such that it is no longer authoritative for that name.</t>

<t>In such cases, instead of terminating the entire session
it may be desirable for the responder to be able to cancel
selectively only those operations that have become invalid.</t>

<t>The responder performs this selective cancellation by sending
a new response message, with the MESSAGE ID field containing the
MESSAGE ID of the long-lived operation that is to be terminated
(that it had previously acknowledged with a NOERROR RCODE), and the
RCODE field of the new response message giving the reason for cancellation.</t>

<t>After a response message with nonzero RCODE has been sent,
that operation has been terminated from the responder’s point of view,
and the responder sends no more messages relating to that operation.</t>

<t>After a response message with nonzero RCODE has been received by the initiator,
that operation has been terminated from the initiator’s point of view,
and its MESSAGE ID is now free for reuse.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="lifecycle" title="DSO Session Lifecycle and Timers">

<section anchor="dso-session-initiation" title="DSO Session Initiation">

<t>A DSO Session begins as described in <xref target="establishment"/>.</t>

<t>The client may perform as many DNS operations as it wishes using the
newly created DSO Session. Operations SHOULD be pipelined (i.e., the
client doesn’t need wait for a response before sending the next message).
The server MUST act on messages in the order they are transmitted, but
responses to those messages SHOULD be sent out of order when appropriate.</t>

</section>
<section anchor="sessiontimeouts" title="DSO Session Timeouts">

<t>Two timeout values are associated with a DSO Session: the inactivity timeout, and 
the keepalive interval.</t>

<t>The first timeout value, the inactivity timeout, is the maximum time for which
a client may speculatively keep a DSO Session open in the expectation that
it may have future requests to send to that server.</t>

<t>The second timeout value, the keepalive interval, is the maximum permitted
interval between client messages to the server if the client wishes to keep
the DSO Session alive.</t>

<t>The two timeout values are independent. The inactivity timeout may be lower, the 
same, or higher than the keepalive interval, though in most cases the inactivity 
timeout is expected to be shorter than the keepalive interval.</t>

<t>Only when the client has a very long-lived low-traffic state does the 
keepalive interval come into play, to ensure that a sufficient residual
amount of traffic is generated to maintain NAT and firewall state
and to assure client and server that they still have connectivity to each other.</t>

<t>On a new DSO Session, if no explicit DSO Keepalive message exchange has taken 
place, the default value for both timeouts is 15 seconds.
For both timeouts, lower values of the timeout result in higher network traffic
and higher CPU load on the server.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="inactivetimer" title="Inactive DSO Sessions">

<t>At both servers and clients, the generation or reception of any complete
DNS message, including DNS requests, responses, updates, or DSO
messages, resets both timers for that DSO Session, with the exception
that a DSO Keepalive message resets only the keepalive timer, not the inactivity 
timeout timer.</t>

<t>In addition, for as long as the client has an outstanding operation in progress,
the inactivity timer remains cleared, and an inactivity 
timeout cannot occur.</t>

<t>For short-lived DNS operations like traditional queries and updates,
an operation is considered in progress for the time between request and 
response, typically a period of a few hundred milliseconds at most.
At the client, the inactivity timer is cleared upon transmission of a 
request and remains cleared until reception of the corresponding response.
At the server, the inactivity timer is cleared upon reception of a request
and remains cleared until transmission of the corresponding response.</t>

<t>For long-lived DNS Stateful operations, an operation is considered in progress
for as long as the state is active, until it is cancelled.
This means that a DSO Session can exist, with a state 
active, with no messages flowing in either direction, for far longer than the 
inactivity timeout, and this is not an error. This is why there are two separate 
timers: the inactivity timeout, and the keepalive interval.
Just because a DSO Session has no traffic for an extended period of time
does not automatically make that DSO Session “inactive”,
if it has an active state that is awaiting events.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="the-inactivity-timeout" title="The Inactivity Timeout">

<t>The purpose of the inactivity timeout is for the server to balance its trade off 
between the costs of setting up new DSO Sessions and the costs of maintaining inactive 
DSO Sessions. A server with abundant DSO Session capacity can offer a high inactivity timeout, 
to permit clients to keep a speculative DSO Session open for a long time, to save 
the cost of establishing a new DSO Session for future communications with that 
server. A server with scarce memory resources can offer a low inactivity timeout,
to cause clients to promptly close DSO Sessions whenever they have no outstanding
operations with that server, and then create a new DSO Session later when needed.</t>

<section anchor="closing-inactive-dso-sessions" title="Closing Inactive DSO Sessions">

<t>A client is NOT required to wait until the inactivity timeout expires
before closing a DSO Session.
A client MAY close a DSO Session at any time, at the client’s discretion.
If a client determines that it has no current or reasonably anticipated
future need for an inactive DSO Session, then the client SHOULD close that connection.</t>

<t>If, at any time during the life of the DSO Session,
the inactivity timeout value (i.e., 15 seconds by default) elapses
without there being any operation active on the DSO Session,
the client MUST close the connection gracefully.</t>

<t>If, at any time during the life of the DSO Session,
twice the inactivity timeout value (i.e., 30 seconds by default),
or five seconds, if twice the inactivity timeout value is less than five seconds,
elapses without there being any operation active on the DSO Session,
the server SHOULD consider the client delinquent,
and SHOULD forcibly abort the DSO Session.</t>

<t>In this context, an operation being active on a DSO Session includes
a query waiting for a response, an update waiting for a response,
or active state,
but not a DSO Keepalive message exchange itself.
A DSO Keepalive message exchange resets only the keepalive
interval timer, not the inactivity timeout timer.</t>

<t>If the client wishes to keep an inactive DSO Session open for longer than
the default duration without having to send traffic every 15 seconds,
then it uses the DSO Keepalive message to request
longer timeout values, as described in <xref target="keepalive"/>.</t>

</section>
<section anchor="values-for-the-inactivity-timeout" title="Values for the Inactivity Timeout">

<t>For the inactivity timeout value, lower values result in
more frequent DSO Session teardown and re-establishment.
Higher values result in lower traffic and CPU load on the server,
but higher memory burden to maintain state for inactive DSO Sessions.</t>

<t>A server may dictate (in a server-initiated Keepalive message,
or in a response to a client-initiated Keepalive request message)
any value it chooses for the inactivity timeout.
When a connection’s inactivity timeout is reached the client MUST
begin closing the idle connection, but a client is NOT REQUIRED
to keep an idle connection open until the inactivity timeout is
reached — a client SHOULD begin closing the connection sooner
if it has no reason to expect future operations with that server
before the inactivity timeout is reached.</t>

<t>A shorter inactivity timeout with a longer keepalive interval signals
to the client that it should not speculatively keep an inactive DSO
Session open for very long without reason, but when it does have an
active reason to keep a DSO Session open, it doesn’t need to be sending
an aggressive level of keepalive traffic to maintain that session.</t>

<t>A longer inactivity timeout with a shorter keepalive interval
signals to the client that it may speculatively keep an inactive
DSO Session open for a long time, but to maintain that inactive
DSO Session it should be sending a lot of keepalive traffic.
This configuration is expected to be less common.</t>

<t>A server may dictate any value it chooses for the inactivity timeout
(either in a response to a client-initiated request, or in a server-initiated message)
including values under one second, or even zero.</t>

<t>An inactivity timeout of zero informs the client that it
should not speculatively maintain idle connections at all, and
as soon as the client has completed the operation or operations relating
to this server, the client should immediately begin closing this session.</t>

<t>An inactivity timeout of 0xFFFFFFFF (2^32-1 milliseconds, approximately 49.7 days)
informs the client that it may keep an idle connection open as long as it wishes.
Note that after granting an unlimited inactivity timeout in this way,
at any point the server may revise that inactivity timeout by sending
a new Keepalive TLV dictating new Session Timeout values to the client.</t>

<t>A server will abort an idle client session after twice the
inactivity timeout value, or five seconds, whichever is greater.
In the case of a zero inactivity timeout value, this means that
if a client fails to close an idle client session then the server
will forcibly abort the idle session after five seconds.</t>

</section>
</section>
<section anchor="keepalivetimer" title="The Keepalive Interval">

<t>The purpose of the keepalive interval is to manage the generation of
sufficient messages to maintain state in middleboxes (such at NAT gateways
or firewalls) and for the client and server to periodically verify that they
still have connectivity to each other. This allows them to clean up state
when connectivity is lost, and attempt re-connection if appropriate.</t>

<section anchor="keepalive-interval-expiry" title="Keepalive Interval Expiry">

<t>If, at any time during the life of the DSO Session,
the keepalive interval value (i.e., 15 seconds by default) elapses
without any DNS messages being sent or received on a DSO Session,
the client MUST take action to keep the DSO Session alive,
by sending a DSO Keepalive message (see <xref target="keepalive"/>).
A DSO Keepalive message exchange resets only the keepalive timer, 
not the inactivity timer.</t>

<t>If a client disconnects from the network abruptly,
without cleanly closing its DSO Session,
leaving long-lived state uncanceled,
the server learns of this after failing to
receive the required keepalive traffic from that client.
If, at any time during the life of the DSO Session,
twice the keepalive interval value (i.e., 30 seconds by default) elapses
without any DNS messages being sent or received on a DSO Session,
the server SHOULD consider the client delinquent,
and SHOULD forcibly abort the DSO Session.</t>

</section>
<section anchor="values-for-the-keepalive-interval" title="Values for the Keepalive Interval">

<t>For the keepalive interval value, lower values result in a higher volume of keepalive 
traffic. Higher values of the keepalive interval reduce traffic and CPU load, 
but have minimal effect on the memory burden
at the server, because clients keep a DSO Session open for the same length of time
(determined by the inactivity timeout) regardless of the level of keepalive traffic 
required.</t>

<t>It may be appropriate for clients and servers to select different keepalive 
interval values depending on the nature of the network they are on.</t>

<t>A corporate DNS server that knows it is serving only clients on the internal 
network, with no intervening NAT gateways or firewalls, can impose a higher 
keepalive interval, because frequent keepalive traffic is not required.</t>

<t>A public DNS server that is serving primarily residential consumer clients, 
where it is likely there will be a NAT gateway on the path, may impose a lower 
keepalive interval, to generate more frequent keepalive traffic.</t>

<t>A smart client may be adaptive to its environment. A client using
a private IPv4 address <xref target="RFC1918"/> to communicate with a DNS server
at an address outside that IPv4 private address block,
may conclude that there is likely to be a NAT gateway on the path,
and accordingly request a lower keepalive interval.</t>

<t>By default it is RECOMMENDED that clients request,
and servers grant, a keepalive interval of 60 minutes.
This keepalive interval provides for reasonably timely detection if
a client abruptly disconnects without cleanly closing the session,
and is sufficient to maintain state in firewalls and NAT gateways
that follow the IETF recommended Best Current Practice that the
“established connection idle-timeout” used by middleboxes
be at least 2 hours 4 minutes <xref target="RFC5382"/>.</t>

<t>Note that the lower the keepalive interval value, the higher the load on client
and server. For example, an keepalive interval value of 100ms would result in a
continuous stream of at least ten messages per second, in both directions,
to keep the DSO Session alive. And, in this extreme example, a single packet loss and
retransmission over a long path could introduce a momentary pause in the stream of messages,
long enough to cause the server to overzealously abort the connection.</t>

<t>Because of this concern, the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with an keepalive interval value less than ten seconds.
If a client receives an Keepalive message specifying an keepalive interval value
less than ten seconds this is an error and the client MUST
forcibly abort the connection immediately.</t>

<t>A keepalive interval value of 0xFFFFFFFF (2^32-1 milliseconds, approximately 49.7 days)
informs the client that it should generate no keepalive traffic.
Note that after signaling that the client should generate no keepalive traffic in this way,
at any point the server may revise that keepalive traffic requirement by sending
a new Keepalive TLV dictating new Session Timeout values to the client.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="server-initiated-session-termination" title="Server-Initiated Session Termination">

<t>In addition to cancelling individual operations selectively (see <xref target="cancellation"/>)
there are also occasions where a server may need to terminate
one or more entire sessions wholesale.
An entire session may need to be terminated if the client is defective in some way,
or departs from the network without closing its session.
Sessions may also need to be terminated if the server becomes overloaded,
or if the server is reconfigured and lacks the ability to be selective about
which operations need to be cancelled.</t>

<t>This section discusses various reasons a session may be terminated,
and the mechanisms for doing so.</t>

<section anchor="error" title="Server-Initiated Session Termination on Error">

<t>After sending an error response to a client, the server MAY end the DSO Session,
or may allow the DSO Session to remain open. For error conditions
that only affect the single operation in question, the server SHOULD return an
error response to the client and leave the DSO Session open for further operations.
For error conditions that are likely to make all operations unsuccessful in the
immediate future, the server SHOULD return an error response to the client and 
then end the DSO Session by sending a Retry Delay request message, as described in 
<xref target="retry"/>.</t>

<t>Upon receiving an error response from the server, a client SHOULD NOT
automatically close the DSO Session. An error relating to one particular operation
on a DSO Session does not necessarily imply that all other operations on that
DSO Session have also failed, or that future operations will fail. The client
should assume that the server will make its own decision about whether or not to
end the DSO Session, based on the server’s determination of whether the error
condition pertains to this particular operation, or would also apply to any
subsequent operations. If the server does not end the DSO Session by
sending the client a Retry Delay message (see <xref target="retry"/>) then the client
SHOULD continue to use that DSO Session for subsequent operations.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="server-initiated-session-termination-on-overload" title="Server-Initiated Session Termination on Overload">

<t>A server MUST NOT close a DSO Session with a client,
except in certain exceptional circumstances, as outlined below.
In normal operation, closing a DSO Session is the client’s responsibility.
The client makes the determination of when to close a DSO
Session based on an evaluation of both its own needs,
and the inactivity timeout value dictated by the server.</t>

<t>Some exceptional situations where a server may terminate a DSO Session include:</t>

<t><list style="symbols">
  <t>The server application software or underlying operating system
is shutting down or restarting.</t>
  <t>The server application software terminates unexpectedly
(perhaps due to a bug that makes it crash).</t>
  <t>The server is undergoing a reconfiguration or maintenance
procedure, that, due to the way the server software is
implemented, requires clients to be disconnected.
For example, some software is implemented such that it reads
a configuration file at startup, and changing the server’s
configuration entails modifiying the configuration file
and then killing and restarting the server software,
which generally entails a loss of network connections.</t>
  <t>The client fails to meets its obligation to generate keepalive
traffic or close an inactive session by the prescribed time
(twice the time interval dictated by the server, or five seconds,
whichever is greater, as described in <xref target="sessiontimeouts"/>).</t>
  <t>The client sends a grossly invalid or malformed request that is
indicative of a seriously defective client implementation (see <xref target="error"/>).</t>
  <t>The server is over capacity and needs to shed some load (see <xref target="retry"/>).</t>
</list></t>

<t>When a server has to close a DSO Session with a client
(because of exceptional circumstances such as those outlined above)
the server SHOULD, whenever possible, send a Retry Delay request message
(see below) informing the client of the reason for the DSO Session
being closed, and allow the client five seconds to receive it
before the server resorts to forcibly aborting the connection.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="retry" title="Retry Delay Request Message">

<t>There may be rare cases where a server is overloaded and wishes to shed load.
If a server is low on resources it MAY simply terminate a client connection
by forcibly aborting it.
However, the likely behavior of the client may be simply to to treat this as a
network failure and reconnect
immediately, putting more burden on the server.</t>

<t>Therefore to avoid this reconnection implosion, a server SHOULD instead choose 
to shed client load by sending a Retry Delay request message, with an RCODE of 
SERVFAIL, to inform the client of the overload situation.
The format of the Retry Delay TLV is described in <xref target="delay"/>.
After sending a Retry Delay request message,
the server MUST NOT send any further messages on that DSO Session.</t>

<t>Upon receipt of a Retry Delay request from the server, the client MUST
make note of the reconnect delay for this server, and then immediately
close the connection.
This is to place the burden of TCP’s TIME-WAIT state on the client.</t>

<t>After sending a Retry Delay request message the server SHOULD allow the
client five seconds to close the connection, and if the client has not
closed the connection after five seconds then the server SHOULD
forcibly abort the connection.</t>

<t>A Retry Delay request message MUST NOT be initiated by a client.
If a server receives a Retry Delay request message this is an error
and the server MUST forcibly abort the connection immediately.</t>

<section anchor="outstanding-operations" title="Outstanding Operations">

<t>At the moment a server chooses to initiate a Retry Delay request message
there may be DNS requests already in flight from client to server on this 
DSO Session, which will arrive at the server after its Retry Delay request message 
has been sent.
The server MUST silently ignore such incoming requests, and MUST NOT generate
any response messages for them. When the Retry Delay request message from the
server arrives at the client, the client will determine that any DNS requests
it previously sent on this DSO Session, that have not yet received a response, now 
will certainly not be receiving any response. Such requests should be considered
failed, and should be retried at a later time, as appropriate.</t>

<t>In the case where some, but not all, of the existing operations on a DSO Session 
have become invalid (perhaps because the server has been reconfigured and is no 
longer authoritative for some of the names),
but the server is terminating all DSO Sessions en masse with a REFUSED (5) RCODE,
the RECONNECT DELAY MAY be zero, indicating that the clients SHOULD immediately
attempt to re-establish operations.</t>

<t>It is likely that some of the attempts will be successful and some will not,
depending on the nature of the reconfiguration.</t>

<t>In the case where a server is terminating a large number of DSO Sessions at once
(e.g., if the system is restarting) and the server doesn’t want to be inundated 
with a flood of simultaneous retries, it SHOULD send different RECONNECT delay 
values to each client.
These adjustments MAY be selected randomly, pseudorandomly, or deterministically
(e.g., incrementing the time value by one tenth of a second for each successive
client, yielding a post-restart reconnection rate of ten clients per second).</t>

</section>
<section anchor="client-reconnection" title="Client Reconnection">

<t>After a DSO Session is closed by the server, the client SHOULD try to reconnect,
to that server, or to another suitable server, if more than one is available.
If reconnecting to the same server, the client MUST respect the indicated delay
before attempting to reconnect.</t>

<t>If a particular server does not want a client to reconnect (it is being
de-commissioned), it SHOULD set the retry delay to the maximum value (which is
approximately 49.7 days). If the server will only be out of service for a maintenance
period, it should use a value closer to the expected maintenance window and
not default to a very large delay value or clients may not attempt to reconnect
after it resumes service.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
</section>
</section>
<section anchor="sharing" title="Connection Sharing">

<t>As previously specified for DNS over TCP <xref target="RFC7766"/>,
to mitigate the risk of unintentional server overload, DNS clients
MUST take care to minimize the number of concurrent TCP connections
made to any individual server.  It is RECOMMENDED that for any given
client/server interaction there SHOULD be no more than one connection
for regular queries, one for zone transfers, and one for each
protocol that is being used on top of TCP (for example, if the
resolver was using TLS).
However, it is noted that certain primary/secondary configurations
with many busy zones might need to use more than one TCP
connection for zone transfers for operational reasons
(for example, to support concurrent transfers of multiple zones).</t>

<t>A single server may support multiple services, including DNS Updates 
<xref target="RFC2136"/>, DNS Push Notifications <xref target="I-D.ietf-dnssd-push"/>,
and other services, for one or more DNS zones.
When a client discovers that the target server for several different operations
is the same target hostname and port, the client SHOULD use a single
shared DSO Session for all those operations.
A client SHOULD NOT open multiple connections to the same target host and port
just because the names being operated on are different or
happen to fall within different zones.
This is to reduce unnecessary connection load on the DNS server.</t>

<t>However, server implementers and operators should be aware that connection
sharing may not be possible in all cases.
A single host device may be home to multiple independent client software
instances that don’t coordinate with each other.
Similarly, multiple independent client devices behind the same NAT gateway
will also typically appear to the DNS server as different source ports on
the same client IP address.
Because of these constraints, a DNS server MUST be prepared to accept
multiple connections from different source ports on the same client IP address.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="base-tlvs-for-dns-stateful-operations" title="Base TLVs for DNS Stateful Operations">

<t>This section describes the three Base TLVs for DNS Stateful Operations,
Retry Delay, Keepalive, and Encryption Padding.</t>

<section anchor="delay" title="Retry Delay TLV">

<t>The Retry Delay TLV (DSO-TYPE=0) can be used as a
Primary TLV (unacknowledged) in a server-to-client message,
or as an Extra TLV in a server-to-client response to a client-to-server request message.</t>

<t>The TYPE-DEPENDENT DATA for the the Retry Delay TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     RETRY DELAY (32 bits)                     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='RETRY DELAY:'>
  a time value, specified as
a 32-bit unsigned integer in network (big endian) byte order in units of milliseconds,
within which the client MUST NOT retry this operation, or retry connecting to this server.</t>
</list></t>

<t>The RECOMMENDED value is 10 seconds.</t>

<section anchor="retry-delay-tlv-used-as-a-primary-tlv" title="Retry Delay TLV used as a Primary TLV">

<t>When sent in a DSO request message, from server to client, the 
Retry Delay TLV (0) is used as a Primary TLV. It is used by a server
to instruct a client to close the DSO Session and underlying connection,
and not to reconnect for the indicated time interval.</t>

<t>In this case it applies to the DSO Session as a whole, and the client MUST begin closing the 
DSO Session, as described in <xref target="retry"/>. The RCODE in the message header 
MUST indicate the reason for the termination:</t>

<t><list style="symbols">
  <t>NOERROR indicates a routine shutdown.</t>
  <t>SERVFAIL indicates that the server is overloaded due to resource exhaustion.</t>
  <t>REFUSED indicates that the server has been reconfigured and is no longer able 
to perform one or more of the functions 
currently being performed on this DSO Session (for example, a DNS Push Notification 
server could be reconfigured such that is is no longer accepting DNS Push 
Notification requests for one or more of the currently subscribed names).</t>
</list></t>

<t>This document specifies only these three RCODE values for Retry Delay request.
Servers sending Retry Delay requests SHOULD use one of these three values.
However, future circumstances may create situations where other RCODE values
are appropriate in Retry Delay requests, so clients MUST be prepared
to accept Retry Delay requests with any RCODE value.</t>

<t>A Retry Delay request is an unacknowledged request message;
the MESSAGE ID MUST be set to zero in the request
and the client MUST NOT send a response.</t>

</section>
<section anchor="retry-delay-tlv-used-as-an-extra-tlv" title="Retry Delay TLV used as an Extra TLV">

<t>In the case of a client request that returns a nonzero RCODE value,
the server MAY append a Retry Delay TLV (0) to the response,
indicating the time interval during which the client
SHOULD NOT attempt this operation again.</t>

<t>The indicated time interval during which the client SHOULD NOT retry
applies only to the failed operation, not to the DSO Session as a whole.</t>

</section>
<section anchor="retry-delay-tlv-is-used-by-server-only" title="Retry Delay TLV is used by server only">

<t>A client MUST NOT send a Retry Delay TLV to a server,
either in a DSO request message, or in a DSO response message.
If a server receives a DSO message containing a Retry Delay TLV,
this is a fatal error and the server MUST forcibly abort the connection immediately.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="keepalive" title="Keepalive TLV">

<t>The Keepalive TLV (DSO-TYPE=1) performs two functions: to reset the
keepalive timer for the DSO Session and to establish the values for the Session Timeouts.</t>

<t>The Keepalive TLV resets only the keepalive timer, not the inactivity timer.
The reason for this is that periodic Keepalive TLVs are sent for the
sole purpose of keeping a DSO Session alive, because that DSO Session has current
or recent non-maintenance activity that warrants keeping the DSO Session alive.
If sending keepalive traffic itself were to reset the inactivity timer, then 
that would create a circular livelock where keepalive traffic would be sent 
indefinitely to keep a DSO Session alive, where the only activity on that DSO 
Session would be the keepalive traffic keeping the DSO Session alive so that further 
keepalive traffic can be sent.</t>

<t>Sending keepalive traffic is considered a maintenance activity
that is performed in service of other client activities.
Sending keepalive traffic itself is not considered a client activity.
For a DSO Session to be considered active, it must be carrying something more than just keepalive traffic.
This is why merely sending a Keepalive TLV does not reset the inactivity timer.</t>

<t>When sent by a client, the Keepalive request message MUST
be sent as an acknowledged request, with a nonzero MESSAGE ID.
It resets a DSO Session’s keepalive timer, and at the same time requests what the
Session Timeout values should be from this point forward in the DSO Session.
If a server receives a Keepalive request message with a zero MESSAGE ID
then this is a fatal error and the server MUST forcibly abort the connection immediately.</t>

<t>Once a DSO Session is in progress (see <xref target="details"/>) the Keepalive TLV also MAY be initiated by a server.
When sent by a server, the Keepalive request message MUST
be sent as an unacknowledged request, with the MESSAGE ID set to zero.
It resets a DSO Session’s keepalive timer, and unilaterally informs the client of
the new Session Timeout values to use from this point forward in this DSO Session.
No client response to this unilateral declaration is required or allowed.
If a client receives a Keepalive request message with a nonzero MESSAGE ID
then this is a fatal error and the client MUST forcibly abort the connection immediately.</t>

<t>The Keepalive TLV is not used as an Additional TLV.</t>

<t>The Keepalive TLV is only used as a Response TLV in response messages
replying to a Keepalive request message from the client.
A Keepalive TLV MUST NOT be added as to other responses an Extra TLV.
If the server wishes to update a client’s Session Timeout values
other than in response to a Keepalive request message from the client,
then it does so by sending an unacknowledged Keepalive request message
of its own, as described above.</t>

<t>It is not required that the Keepalive TLV be used in every DSO Session.
While many DNS Stateful operations
will be used in conjunction with a long-lived session state,
not all DNS Stateful operations require long-lived session state,
and in some cases the default 15-second value for both the inactivity timeout
and keepalive interval may be perfectly appropriate.
However, note that for clients that implement only the TLVs defined in
this document it is the only way for a client to initiate a DSO Session.</t>

<t>The TYPE-DEPENDENT DATA for the the Keepalive TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 INACTIVITY TIMEOUT (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 KEEPALIVE INTERVAL (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='INACTIVITY TIMEOUT:'>
  the inactivity timeout for the current DSO Session, specified as
a 32-bit unsigned integer in network (big endian) byte order in units of milliseconds.
This is the timeout at which the client MUST begin closing an inactive DSO Session.
The inactivity timeout can be any value of the server’s choosing.
If the client does not gracefully close an inactive DSO
Session, then after twice this interval, or five seconds,
whichever is greater, the server will forcibly abort the connection.</t>
  <t hangText='KEEPALIVE INTERVAL:'>
  the keepalive interval for the current DSO Session, specified as
a 32-bit unsigned integer in network (big endian) byte order in units of milliseconds.
This is the interval at which a client MUST generate keepalive
traffic to maintain connection state.
The keepalive interval MUST NOT be less than ten seconds.
If the client does not generate the mandated keepalive traffic,
then after twice this interval the server will forcibly abort the connection.
Since the minimum allowed keepalive interval is ten seconds, the
minimum time at which a server will forcibly disconnect a client for
failing to generate the mandated keepalive traffic is twenty seconds.</t>
</list></t>

<t>In a client-initiated DSO Keepalive message,
the Session Timeouts contain the client’s requested values.
In a server response to a client-initiated message, the Session Timeouts contain 
the server’s chosen values, which the client MUST respect.
This is modeled after the DHCP protocol, where the client
requests a certain lease lifetime using DHCP option 51 <xref target="RFC2132"/>,
but the server is the ultimate authority
for deciding what lease lifetime is actually granted.</t>

<t>In a server-initiated DSO Keepalive message, the Session Timeouts
unilaterally inform the client of the new values from this point
forward in this DSO Session. The client MUST NOT generate a
response to the server-initiated DSO Keepalive message.</t>

<t>When a client is sending its second and subsequent Keepalive DSO 
requests to the server, the client SHOULD continue to request its preferred 
values each time. This allows flexibility, so that if conditions change during 
the lifetime of a DSO Session, the server can adapt its responses to better fit 
the client’s needs.</t>

<section anchor="client-handling-of-received-session-timeout-values" title="Client handling of received Session Timeout values">

<t>When a client receives a response to its client-initiated DSO Keepalive message,
or receives a server-initiated DSO Keepalive message, the client has then 
received Session Timeout values dictated by the server. The two timeout values 
contained in the DSO Keepalive TLV from the server may each be higher, lower, or 
the same as the respective Session Timeout values the client previously had for 
this DSO Session.</t>

<t>In the case of the keepalive timer, the handling of the received value is 
straightforward. The act of receiving the message containing the DSO Keepalive 
TLV itself resets the keepalive timer and updates the keepalive interval for the 
DSO Session. The new keepalive interval indicates the 
maximum time that may elapse before another message must be sent
or received on this DSO Session, if the DSO Session is to remain alive.</t>

<t>In the case of the inactivity timeout, the handling of the received value 
is a little more subtle, though the meaning of the inactivity 
timeout is unchanged — it still indicates the maximum permissible time allowed 
without activity on a DSO Session.
The act of receiving the message containing the DSO Keepalive TLV does not
itself reset the inactivity timer. The time elapsed since the last useful
activity on this DSO Session is unaffected by exchange of DSO Keepalive messages.
The new inactivity timeout value in the DSO Keepalive TLV in the received message
does update the timeout associated with the running inactivity timer;
that becomes the new maximum permissible time without activity on a DSO Session.</t>

<t><list style="symbols">
  <t>If the current inactivity timer value is not greater than the
new inactivity timeout, then the DSO Session may remain open for now.
When the inactivity timer value exceeds the new inactivity timeout,
the client MUST then begin closing the DSO Session, as described above.</t>
  <t>If the current inactivity timer value is already greater
than the new inactivity timeout, then this DSO Session has
already been inactive for longer than the server permits,
and the client MUST immediately begin closing this DSO Session.</t>
  <t>If the current inactivity timer value is already more than twice the
new inactivity timeout, then the client is immediately considered delinquent
(this DSO Session is immediately eligible to be forcibly terminated by the server)
and the client MUST immediately begin closing this DSO Session.
However if a server abruptly reduces the inactivity timeout in this
way, then, to give the client time to close the connection gracefully
before the server resorts to forcibly aborting it, the server
SHOULD give the client an additional grace period of one quarter
of the new inactivity timeout, or five seconds, whichever is greater.</t>
</list></t>

</section>
<section anchor="relation-to-edns0-tcp-keepalive-option" title="Relation to EDNS(0) TCP Keepalive Option">

<t>The inactivity timeout value in the Keepalive TLV (DSO-TYPE=1) has similar
intent to the EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>.
A client/server pair that supports DSO MUST NOT use the
EDNS(0) TCP KeepAlive option within any message after a DSO 
Session has been established.
Once a DSO Session has been established, if either
client or server receives a DNS message over the DSO Session that contains an
EDNS(0) TCP Keepalive option, this is an error and the receiver of the
EDNS(0) TCP Keepalive option MUST forcibly abort the connection immediately.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="padding" title="Encryption Padding TLV">

<t>The Encryption Padding TLV (DSO-TYPE=2) can only be used as
an Additional or Extra TLV.
It is only applicable when the DSO Transport layer uses encryption
such as TLS.</t>

<t>The TYPE-DEPENDENT DATA for the the Padding TLV is optional and is a
variable length field containing non-specified values. A DATA LENGTH
of 0 essentially provides for 4 octets of padding (the minimum amount).</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   /                                                               /
   /                   VARIABLE NUMBER OF OCTETS                   /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t>As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
the PADDING octets SHOULD be set to 0x00.  Other values MAY be used,
for example, in cases where there is a concern that the padded
message could be subject to compression before encryption.
PADDING octets of any value MUST be accepted in the messages received.</t>

<t>The Encryption Padding TLV may be included in either a DSO request, response, or both.
As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
if a request is received with a Encryption Padding TLV,
then the response MUST also include an Encryption Padding TLV.</t>

<t>The length of padding is intentionally not specified in this document and
is a function of current best practices with respect to the type and length
of data in the preceding TLVs <xref target="I-D.ietf-dprive-padding-policy"/>.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="summary" title="Summary">

<t>This section summarizes some noteworthy highlights about
various components of the DSO protocol.</t>

<section anchor="message-id" title="MESSAGE ID">

<t>In DSO Request Messages the MESSAGE ID may be either
nonzero (signaling that the responder MUST generate a response)
or zero (signaling that the responder MUST NOT generate a response).</t>

<t>In DSO Response Messages the MESSAGE ID MUST NOT be zero
(since this would be a response to a request that had
indicated that a response is not allowed).</t>

<t>The table below illustrates the legal combinations:</t>

<figure><artwork><![CDATA[
                          +--------------------+-------------------+
                          | Nonzero MESSAGE ID |  Zero MESSAGE ID  |
   +----------------------+--------------------+-------------------+
   | DSO Request Message  |         X          |         X         |
   +----------------------+--------------------+-------------------+
   | DSO Response Message |         X          |                   |
   +----------------------+--------------------+-------------------+
]]></artwork></figure>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="tlv-usage" title="TLV Usage">

<t>The table below indicates, for each of the three TLVs defined in this
document, whether they are valid in each of ten different contexts.</t>

<t>The first five contexts are requests from client to server,
and the corresponding responses from server back to client:</t>

<t><list style="symbols">
  <t>C-P - Primary TLV,
sent in DSO Request message,
from client to server,
with nonzero MESSAGE ID indicating that this request MUST generate response message.</t>
  <t>C-U - Primary TLV (unacknowledged),
sent in DSO Request message,
from client to server,
with zero MESSAGE ID indicating that this request MUST NOT generate response message.</t>
  <t>C-A - Additional TLV, optionally added to request message from client to server.</t>
  <t>C-R - Response TLV, included in response message sent to back the client
(in response to a client “C-P” request with nonzero MESSAGE ID indicating that a response is required)
where the DSO-TYPE of the Response TLV matches the DSO-TYPE of the Primary TLV in the request.</t>
  <t>C-E - Extra TLV, included in response message sent to back the client
(in response to a client “C-P” request with nonzero MESSAGE ID indicating that a response is required)
where the DSO-TYPE of the Response TLV does not match the DSO-TYPE of the Primary TLV in the request.</t>
</list></t>

<t>The second five contexts are the reverse: requests from server to client,
and the corresponding responses from client back to server.</t>

<figure><artwork><![CDATA[
              +-------------------------+-------------------------+
              | C-P  C-U  C-A  C-R  C-E | S-P  S-U  S-A  S-R  S-E |
 +------------+-------------------------+-------------------------+
 | RetryDelay |                      X  |       X                 |
 +------------+-------------------------+-------------------------+
 | KeepAlive  |  X              X       |       X                 |
 +------------+-------------------------+-------------------------+
 | Padding    |            X         X  |            X         X  |
 +------------+-------------------------+-------------------------+
]]></artwork></figure>

<t>It is recommended that definitions of future TLVs include a
similar table summarizing the contexts where the new TLV is valid.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="inactivity-timeout" title="Inactivity Timeout">

<t>The Inactivity Timeout may have any 32-bit unsigned integer value.</t>

<t>The value zero informs the client that it
should not speculatively maintain idle connections at all, and
as soon as the client has completed the operation or operations relating
to this server, the client should immediately begin closing this session.</t>

<t>The maximum possible value,
0xFFFFFFFF (2^32-1 milliseconds, approximately 49.7 days),
informs the client that it may keep an idle connection open as long as it wishes.</t>

<t>The Inactivity timer is reset by any message <spanx style="strong">except</spanx> the Keepalive TLV,
and remains cleared any time that an operation is outstanding.</t>

</section>
<section anchor="keepalive-interval" title="Keepalive Interval">

<t>The Keepalive Interval is a 32-bit unsigned integer value,
with a minimum value of 10,000 milliseconds (10 seconds).</t>

<t>The maximum possible value,
0xFFFFFFFF (2^32-1 milliseconds, approximately 49.7 days),
informs the client that it should generate no keepalive traffic.</t>

<t>Any message exchange (including the Keepalive TLV) resets the Keepalive timer.</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="dso-opcode-registration" title="DSO OPCODE Registration">

<t>The IANA is directed to record the value (tentatively) 6 for the DSO OPCODE
in the DNS OPCODE Registry.</t>

</section>
<section anchor="dso-rcode-registration" title="DSO RCODE Registration">

<t>The IANA is directed to record the value (tentatively) 11 for the DSONOTIMP error code
in the DNS RCODE Registry.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="dso-type-code-registry" title="DSO Type Code Registry">

<t>The IANA is directed to create the 16-bit DSO Type Code Registry,
with initial (hexadecimal) values as shown below:</t>

<texttable>
      <ttcol align='left'>Type</ttcol>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Status</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>0000</c>
      <c>RetryDelay</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0001</c>
      <c>KeepAlive</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0002</c>
      <c>EncryptionPadding</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0003-003F</c>
      <c>Unassigned, reserved for    DSO session-management TLVs</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0040-F7FF</c>
      <c>Unassigned</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>F800-FBFF</c>
      <c>Reserved for experimental/local use</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>FC00-FFFF</c>
      <c>Reserved for future expansion</c>
      <c>&#160;</c>
      <c>&#160;</c>
</texttable>

<t>DSO Type Codes in the “experimental/local” range F800-FBFF
may be used as Experimental Use or Private Use values <xref target="RFC5226"/>
and may be used freely for development purposes,
or for other purposes within a single site.
No attempt is made to prevent multiple sites from using
the same value in different (and incompatible) ways.
There is no need for IANA to review such assignments
(since IANA does not record them) and assignments
are not generally useful for broad interoperability.
It is the responsibility of the sites making use of
“experimental/local” values to ensure that no
conflicts occur within the intended scope of use.</t>

<t>Registration of new DSO Type Codes in
the “Reserved for future expansion” range FC00-FFFF
and “Unassigned, reserved for DSO session-management TLVs” range 0003-003F
requires publication of an IETF Standards Action document <xref target="RFC5226"/>.</t>

<t>Requests to register additional new DSO Type Codes
in the “Unassigned” range 0040-F7FF
are to be recorded by IANA after consulation with the
registry’s Designated Expert <xref target="RFC5226"/> at that time.
At the time of publication of this document, the Designated Expert
for the newly created DSO Type Code registry is [<spanx style="strong">TBD</spanx>].</t>

<t><vspace blankLines='999' /></t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>If this mechanism is to be used with DNS over TLS, then these messages
are subject to the same constraints as any other DNS-over-TLS messages
and MUST NOT be sent in the clear before the TLS session is established.</t>

<t>The data field of the “Encryption Padding” TLV could be used as a covert channel.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to
Tim Chown,
Ralph Droms,
Jan Komissar,
Manju Shankar Rao,
and Ted Lemon
for their helpful contributions to this document.</t>

<t><vspace blankLines='999' /></t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC1035;
&RFC7766;
&RFC6891;
&RFC7828;
&RFC2119;
&RFC7830;
&RFC1034;
&RFC2136;
&RFC1918;
&RFC5382;
&RFC2132;
&RFC5226;


    </references>

    <references title='Informative References'>

<reference anchor="NagleDA" target="http://www.stuartcheshire.org/papers/nagledelayedack/">
  <front>
    <title>TCP Performance problems caused by interaction between Nagle's Algorithm and Delayed ACK</title>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization></organization>
    </author>
    <date year="2005" month="May" day="20"/>
  </front>
</reference>
&RFC7858;
&RFC6763;
&I-D.ietf-dnssd-push;
&RFC0768;
&I-D.sctl-dnssd-mdns-relay;
&RFC1122;
&I-D.ietf-dprive-padding-policy;


    </references>



  </back>

<!-- ##markdown-source:
H4sIAHQ6ZVoAA+W9+3obR5In+n8+RR36D5MaACYlW7bV336n2SRlc1q3Jqnu
6Tl7+QpAgSwLqMJUFUihJb3LPss+2cY1M7IuICW7e3vneFbbElDIyktkXH8R
MR6PXZM3y+xZcvrqMrls0iZbbJbJ63VWpU1eFrWbl7MiXcED8ypdNOM8axbj
eVGX63Gd1TU8Mq7z6yJdjg+/c3P4+bPk8eHR9+Ojo/GTQ5evq2dJU23q5vHh
4Y+Hj11aZemz5LxosqrIGnd3TS9+/Sb5S1m9y4vr5Keq3Kzdu7vw0PgUX+xm
afMsqZu526zxNfWz5OL5SfL990+fjuhvR4dPvnNuVs5hlGfJBmb5g1vnz1yS
jJOmnNH/1ttVlS1q/ntZNfQPl26am7KiJ+FPkuQFDj5J/pAtl3lNH/EOXKRb
+2FZXYdZJpfbuslWdXICmwZD55vVCL6cTejRdDqtslt4+vKE/l3DqzNYz4/f
HSYnN2kFY8Dm42f09SxvtvC6bH5XlvPkBP7FH5dzmMXJcfLjt4dPn8hHm6Kp
4OG3l8f0wfqmLOChfzlKnsLY3z5+khzB1tNX2SrNl8+SKt3+Pq9nE5h+vOTL
Ccwlq2/yKjOLvmw2ML/4G1r58Xq9zMISdUlH8NEiL/ImS16U5dqs52QDVNXk
RdlazHeHR9/et5hvD39Ifvz+2+TJ48Pv7WJmMq3fpzibyaxcxWv610lyms+A
suqyMIv61/KmaH1Ba7qE2c03RTjVq2x2U5TL8jrP6ugk5Um7dPr7OHmZXqfz
dJkVyUkGy8nk49fvF2U1Ty5neVbMsuRNWr0ze8Pfmo15/W/fJt/+dNzaF9zW
efJHIPE5rdTvwy/p/Pc1T6m7CZf9m3CZVul/qk2oYUHDu3A8gVkVsFizBcd4
mcvCfsFbAFOvYTKzzI6f8tOTFT39+2v8tPueq0nyZlMDi6py86archV/TO95
W6SLRb7M4eN5dIv29iwjgNnk1zdmY16dJI+/f3r4w33X5sejH5Mfnn6fHD15
EvGAtczk99O0uP6F1uDyAha8Aq5/m+Epvkqvl9npMR9ok1bXOK2bplk/++ab
u7u7SU18Qe8fcpNv1ilc8PqbAn85z5bpNpuns3ff8AgsZa5O3iRvsorehBSw
rsrpEtnmLN3UcKrTLWwizCydofRJpllzlwER0WS+ruG8rssqb25WSVrMk1N+
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
NrMI8yQI40V+vRG7D+8cLWzOlYGU4XDyB84LPY7tkSW2na6kcgj9VBLJNFcG
OYHW1dAi8HDClS/paxLyKKaVauO62GUrOqZUd+U77uA2+nbIooyjm77dEpCs
EA6lmM2/isaXEEnNDMgPnFhuYoo3OY67dLInh5OcbBS5hWASyd9Lq+rq4vWH
FueYP8NndJPOLbVFWQHiC9VKIQStCB5xd2Hq4Xj1o7uqxKAjTb0UuzUhV6L7
a5qE+nv5ld7OJ2wNk3FYs//WdHT3TmB/ZF9L1hvO/DbP7iyWR08VT4tImKwB
r53GCDv77i9dh/VXtHje5yzO/6x/cVQjKPJFYaLXAj0FrI5s6hBYifyFL7S9
GEf9uYnph69Cz7JODzCRtOQVilu0SHHgdrH4Dx/iNmGftDszszJhYBSHxA7C
KD2pvnu4rGnNqiWlR6lzMsOWfEDXaq5Yb7Ltmi1dExDema8zLvYiCRM4iOmR
hCYpQQBQBWq7SiX7WWu08ZV4H/p9C0jOdDVBswsZtBKXRGW4r1eDuN2WgkkM
2dk0zHZ4MayFI3obogMekbJD4kBa6+S0eSycr/BYLc3/KfTqDS1jua9fq9lt
5LV/JrTZLvU/2tXkFjuu4lZxtnn0ytHgeJznBMTxPl9tViyUvd3hUktLUVIk
vb8V9ixNsxgGXAWOqkKHJIPvBKPKvIRglDmEwvJ08jNCM3fX092Czno80sP5
VsBaJ11XpiQgVpzK9aiSpE8gpHc6dVrqwmkSMt2m/7gRayS1jLhJa08DYxHK
WMVGoOIOI08EQ8Xkem3DMrR2NDOub/AEyJ/MmZOtg3f6MgOKE1FHfex2v4Oa
Xyy3fCXM/txQwIqjMkGmwkJ8PQCOEZBeTwvr6dEs2gKiJzhZrwTFhTpqapuy
ADOGu8xl9kM7PNMEL7iQ729Z+ndo3vm6MCARDeggRYFYVDhCK8qvEi97L+ou
7miTvoNtdrAbM6F4rfvA0Y/QbNj0ST76LvGOn+ftB0ZMXEqYooEoSYQOQ0Jt
6p2SraWtkq9O3ryFsdK5gtP9ldWAx7m0CrebgAwybiEOkk66DGp/FEIYcfF9
XvO1D5YkJUeP1grF5qJCqMzDOZqIfQRagY+V0YxMDqGY6gzyjpEt1GC7DjtX
1UH3jo7Uq55cUc87DtKB05WB1Yvd7pw+8k3p+i6suAioYKDgozg8BJSCl04R
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
h83oE1XM2nj/HLKJuL4oX53lMmmXFTYFTEK8mUP6fstt+qEVUWZ+fm7uF1sQ
yeu4ci+kLD5HuKj7mN+CyklvDfRE4kyRfvPCPCI7bvwaguLfFKGppCFem2cf
AMK20LayDh8vkTJ5PM2ystZLyiGmuCqKE4bsmT3WbNW63YiyRLsJXZ6TQNy0
XfOMhJaYzzeo+SIj1R03RS29M1/iIg59eOy1llL9qG/OSoIde0i0LZto2p/u
egFPCU8Ktn0eTtlgb9kQpCC2qflGXUaVMAy2HUMW/vDYSUskguaX88PL28/f
KCJ7EmMqUZVFyxF4R07Qd4v29p1eQRauU6nsk87Qze96yZeM7sFZJbtmpYL5
D2hfUDPkHZX224AmcVzy5eaGSA8aZ+SMC2EUoHksirp9cbXJQOw6/fAVu0o5
fbH97T7wifHVX9+cYctBTIGQzrnswbadtfc3ha3JfRBlUjflOK78ypVVyLF1
9h6Oj724vb/oRb3C196TFrlOpCAsTnl8evYGFYRXYOMeXx2HsoX9DuS0FuB4
/cy5ZMd/Rz3/97jn/54kT/w4h/TMk+Tb5LvkafJ98kPy4+d8puP8y/hX/p8O
9LF3ZRdnVxd/FYfA/pPH2HW0Puh98uNvNyNn3vrMPYMzDqbjyGivKUannzyW
9oyIleVGYxlXVvAB3/1pjujteZ4WB2DGNVqjGpsnFrnUi7MIXyfShE2Otk3F
tcHI2sNbGyN3+Iu2leZ98kKMVlf1tZmOfE7fpBs2Q5L018w2sJdYJ7nufBvt
TvCFOFkAq1t3oevccLjYed3/toko25rvoLfTkSsY2O5mFpuEvegzrjEa4B3G
nU8aFeOwjDkZyjqoCRuFy211qJSbDhHkI2CNo5fjmgiYG4o12vPtlmGJfc7d
4LoC+CiAzfGtXJP/ot61bA7pKvqitwb9QzgZ7WCgv6F+jWDMoksXETAIfpkk
8KAG08yTPU0yTORU0CYaEQVt/AbkKHnHcDz1Eg4Pd59TU32aqN1IZUQK8Vnd
WNxz2okZFPLQGYeVQPmVYu9ix3TLTkr7FXgteig5INMsnrEBvdStqZNuoDYD
jeuigb3fuq3za+zXL0Y6zyDJsBt30urQ4/layKr23RCZpG5DwmxPpAAx3Zzl
pfG3nodqawDQfBfRi/gVxqDUcpIR/oGy37j4YgcIxsaQnTD3gjSZo3A1+qZG
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

-->

</rfc>

